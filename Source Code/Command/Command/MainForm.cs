using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Data.SQLite;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.IO;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Forms;
using System.Windows.Forms.Integration;
using System.Xml;
using Command.Tacview;
using Command_Core;
using Command_Core.DAL;
using CSMaterial.ClipperLib;
using DarkUI.Collections;
using Microsoft.DirectX.Direct3D;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using ns10;
using ns11;
using ns12;
using ns13;
using ns14;
using ns17;
using ns19;
using ns2;
using ns20;
using ns21;
using ns3;
using ns4;
using ns5;
using ns6;
using ns7;
using ns8;
using ns9;
using Transitions;
using WorldWind;
using WorldWind.Camera;
using Worldwind.Component;

namespace Command
{
	// Token: 0x02000DBC RID: 3516
	[DesignerGenerated]
	public sealed partial class MainForm : Form
	{
		// Token: 0x06005F06 RID: 24326 RVA: 0x00334640 File Offset: 0x00332840
		public MainForm()
		{
			base.Resize += this.MainForm_Resize;
			base.FormClosing += this.MainForm_FormClosing;
			base.GotFocus += this.MainForm_GotFocus;
			base.KeyDown += this.MainForm_KeyDown;
			base.Load += this.MainForm_Load;
			base.Shown += this.MainForm_Shown;
			base.ResizeBegin += this.MainForm_ResizeBegin;
			base.ResizeEnd += this.MainForm_ResizeEnd;
			this.list_0 = new List<System.Drawing.Point[]>();
			this.list_1 = new List<System.Drawing.Point[]>();
			this.list_2 = new List<System.Drawing.Point[]>();
			this.list_3 = new List<System.Drawing.Point[]>();
			this.list_4 = new List<System.Drawing.Point[]>();
			this.list_5 = new List<System.Drawing.Point[]>();
			this.list_6 = new List<System.Drawing.Point[]>();
			this.list_7 = new List<System.Drawing.Point[]>();
			this.list_8 = new List<System.Drawing.Point[]>();
			this.list_9 = new List<System.Drawing.Point[]>();
			this.list_10 = new List<System.Drawing.Point[]>();
			this.list_11 = new List<System.Drawing.Point[]>();
			this.list_12 = new List<System.Drawing.Point[]>();
			this.list_13 = new List<System.Drawing.Point[]>();
			this.list_14 = new List<System.Drawing.Point[]>();
			this.list_15 = new List<System.Drawing.Point[]>();
			this.list_16 = new List<System.Drawing.Point[]>();
			this.list_17 = new List<System.Drawing.Point[]>();
			this.list_18 = new List<System.Drawing.Point[]>();
			this.list_19 = new List<System.Drawing.Point[]>();
			this.list_20 = new List<System.Drawing.Point[]>();
			this.list_21 = new List<System.Drawing.Point[]>();
			this.list_22 = new List<System.Drawing.Point[]>();
			this.list_23 = new List<System.Drawing.Point[]>();
			this.list_24 = new List<System.Drawing.Point[]>();
			this.list_25 = new List<System.Drawing.Point[]>();
			this.list_26 = new List<System.Drawing.Point[]>();
			this.list_27 = new List<System.Drawing.Point[]>();
			this.list_28 = new List<System.Drawing.Point[]>();
			this.list_29 = new List<System.Drawing.Point[]>();
			this.list_30 = new List<System.Drawing.Point[]>();
			this.list_31 = new List<System.Drawing.Point[]>();
			this.list_32 = new List<System.Drawing.Point[]>();
			this.list_33 = new List<System.Drawing.Point[]>();
			this.list_34 = new List<System.Drawing.Point[]>();
			this.list_35 = new List<System.Drawing.Point[]>();
			this.list_36 = new List<System.Drawing.Point[]>();
			this.list_37 = new List<System.Drawing.Point[]>();
			this.list_38 = new List<System.Drawing.Point[]>();
			this.list_39 = new List<System.Drawing.Point[]>();
			this.list_40 = new List<System.Drawing.Point[]>();
			this.list_41 = new List<System.Drawing.Point[]>();
			this.list_42 = new List<System.Drawing.Point[]>();
			this.list_43 = new List<System.Drawing.Point[]>();
			this.list_44 = new List<System.Drawing.Point[]>();
			this.list_45 = new List<System.Drawing.Point[]>();
			this.list_46 = new List<System.Drawing.Point[]>();
			this.list_47 = new List<System.Drawing.Point[]>();
			this.list_48 = new List<System.Drawing.Point[]>();
			this.list_49 = new List<Class2449>();
			this.dateTime_0 = DateTime.Now;
			this.string_0 = "";
			this.string_1 = "";
			this.list_50 = new List<ActiveUnit>();
			this.string_2 = "";
			this.string_3 = "";
			this.string_4 = "";
			this.string_5 = "";
			this.stringBuilder_0 = new StringBuilder();
			this.stringBuilder_1 = new StringBuilder();
			this.enum164_0 = CommandLayer.Enum164.const_2;
			this.stringBuilder_2 = new StringBuilder();
			this.pen_0 = new Pen(Color.FromArgb(200, Color.White), 2f);
			this.short_0 = 16;
			this.short_1 = 12;
			this.int_4 = 0;
			this.long_0 = 0L;
			this.timer_1 = new Timer();
			this.class1848_0 = null;
			this.list_52 = new List<Class1879>();
			this.dictionary_1 = new Dictionary<string, Bitmap>();
			this.list_53 = new List<Unit>();
			this.dictionary_2 = new Dictionary<Unit, Tuple<int, int>>();
			this.list_54 = new List<Unit>();
			this.stringBuilder_3 = new StringBuilder();
			this.stringBuilder_4 = new StringBuilder();
			this.InitializeComponent();
		}

		// Token: 0x06005F07 RID: 24327 RVA: 0x00334A34 File Offset: 0x00332C34
		private void method_0()
		{
			if (!CommandLayer.smethod_1("CL_DrawTargetingVectors"))
			{
				List<ActiveUnit> list = Enumerable.ToList<ActiveUnit>(Client.smethod_50().activeUnit_0);
				float num = 1f;
				System.Drawing.Point point = default(System.Drawing.Point);
				System.Drawing.Point point2 = default(System.Drawing.Point);
				System.Drawing.Point point3 = default(System.Drawing.Point);
				try
				{
					Class285.Enum85 @enum = Client.smethod_52().method_49();
					if (@enum != Class285.Enum85.const_0)
					{
						if (@enum != Class285.Enum85.const_1)
						{
							goto IL_6D9;
						}
						Unit unit = Client.smethod_54();
						if (Information.IsNothing(unit) || !unit.bool_0 || !Client.smethod_77(unit) || (unit.vmethod_7(false) != Client.smethod_50() && Client.smethod_50().method_68(unit.vmethod_7(false)) != Misc.PostureStance.Friendly))
						{
							goto IL_6D9;
						}
						if (!unit.bool_1)
						{
							point = Class2572.smethod_0(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null));
							List<Contact> list2 = Enumerable.ToList<Contact>(((ActiveUnit)unit).vmethod_86().method_12());
							if (list2.Count == 0 && ((ActiveUnit)unit).vmethod_86().vmethod_3() != null)
							{
								((ActiveUnit)unit).vmethod_86().vmethod_3();
								list2.Add(((ActiveUnit)unit).vmethod_86().vmethod_3());
							}
							try
							{
								foreach (Contact contact in list2)
								{
									Color color_;
									if (((ActiveUnit)unit).vmethod_86().method_73(contact))
									{
										color_ = Color.LawnGreen;
									}
									else
									{
										color_ = Color.Yellow;
									}
									point2 = Class2572.smethod_0(this.vmethod_796(), contact.vmethod_30(null), contact.vmethod_28(null));
									Geopoint_Struct geopoint_Struct = Class437.smethod_1(unit.vmethod_30(null), unit.vmethod_28(null), 0f, contact.vmethod_30(null), contact.vmethod_28(null), 0f, (double)(unit.method_25(contact.vmethod_30(null), contact.vmethod_28(null)) / 2f));
									point3 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
									this.method_3(ref point, ref point2, ref point3, ((ActiveUnit)unit).vmethod_86().method_20(contact), ((ActiveUnit)unit).vmethod_86().method_19(contact), contact == ((ActiveUnit)unit).vmethod_86().vmethod_3(), color_);
								}
								goto IL_6D9;
							}
							finally
							{
								List<Contact>.Enumerator enumerator;
								((IDisposable)enumerator).Dispose();
							}
						}
						if (Class570.class280_0.method_28() == Class279.Class280.Enum74.const_2)
						{
							goto IL_6D9;
						}
						Group group = (Group)unit;
						try
						{
							foreach (ActiveUnit activeUnit in group.vmethod_141().Values)
							{
								point = Class2572.smethod_0(this.vmethod_796(), activeUnit.vmethod_30(null), activeUnit.vmethod_28(null));
								List<Contact> list3 = Enumerable.ToList<Contact>(activeUnit.vmethod_86().method_12());
								try
								{
									foreach (Contact contact2 in list3)
									{
										Color color_;
										if (activeUnit.vmethod_86().method_73(contact2))
										{
											color_ = Color.LawnGreen;
										}
										else
										{
											color_ = Color.Yellow;
										}
										point2 = Class2572.smethod_0(this.vmethod_796(), contact2.vmethod_30(null), contact2.vmethod_28(null));
										Geopoint_Struct geopoint_Struct = Class437.smethod_1(activeUnit.vmethod_30(null), activeUnit.vmethod_28(null), 0f, contact2.vmethod_30(null), contact2.vmethod_28(null), 0f, (double)(activeUnit.method_25(contact2.vmethod_30(null), contact2.vmethod_28(null)) / 2f));
										point3 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
										this.method_3(ref point, ref point2, ref point3, activeUnit.vmethod_86().method_20(contact2), activeUnit.vmethod_86().method_19(contact2), contact2 == activeUnit.vmethod_86().vmethod_3(), color_);
									}
								}
								finally
								{
									List<Contact>.Enumerator enumerator3;
									((IDisposable)enumerator3).Dispose();
								}
							}
							goto IL_6D9;
						}
						finally
						{
							IEnumerator<ActiveUnit> enumerator2;
							if (enumerator2 != null)
							{
								enumerator2.Dispose();
							}
						}
					}
					try
					{
						foreach (ActiveUnit activeUnit2 in list)
						{
							if (!Information.IsNothing(activeUnit2))
							{
								int num2;
								Client.smethod_91(ref num, ref num2, activeUnit2);
								if (activeUnit2.vmethod_7(false) == Client.smethod_50() || Client.smethod_50().method_68(activeUnit2.vmethod_7(false)) == Misc.PostureStance.Friendly)
								{
									point = Class2572.smethod_0(this.vmethod_796(), activeUnit2.vmethod_30(null), activeUnit2.vmethod_28(null));
									if (Client.smethod_77(activeUnit2) && Enumerable.Count<Contact>(activeUnit2.vmethod_86().method_12()) != 0)
									{
										List<Contact> list4 = Enumerable.ToList<Contact>(activeUnit2.vmethod_86().method_12());
										try
										{
											foreach (Contact contact3 in list4)
											{
												Color color_;
												if (activeUnit2.vmethod_86().method_73(contact3))
												{
													color_ = Color.LawnGreen;
												}
												else
												{
													color_ = Color.Yellow;
												}
												point2 = Class2572.smethod_0(this.vmethod_796(), contact3.vmethod_30(null), contact3.vmethod_28(null));
												Geopoint_Struct geopoint_Struct = Class437.smethod_1(activeUnit2.vmethod_30(null), activeUnit2.vmethod_28(null), 0f, contact3.vmethod_30(null), contact3.vmethod_28(null), 0f, (double)(activeUnit2.method_25(contact3.vmethod_30(null), contact3.vmethod_28(null)) / 2f));
												point3 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
												this.method_3(ref point, ref point2, ref point3, activeUnit2.vmethod_86().method_20(contact3), activeUnit2.vmethod_86().method_19(contact3), contact3 == activeUnit2.vmethod_86().vmethod_3(), color_);
											}
										}
										finally
										{
											List<Contact>.Enumerator enumerator5;
											((IDisposable)enumerator5).Dispose();
										}
									}
								}
							}
						}
					}
					finally
					{
						List<ActiveUnit>.Enumerator enumerator4;
						((IDisposable)enumerator4).Dispose();
					}
					IL_6D9:;
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200148", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
					throw;
				}
			}
		}

		// Token: 0x06005F08 RID: 24328 RVA: 0x003351E8 File Offset: 0x003333E8
		private void method_1()
		{
			if (!CommandLayer.smethod_1("CL_DrawIlluminationVectors"))
			{
				List<ActiveUnit> list = new List<ActiveUnit>();
				list.AddRange(Client.smethod_50().activeUnit_0);
				System.Drawing.Point point = default(System.Drawing.Point);
				try
				{
					Class285.Enum85 @enum = Client.smethod_52().method_51();
					int num;
					if (@enum != Class285.Enum85.const_0)
					{
						if (@enum != Class285.Enum85.const_1)
						{
							goto IL_5A6;
						}
						Unit unit = Client.smethod_54();
						if (Information.IsNothing(unit) || (unit.vmethod_7(false) != Client.smethod_50() && Client.smethod_50().method_68(unit.vmethod_7(false)) != Misc.PostureStance.Friendly))
						{
							goto IL_5A6;
						}
						if (!unit.bool_1)
						{
							Tuple<int, int> tuple = null;
							this.dictionary_2.TryGetValue(unit, out tuple);
							System.Drawing.Point point2;
							if (!Information.IsNothing(tuple))
							{
								int item = tuple.Item1;
								int item2 = tuple.Item2;
								point2 = new System.Drawing.Point(item, item2);
							}
							else
							{
								point2 = Class2572.smethod_0(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null));
							}
							if (!unit.bool_0)
							{
								goto IL_5A6;
							}
							Sensor[] array = ((ActiveUnit)unit).method_78();
							if (!Information.IsNothing(array))
							{
								num = array.Length;
								int num2 = num - 1;
								for (int i = 0; i <= num2; i++)
								{
									Sensor sensor = array[i];
									List<Contact> list2 = Enumerable.ToList<Contact>(sensor.method_41());
									int num3 = list2.Count - 1;
									this.int_6 = 0;
									while (this.int_6 <= num3)
									{
										Contact contact = list2[this.int_6];
										Tuple<int, int> tuple2 = null;
										this.dictionary_2.TryGetValue(contact, out tuple2);
										if (!Information.IsNothing(tuple2))
										{
											int item3 = tuple2.Item1;
											int item4 = tuple2.Item2;
											point = new System.Drawing.Point(item3, item4);
										}
										else
										{
											point = Class2572.smethod_0(this.vmethod_796(), contact.vmethod_30(null), contact.vmethod_28(null));
										}
										this.method_4(ref point2, ref point);
										this.int_6++;
									}
								}
								goto IL_5A6;
							}
							goto IL_5A6;
						}
						else
						{
							if (Class570.class280_0.method_28() == Class279.Class280.Enum74.const_2)
							{
								goto IL_5A6;
							}
							Group group = (Group)unit;
							try
							{
								foreach (ActiveUnit activeUnit in group.vmethod_141().Values)
								{
									Tuple<int, int> tuple3 = null;
									this.dictionary_2.TryGetValue(activeUnit, out tuple3);
									System.Drawing.Point point3;
									if (!Information.IsNothing(tuple3))
									{
										int item5 = tuple3.Item1;
										int item6 = tuple3.Item2;
										point3 = new System.Drawing.Point(item5, item6);
									}
									else
									{
										point3 = Class2572.smethod_0(this.vmethod_796(), activeUnit.vmethod_30(null), activeUnit.vmethod_28(null));
									}
									if (activeUnit.bool_0)
									{
										Sensor[] array = activeUnit.method_78();
										num = array.Length;
										int num4 = num - 1;
										for (int j = 0; j <= num4; j++)
										{
											Sensor sensor = array[j];
											List<Contact> list3 = Enumerable.ToList<Contact>(sensor.method_41());
											int num5 = list3.Count - 1;
											this.int_6 = 0;
											while (this.int_6 <= num5)
											{
												Contact contact2 = list3[this.int_6];
												Tuple<int, int> tuple4 = null;
												this.dictionary_2.TryGetValue(contact2, out tuple4);
												if (!Information.IsNothing(tuple4))
												{
													int item7 = tuple4.Item1;
													int item8 = tuple4.Item2;
													point = new System.Drawing.Point(item7, item8);
												}
												else
												{
													point = Class2572.smethod_0(this.vmethod_796(), contact2.vmethod_30(null), contact2.vmethod_28(null));
												}
												this.method_4(ref point3, ref point);
												this.int_6++;
											}
										}
									}
								}
								goto IL_5A6;
							}
							finally
							{
								IEnumerator<ActiveUnit> enumerator;
								if (enumerator != null)
								{
									enumerator.Dispose();
								}
							}
						}
					}
					num = list.Count;
					int num6 = num - 1;
					for (int k = 0; k <= num6; k++)
					{
						ActiveUnit activeUnit2 = list[k];
						if (!activeUnit2.bool_1 && activeUnit2.vmethod_127() && Client.smethod_77(activeUnit2))
						{
							Tuple<int, int> tuple5 = null;
							this.dictionary_2.TryGetValue(activeUnit2, out tuple5);
							System.Drawing.Point point4;
							if (!Information.IsNothing(tuple5))
							{
								int item9 = tuple5.Item1;
								int item10 = tuple5.Item2;
								point4 = new System.Drawing.Point(item9, item10);
							}
							else
							{
								point4 = Class2572.smethod_0(this.vmethod_796(), activeUnit2.vmethod_30(null), activeUnit2.vmethod_28(null));
							}
							if (!Information.IsNothing(activeUnit2))
							{
								Sensor[] array = activeUnit2.method_78();
								if (!Information.IsNothing(array))
								{
									List<Sensor> list4 = Enumerable.ToList<Sensor>(array);
									num = list4.Count;
									if (num > 0)
									{
										int num7 = num - 1;
										for (int l = 0; l <= num7; l++)
										{
											Sensor sensor = list4[l];
											if (sensor.method_41().Count != -1)
											{
												List<Contact> list5 = Enumerable.ToList<Contact>(sensor.method_41());
												int num8 = list5.Count - 1;
												for (int m = 0; m <= num8; m++)
												{
													Contact contact3 = list5[m];
													if (!Information.IsNothing(contact3))
													{
														Tuple<int, int> tuple6 = null;
														this.dictionary_2.TryGetValue(contact3, out tuple6);
														if (!Information.IsNothing(tuple6))
														{
															int item11 = tuple6.Item1;
															int item12 = tuple6.Item2;
															point = new System.Drawing.Point(item11, item12);
														}
														else
														{
															point = Class2572.smethod_0(this.vmethod_796(), contact3.vmethod_30(null), contact3.vmethod_28(null));
														}
														this.method_4(ref point4, ref point);
													}
												}
											}
										}
									}
								}
							}
						}
					}
					IL_5A6:;
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200151", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F09 RID: 24329 RVA: 0x0033580C File Offset: 0x00333A0C
		private void method_2()
		{
			if (!CommandLayer.smethod_1("CL_DrawCommLinks"))
			{
				List<ActiveUnit> list = new List<ActiveUnit>();
				list.AddRange(Client.smethod_50().activeUnit_0);
				System.Drawing.Point point = default(System.Drawing.Point);
				System.Drawing.Point point2 = default(System.Drawing.Point);
				try
				{
					Class285.Enum85 @enum = Client.smethod_52().method_45();
					if (@enum != Class285.Enum85.const_0)
					{
						if (@enum != Class285.Enum85.const_1)
						{
							goto IL_4EF;
						}
						Unit unit = Client.smethod_54();
						if (Information.IsNothing(unit) || !unit.bool_0 || (unit.vmethod_7(false) != Client.smethod_50() && !Client.smethod_50().method_67(unit.vmethod_7(false))))
						{
							goto IL_4EF;
						}
						if (!unit.bool_1)
						{
							point = Class2572.smethod_0(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null));
							List<Class312> list2 = new List<Class312>();
							if (unit.bool_2)
							{
								list2.AddRange(((ActiveUnit)unit).vmethod_90().method_2());
								try
								{
									foreach (Class312 @class in list2)
									{
										if (!Information.IsNothing(@class))
										{
											ActiveUnit activeUnit_ = @class.activeUnit_0;
											point2 = Class2572.smethod_0(this.vmethod_796(), activeUnit_.vmethod_30(null), activeUnit_.vmethod_28(null));
											this.method_5(ref point, ref point2);
										}
									}
									goto IL_4EF;
								}
								finally
								{
									List<Class312>.Enumerator enumerator;
									((IDisposable)enumerator).Dispose();
								}
							}
							try
							{
								foreach (ActiveUnit activeUnit in list)
								{
									if (unit != activeUnit && this.list_53.Contains(activeUnit) && activeUnit.bool_2)
									{
										list2.Clear();
										list2.AddRange(activeUnit.vmethod_90().method_2());
										try
										{
											foreach (Class312 class2 in list2)
											{
												if (!Information.IsNothing(class2) && class2.activeUnit_0 == unit)
												{
													point2 = Class2572.smethod_0(this.vmethod_796(), activeUnit.vmethod_30(null), activeUnit.vmethod_28(null));
													this.method_5(ref point, ref point2);
												}
											}
										}
										finally
										{
											List<Class312>.Enumerator enumerator3;
											((IDisposable)enumerator3).Dispose();
										}
									}
								}
								goto IL_4EF;
							}
							finally
							{
								List<ActiveUnit>.Enumerator enumerator2;
								((IDisposable)enumerator2).Dispose();
							}
						}
						if (Class570.class280_0.method_28() == Class279.Class280.Enum74.const_2)
						{
							goto IL_4EF;
						}
						Group group = (Group)unit;
						try
						{
							foreach (ActiveUnit activeUnit2 in group.vmethod_141().Values)
							{
								point = Class2572.smethod_0(this.vmethod_796(), activeUnit2.vmethod_30(null), activeUnit2.vmethod_28(null));
								List<Class312> list3 = new List<Class312>();
								try
								{
									foreach (ActiveUnit activeUnit3 in list)
									{
										if (activeUnit2 != activeUnit3 && this.list_53.Contains(activeUnit3) && activeUnit3.bool_2)
										{
											list3.Clear();
											list3.AddRange(activeUnit3.vmethod_90().method_2());
											try
											{
												foreach (Class312 class3 in list3)
												{
													if (!Information.IsNothing(class3) && class3.activeUnit_0 == activeUnit2)
													{
														point2 = Class2572.smethod_0(this.vmethod_796(), activeUnit3.vmethod_30(null), activeUnit3.vmethod_28(null));
														this.method_5(ref point, ref point2);
													}
												}
											}
											finally
											{
												List<Class312>.Enumerator enumerator6;
												((IDisposable)enumerator6).Dispose();
											}
										}
									}
								}
								finally
								{
									List<ActiveUnit>.Enumerator enumerator5;
									((IDisposable)enumerator5).Dispose();
								}
							}
							goto IL_4EF;
						}
						finally
						{
							IEnumerator<ActiveUnit> enumerator4;
							if (enumerator4 != null)
							{
								enumerator4.Dispose();
							}
						}
					}
					try
					{
						foreach (Unit unit2 in this.list_53)
						{
							if (unit2.bool_0 && Client.smethod_77(unit2))
							{
								point = Class2572.smethod_0(this.vmethod_796(), unit2.vmethod_30(null), unit2.vmethod_28(null));
								List<Class312> list4 = new List<Class312>();
								list4.AddRange(((ActiveUnit)unit2).vmethod_90().method_2());
								try
								{
									foreach (Class312 class4 in list4)
									{
										if (!Information.IsNothing(class4))
										{
											ActiveUnit activeUnit_2 = class4.activeUnit_0;
											point2 = Class2572.smethod_0(this.vmethod_796(), activeUnit_2.vmethod_30(null), activeUnit_2.vmethod_28(null));
											this.method_5(ref point, ref point2);
										}
									}
								}
								finally
								{
									List<Class312>.Enumerator enumerator8;
									((IDisposable)enumerator8).Dispose();
								}
							}
						}
					}
					finally
					{
						List<Unit>.Enumerator enumerator7;
						((IDisposable)enumerator7).Dispose();
					}
					IL_4EF:
					try
					{
						foreach (Unit unit3 in this.list_53)
						{
							if (unit3.bool_5 && ((Submarine)unit3).method_159())
							{
								point = Class2572.smethod_0(this.vmethod_796(), unit3.vmethod_30(null), unit3.vmethod_28(null));
								ActiveUnit activeUnit4 = ((Submarine)unit3).vmethod_93().method_11(false);
								if (!Information.IsNothing(activeUnit4))
								{
									point2 = Class2572.smethod_0(this.vmethod_796(), activeUnit4.vmethod_30(null), activeUnit4.vmethod_28(null));
									this.method_5(ref point, ref point2);
								}
							}
						}
					}
					finally
					{
						List<Unit>.Enumerator enumerator9;
						((IDisposable)enumerator9).Dispose();
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200150", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F0A RID: 24330 RVA: 0x00335F10 File Offset: 0x00334110
		private void method_3(ref System.Drawing.Point point_6, ref System.Drawing.Point point_7, ref System.Drawing.Point point_8, ActiveUnit_AI.TargetingEntry._TargetingBehavior _TargetingBehavior_0, float float_6, bool bool_15, Color color_8)
		{
			if (!CommandLayer.smethod_1("CL_DrawTargettingVector"))
			{
				try
				{
					string text = "";
					switch (_TargetingBehavior_0)
					{
					case ActiveUnit_AI.TargetingEntry._TargetingBehavior.AutoTargeted:
						text = "Auto";
						break;
					case ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualWeaponAlloc:
						text = "Man+Alloc";
						break;
					case ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualTargeted:
						text = "Man";
						break;
					}
					if (bool_15)
					{
						text += " - Pri";
					}
					if (float_6 > 0f)
					{
						text = text + " - " + string.Format("{0:0.0}", float_6, 1);
					}
					GraphicsPath graphicsPath = new GraphicsPath();
					graphicsPath.AddLine(point_6, point_7);
					Pen pen = new Pen(color_8, 1f);
					if (bool_15)
					{
						pen.Width = 2f;
						pen.DashStyle = DashStyle.Solid;
					}
					else
					{
						pen.DashStyle = DashStyle.Dash;
					}
					try
					{
						this.method_21(pen, graphicsPath);
						this.commandLayer_0.method_13(pen.Color, point_8.X, point_8.Y, text, 0.0, (int)this.short_1, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
					}
					catch (Exception ex)
					{
						ex.Data.Add("Error at 200167", ex.Message);
						GameGeneral.smethod_25(ref ex);
						if (Debugger.IsAttached)
						{
							Debugger.Break();
						}
					}
					finally
					{
						pen.Dispose();
						graphicsPath.Dispose();
					}
				}
				catch (Exception ex2)
				{
					ex2.Data.Add("Error at 200539", ex2.Message);
					GameGeneral.smethod_25(ref ex2);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F0B RID: 24331 RVA: 0x003360F8 File Offset: 0x003342F8
		private void method_4(ref System.Drawing.Point point_6, ref System.Drawing.Point point_7)
		{
			if (!CommandLayer.smethod_1("CL_DrawIlluminationVector"))
			{
				this.graphicsPath_0 = new GraphicsPath();
				this.graphicsPath_0.AddLine(point_6, point_7);
				this.pen_1 = new Pen(Color.FromArgb(255, 105, 105), 1f);
				this.pen_1.DashStyle = DashStyle.Dash;
				try
				{
					this.method_21(this.pen_1, this.graphicsPath_0);
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200168", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				finally
				{
					this.pen_1.Dispose();
					this.graphicsPath_0.Dispose();
				}
			}
		}

		// Token: 0x06005F0C RID: 24332 RVA: 0x003361E0 File Offset: 0x003343E0
		private void method_5(ref System.Drawing.Point point_6, ref System.Drawing.Point point_7)
		{
			if (!CommandLayer.smethod_1("CL_DrawCommLink"))
			{
				try
				{
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(point_6, point_7);
					this.pen_1 = new Pen(Color.DarkOrange, 1f);
					try
					{
						this.method_21(this.pen_1, this.graphicsPath_0);
					}
					catch (Exception ex)
					{
						ex.Data.Add("Error at 200169", ex.Message);
						GameGeneral.smethod_25(ref ex);
						if (Debugger.IsAttached)
						{
							Debugger.Break();
						}
					}
					finally
					{
						this.pen_1.Dispose();
						this.graphicsPath_0.Dispose();
					}
				}
				catch (Exception ex2)
				{
					ex2.Data.Add("Error at 200523", ex2.Message);
					GameGeneral.smethod_25(ref ex2);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F0D RID: 24333 RVA: 0x003362FC File Offset: 0x003344FC
		private System.Drawing.Point[] method_6(Geopoint_Struct geopoint_Struct_2, float float_6, float float_7, float float_8, float float_9)
		{
			MainForm.Class2443 @class = new MainForm.Class2443(@class);
			@class.mainForm_0 = this;
			@class.float_0 = float_7;
			int num = 720;
			System.Drawing.Point item = default(System.Drawing.Point);
			Collection<System.Drawing.Point> collection = new Collection<System.Drawing.Point>();
			@class.double_0 = geopoint_Struct_2.double_0;
			@class.double_1 = geopoint_Struct_2.double_1;
			float num2 = 4f;
			bool flag;
			float num3;
			if (!(flag = (float_8 == 0f && float_9 == 360f)))
			{
				item = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct_2.double_1, geopoint_Struct_2.double_0);
				collection.Add(item);
				num3 = 0.25f;
			}
			else
			{
				num3 = 0f;
			}
			float_8 = Math2.smethod_7(float_8 + float_6);
			float_9 = Math2.smethod_7(float_9 + float_6);
			float_8 = (float)((int)Math.Round((double)float_8));
			float_9 = (float)((int)Math.Round((double)float_9));
			float num4 = float_8;
			@class.dictionary_0 = new Dictionary<float, System.Drawing.Point>();
			List<float> list = new List<float>();
			int num5 = 0;
			int num6 = (int)Math.Round((double)(360f / num2));
			while (num4 < (float)num)
			{
				num5++;
				float num7 = Math2.smethod_7(num4);
				if ((int)Math.Round((double)num7) == (int)Math.Round((double)float_8))
				{
					list.Add(num7 - num3);
					try
					{
						@class.dictionary_0.Add(num7 - num3, default(System.Drawing.Point));
						goto IL_17D;
					}
					catch (Exception ex)
					{
						goto IL_17D;
					}
					goto IL_149;
				}
				goto IL_149;
				IL_17D:
				num4 += num2;
				continue;
				IL_149:
				list.Add(num7);
				try
				{
					@class.dictionary_0.Add(num7, default(System.Drawing.Point));
					goto IL_189;
				}
				catch (Exception ex2)
				{
					goto IL_189;
				}
				IL_175:
				if (num5 == num6)
				{
					goto IL_1A3;
				}
				goto IL_17D;
				IL_189:
				if (Math.Abs((int)Math.Round((double)num7) - (int)Math.Round((double)float_9)) >= 4)
				{
					goto IL_175;
				}
				IL_1A3:
				list.Add(float_9 + num3);
				if (!@class.dictionary_0.ContainsKey(float_9 + num3))
				{
					try
					{
						@class.dictionary_0.Add(float_9 + num3, default(System.Drawing.Point));
					}
					catch (Exception ex3)
					{
					}
					break;
				}
				break;
			}
			Parallel.ForEach<float>(list, new Action<float>(@class.method_0));
			try
			{
				foreach (System.Drawing.Point item2 in @class.dictionary_0.Values)
				{
					collection.Add(item2);
				}
			}
			finally
			{
				Dictionary<float, System.Drawing.Point>.ValueCollection.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
			if (!flag)
			{
				double num8;
				double num9;
				Class411.smethod_1(@class.double_0, @class.double_1, ref num8, ref num9, (double)@class.float_0, (double)(float_9 + num3));
				item = Class2572.smethod_0(this.vmethod_796(), num9, num8);
				collection.Add(item);
				item = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct_2.double_1, geopoint_Struct_2.double_0);
				collection.Add(item);
			}
			System.Drawing.Point[] array = new System.Drawing.Point[collection.Count - 1 + 1];
			int count = collection.Count;
			for (int i = 1; i <= count; i++)
			{
				array[i - 1] = collection[i - 1];
			}
			collection = null;
			return array;
		}

		// Token: 0x06005F0E RID: 24334 RVA: 0x0033661C File Offset: 0x0033481C
		private void method_7(Geopoint_Struct geopoint_Struct_2, float float_6, float float_7, float float_8, float float_9, Color color_8, byte byte_0, bool bool_15, bool bool_16)
		{
			if (!CommandLayer.smethod_1("CL_RangeWedgeArc_Draw"))
			{
				System.Drawing.Point[] ienumerable_ = this.method_6(geopoint_Struct_2, float_6, float_7, float_8, float_9);
				if (bool_16)
				{
					this.commandLayer_0.method_8(ienumerable_, color_8);
					return;
				}
				this.commandLayer_0.method_26(color_8, (float)byte_0, !bool_15, ienumerable_);
			}
		}

		// Token: 0x06005F0F RID: 24335 RVA: 0x0033666C File Offset: 0x0033486C
		private System.Drawing.Point[] method_8(ref Geopoint_Struct geopoint_Struct_2, ref float float_6)
		{
			System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct_2.double_1, geopoint_Struct_2.double_0);
			Geopoint_Struct geopoint_Struct = default(Geopoint_Struct);
			Class411.smethod_1(geopoint_Struct_2.double_0, geopoint_Struct_2.double_1, ref geopoint_Struct.double_0, ref geopoint_Struct.double_1, (double)float_6, 0.0);
			System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
			float num = (float)Math.Abs(point.Y - point2.Y);
			int num2;
			if (num < 25f)
			{
				num2 = 9;
			}
			else if (num < 50f)
			{
				num2 = 15;
			}
			else if (num < 100f)
			{
				num2 = 30;
			}
			else if (num < 300f)
			{
				num2 = 60;
			}
			else
			{
				num2 = 90;
			}
			Class432.Struct48[] array = new Class432.Struct48[num2 + 1];
			System.Drawing.Point[] array2 = new System.Drawing.Point[num2 + 1];
			double num3 = geopoint_Struct_2.double_1;
			double num4 = geopoint_Struct_2.double_0;
			Class411.smethod_0(num3, num4, (double)float_6, num2, ref array);
			int num5 = num2 - 1;
			for (int i = 0; i <= num5; i++)
			{
				array2[i] = Class2572.smethod_0(this.vmethod_796(), array[i].double_1, array[i].double_0);
			}
			array2[num2] = array2[0];
			return array2;
		}

		// Token: 0x06005F10 RID: 24336 RVA: 0x003367B0 File Offset: 0x003349B0
		private void method_9(ref Geopoint_Struct geopoint_Struct_2, float float_6, ref Color color_8, ref byte byte_0, ref bool bool_15, ref bool bool_16)
		{
			if (!CommandLayer.smethod_1("CL_RangeCircle_Draw"))
			{
				System.Drawing.Point[] ienumerable_ = this.method_8(ref geopoint_Struct_2, ref float_6);
				if (bool_16)
				{
					this.commandLayer_0.method_8(ienumerable_, color_8);
					return;
				}
				this.commandLayer_0.method_26(color_8, (float)byte_0, !bool_15, ienumerable_);
			}
		}

		// Token: 0x06005F11 RID: 24337 RVA: 0x00336808 File Offset: 0x00334A08
		private void method_10(List<System.Drawing.Point[]> list_62, List<System.Drawing.Point[]> list_63, List<System.Drawing.Point[]> list_64, List<System.Drawing.Point[]> list_65, List<System.Drawing.Point[]> list_66, List<System.Drawing.Point[]> list_67, List<System.Drawing.Point[]> list_68)
		{
			if (!CommandLayer.smethod_1("CLX_DrawRangeSymbols_Merged_Friendly"))
			{
				this.list_0.Clear();
				this.list_1.Clear();
				this.list_2.Clear();
				this.list_3.Clear();
				this.list_4.Clear();
				this.list_5.Clear();
				this.list_6.Clear();
				if (list_62.Count > 0)
				{
					this.list_0 = this.method_218(list_62);
				}
				if (list_63.Count > 0)
				{
					this.list_1 = this.method_218(list_63);
				}
				if (list_64.Count > 0)
				{
					this.list_2 = this.method_218(list_64);
				}
				if (list_65.Count > 0)
				{
					this.list_3 = this.method_218(list_65);
				}
				if (list_66.Count > 0)
				{
					this.list_4 = this.method_218(list_66);
				}
				if (list_67.Count > 0)
				{
					this.list_5 = this.method_218(list_67);
				}
				if (list_68.Count > 0)
				{
					this.list_6 = this.method_218(list_68);
				}
				this.method_20(new Pen(Color.FromArgb(255, this.color_1), 1f), this.list_0);
				this.method_20(new Pen(Color.FromArgb(255, this.color_0), 1f), this.list_1);
				this.method_20(new Pen(Color.FromArgb(255, this.color_2), 1f), this.list_2);
				this.method_20(new Pen(Color.FromArgb(255, this.color_3), 1f), this.list_3);
				this.method_20(new Pen(Color.FromArgb(255, this.color_4), 1f), this.list_4);
				this.method_20(new Pen(Color.FromArgb(255, this.color_5), 1f), this.list_5);
				this.method_20(new Pen(Color.FromArgb(255, this.color_6), 1f), this.list_6);
			}
		}

		// Token: 0x06005F12 RID: 24338 RVA: 0x00336A20 File Offset: 0x00334C20
		private void method_11(List<System.Drawing.Point[]> list_62, List<System.Drawing.Point[]> list_63, List<System.Drawing.Point[]> list_64, List<System.Drawing.Point[]> list_65, List<System.Drawing.Point[]> list_66, List<System.Drawing.Point[]> list_67, List<System.Drawing.Point[]> list_68)
		{
			if (!CommandLayer.smethod_1("CLX_DrawRangeSymbols_NonFriendly"))
			{
				if (list_62.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_62);
					this.method_20(new Pen(Color.FromArgb(255, this.color_1), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_63.Count > 0)
				{
					List<System.Drawing.Point[]> list_70 = this.method_218(list_63);
					this.method_20(new Pen(Color.FromArgb(255, this.color_0), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_70);
				}
				if (list_64.Count > 0)
				{
					List<System.Drawing.Point[]> list_71 = this.method_218(list_64);
					this.method_20(new Pen(Color.FromArgb(255, this.color_2), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_71);
				}
				if (list_65.Count > 0)
				{
					List<System.Drawing.Point[]> list_72 = this.method_218(list_65);
					this.method_20(new Pen(Color.FromArgb(255, this.color_3), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_72);
				}
				if (list_66.Count > 0)
				{
					List<System.Drawing.Point[]> list_73 = this.method_218(list_66);
					this.method_20(new Pen(Color.FromArgb(255, this.color_4), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_73);
				}
				if (list_67.Count > 0)
				{
					List<System.Drawing.Point[]> list_74 = this.method_218(list_67);
					this.method_20(new Pen(Color.FromArgb(255, this.color_5), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_74);
				}
				if (list_68.Count > 0)
				{
					List<System.Drawing.Point[]> list_75 = this.method_218(list_68);
					this.method_20(new Pen(Color.FromArgb(255, this.color_6), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_75);
				}
			}
		}

		// Token: 0x06005F13 RID: 24339 RVA: 0x00336BFC File Offset: 0x00334DFC
		private void method_12(List<System.Drawing.Point[]> list_62, List<System.Drawing.Point[]> list_63, List<System.Drawing.Point[]> list_64, List<System.Drawing.Point[]> list_65, List<System.Drawing.Point[]> list_66, List<System.Drawing.Point[]> list_67, List<System.Drawing.Point[]> list_68)
		{
			if (!CommandLayer.smethod_1("CLX_DrawRangeSymbols_SelectedUnit"))
			{
				byte b;
				if (Client.smethod_52().method_57() == Class285.Enum85.const_1)
				{
					b = 1;
				}
				else
				{
					b = 2;
				}
				if (list_62.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_62);
					this.method_20(new Pen(Color.FromArgb(255, this.color_1), (float)b), list_69);
				}
				if (list_63.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_63);
					this.method_20(new Pen(Color.FromArgb(255, this.color_0), (float)b), list_69);
				}
				if (list_64.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_64);
					this.method_20(new Pen(Color.FromArgb(255, this.color_2), (float)b), list_69);
				}
				if (list_65.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_65);
					this.method_20(new Pen(Color.FromArgb(255, this.color_3), (float)b), list_69);
				}
				if (list_66.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_66);
					this.method_20(new Pen(Color.FromArgb(255, this.color_4), (float)b), list_69);
				}
				if (list_67.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_67);
					this.method_20(new Pen(Color.FromArgb(255, this.color_5), (float)b), list_69);
				}
				if (list_68.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_68);
					this.method_20(new Pen(Color.FromArgb(255, this.color_6), (float)b), list_69);
				}
			}
		}

		// Token: 0x06005F14 RID: 24340 RVA: 0x00336D7C File Offset: 0x00334F7C
		private void method_13(List<System.Drawing.Point[]> list_62, List<System.Drawing.Point[]> list_63, List<System.Drawing.Point[]> list_64, List<System.Drawing.Point[]> list_65, List<System.Drawing.Point[]> list_66, List<System.Drawing.Point[]> list_67, List<System.Drawing.Point[]> list_68)
		{
			if (!CommandLayer.smethod_1("CLX_DrawRangeSymbols_SelectedUnit_Nonfriendly"))
			{
				byte b;
				if (Client.smethod_52().method_57() == Class285.Enum85.const_1)
				{
					b = 1;
				}
				else
				{
					b = 2;
				}
				if (list_62.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_62);
					this.method_20(new Pen(Color.FromArgb(255, this.color_1), (float)b)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_63.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_63);
					this.method_20(new Pen(Color.FromArgb(255, this.color_0), (float)b)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_64.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_64);
					this.method_20(new Pen(Color.FromArgb(255, this.color_2), (float)b)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_65.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_65);
					this.method_20(new Pen(Color.FromArgb(255, this.color_3), (float)b)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_66.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_66);
					this.method_20(new Pen(Color.FromArgb(255, this.color_4), (float)b)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_67.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_67);
					this.method_20(new Pen(Color.FromArgb(255, this.color_5), (float)b)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_68.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_68);
					this.method_20(new Pen(Color.FromArgb(255, this.color_6), (float)b)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
			}
		}

		// Token: 0x06005F15 RID: 24341 RVA: 0x00336F4C File Offset: 0x0033514C
		private void method_14(List<System.Drawing.Point[]> list_62, List<System.Drawing.Point[]> list_63, List<System.Drawing.Point[]> list_64, List<System.Drawing.Point[]> list_65, List<System.Drawing.Point[]> list_66, List<System.Drawing.Point[]> list_67, List<System.Drawing.Point[]> list_68)
		{
			if (!CommandLayer.smethod_1("CLX_DrawRangeSymbols_SingleUnits"))
			{
				if (list_62.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_62);
					this.method_20(new Pen(Color.FromArgb(255, this.color_1), 1f), list_69);
				}
				if (list_63.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_63);
					this.method_20(new Pen(Color.FromArgb(255, this.color_0), 1f), list_69);
				}
				if (list_64.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_64);
					this.method_20(new Pen(Color.FromArgb(255, this.color_2), 1f), list_69);
				}
				if (list_65.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_65);
					this.method_20(new Pen(Color.FromArgb(255, this.color_3), 1f), list_69);
				}
				if (list_66.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_66);
					this.method_20(new Pen(Color.FromArgb(255, this.color_4), 1f), list_69);
				}
				if (list_67.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_67);
					this.method_20(new Pen(Color.FromArgb(255, this.color_5), 1f), list_69);
				}
				if (list_68.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_68);
					this.method_20(new Pen(Color.FromArgb(255, this.color_6), 1f), list_69);
				}
			}
		}

		// Token: 0x06005F16 RID: 24342 RVA: 0x003370D0 File Offset: 0x003352D0
		private void method_15(List<System.Drawing.Point[]> list_62, List<System.Drawing.Point[]> list_63, List<System.Drawing.Point[]> list_64, List<System.Drawing.Point[]> list_65, List<System.Drawing.Point[]> list_66, List<System.Drawing.Point[]> list_67, List<System.Drawing.Point[]> list_68)
		{
			if (!CommandLayer.smethod_1("CLX_DrawRangeSymbols_SingleGroups"))
			{
				if (list_62.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_62);
					this.method_20(new Pen(Color.FromArgb(255, this.color_1), 1f), list_69);
				}
				if (list_63.Count > 0)
				{
					List<System.Drawing.Point[]> list_70 = this.method_218(list_63);
					this.method_20(new Pen(Color.FromArgb(255, this.color_0), 1f), list_70);
				}
				if (list_64.Count > 0)
				{
					List<System.Drawing.Point[]> list_71 = this.method_218(list_64);
					this.method_20(new Pen(Color.FromArgb(255, this.color_2), 1f), list_71);
				}
				if (list_65.Count > 0)
				{
					List<System.Drawing.Point[]> list_72 = this.method_218(list_65);
					this.method_20(new Pen(Color.FromArgb(255, this.color_3), 1f), list_72);
				}
				if (list_66.Count > 0)
				{
					List<System.Drawing.Point[]> list_73 = this.method_218(list_66);
					this.method_20(new Pen(Color.FromArgb(255, this.color_4), 1f), list_73);
				}
				if (list_67.Count > 0)
				{
					List<System.Drawing.Point[]> list_74 = this.method_218(list_67);
					this.method_20(new Pen(Color.FromArgb(255, this.color_5), 1f), list_74);
				}
				if (list_68.Count > 0)
				{
					List<System.Drawing.Point[]> list_75 = this.method_218(list_68);
					this.method_20(new Pen(Color.FromArgb(255, this.color_6), 1f), list_75);
				}
			}
		}

		// Token: 0x06005F17 RID: 24343 RVA: 0x00337258 File Offset: 0x00335458
		private void method_16(List<System.Drawing.Point[]> list_62, List<System.Drawing.Point[]> list_63, List<System.Drawing.Point[]> list_64, List<System.Drawing.Point[]> list_65, List<System.Drawing.Point[]> list_66, List<System.Drawing.Point[]> list_67, List<System.Drawing.Point[]> list_68)
		{
			if (!CommandLayer.smethod_1("CLX_DrawRangeSymbols_SingleGroups_Nonfriendly"))
			{
				if (list_62.Count > 0)
				{
					List<System.Drawing.Point[]> list_69 = this.method_218(list_62);
					this.method_20(new Pen(Color.FromArgb(255, this.color_1), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_69);
				}
				if (list_63.Count > 0)
				{
					List<System.Drawing.Point[]> list_70 = this.method_218(list_63);
					this.method_20(new Pen(Color.FromArgb(255, this.color_0), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_70);
				}
				if (list_64.Count > 0)
				{
					List<System.Drawing.Point[]> list_71 = this.method_218(list_64);
					this.method_20(new Pen(Color.FromArgb(255, this.color_2), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_71);
				}
				if (list_65.Count > 0)
				{
					List<System.Drawing.Point[]> list_72 = this.method_218(list_65);
					this.method_20(new Pen(Color.FromArgb(255, this.color_3), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_72);
				}
				if (list_66.Count > 0)
				{
					List<System.Drawing.Point[]> list_73 = this.method_218(list_66);
					this.method_20(new Pen(Color.FromArgb(255, this.color_4), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_73);
				}
				if (list_67.Count > 0)
				{
					List<System.Drawing.Point[]> list_74 = this.method_218(list_67);
					this.method_20(new Pen(Color.FromArgb(255, this.color_5), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_74);
				}
				if (list_68.Count > 0)
				{
					List<System.Drawing.Point[]> list_75 = this.method_218(list_68);
					this.method_20(new Pen(Color.FromArgb(255, this.color_6), 1f)
					{
						DashStyle = DashStyle.Dash
					}, list_75);
				}
			}
		}

		// Token: 0x06005F18 RID: 24344 RVA: 0x00337434 File Offset: 0x00335634
		public void method_17(Side side_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawRangeSymbols"))
			{
				try
				{
					if (this.list_53.Count > 0)
					{
						this.list_7.Clear();
						this.list_8.Clear();
						this.list_9.Clear();
						this.list_10.Clear();
						this.list_11.Clear();
						this.list_12.Clear();
						this.list_13.Clear();
						this.list_14.Clear();
						this.list_15.Clear();
						this.list_16.Clear();
						this.list_17.Clear();
						this.list_18.Clear();
						this.list_19.Clear();
						this.list_20.Clear();
						this.list_21.Clear();
						this.list_22.Clear();
						this.list_23.Clear();
						this.list_24.Clear();
						this.list_25.Clear();
						this.list_26.Clear();
						this.list_27.Clear();
						this.list_28.Clear();
						this.list_29.Clear();
						this.list_30.Clear();
						this.list_31.Clear();
						this.list_32.Clear();
						this.list_33.Clear();
						this.list_34.Clear();
						this.list_35.Clear();
						this.list_36.Clear();
						this.list_37.Clear();
						this.list_38.Clear();
						this.list_39.Clear();
						this.list_40.Clear();
						this.list_41.Clear();
						this.list_42.Clear();
						this.list_43.Clear();
						this.list_44.Clear();
						this.list_45.Clear();
						this.list_46.Clear();
						this.list_47.Clear();
						this.list_48.Clear();
						Class285 @class = Client.smethod_52();
						int count = this.list_53.Count;
						int num = 255;
						float num2 = 1f;
						Unit unit_ = Client.smethod_54();
						int num3 = count - 1;
						for (int i = 0; i <= num3; i++)
						{
							try
							{
								Unit unit = this.list_53[i];
								if (unit.bool_0)
								{
									ActiveUnit activeUnit = (ActiveUnit)unit;
									if (Client.smethod_52().method_1() || activeUnit.vmethod_90().vmethod_1())
									{
										if (!activeUnit.bool_2 || ((Weapon)activeUnit).method_167() != Weapon._WeaponType.Sonobuoy || Class570.class280_0.method_16() != Class279.Class280.Enum69.const_2)
										{
											if (activeUnit.vmethod_7(false) != null)
											{
												if (Client.smethod_77(activeUnit) || side_0.method_67(activeUnit.vmethod_7(false)))
												{
													Class285.Enum85 @enum = @class.method_57();
													if (@enum != Class285.Enum85.const_1)
													{
														if (@enum == Class285.Enum85.const_2)
														{
															goto IL_3CE8;
														}
													}
													else
													{
														if (Client.smethod_54() == null)
														{
															goto IL_3CE8;
														}
														if (activeUnit != Client.smethod_54())
														{
															goto IL_3CE8;
														}
													}
													if (!activeUnit.bool_1)
													{
														if (activeUnit.vmethod_127() && Client.smethod_86(ref activeUnit, true, null, unit_))
														{
															Geopoint_Struct geopoint_Struct = new Geopoint_Struct(activeUnit.vmethod_28(null), activeUnit.vmethod_30(null));
															Client.smethod_91(ref num2, ref num, activeUnit);
															byte lineThickness;
															if (activeUnit == Client.smethod_54())
															{
																if (@class.method_57() == Class285.Enum85.const_1)
																{
																	lineThickness = 1;
																}
																else
																{
																	lineThickness = 2;
																}
															}
															else
															{
																lineThickness = 1;
															}
															if (!Client.smethod_52().method_23())
															{
																this.list_7 = new List<System.Drawing.Point[]>();
																this.list_8 = new List<System.Drawing.Point[]>();
																this.list_9 = new List<System.Drawing.Point[]>();
																this.list_10 = new List<System.Drawing.Point[]>();
																this.list_11 = new List<System.Drawing.Point[]>();
																this.list_12 = new List<System.Drawing.Point[]>();
																this.list_13 = new List<System.Drawing.Point[]>();
															}
															if (Client.smethod_52().method_33() != Class285.Enum85.const_2)
															{
																ActiveUnit_Sensory activeUnit_Sensory = activeUnit.vmethod_88();
																bool flag = true;
																bool flag2 = true;
																bool flag3 = false;
																bool flag4 = false;
																Sensor[] array = null;
																List<Sensor> list = activeUnit_Sensory.method_52(flag, flag2, flag3, flag4, ref array);
																try
																{
																	foreach (Sensor sensor in list)
																	{
																		if (sensor.method_67())
																		{
																			goto IL_439;
																		}
																		Unit unit_2 = activeUnit;
																		float num4 = 40f;
																		if (Class562.smethod_0(unit_2, ref num4) >= sensor.float_0)
																		{
																			goto IL_439;
																		}
																		Unit unit_3 = activeUnit;
																		num4 = 40f;
																		float num5 = Class562.smethod_0(unit_3, ref num4);
																		IL_442:
																		if (activeUnit.bool_5)
																		{
																			if (sensor.method_43() && activeUnit.vmethod_14(false) < -20f)
																			{
																				num5 = 0f;
																			}
																		}
																		else if (sensor.method_43() && activeUnit.vmethod_14(false) + (float)activeUnit.vmethod_11() < 0f)
																		{
																			num5 = 0f;
																		}
																		if (num5 <= 0f)
																		{
																			continue;
																		}
																		if (sensor.class295_0.method_1() && !sensor.method_61(GlobalVariables.ActiveUnitType.Aircraft))
																		{
																			if (!activeUnit.method_0() && !activeUnit.bool_7 && Client.smethod_52().method_23())
																			{
																				if (activeUnit != Client.smethod_54())
																				{
																					if (!this.method_329(num5))
																					{
																						continue;
																					}
																					System.Drawing.Point[] array2 = this.method_330(geopoint_Struct, num5);
																					if (array2.Length > 0)
																					{
																						this.list_8.Add(array2);
																						continue;
																					}
																					continue;
																				}
																			}
																			if (this.method_329(num5))
																			{
																				float float_ = num5;
																				bool flag5 = true;
																				bool flag6 = false;
																				this.method_9(ref geopoint_Struct, float_, ref this.color_1, ref lineThickness, ref flag5, ref flag6);
																				continue;
																			}
																			continue;
																		}
																		else
																		{
																			if (activeUnit == Client.smethod_54() && !activeUnit.method_0() && !activeUnit.bool_7)
																			{
																				List<Sensor> list2 = new List<Sensor>();
																				ActiveUnit_Sensory activeUnit_Sensory2 = activeUnit.vmethod_88();
																				bool activeCapableSensorsOnly = true;
																				bool emmittingSensorsOnly = true;
																				bool onlyOperatingSensors = false;
																				bool onlySensorsScanningThisPulse = false;
																				array = null;
																				list2 = activeUnit_Sensory2.method_58(activeCapableSensorsOnly, emmittingSensorsOnly, onlyOperatingSensors, onlySensorsScanningThisPulse, ref array, false);
																				try
																				{
																					foreach (Sensor sensor2 in list2)
																					{
																						if (sensor2.float_0 > 0f)
																						{
																							if (sensor2.method_67())
																							{
																								goto IL_5E8;
																							}
																							Unit unit_4 = activeUnit;
																							num4 = 40f;
																							if (Class562.smethod_0(unit_4, ref num4) >= sensor2.float_0)
																							{
																								goto IL_5E8;
																							}
																							Unit unit_5 = activeUnit;
																							num4 = 40f;
																							float num6 = Class562.smethod_0(unit_5, ref num4);
																							IL_5F1:
																							if (!this.method_329(num6))
																							{
																								continue;
																							}
																							System.Drawing.Point[] array3 = this.method_328(geopoint_Struct, sensor2, activeUnit, num6);
																							if (array3.Length > 0)
																							{
																								this.list_15.Add(array3);
																								continue;
																							}
																							continue;
																							IL_5E8:
																							num6 = sensor2.float_0;
																							goto IL_5F1;
																						}
																					}
																					continue;
																				}
																				finally
																				{
																					List<Sensor>.Enumerator enumerator2;
																					((IDisposable)enumerator2).Dispose();
																				}
																			}
																			if (!activeUnit.method_0() && !activeUnit.bool_7)
																			{
																				List<Sensor> list3 = new List<Sensor>();
																				ActiveUnit_Sensory activeUnit_Sensory3 = activeUnit.vmethod_88();
																				bool activeCapableSensorsOnly2 = true;
																				bool emmittingSensorsOnly2 = true;
																				bool onlyOperatingSensors2 = false;
																				bool onlySensorsScanningThisPulse2 = false;
																				array = null;
																				list3 = activeUnit_Sensory3.method_58(activeCapableSensorsOnly2, emmittingSensorsOnly2, onlyOperatingSensors2, onlySensorsScanningThisPulse2, ref array, false);
																				try
																				{
																					foreach (Sensor sensor3 in list3)
																					{
																						if (sensor3.float_0 > 0f)
																						{
																							if (sensor3.method_67())
																							{
																								goto IL_6D0;
																							}
																							Unit unit_6 = activeUnit;
																							num4 = 40f;
																							if (Class562.smethod_0(unit_6, ref num4) >= sensor3.float_0)
																							{
																								goto IL_6D0;
																							}
																							Unit unit_7 = activeUnit;
																							num4 = 40f;
																							float num7 = Class562.smethod_0(unit_7, ref num4);
																							IL_6D9:
																							if (!this.method_329(num7))
																							{
																								continue;
																							}
																							System.Drawing.Point[] array4 = this.method_328(geopoint_Struct, sensor3, activeUnit, num7);
																							if (array4.Length > 0)
																							{
																								this.list_8.Add(array4);
																								continue;
																							}
																							continue;
																							IL_6D0:
																							num7 = sensor3.float_0;
																							goto IL_6D9;
																						}
																					}
																					continue;
																				}
																				finally
																				{
																					List<Sensor>.Enumerator enumerator3;
																					((IDisposable)enumerator3).Dispose();
																				}
																			}
																			if (this.method_329(sensor.float_0))
																			{
																				this.method_19(geopoint_Struct, sensor, activeUnit, this.color_1, lineThickness, true, 0f);
																				continue;
																			}
																			continue;
																		}
																		IL_439:
																		num5 = sensor.float_0;
																		goto IL_442;
																	}
																}
																finally
																{
																	List<Sensor>.Enumerator enumerator;
																	((IDisposable)enumerator).Dispose();
																}
															}
															if (Client.smethod_52().method_29() != Class285.Enum85.const_2)
															{
																ActiveUnit_Sensory activeUnit_Sensory4 = activeUnit.vmethod_88();
																bool flag7 = true;
																bool flag8 = true;
																bool flag9 = false;
																bool flag10 = false;
																Sensor[] array = null;
																List<Sensor> list = activeUnit_Sensory4.method_51(flag7, flag8, flag9, flag10, ref array);
																try
																{
																	foreach (Sensor sensor in list)
																	{
																		if (sensor.float_0 > 0f && sensor.method_43() && sensor.method_64())
																		{
																			if (sensor.class295_0.method_1())
																			{
																				if (!activeUnit.method_0() && !activeUnit.bool_7 && Client.smethod_52().method_23())
																				{
																					if (activeUnit != Client.smethod_54())
																					{
																						if (!this.method_329(sensor.float_0))
																						{
																							continue;
																						}
																						System.Drawing.Point[] array5 = this.method_330(geopoint_Struct, sensor.float_0);
																						if (array5.Length > 0)
																						{
																							this.list_7.Add(array5);
																							continue;
																						}
																						continue;
																					}
																				}
																				if (this.method_329(sensor.float_0))
																				{
																					float float_2 = sensor.float_0;
																					bool flag6 = true;
																					bool flag5 = false;
																					this.method_9(ref geopoint_Struct, float_2, ref this.color_0, ref lineThickness, ref flag6, ref flag5);
																				}
																			}
																			else
																			{
																				if (activeUnit == Client.smethod_54() && !activeUnit.method_0() && !activeUnit.bool_7)
																				{
																					List<Sensor> list4 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory5 = activeUnit.vmethod_88();
																					bool activeCapableSensorsOnly3 = true;
																					bool emmittingSensorsOnly3 = true;
																					bool onlyOperatingSensors3 = false;
																					bool onlySensorsScanningThisPulse3 = false;
																					array = null;
																					list4 = activeUnit_Sensory5.method_57(activeCapableSensorsOnly3, emmittingSensorsOnly3, onlyOperatingSensors3, onlySensorsScanningThisPulse3, ref array, false);
																					try
																					{
																						foreach (Sensor sensor4 in list4)
																						{
																							if (sensor4.float_0 > 0f && this.method_329(sensor4.float_0))
																							{
																								System.Drawing.Point[] array6 = this.method_328(geopoint_Struct, sensor4, activeUnit, sensor4.float_0);
																								if (array6.Length > 0)
																								{
																									this.list_14.Add(array6);
																								}
																							}
																						}
																						continue;
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator5;
																						((IDisposable)enumerator5).Dispose();
																					}
																				}
																				if (!activeUnit.method_0() && !activeUnit.bool_7)
																				{
																					List<Sensor> list5 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory6 = activeUnit.vmethod_88();
																					bool activeCapableSensorsOnly4 = true;
																					bool emmittingSensorsOnly4 = true;
																					bool onlyOperatingSensors4 = false;
																					bool onlySensorsScanningThisPulse4 = false;
																					array = null;
																					list5 = activeUnit_Sensory6.method_57(activeCapableSensorsOnly4, emmittingSensorsOnly4, onlyOperatingSensors4, onlySensorsScanningThisPulse4, ref array, false);
																					try
																					{
																						foreach (Sensor sensor5 in list5)
																						{
																							if (sensor5.float_0 > 0f && this.method_329(sensor5.float_0))
																							{
																								System.Drawing.Point[] array7 = this.method_328(geopoint_Struct, sensor5, activeUnit, sensor5.float_0);
																								if (array7.Length > 0)
																								{
																									this.list_7.Add(array7);
																								}
																							}
																						}
																						continue;
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator6;
																						((IDisposable)enumerator6).Dispose();
																					}
																				}
																				if (this.method_329(sensor.float_0))
																				{
																					this.method_19(geopoint_Struct, sensor, activeUnit, this.color_0, lineThickness, true, 0f);
																				}
																			}
																		}
																	}
																}
																finally
																{
																	List<Sensor>.Enumerator enumerator4;
																	((IDisposable)enumerator4).Dispose();
																}
															}
															if (Client.smethod_52().method_39() != Class285.Enum85.const_2)
															{
																ActiveUnit_Sensory activeUnit_Sensory7 = activeUnit.vmethod_88();
																bool activeCapableSensorsOnly5 = false;
																bool emmittingSensorsOnly5 = false;
																bool onlyOperatingSensors5 = true;
																bool onlySensorsScanningThisPulse5 = false;
																Sensor[] array = null;
																List<Sensor> list = activeUnit_Sensory7.method_55(activeCapableSensorsOnly5, emmittingSensorsOnly5, onlyOperatingSensors5, onlySensorsScanningThisPulse5, ref array, true);
																try
																{
																	foreach (Sensor sensor in list)
																	{
																		if (sensor.float_0 > 0f && sensor.method_64())
																		{
																			if (sensor.class295_0.method_1())
																			{
																				if (!activeUnit.method_0() && !activeUnit.bool_7 && Client.smethod_52().method_23())
																				{
																					if (activeUnit != Client.smethod_54())
																					{
																						if (!this.method_329(sensor.float_0))
																						{
																							continue;
																						}
																						System.Drawing.Point[] array8 = this.method_330(geopoint_Struct, sensor.float_0);
																						if (array8.Length > 0)
																						{
																							this.list_9.Add(array8);
																							continue;
																						}
																						continue;
																					}
																				}
																				if (this.method_329(sensor.float_0))
																				{
																					float float_3 = sensor.float_0;
																					bool flag5 = true;
																					bool flag6 = false;
																					this.method_9(ref geopoint_Struct, float_3, ref this.color_2, ref lineThickness, ref flag5, ref flag6);
																				}
																			}
																			else
																			{
																				if (activeUnit == Client.smethod_54() && !activeUnit.method_0() && !activeUnit.bool_7)
																				{
																					List<Sensor> list6 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory8 = activeUnit.vmethod_88();
																					bool activeCapableSensorsOnly6 = false;
																					bool emmittingSensorsOnly6 = false;
																					bool onlyOperatingSensors6 = true;
																					bool onlySensorsScanningThisPulse6 = false;
																					array = null;
																					list6 = activeUnit_Sensory8.method_61(activeCapableSensorsOnly6, emmittingSensorsOnly6, onlyOperatingSensors6, onlySensorsScanningThisPulse6, ref array, true);
																					try
																					{
																						foreach (Sensor sensor6 in list6)
																						{
																							if (sensor6.float_0 > 0f && this.method_329(sensor6.float_0))
																							{
																								System.Drawing.Point[] array9 = this.method_328(geopoint_Struct, sensor6, activeUnit, sensor6.float_0);
																								if (array9.Length > 0)
																								{
																									this.list_16.Add(array9);
																								}
																							}
																						}
																						continue;
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator8;
																						((IDisposable)enumerator8).Dispose();
																					}
																				}
																				if (!activeUnit.method_0() && !activeUnit.bool_7)
																				{
																					List<Sensor> list7 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory9 = activeUnit.vmethod_88();
																					bool activeCapableSensorsOnly7 = false;
																					bool emmittingSensorsOnly7 = false;
																					bool onlyOperatingSensors7 = true;
																					bool onlySensorsScanningThisPulse7 = false;
																					array = null;
																					list7 = activeUnit_Sensory9.method_61(activeCapableSensorsOnly7, emmittingSensorsOnly7, onlyOperatingSensors7, onlySensorsScanningThisPulse7, ref array, true);
																					try
																					{
																						foreach (Sensor sensor7 in list7)
																						{
																							if (sensor7.float_0 > 0f && this.method_329(sensor7.float_0))
																							{
																								System.Drawing.Point[] array10 = this.method_328(geopoint_Struct, sensor7, activeUnit, sensor7.float_0);
																								if (array10.Length > 0)
																								{
																									this.list_9.Add(array10);
																								}
																							}
																						}
																						continue;
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator9;
																						((IDisposable)enumerator9).Dispose();
																					}
																				}
																				if (this.method_329(sensor.float_0))
																				{
																					this.method_19(geopoint_Struct, sensor, activeUnit, this.color_2, lineThickness, true, 0f);
																				}
																			}
																		}
																	}
																}
																finally
																{
																	List<Sensor>.Enumerator enumerator7;
																	((IDisposable)enumerator7).Dispose();
																}
																if (activeUnit == Client.smethod_54() && (activeUnit.bool_6 || activeUnit.bool_5) && activeUnit.method_9(false, true, false) < -200)
																{
																	ActiveUnit_Sensory activeUnit_Sensory10 = activeUnit.vmethod_88();
																	bool activeCapableSensorsOnly8 = false;
																	bool emmittingSensorsOnly8 = false;
																	bool onlyOperatingSensors8 = true;
																	bool onlySensorsScanningThisPulse8 = false;
																	array = null;
																	List<Sensor> list8 = activeUnit_Sensory10.method_55(activeCapableSensorsOnly8, emmittingSensorsOnly8, onlyOperatingSensors8, onlySensorsScanningThisPulse8, ref array, true);
																	if (list8.Count > 0)
																	{
																		int num8 = (int)Math.Round((double)list8[0].float_0);
																		this.method_18(activeUnit.vmethod_30(null), activeUnit.vmethod_28(null), (float)num8, Color.FromArgb(30, this.color_2));
																	}
																}
															}
															if (Client.smethod_52().method_31() != Class285.Enum85.const_2)
															{
																Weapon weapon = activeUnit.vmethod_89().method_54();
																if (weapon != null)
																{
																	if (Client.smethod_52().method_23() && activeUnit != Client.smethod_54())
																	{
																		if (this.method_329(weapon.float_29))
																		{
																			System.Drawing.Point[] array11 = this.method_330(geopoint_Struct, weapon.float_29);
																			if (array11.Length > 0)
																			{
																				this.list_10.Add(array11);
																			}
																		}
																	}
																	else if (this.method_329(weapon.float_29))
																	{
																		float float_4 = weapon.float_29;
																		bool flag6 = true;
																		bool flag5 = false;
																		this.method_9(ref geopoint_Struct, float_4, ref this.color_3, ref lineThickness, ref flag6, ref flag5);
																	}
																}
															}
															if (Client.smethod_52().method_35() != Class285.Enum85.const_2)
															{
																Weapon weapon = activeUnit.vmethod_89().method_55(true);
																if (weapon != null)
																{
																	float num9;
																	if (activeUnit.bool_3 && weapon.method_156())
																	{
																		num9 = weapon.method_158(activeUnit.vmethod_14(false), Contact_Base.ContactType.Surface);
																	}
																	else
																	{
																		num9 = weapon.float_31;
																	}
																	if (Client.smethod_52().method_23() && activeUnit != Client.smethod_54())
																	{
																		if (this.method_329(num9))
																		{
																			System.Drawing.Point[] array12 = this.method_330(geopoint_Struct, num9);
																			if (array12.Length > 0)
																			{
																				this.list_11.Add(array12);
																			}
																		}
																	}
																	else if (this.method_329(weapon.float_31))
																	{
																		float float_5 = num9;
																		bool flag5 = true;
																		bool flag6 = false;
																		this.method_9(ref geopoint_Struct, float_5, ref this.color_4, ref lineThickness, ref flag5, ref flag6);
																	}
																}
															}
															if (Client.smethod_52().method_37() != Class285.Enum85.const_2)
															{
																Weapon weapon = activeUnit.vmethod_89().method_56(true);
																if (weapon != null)
																{
																	float num10;
																	if (activeUnit.bool_3 && weapon.method_156())
																	{
																		num10 = weapon.method_158(activeUnit.vmethod_14(false), Contact_Base.ContactType.Facility_Fixed);
																	}
																	else
																	{
																		num10 = weapon.float_33;
																	}
																	if (Client.smethod_52().method_23() && activeUnit != Client.smethod_54())
																	{
																		if (this.method_329(num10))
																		{
																			System.Drawing.Point[] array13 = this.method_330(geopoint_Struct, num10);
																			if (array13.Length > 0)
																			{
																				this.list_12.Add(array13);
																			}
																		}
																	}
																	else if (this.method_329(weapon.float_33))
																	{
																		float float_6 = num10;
																		bool flag6 = true;
																		bool flag5 = false;
																		this.method_9(ref geopoint_Struct, float_6, ref this.color_5, ref lineThickness, ref flag6, ref flag5);
																	}
																}
															}
															if (Client.smethod_52().method_41() != Class285.Enum85.const_2)
															{
																Weapon weapon = activeUnit.vmethod_89().method_57();
																if (weapon != null)
																{
																	if (Client.smethod_52().method_23() && activeUnit != Client.smethod_54())
																	{
																		if (this.method_329(weapon.float_35))
																		{
																			System.Drawing.Point[] array14 = this.method_330(geopoint_Struct, weapon.float_35);
																			if (array14.Length > 0)
																			{
																				this.list_13.Add(array14);
																			}
																		}
																	}
																	else if (this.method_329(weapon.float_35))
																	{
																		float float_7 = weapon.float_35;
																		bool flag5 = true;
																		bool flag6 = false;
																		this.method_9(ref geopoint_Struct, float_7, ref this.color_6, ref lineThickness, ref flag5, ref flag6);
																	}
																}
															}
															if (Client.smethod_52().method_43() != Class285.Enum85.const_2 && activeUnit.bool_3 && activeUnit == Client.smethod_54())
															{
																float num11 = (float)((double)((Aircraft)activeUnit).vmethod_114(activeUnit.vmethod_84(), null, new float?(activeUnit.vmethod_40()), new float?(activeUnit.vmethod_14(false))) / 3600.0 * (double)activeUnit.vmethod_40());
																if (num11 <= 5400f && this.method_329(num11))
																{
																	float float_8 = num11;
																	bool flag6 = true;
																	bool flag5 = false;
																	this.method_9(ref geopoint_Struct, float_8, ref this.color_7, ref lineThickness, ref flag6, ref flag5);
																}
															}
															if (!Client.smethod_52().method_23())
															{
																this.method_14(this.list_8, this.list_7, this.list_9, this.list_10, this.list_11, this.list_12, this.list_13);
																this.list_7.Clear();
																this.list_8.Clear();
																this.list_9.Clear();
																this.list_10.Clear();
																this.list_11.Clear();
																this.list_12.Clear();
																this.list_13.Clear();
															}
														}
													}
													else if (Client.smethod_52().enum87_0 != Class285.Enum87.const_1)
													{
														if (!Client.smethod_52().method_23())
														{
															this.list_42 = new List<System.Drawing.Point[]>();
															this.list_43 = new List<System.Drawing.Point[]>();
															this.list_44 = new List<System.Drawing.Point[]>();
															this.list_45 = new List<System.Drawing.Point[]>();
															this.list_46 = new List<System.Drawing.Point[]>();
															this.list_47 = new List<System.Drawing.Point[]>();
															this.list_48 = new List<System.Drawing.Point[]>();
														}
														List<ActiveUnit> list9 = Enumerable.ToList<ActiveUnit>(((Group)activeUnit).vmethod_141().Values);
														try
														{
															foreach (ActiveUnit activeUnit2 in list9)
															{
																Geopoint_Struct geopoint_Struct2 = new Geopoint_Struct(activeUnit2.vmethod_28(null), activeUnit2.vmethod_30(null));
																if (Client.smethod_52().method_33() != Class285.Enum85.const_2)
																{
																	ActiveUnit_Sensory activeUnit_Sensory11 = activeUnit2.vmethod_88();
																	bool flag11 = true;
																	bool flag12 = true;
																	bool flag13 = false;
																	bool flag14 = false;
																	Sensor[] array = null;
																	List<Sensor> list = activeUnit_Sensory11.method_52(flag11, flag12, flag13, flag14, ref array);
																	try
																	{
																		foreach (Sensor sensor in list)
																		{
																			if (sensor.method_67())
																			{
																				goto IL_1298;
																			}
																			Unit unit_8 = activeUnit2;
																			float num4 = 40f;
																			if (Class562.smethod_0(unit_8, ref num4) >= sensor.float_0)
																			{
																				goto IL_1298;
																			}
																			Unit unit_9 = activeUnit2;
																			num4 = 40f;
																			float num12 = Class562.smethod_0(unit_9, ref num4);
																			IL_12A1:
																			if (activeUnit2.bool_5)
																			{
																				if (sensor.method_43() && activeUnit2.vmethod_14(false) < -20f)
																				{
																					num12 = 0f;
																				}
																			}
																			else if (sensor.method_43() && activeUnit2.vmethod_14(false) + (float)activeUnit2.vmethod_11() < 0f)
																			{
																				num12 = 0f;
																			}
																			if (num12 <= 0f)
																			{
																				continue;
																			}
																			if (!sensor.class295_0.method_1() || sensor.method_61(GlobalVariables.ActiveUnitType.Aircraft))
																			{
																				if (activeUnit == Client.smethod_54())
																				{
																					List<Sensor> list10 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory12 = activeUnit2.vmethod_88();
																					bool activeCapableSensorsOnly9 = true;
																					bool emmittingSensorsOnly9 = true;
																					bool onlyOperatingSensors9 = false;
																					bool onlySensorsScanningThisPulse9 = false;
																					array = null;
																					list10 = activeUnit_Sensory12.method_58(activeCapableSensorsOnly9, emmittingSensorsOnly9, onlyOperatingSensors9, onlySensorsScanningThisPulse9, ref array, false);
																					try
																					{
																						foreach (Sensor sensor8 in list10)
																						{
																							if (sensor8.float_0 > 0f)
																							{
																								if (sensor8.method_67())
																								{
																									goto IL_143E;
																								}
																								Unit unit_10 = activeUnit2;
																								num4 = 40f;
																								if (Class562.smethod_0(unit_10, ref num4) >= sensor8.float_0)
																								{
																									goto IL_143E;
																								}
																								Unit unit_11 = activeUnit2;
																								num4 = 40f;
																								float num13 = Class562.smethod_0(unit_11, ref num4);
																								IL_1447:
																								if (!this.method_329(num13))
																								{
																									continue;
																								}
																								System.Drawing.Point[] array15 = this.method_328(geopoint_Struct2, sensor8, activeUnit2, num13);
																								if (array15.Length > 0)
																								{
																									this.list_15.Add(array15);
																									continue;
																								}
																								continue;
																								IL_143E:
																								num13 = sensor8.float_0;
																								goto IL_1447;
																							}
																						}
																						continue;
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator12;
																						((IDisposable)enumerator12).Dispose();
																					}
																				}
																				List<Sensor> list11 = new List<Sensor>();
																				ActiveUnit_Sensory activeUnit_Sensory13 = activeUnit2.vmethod_88();
																				bool activeCapableSensorsOnly10 = true;
																				bool emmittingSensorsOnly10 = true;
																				bool onlyOperatingSensors10 = false;
																				bool onlySensorsScanningThisPulse10 = false;
																				array = null;
																				list11 = activeUnit_Sensory13.method_58(activeCapableSensorsOnly10, emmittingSensorsOnly10, onlyOperatingSensors10, onlySensorsScanningThisPulse10, ref array, false);
																				try
																				{
																					foreach (Sensor sensor9 in list11)
																					{
																						if (sensor9.float_0 > 0f)
																						{
																							if (sensor9.method_67())
																							{
																								goto IL_1511;
																							}
																							Unit unit_12 = activeUnit2;
																							num4 = 40f;
																							if (Class562.smethod_0(unit_12, ref num4) >= sensor9.float_0)
																							{
																								goto IL_1511;
																							}
																							Unit unit_13 = activeUnit2;
																							num4 = 40f;
																							float num14 = Class562.smethod_0(unit_13, ref num4);
																							IL_151A:
																							if (!this.method_329(num14))
																							{
																								continue;
																							}
																							System.Drawing.Point[] array16 = this.method_328(geopoint_Struct2, sensor9, activeUnit2, num14);
																							if (Client.smethod_52().method_23())
																							{
																								if (array16.Length > 0)
																								{
																									this.list_8.Add(array16);
																									continue;
																								}
																								continue;
																							}
																							else
																							{
																								if (array16.Length > 0)
																								{
																									this.list_43.Add(array16);
																									continue;
																								}
																								continue;
																							}
																							IL_1511:
																							num14 = sensor9.float_0;
																							goto IL_151A;
																						}
																					}
																				}
																				finally
																				{
																					List<Sensor>.Enumerator enumerator13;
																					((IDisposable)enumerator13).Dispose();
																				}
																				continue;
																			}
																			if (activeUnit == Client.smethod_54())
																			{
																				if (!this.method_329(num12))
																				{
																					continue;
																				}
																				System.Drawing.Point[] array17 = this.method_330(geopoint_Struct2, num12);
																				if (array17.Length > 0)
																				{
																					this.list_15.Add(array17);
																					continue;
																				}
																				continue;
																			}
																			else
																			{
																				if (!this.method_329(num12))
																				{
																					continue;
																				}
																				System.Drawing.Point[] array18 = this.method_330(geopoint_Struct2, num12);
																				if (Client.smethod_52().method_23())
																				{
																					if (array18.Length > 0)
																					{
																						this.list_8.Add(array18);
																						continue;
																					}
																					continue;
																				}
																				else
																				{
																					if (array18.Length > 0)
																					{
																						this.list_43.Add(array18);
																						continue;
																					}
																					continue;
																				}
																			}
																			IL_1298:
																			num12 = sensor.float_0;
																			goto IL_12A1;
																		}
																	}
																	finally
																	{
																		List<Sensor>.Enumerator enumerator11;
																		((IDisposable)enumerator11).Dispose();
																	}
																}
																if (Client.smethod_52().method_29() != Class285.Enum85.const_2)
																{
																	ActiveUnit_Sensory activeUnit_Sensory14 = activeUnit2.vmethod_88();
																	bool flag15 = true;
																	bool flag16 = true;
																	bool flag17 = false;
																	bool flag18 = false;
																	Sensor[] array = null;
																	List<Sensor> list = activeUnit_Sensory14.method_51(flag15, flag16, flag17, flag18, ref array);
																	try
																	{
																		foreach (Sensor sensor in list)
																		{
																			if (sensor.float_0 > 0f && sensor.method_43() && sensor.method_64())
																			{
																				if (sensor.class295_0.method_1())
																				{
																					if (activeUnit == Client.smethod_54())
																					{
																						if (this.method_329(sensor.float_0))
																						{
																							System.Drawing.Point[] array19 = this.method_330(geopoint_Struct2, sensor.float_0);
																							if (array19.Length > 0)
																							{
																								this.list_14.Add(array19);
																							}
																						}
																					}
																					else if (this.method_329(sensor.float_0))
																					{
																						System.Drawing.Point[] array20 = this.method_330(geopoint_Struct2, sensor.float_0);
																						if (Client.smethod_52().method_23())
																						{
																							if (array20.Length > 0)
																							{
																								this.list_7.Add(array20);
																							}
																						}
																						else if (array20.Length > 0)
																						{
																							this.list_42.Add(array20);
																						}
																					}
																				}
																				else
																				{
																					if (activeUnit == Client.smethod_54())
																					{
																						List<Sensor> list12 = new List<Sensor>();
																						ActiveUnit_Sensory activeUnit_Sensory15 = activeUnit2.vmethod_88();
																						bool activeCapableSensorsOnly11 = true;
																						bool emmittingSensorsOnly11 = true;
																						bool onlyOperatingSensors11 = false;
																						bool onlySensorsScanningThisPulse11 = false;
																						array = null;
																						list12 = activeUnit_Sensory15.method_57(activeCapableSensorsOnly11, emmittingSensorsOnly11, onlyOperatingSensors11, onlySensorsScanningThisPulse11, ref array, false);
																						try
																						{
																							foreach (Sensor sensor10 in list12)
																							{
																								if (sensor10.float_0 > 0f && this.method_329(sensor10.float_0))
																								{
																									System.Drawing.Point[] array21 = this.method_328(geopoint_Struct2, sensor10, activeUnit2, sensor10.float_0);
																									if (array21.Length > 0)
																									{
																										this.list_14.Add(array21);
																									}
																								}
																							}
																							continue;
																						}
																						finally
																						{
																							List<Sensor>.Enumerator enumerator15;
																							((IDisposable)enumerator15).Dispose();
																						}
																					}
																					List<Sensor> list13 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory16 = activeUnit2.vmethod_88();
																					bool activeCapableSensorsOnly12 = true;
																					bool emmittingSensorsOnly12 = true;
																					bool onlyOperatingSensors12 = false;
																					bool onlySensorsScanningThisPulse12 = false;
																					array = null;
																					list13 = activeUnit_Sensory16.method_57(activeCapableSensorsOnly12, emmittingSensorsOnly12, onlyOperatingSensors12, onlySensorsScanningThisPulse12, ref array, false);
																					try
																					{
																						foreach (Sensor sensor11 in list13)
																						{
																							if (sensor11.float_0 > 0f && this.method_329(sensor11.float_0))
																							{
																								System.Drawing.Point[] array22 = this.method_328(geopoint_Struct2, sensor11, activeUnit2, sensor11.float_0);
																								if (Client.smethod_52().method_23())
																								{
																									if (array22.Length > 0)
																									{
																										this.list_7.Add(array22);
																									}
																								}
																								else if (array22.Length > 0)
																								{
																									this.list_42.Add(array22);
																								}
																							}
																						}
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator16;
																						((IDisposable)enumerator16).Dispose();
																					}
																				}
																			}
																		}
																	}
																	finally
																	{
																		List<Sensor>.Enumerator enumerator14;
																		((IDisposable)enumerator14).Dispose();
																	}
																}
																if (Client.smethod_52().method_39() != Class285.Enum85.const_2)
																{
																	ActiveUnit_Sensory activeUnit_Sensory17 = activeUnit2.vmethod_88();
																	bool activeCapableSensorsOnly13 = false;
																	bool emmittingSensorsOnly13 = false;
																	bool onlyOperatingSensors13 = true;
																	bool onlySensorsScanningThisPulse13 = false;
																	Sensor[] array = null;
																	List<Sensor> list = activeUnit_Sensory17.method_55(activeCapableSensorsOnly13, emmittingSensorsOnly13, onlyOperatingSensors13, onlySensorsScanningThisPulse13, ref array, true);
																	try
																	{
																		foreach (Sensor sensor in list)
																		{
																			if (sensor.float_0 > 0f && sensor.method_64())
																			{
																				if (sensor.class295_0.method_1())
																				{
																					if (activeUnit == Client.smethod_54())
																					{
																						if (this.method_329(sensor.float_0))
																						{
																							System.Drawing.Point[] array23 = this.method_330(geopoint_Struct2, sensor.float_0);
																							if (array23.Length > 0)
																							{
																								this.list_16.Add(array23);
																							}
																						}
																					}
																					else if (this.method_329(sensor.float_0))
																					{
																						System.Drawing.Point[] array24 = this.method_330(geopoint_Struct2, sensor.float_0);
																						if (Client.smethod_52().method_23())
																						{
																							if (array24.Length > 0)
																							{
																								this.list_9.Add(array24);
																							}
																						}
																						else if (array24.Length > 0)
																						{
																							this.list_44.Add(array24);
																						}
																					}
																				}
																				else
																				{
																					if (activeUnit == Client.smethod_54())
																					{
																						List<Sensor> list14 = new List<Sensor>();
																						ActiveUnit_Sensory activeUnit_Sensory18 = activeUnit2.vmethod_88();
																						bool activeCapableSensorsOnly14 = false;
																						bool emmittingSensorsOnly14 = false;
																						bool onlyOperatingSensors14 = true;
																						bool onlySensorsScanningThisPulse14 = false;
																						array = null;
																						list14 = activeUnit_Sensory18.method_61(activeCapableSensorsOnly14, emmittingSensorsOnly14, onlyOperatingSensors14, onlySensorsScanningThisPulse14, ref array, true);
																						try
																						{
																							foreach (Sensor sensor12 in list14)
																							{
																								if (sensor12.float_0 > 0f && this.method_329(sensor12.float_0))
																								{
																									System.Drawing.Point[] array25 = this.method_328(geopoint_Struct2, sensor12, activeUnit2, sensor12.float_0);
																									if (array25.Length > 0)
																									{
																										this.list_16.Add(array25);
																									}
																								}
																							}
																							continue;
																						}
																						finally
																						{
																							List<Sensor>.Enumerator enumerator18;
																							((IDisposable)enumerator18).Dispose();
																						}
																					}
																					List<Sensor> list15 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory19 = activeUnit2.vmethod_88();
																					bool activeCapableSensorsOnly15 = false;
																					bool emmittingSensorsOnly15 = false;
																					bool onlyOperatingSensors15 = true;
																					bool onlySensorsScanningThisPulse15 = false;
																					array = null;
																					list15 = activeUnit_Sensory19.method_61(activeCapableSensorsOnly15, emmittingSensorsOnly15, onlyOperatingSensors15, onlySensorsScanningThisPulse15, ref array, true);
																					try
																					{
																						foreach (Sensor sensor13 in list15)
																						{
																							if (sensor13.float_0 > 0f && this.method_329(sensor13.float_0))
																							{
																								System.Drawing.Point[] array26 = this.method_328(geopoint_Struct2, sensor13, activeUnit2, sensor13.float_0);
																								if (Client.smethod_52().method_23())
																								{
																									if (array26.Length > 0)
																									{
																										this.list_9.Add(array26);
																									}
																								}
																								else if (array26.Length > 0)
																								{
																									this.list_44.Add(array26);
																								}
																							}
																						}
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator19;
																						((IDisposable)enumerator19).Dispose();
																					}
																				}
																			}
																		}
																	}
																	finally
																	{
																		List<Sensor>.Enumerator enumerator17;
																		((IDisposable)enumerator17).Dispose();
																	}
																}
																if (Client.smethod_52().method_31() != Class285.Enum85.const_2)
																{
																	Weapon weapon = activeUnit2.vmethod_89().method_54();
																	if (weapon != null)
																	{
																		if (activeUnit == Client.smethod_54())
																		{
																			if (this.method_329(weapon.float_29))
																			{
																				System.Drawing.Point[] array27 = this.method_330(geopoint_Struct2, weapon.float_29);
																				if (array27.Length > 0)
																				{
																					this.list_17.Add(array27);
																				}
																			}
																		}
																		else if (this.method_329(weapon.float_29))
																		{
																			System.Drawing.Point[] array28 = this.method_330(geopoint_Struct2, weapon.float_29);
																			if (Client.smethod_52().method_23())
																			{
																				if (array28.Length > 0)
																				{
																					this.list_10.Add(array28);
																				}
																			}
																			else if (array28.Length > 0)
																			{
																				this.list_45.Add(array28);
																			}
																		}
																	}
																}
																if (Client.smethod_52().method_35() != Class285.Enum85.const_2)
																{
																	Weapon weapon = activeUnit2.vmethod_89().method_55(true);
																	if (weapon != null)
																	{
																		float float_9;
																		if (activeUnit2.bool_3 && weapon.method_156())
																		{
																			float_9 = weapon.method_158(activeUnit2.vmethod_14(false), Contact_Base.ContactType.Surface);
																		}
																		else
																		{
																			float_9 = weapon.float_31;
																		}
																		if (activeUnit == Client.smethod_54())
																		{
																			if (this.method_329(float_9))
																			{
																				System.Drawing.Point[] array29 = this.method_330(geopoint_Struct2, float_9);
																				if (array29.Length > 0)
																				{
																					this.list_18.Add(array29);
																				}
																			}
																		}
																		else if (this.method_329(float_9))
																		{
																			System.Drawing.Point[] array30 = this.method_330(geopoint_Struct2, float_9);
																			if (Client.smethod_52().method_23())
																			{
																				if (array30.Length > 0)
																				{
																					this.list_11.Add(array30);
																				}
																			}
																			else if (array30.Length > 0)
																			{
																				this.list_46.Add(array30);
																			}
																		}
																	}
																}
																if (Client.smethod_52().method_37() != Class285.Enum85.const_2)
																{
																	Weapon weapon = activeUnit2.vmethod_89().method_56(true);
																	if (weapon != null)
																	{
																		float float_10;
																		if (activeUnit2.bool_3 && weapon.method_156())
																		{
																			float_10 = weapon.method_158(activeUnit2.vmethod_14(false), Contact_Base.ContactType.Facility_Fixed);
																		}
																		else
																		{
																			float_10 = weapon.float_33;
																		}
																		if (activeUnit == Client.smethod_54())
																		{
																			if (this.method_329(float_10))
																			{
																				System.Drawing.Point[] array31 = this.method_330(geopoint_Struct2, float_10);
																				if (array31.Length > 0)
																				{
																					this.list_19.Add(array31);
																				}
																			}
																		}
																		else if (this.method_329(float_10))
																		{
																			System.Drawing.Point[] array32 = this.method_330(geopoint_Struct2, float_10);
																			if (Client.smethod_52().method_23())
																			{
																				if (array32.Length > 0)
																				{
																					this.list_12.Add(array32);
																				}
																			}
																			else if (array32.Length > 0)
																			{
																				this.list_47.Add(array32);
																			}
																		}
																	}
																}
																if (Client.smethod_52().method_41() != Class285.Enum85.const_2)
																{
																	Weapon weapon = activeUnit2.vmethod_89().method_57();
																	if (weapon != null)
																	{
																		if (activeUnit == Client.smethod_54())
																		{
																			if (this.method_329(weapon.float_35))
																			{
																				System.Drawing.Point[] array33 = this.method_330(geopoint_Struct2, weapon.float_35);
																				if (array33.Length > 0)
																				{
																					this.list_20.Add(array33);
																				}
																			}
																		}
																		else if (this.method_329(weapon.float_35))
																		{
																			System.Drawing.Point[] array34 = this.method_330(geopoint_Struct2, weapon.float_35);
																			if (Client.smethod_52().method_23())
																			{
																				if (array34.Length > 0)
																				{
																					this.list_13.Add(array34);
																				}
																			}
																			else if (array34.Length > 0)
																			{
																				this.list_48.Add(array34);
																			}
																		}
																	}
																}
															}
														}
														finally
														{
															List<ActiveUnit>.Enumerator enumerator10;
															((IDisposable)enumerator10).Dispose();
														}
														if (!Client.smethod_52().method_23())
														{
															this.method_15(this.list_43, this.list_42, this.list_44, this.list_45, this.list_46, this.list_47, this.list_48);
															this.list_42.Clear();
															this.list_43.Clear();
															this.list_44.Clear();
															this.list_45.Clear();
															this.list_46.Clear();
															this.list_47.Clear();
															this.list_48.Clear();
														}
													}
												}
											}
										}
									}
								}
								else if (unit.method_14())
								{
									if (!((Contact)unit).bool_16 || (Client.smethod_42() != null && unit == Client.smethod_42()) || (!Information.IsNothing(Client.smethod_54()) && unit == Client.smethod_54()))
									{
										if (Client.smethod_52().method_25())
										{
											Contact contact = (Contact)unit;
											if (contact.activeUnit_0 != null)
											{
												Class285.Enum85 enum2 = @class.method_57();
												if (enum2 != Class285.Enum85.const_1)
												{
													if (enum2 == Class285.Enum85.const_2)
													{
														goto IL_3CE8;
													}
												}
												else
												{
													if (Client.smethod_54() == null)
													{
														goto IL_3CE8;
													}
													if (contact != Client.smethod_54())
													{
														goto IL_3CE8;
													}
												}
												if (!contact.activeUnit_0.bool_1)
												{
													byte lineThickness;
													if (contact == Client.smethod_54())
													{
														if (@class.method_57() == Class285.Enum85.const_1)
														{
															lineThickness = 1;
														}
														else
														{
															lineThickness = 2;
														}
													}
													else
													{
														lineThickness = 1;
													}
													Geopoint_Struct geopoint_Struct3 = new Geopoint_Struct(contact.vmethod_28(null), contact.vmethod_30(null));
													if (!Client.smethod_52().method_23())
													{
														this.list_21 = new List<System.Drawing.Point[]>();
														this.list_22 = new List<System.Drawing.Point[]>();
														this.list_23 = new List<System.Drawing.Point[]>();
														this.list_24 = new List<System.Drawing.Point[]>();
														this.list_25 = new List<System.Drawing.Point[]>();
														this.list_26 = new List<System.Drawing.Point[]>();
														this.list_27 = new List<System.Drawing.Point[]>();
													}
													if (Client.smethod_52().method_33() != Class285.Enum85.const_2)
													{
														if (contact.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
														{
															ActiveUnit_Sensory activeUnit_Sensory20 = contact.activeUnit_0.vmethod_88();
															bool flag19 = true;
															bool flag20 = false;
															bool flag21 = false;
															bool flag22 = false;
															Sensor[] array = null;
															List<Sensor> list = activeUnit_Sensory20.method_52(flag19, flag20, flag21, flag22, ref array);
															try
															{
																foreach (Sensor sensor in list)
																{
																	if (sensor.method_67())
																	{
																		goto IL_2069;
																	}
																	Unit unit_14 = contact;
																	float num4 = 40f;
																	if (Class562.smethod_0(unit_14, ref num4) >= sensor.float_0)
																	{
																		goto IL_2069;
																	}
																	Unit unit_15 = contact;
																	num4 = 40f;
																	float num15 = Class562.smethod_0(unit_15, ref num4);
																	IL_2072:
																	if (contact.bool_5)
																	{
																		if (sensor.method_43() && contact.vmethod_14(false) < -20f)
																		{
																			num15 = 0f;
																		}
																	}
																	else if (sensor.method_43() && contact.vmethod_14(false) + (float)contact.vmethod_11() < 0f)
																	{
																		num15 = 0f;
																	}
																	if (num15 <= 0f)
																	{
																		continue;
																	}
																	if ((sensor.class295_0.method_1() || !contact.bool_18) && !sensor.method_61(GlobalVariables.ActiveUnitType.Aircraft))
																	{
																		if (!contact.activeUnit_0.bool_2 && Client.smethod_52().method_23())
																		{
																			if (contact != Client.smethod_54())
																			{
																				if (!this.method_329(num15))
																				{
																					continue;
																				}
																				System.Drawing.Point[] array35 = this.method_330(geopoint_Struct3, num15);
																				if (array35.Length > 0)
																				{
																					this.list_22.Add(array35);
																					continue;
																				}
																				continue;
																			}
																		}
																		if (this.method_329(num15))
																		{
																			float float_11 = num15;
																			bool flag5 = false;
																			bool flag6 = false;
																			this.method_9(ref geopoint_Struct3, float_11, ref this.color_1, ref lineThickness, ref flag5, ref flag6);
																			continue;
																		}
																		continue;
																	}
																	else
																	{
																		if (contact == Client.smethod_54() && !contact.method_0() && !contact.bool_7)
																		{
																			List<Sensor> list16 = new List<Sensor>();
																			ActiveUnit_Sensory activeUnit_Sensory21 = contact.activeUnit_0.vmethod_88();
																			bool activeCapableSensorsOnly16 = true;
																			bool emmittingSensorsOnly16 = false;
																			bool onlyOperatingSensors16 = false;
																			bool onlySensorsScanningThisPulse16 = false;
																			array = null;
																			list16 = activeUnit_Sensory21.method_58(activeCapableSensorsOnly16, emmittingSensorsOnly16, onlyOperatingSensors16, onlySensorsScanningThisPulse16, ref array, false);
																			try
																			{
																				foreach (Sensor sensor14 in list16)
																				{
																					if (sensor14.float_0 > 0f)
																					{
																						if (sensor14.method_67())
																						{
																							goto IL_2222;
																						}
																						Unit unit_16 = contact;
																						num4 = 40f;
																						if (Class562.smethod_0(unit_16, ref num4) >= sensor14.float_0)
																						{
																							goto IL_2222;
																						}
																						Unit unit_17 = contact;
																						num4 = 40f;
																						float num16 = Class562.smethod_0(unit_17, ref num4);
																						IL_222B:
																						if (!this.method_329(num16))
																						{
																							continue;
																						}
																						System.Drawing.Point[] array36 = this.method_328(geopoint_Struct3, sensor14, contact, num16);
																						if (array36.Length > 0)
																						{
																							this.list_29.Add(array36);
																							continue;
																						}
																						continue;
																						IL_2222:
																						num16 = sensor14.float_0;
																						goto IL_222B;
																					}
																				}
																				continue;
																			}
																			finally
																			{
																				List<Sensor>.Enumerator enumerator21;
																				((IDisposable)enumerator21).Dispose();
																			}
																		}
																		if (!contact.method_0() && !contact.bool_7)
																		{
																			List<Sensor> list17 = new List<Sensor>();
																			ActiveUnit_Sensory activeUnit_Sensory22 = contact.activeUnit_0.vmethod_88();
																			bool activeCapableSensorsOnly17 = true;
																			bool emmittingSensorsOnly17 = false;
																			bool onlyOperatingSensors17 = false;
																			bool onlySensorsScanningThisPulse17 = false;
																			array = null;
																			list17 = activeUnit_Sensory22.method_58(activeCapableSensorsOnly17, emmittingSensorsOnly17, onlyOperatingSensors17, onlySensorsScanningThisPulse17, ref array, false);
																			try
																			{
																				foreach (Sensor sensor15 in list17)
																				{
																					if (sensor15.float_0 > 0f)
																					{
																						if (sensor15.method_67())
																						{
																							goto IL_230F;
																						}
																						Unit unit_18 = contact;
																						num4 = 40f;
																						if (Class562.smethod_0(unit_18, ref num4) >= sensor15.float_0)
																						{
																							goto IL_230F;
																						}
																						Unit unit_19 = contact;
																						num4 = 40f;
																						float num17 = Class562.smethod_0(unit_19, ref num4);
																						IL_2318:
																						if (!this.method_329(num17))
																						{
																							continue;
																						}
																						System.Drawing.Point[] array37 = this.method_328(geopoint_Struct3, sensor15, contact, num17);
																						if (array37.Length > 0)
																						{
																							this.list_22.Add(array37);
																							continue;
																						}
																						continue;
																						IL_230F:
																						num17 = sensor15.float_0;
																						goto IL_2318;
																					}
																				}
																				continue;
																			}
																			finally
																			{
																				List<Sensor>.Enumerator enumerator22;
																				((IDisposable)enumerator22).Dispose();
																			}
																		}
																		if (this.method_329(sensor.float_0))
																		{
																			this.method_19(geopoint_Struct3, sensor, contact, this.color_4, lineThickness, true, 0f);
																			continue;
																		}
																		continue;
																	}
																	IL_2069:
																	num15 = sensor.float_0;
																	goto IL_2072;
																}
																goto IL_2448;
															}
															finally
															{
																List<Sensor>.Enumerator enumerator20;
																((IDisposable)enumerator20).Dispose();
															}
														}
														if (contact.method_86() != null)
														{
															float value = contact.method_86().Value;
															if (!contact.activeUnit_0.bool_2 && Client.smethod_52().method_23())
															{
																if (contact != Client.smethod_54())
																{
																	if (!this.method_329(value))
																	{
																		goto IL_2448;
																	}
																	System.Drawing.Point[] array38 = this.method_330(geopoint_Struct3, value);
																	if (array38.Length > 0)
																	{
																		this.list_22.Add(array38);
																		goto IL_2448;
																	}
																	goto IL_2448;
																}
															}
															if (this.method_329(value))
															{
																float float_12 = value;
																bool flag6 = false;
																bool flag5 = false;
																this.method_9(ref geopoint_Struct3, float_12, ref this.color_1, ref lineThickness, ref flag6, ref flag5);
															}
														}
													}
													IL_2448:
													if (Client.smethod_52().method_29() != Class285.Enum85.const_2)
													{
														if (contact.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
														{
															ActiveUnit_Sensory activeUnit_Sensory23 = contact.activeUnit_0.vmethod_88();
															bool flag23 = true;
															bool flag24 = false;
															bool flag25 = false;
															bool flag26 = false;
															Sensor[] array = null;
															List<Sensor> list = activeUnit_Sensory23.method_51(flag23, flag24, flag25, flag26, ref array);
															try
															{
																foreach (Sensor sensor in list)
																{
																	if (sensor.float_0 > 0f)
																	{
																		if (!sensor.class295_0.method_1() && contact.bool_18)
																		{
																			if (contact == Client.smethod_54() && !contact.method_0() && !contact.bool_7)
																			{
																				List<Sensor> list18 = new List<Sensor>();
																				ActiveUnit_Sensory activeUnit_Sensory24 = contact.activeUnit_0.vmethod_88();
																				bool activeCapableSensorsOnly18 = true;
																				bool emmittingSensorsOnly18 = false;
																				bool onlyOperatingSensors18 = false;
																				bool onlySensorsScanningThisPulse18 = false;
																				array = null;
																				list18 = activeUnit_Sensory24.method_57(activeCapableSensorsOnly18, emmittingSensorsOnly18, onlyOperatingSensors18, onlySensorsScanningThisPulse18, ref array, false);
																				try
																				{
																					foreach (Sensor sensor16 in list18)
																					{
																						if (sensor16.float_0 > 0f && this.method_329(sensor16.float_0))
																						{
																							System.Drawing.Point[] array39 = this.method_330(geopoint_Struct3, sensor16.float_0);
																							if (array39.Length > 0)
																							{
																								this.list_28.Add(array39);
																							}
																						}
																					}
																					continue;
																				}
																				finally
																				{
																					List<Sensor>.Enumerator enumerator24;
																					((IDisposable)enumerator24).Dispose();
																				}
																			}
																			if (!contact.method_0() && !contact.bool_7)
																			{
																				List<Sensor> list19 = new List<Sensor>();
																				ActiveUnit_Sensory activeUnit_Sensory25 = contact.activeUnit_0.vmethod_88();
																				bool activeCapableSensorsOnly19 = true;
																				bool emmittingSensorsOnly19 = false;
																				bool onlyOperatingSensors19 = false;
																				bool onlySensorsScanningThisPulse19 = false;
																				array = null;
																				list19 = activeUnit_Sensory25.method_57(activeCapableSensorsOnly19, emmittingSensorsOnly19, onlyOperatingSensors19, onlySensorsScanningThisPulse19, ref array, false);
																				try
																				{
																					foreach (Sensor sensor17 in list19)
																					{
																						if (sensor17.float_0 > 0f && this.method_329(sensor17.float_0))
																						{
																							System.Drawing.Point[] array40 = this.method_330(geopoint_Struct3, sensor17.float_0);
																							if (array40.Length > 0)
																							{
																								this.list_21.Add(array40);
																							}
																						}
																					}
																					continue;
																				}
																				finally
																				{
																					List<Sensor>.Enumerator enumerator25;
																					((IDisposable)enumerator25).Dispose();
																				}
																			}
																			if (this.method_329(sensor.float_0))
																			{
																				this.method_19(geopoint_Struct3, sensor, contact, this.color_0, lineThickness, true, 0f);
																			}
																		}
																		else
																		{
																			if (!contact.activeUnit_0.bool_2 && Client.smethod_52().method_23())
																			{
																				if (contact != Client.smethod_54())
																				{
																					if (!this.method_329(sensor.float_0))
																					{
																						continue;
																					}
																					System.Drawing.Point[] array41 = this.method_330(geopoint_Struct3, sensor.float_0);
																					if (array41.Length > 0)
																					{
																						this.list_21.Add(array41);
																						continue;
																					}
																					continue;
																				}
																			}
																			if (this.method_329(sensor.float_0))
																			{
																				float float_13 = sensor.float_0;
																				bool flag5 = false;
																				bool flag6 = false;
																				this.method_9(ref geopoint_Struct3, float_13, ref this.color_0, ref lineThickness, ref flag5, ref flag6);
																			}
																		}
																	}
																}
																goto IL_27A7;
															}
															finally
															{
																List<Sensor>.Enumerator enumerator23;
																((IDisposable)enumerator23).Dispose();
															}
														}
														if (contact.method_85() != null)
														{
															float value2 = contact.method_85().Value;
															if (!contact.activeUnit_0.bool_2 && Client.smethod_52().method_23())
															{
																if (contact != Client.smethod_54())
																{
																	if (!this.method_329(value2))
																	{
																		goto IL_27A7;
																	}
																	System.Drawing.Point[] array42 = this.method_330(geopoint_Struct3, value2);
																	if (array42.Length > 0)
																	{
																		this.list_21.Add(array42);
																		goto IL_27A7;
																	}
																	goto IL_27A7;
																}
															}
															if (this.method_329(value2))
															{
																float float_14 = value2;
																bool flag6 = false;
																bool flag5 = false;
																this.method_9(ref geopoint_Struct3, float_14, ref this.color_0, ref lineThickness, ref flag6, ref flag5);
															}
														}
													}
													IL_27A7:
													if (Client.smethod_52().method_39() != Class285.Enum85.const_2)
													{
														if (contact.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
														{
															ActiveUnit_Sensory activeUnit_Sensory26 = contact.activeUnit_0.vmethod_88();
															bool activeCapableSensorsOnly20 = false;
															bool emmittingSensorsOnly20 = false;
															bool onlyOperatingSensors20 = true;
															bool onlySensorsScanningThisPulse20 = false;
															Sensor[] array = null;
															List<Sensor> list = activeUnit_Sensory26.method_55(activeCapableSensorsOnly20, emmittingSensorsOnly20, onlyOperatingSensors20, onlySensorsScanningThisPulse20, ref array, true);
															try
															{
																foreach (Sensor sensor in list)
																{
																	if (sensor.float_0 > 0f)
																	{
																		if (!sensor.class295_0.method_1() && contact.bool_18)
																		{
																			if (contact == Client.smethod_54() && !contact.method_0() && !contact.bool_7)
																			{
																				List<Sensor> list20 = new List<Sensor>();
																				ActiveUnit_Sensory activeUnit_Sensory27 = contact.activeUnit_0.vmethod_88();
																				bool activeCapableSensorsOnly21 = false;
																				bool emmittingSensorsOnly21 = false;
																				bool onlyOperatingSensors21 = true;
																				bool onlySensorsScanningThisPulse21 = false;
																				array = null;
																				list20 = activeUnit_Sensory27.method_61(activeCapableSensorsOnly21, emmittingSensorsOnly21, onlyOperatingSensors21, onlySensorsScanningThisPulse21, ref array, true);
																				try
																				{
																					foreach (Sensor sensor18 in list20)
																					{
																						if (sensor18.float_0 > 0f && this.method_329(sensor18.float_0))
																						{
																							System.Drawing.Point[] array43 = this.method_330(geopoint_Struct3, sensor18.float_0);
																							if (array43.Length > 0)
																							{
																								this.list_30.Add(array43);
																							}
																						}
																					}
																					continue;
																				}
																				finally
																				{
																					List<Sensor>.Enumerator enumerator27;
																					((IDisposable)enumerator27).Dispose();
																				}
																			}
																			if (!contact.method_0() && !contact.bool_7)
																			{
																				List<Sensor> list21 = new List<Sensor>();
																				ActiveUnit_Sensory activeUnit_Sensory28 = contact.activeUnit_0.vmethod_88();
																				bool activeCapableSensorsOnly22 = false;
																				bool emmittingSensorsOnly22 = false;
																				bool onlyOperatingSensors22 = true;
																				bool onlySensorsScanningThisPulse22 = false;
																				array = null;
																				list21 = activeUnit_Sensory28.method_61(activeCapableSensorsOnly22, emmittingSensorsOnly22, onlyOperatingSensors22, onlySensorsScanningThisPulse22, ref array, true);
																				try
																				{
																					foreach (Sensor sensor19 in list21)
																					{
																						if (sensor19.float_0 > 0f && this.method_329(sensor19.float_0))
																						{
																							System.Drawing.Point[] array44 = this.method_330(geopoint_Struct3, sensor19.float_0);
																							if (array44.Length > 0)
																							{
																								this.list_23.Add(array44);
																							}
																						}
																					}
																					continue;
																				}
																				finally
																				{
																					List<Sensor>.Enumerator enumerator28;
																					((IDisposable)enumerator28).Dispose();
																				}
																			}
																			if (this.method_329(sensor.float_0))
																			{
																				this.method_19(geopoint_Struct3, sensor, contact, this.color_2, lineThickness, true, 0f);
																			}
																		}
																		else
																		{
																			if (!contact.activeUnit_0.bool_2 && Client.smethod_52().method_23())
																			{
																				if (contact != Client.smethod_54())
																				{
																					if (!this.method_329(sensor.float_0))
																					{
																						continue;
																					}
																					System.Drawing.Point[] array45 = this.method_330(geopoint_Struct3, sensor.float_0);
																					if (array45.Length > 0)
																					{
																						this.list_23.Add(array45);
																						continue;
																					}
																					continue;
																				}
																			}
																			if (this.method_329(sensor.float_0))
																			{
																				float float_15 = sensor.float_0;
																				bool flag5 = false;
																				bool flag6 = false;
																				this.method_9(ref geopoint_Struct3, float_15, ref this.color_2, ref lineThickness, ref flag5, ref flag6);
																			}
																		}
																	}
																}
																goto IL_2B07;
															}
															finally
															{
																List<Sensor>.Enumerator enumerator26;
																((IDisposable)enumerator26).Dispose();
															}
														}
														if (contact.method_87() != null)
														{
															float value3 = contact.method_87().Value;
															if (!contact.activeUnit_0.bool_2 && Client.smethod_52().method_23())
															{
																if (contact != Client.smethod_54())
																{
																	if (!this.method_329(value3))
																	{
																		goto IL_2B07;
																	}
																	System.Drawing.Point[] array46 = this.method_330(geopoint_Struct3, value3);
																	if (array46.Length > 0)
																	{
																		this.list_23.Add(array46);
																		goto IL_2B07;
																	}
																	goto IL_2B07;
																}
															}
															if (this.method_329(value3))
															{
																float float_16 = value3;
																bool flag6 = false;
																bool flag5 = false;
																this.method_9(ref geopoint_Struct3, float_16, ref this.color_2, ref lineThickness, ref flag6, ref flag5);
															}
														}
													}
													IL_2B07:
													if (contact.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
													{
														if (Client.smethod_52().method_31() != Class285.Enum85.const_2)
														{
															float value4 = contact.method_81().Value;
															if (contact == Client.smethod_54())
															{
																if (this.method_329(value4))
																{
																	float float_17 = value4;
																	bool flag5 = false;
																	bool flag6 = false;
																	this.method_9(ref geopoint_Struct3, float_17, ref this.color_3, ref lineThickness, ref flag5, ref flag6);
																}
															}
															else if (Client.smethod_52().method_23())
															{
																if (this.method_329(value4))
																{
																	System.Drawing.Point[] array47 = this.method_330(geopoint_Struct3, value4);
																	if (array47.Length > 0)
																	{
																		this.list_24.Add(array47);
																	}
																}
															}
															else if (this.method_329(value4))
															{
																float float_18 = value4;
																bool flag6 = false;
																bool flag5 = false;
																this.method_9(ref geopoint_Struct3, float_18, ref this.color_3, ref lineThickness, ref flag6, ref flag5);
															}
														}
														if (Client.smethod_52().method_35() != Class285.Enum85.const_2 && contact.method_82() != null)
														{
															float value5 = contact.method_82().Value;
															if (contact == Client.smethod_54())
															{
																if (this.method_329(value5))
																{
																	float float_19 = value5;
																	bool flag5 = false;
																	bool flag6 = false;
																	this.method_9(ref geopoint_Struct3, float_19, ref this.color_4, ref lineThickness, ref flag5, ref flag6);
																}
															}
															else if (Client.smethod_52().method_23())
															{
																if (this.method_329(value5))
																{
																	System.Drawing.Point[] array48 = this.method_330(geopoint_Struct3, value5);
																	if (array48.Length > 0)
																	{
																		this.list_25.Add(array48);
																	}
																}
															}
															else if (this.method_329(value5))
															{
																float float_20 = value5;
																bool flag6 = false;
																bool flag5 = false;
																this.method_9(ref geopoint_Struct3, float_20, ref this.color_4, ref lineThickness, ref flag6, ref flag5);
															}
														}
														if (Client.smethod_52().method_37() != Class285.Enum85.const_2 && contact.method_83() != null)
														{
															float value6 = contact.method_83().Value;
															if (contact == Client.smethod_54())
															{
																if (this.method_329(value6))
																{
																	float float_21 = value6;
																	bool flag5 = false;
																	bool flag6 = false;
																	this.method_9(ref geopoint_Struct3, float_21, ref this.color_5, ref lineThickness, ref flag5, ref flag6);
																}
															}
															else if (Client.smethod_52().method_23())
															{
																if (this.method_329(value6))
																{
																	System.Drawing.Point[] array49 = this.method_330(geopoint_Struct3, value6);
																	if (array49.Length > 0)
																	{
																		this.list_26.Add(array49);
																	}
																}
															}
															else if (this.method_329(value6))
															{
																float float_22 = value6;
																bool flag6 = false;
																bool flag5 = false;
																this.method_9(ref geopoint_Struct3, float_22, ref this.color_5, ref lineThickness, ref flag6, ref flag5);
															}
														}
														if (Client.smethod_52().method_41() != Class285.Enum85.const_2)
														{
															float value7 = contact.method_84().Value;
															if (contact == Client.smethod_54())
															{
																if (this.method_329(value7))
																{
																	float float_23 = value7;
																	bool flag5 = false;
																	bool flag6 = false;
																	this.method_9(ref geopoint_Struct3, float_23, ref this.color_6, ref lineThickness, ref flag5, ref flag6);
																}
															}
															else if (Client.smethod_52().method_23())
															{
																if (this.method_329(value7))
																{
																	System.Drawing.Point[] array50 = this.method_330(geopoint_Struct3, value7);
																	if (array50.Length > 0)
																	{
																		this.list_23.Add(array50);
																	}
																}
															}
															else if (this.method_329(value7))
															{
																float float_24 = value7;
																bool flag6 = false;
																bool flag5 = false;
																this.method_9(ref geopoint_Struct3, float_24, ref this.color_6, ref lineThickness, ref flag6, ref flag5);
															}
														}
													}
													if (!Client.smethod_52().method_23())
													{
														this.method_11(this.list_22, this.list_21, this.list_23, this.list_24, this.list_25, this.list_26, this.list_27);
														this.list_21.Clear();
														this.list_22.Clear();
														this.list_23.Clear();
														this.list_24.Clear();
														this.list_25.Clear();
														this.list_26.Clear();
														this.list_27.Clear();
													}
												}
												else
												{
													if (!Client.smethod_52().method_23())
													{
														this.list_35 = new List<System.Drawing.Point[]>();
														this.list_36 = new List<System.Drawing.Point[]>();
														this.list_37 = new List<System.Drawing.Point[]>();
														this.list_38 = new List<System.Drawing.Point[]>();
														this.list_39 = new List<System.Drawing.Point[]>();
														this.list_40 = new List<System.Drawing.Point[]>();
														this.list_41 = new List<System.Drawing.Point[]>();
													}
													try
													{
														foreach (ActiveUnit activeUnit3 in ((Group)contact.activeUnit_0).vmethod_141().Values)
														{
															Contact contact2;
															side_0.method_11().TryGetValue(activeUnit3.string_0, ref contact2);
															if (contact2 != null)
															{
																Geopoint_Struct geopoint_Struct4 = new Geopoint_Struct(activeUnit3.vmethod_28(null), activeUnit3.vmethod_30(null));
																if (Client.smethod_52().method_33() != Class285.Enum85.const_2)
																{
																	if (contact2.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
																	{
																		ActiveUnit_Sensory activeUnit_Sensory29 = activeUnit3.vmethod_88();
																		bool flag27 = true;
																		bool flag28 = false;
																		bool flag29 = false;
																		bool flag30 = false;
																		Sensor[] array = null;
																		List<Sensor> list = activeUnit_Sensory29.method_52(flag27, flag28, flag29, flag30, ref array);
																		try
																		{
																			foreach (Sensor sensor in list)
																			{
																				if (sensor.method_67())
																				{
																					goto IL_2FDE;
																				}
																				Unit unit_20 = activeUnit3;
																				float num4 = 40f;
																				if (Class562.smethod_0(unit_20, ref num4) >= sensor.float_0)
																				{
																					goto IL_2FDE;
																				}
																				Unit unit_21 = activeUnit3;
																				num4 = 40f;
																				float num18 = Class562.smethod_0(unit_21, ref num4);
																				IL_2FE7:
																				if (activeUnit3.bool_5)
																				{
																					if (sensor.method_43() && activeUnit3.vmethod_14(false) < -20f)
																					{
																						num18 = 0f;
																					}
																				}
																				else if (sensor.method_43() && activeUnit3.vmethod_14(false) + (float)activeUnit3.vmethod_11() < 0f)
																				{
																					num18 = 0f;
																				}
																				if (num18 <= 0f)
																				{
																					continue;
																				}
																				if ((!sensor.class295_0.method_1() && contact2.bool_18) || sensor.method_61(GlobalVariables.ActiveUnitType.Aircraft))
																				{
																					if (contact == Client.smethod_54())
																					{
																						List<Sensor> list22 = new List<Sensor>();
																						ActiveUnit_Sensory activeUnit_Sensory30 = activeUnit3.vmethod_88();
																						bool activeCapableSensorsOnly23 = true;
																						bool emmittingSensorsOnly23 = true;
																						bool onlyOperatingSensors23 = false;
																						bool onlySensorsScanningThisPulse23 = false;
																						array = null;
																						list22 = activeUnit_Sensory30.method_58(activeCapableSensorsOnly23, emmittingSensorsOnly23, onlyOperatingSensors23, onlySensorsScanningThisPulse23, ref array, false);
																						try
																						{
																							foreach (Sensor sensor20 in list22)
																							{
																								if (sensor20.float_0 > 0f)
																								{
																									if (sensor20.method_67())
																									{
																										goto IL_319B;
																									}
																									Unit unit_22 = activeUnit3;
																									num4 = 40f;
																									if (Class562.smethod_0(unit_22, ref num4) >= sensor20.float_0)
																									{
																										goto IL_319B;
																									}
																									Unit unit_23 = activeUnit3;
																									num4 = 40f;
																									float num19 = Class562.smethod_0(unit_23, ref num4);
																									IL_31A4:
																									if (!this.method_329(num19))
																									{
																										continue;
																									}
																									System.Drawing.Point[] array51 = this.method_328(geopoint_Struct4, sensor20, activeUnit3, num19);
																									if (array51.Length > 0)
																									{
																										this.list_29.Add(array51);
																										continue;
																									}
																									continue;
																									IL_319B:
																									num19 = sensor20.float_0;
																									goto IL_31A4;
																								}
																							}
																							continue;
																						}
																						finally
																						{
																							List<Sensor>.Enumerator enumerator31;
																							((IDisposable)enumerator31).Dispose();
																						}
																					}
																					List<Sensor> list23 = new List<Sensor>();
																					ActiveUnit_Sensory activeUnit_Sensory31 = activeUnit3.vmethod_88();
																					bool activeCapableSensorsOnly24 = true;
																					bool emmittingSensorsOnly24 = true;
																					bool onlyOperatingSensors24 = false;
																					bool onlySensorsScanningThisPulse24 = false;
																					array = null;
																					list23 = activeUnit_Sensory31.method_58(activeCapableSensorsOnly24, emmittingSensorsOnly24, onlyOperatingSensors24, onlySensorsScanningThisPulse24, ref array, false);
																					try
																					{
																						foreach (Sensor sensor21 in list23)
																						{
																							if (sensor21.float_0 > 0f)
																							{
																								if (sensor21.method_67())
																								{
																									goto IL_326E;
																								}
																								Unit unit_24 = activeUnit3;
																								num4 = 40f;
																								if (Class562.smethod_0(unit_24, ref num4) >= sensor21.float_0)
																								{
																									goto IL_326E;
																								}
																								Unit unit_25 = activeUnit3;
																								num4 = 40f;
																								float num20 = Class562.smethod_0(unit_25, ref num4);
																								IL_3277:
																								if (!this.method_329(num20))
																								{
																									continue;
																								}
																								System.Drawing.Point[] array52 = this.method_328(geopoint_Struct4, sensor21, activeUnit3, num20);
																								if (Client.smethod_52().method_23())
																								{
																									if (array52.Length > 0)
																									{
																										this.list_22.Add(array52);
																										continue;
																									}
																									continue;
																								}
																								else
																								{
																									if (array52.Length > 0)
																									{
																										this.list_36.Add(array52);
																										continue;
																									}
																									continue;
																								}
																								IL_326E:
																								num20 = sensor21.float_0;
																								goto IL_3277;
																							}
																						}
																					}
																					finally
																					{
																						List<Sensor>.Enumerator enumerator32;
																						((IDisposable)enumerator32).Dispose();
																					}
																					continue;
																				}
																				if (Client.smethod_52().method_23())
																				{
																					if (contact != Client.smethod_54())
																					{
																						if (!this.method_329(num18))
																						{
																							continue;
																						}
																						System.Drawing.Point[] array53 = this.method_330(geopoint_Struct4, num18);
																						if (Client.smethod_52().method_23())
																						{
																							if (array53.Length > 0)
																							{
																								this.list_22.Add(array53);
																								continue;
																							}
																							continue;
																						}
																						else
																						{
																							if (array53.Length > 0)
																							{
																								this.list_36.Add(array53);
																								continue;
																							}
																							continue;
																						}
																					}
																				}
																				if (!this.method_329(num18))
																				{
																					continue;
																				}
																				System.Drawing.Point[] array54 = this.method_330(geopoint_Struct4, num18);
																				if (array54.Length > 0)
																				{
																					this.list_29.Add(array54);
																					continue;
																				}
																				continue;
																				IL_2FDE:
																				num18 = sensor.float_0;
																				goto IL_2FE7;
																			}
																			goto IL_334D;
																		}
																		finally
																		{
																			List<Sensor>.Enumerator enumerator30;
																			((IDisposable)enumerator30).Dispose();
																		}
																	}
																	if (contact2.method_86() != null)
																	{
																		float value8 = contact2.method_86().Value;
																		if (this.method_329(value8))
																		{
																			System.Drawing.Point[] array55 = this.method_330(geopoint_Struct4, value8);
																			if (array55.Length > 0)
																			{
																				this.list_22.Add(array55);
																			}
																		}
																	}
																}
																IL_334D:
																if (Client.smethod_52().method_29() != Class285.Enum85.const_2 && contact2.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
																{
																	if (contact2.activeUnit_0 != null)
																	{
																		ActiveUnit_Sensory activeUnit_Sensory32 = contact2.activeUnit_0.vmethod_88();
																		bool flag31 = true;
																		bool flag32 = false;
																		bool flag33 = false;
																		bool flag34 = false;
																		Sensor[] array = null;
																		List<Sensor> list = activeUnit_Sensory32.method_51(flag31, flag32, flag33, flag34, ref array);
																		try
																		{
																			foreach (Sensor sensor in list)
																			{
																				if (sensor.float_0 > 0f)
																				{
																					if (!sensor.class295_0.method_1() && contact2.bool_18)
																					{
																						if (contact == Client.smethod_54() && !activeUnit3.method_0() && !activeUnit3.bool_7)
																						{
																							List<Sensor> list24 = new List<Sensor>();
																							ActiveUnit_Sensory activeUnit_Sensory33 = activeUnit3.vmethod_88();
																							bool activeCapableSensorsOnly25 = true;
																							bool emmittingSensorsOnly25 = true;
																							bool onlyOperatingSensors25 = false;
																							bool onlySensorsScanningThisPulse25 = false;
																							array = null;
																							list24 = activeUnit_Sensory33.method_57(activeCapableSensorsOnly25, emmittingSensorsOnly25, onlyOperatingSensors25, onlySensorsScanningThisPulse25, ref array, false);
																							try
																							{
																								foreach (Sensor sensor22 in list24)
																								{
																									if (sensor22.float_0 > 0f && this.method_329(sensor22.float_0))
																									{
																										System.Drawing.Point[] array56 = this.method_328(geopoint_Struct4, sensor22, activeUnit3, sensor22.float_0);
																										if (array56.Length > 0)
																										{
																											this.list_28.Add(array56);
																										}
																									}
																								}
																								continue;
																							}
																							finally
																							{
																								List<Sensor>.Enumerator enumerator34;
																								((IDisposable)enumerator34).Dispose();
																							}
																						}
																						List<Sensor> list25 = new List<Sensor>();
																						ActiveUnit_Sensory activeUnit_Sensory34 = activeUnit3.vmethod_88();
																						bool activeCapableSensorsOnly26 = true;
																						bool emmittingSensorsOnly26 = true;
																						bool onlyOperatingSensors26 = false;
																						bool onlySensorsScanningThisPulse26 = false;
																						array = null;
																						list25 = activeUnit_Sensory34.method_57(activeCapableSensorsOnly26, emmittingSensorsOnly26, onlyOperatingSensors26, onlySensorsScanningThisPulse26, ref array, false);
																						try
																						{
																							foreach (Sensor sensor23 in list25)
																							{
																								if (sensor23.float_0 > 0f && this.method_329(sensor23.float_0))
																								{
																									System.Drawing.Point[] array57 = this.method_328(geopoint_Struct4, sensor23, activeUnit3, sensor23.float_0);
																									if (Client.smethod_52().method_23())
																									{
																										if (array57.Length > 0)
																										{
																											this.list_21.Add(array57);
																										}
																									}
																									else if (array57.Length > 0)
																									{
																										this.list_35.Add(array57);
																									}
																								}
																							}
																							continue;
																						}
																						finally
																						{
																							List<Sensor>.Enumerator enumerator35;
																							((IDisposable)enumerator35).Dispose();
																						}
																					}
																					if (Client.smethod_52().method_23())
																					{
																						if (contact != Client.smethod_54())
																						{
																							if (!this.method_329(sensor.float_0))
																							{
																								continue;
																							}
																							System.Drawing.Point[] array58 = this.method_330(geopoint_Struct4, sensor.float_0);
																							if (Client.smethod_52().method_23())
																							{
																								if (array58.Length > 0)
																								{
																									this.list_21.Add(array58);
																									continue;
																								}
																								continue;
																							}
																							else
																							{
																								if (array58.Length > 0)
																								{
																									this.list_35.Add(array58);
																									continue;
																								}
																								continue;
																							}
																						}
																					}
																					if (this.method_329(sensor.float_0))
																					{
																						System.Drawing.Point[] array59 = this.method_330(geopoint_Struct4, sensor.float_0);
																						if (array59.Length > 0)
																						{
																							this.list_28.Add(array59);
																						}
																					}
																				}
																			}
																			goto IL_3654;
																		}
																		finally
																		{
																			List<Sensor>.Enumerator enumerator33;
																			((IDisposable)enumerator33).Dispose();
																		}
																	}
																	if (contact2.method_85() != null)
																	{
																		float value9 = contact2.method_85().Value;
																		if (this.method_329(value9))
																		{
																			System.Drawing.Point[] array60 = this.method_330(geopoint_Struct4, value9);
																			if (array60.Length > 0)
																			{
																				this.list_21.Add(array60);
																			}
																		}
																	}
																}
																IL_3654:
																if (Client.smethod_52().method_39() != Class285.Enum85.const_2)
																{
																	if (contact2.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
																	{
																		ActiveUnit_Sensory activeUnit_Sensory35 = activeUnit3.vmethod_88();
																		bool activeCapableSensorsOnly27 = false;
																		bool emmittingSensorsOnly27 = false;
																		bool onlyOperatingSensors27 = true;
																		bool onlySensorsScanningThisPulse27 = false;
																		Sensor[] array = null;
																		List<Sensor> list = activeUnit_Sensory35.method_55(activeCapableSensorsOnly27, emmittingSensorsOnly27, onlyOperatingSensors27, onlySensorsScanningThisPulse27, ref array, true);
																		try
																		{
																			foreach (Sensor sensor in list)
																			{
																				if (sensor.float_0 > 0f)
																				{
																					if (!sensor.class295_0.method_1() && contact2.bool_18)
																					{
																						if (contact == Client.smethod_54())
																						{
																							List<Sensor> list26 = new List<Sensor>();
																							ActiveUnit_Sensory activeUnit_Sensory36 = activeUnit3.vmethod_88();
																							bool activeCapableSensorsOnly28 = false;
																							bool emmittingSensorsOnly28 = false;
																							bool onlyOperatingSensors28 = true;
																							bool onlySensorsScanningThisPulse28 = false;
																							array = null;
																							list26 = activeUnit_Sensory36.method_61(activeCapableSensorsOnly28, emmittingSensorsOnly28, onlyOperatingSensors28, onlySensorsScanningThisPulse28, ref array, true);
																							try
																							{
																								foreach (Sensor sensor24 in list26)
																								{
																									if (sensor24.float_0 > 0f && this.method_329(sensor24.float_0))
																									{
																										System.Drawing.Point[] array61 = this.method_328(geopoint_Struct4, sensor24, activeUnit3, sensor24.float_0);
																										if (array61.Length > 0)
																										{
																											this.list_30.Add(array61);
																										}
																									}
																								}
																								continue;
																							}
																							finally
																							{
																								List<Sensor>.Enumerator enumerator37;
																								((IDisposable)enumerator37).Dispose();
																							}
																						}
																						List<Sensor> list27 = new List<Sensor>();
																						ActiveUnit_Sensory activeUnit_Sensory37 = activeUnit3.vmethod_88();
																						bool activeCapableSensorsOnly29 = false;
																						bool emmittingSensorsOnly29 = false;
																						bool onlyOperatingSensors29 = true;
																						bool onlySensorsScanningThisPulse29 = false;
																						array = null;
																						list27 = activeUnit_Sensory37.method_61(activeCapableSensorsOnly29, emmittingSensorsOnly29, onlyOperatingSensors29, onlySensorsScanningThisPulse29, ref array, true);
																						try
																						{
																							foreach (Sensor sensor25 in list27)
																							{
																								if (sensor25.float_0 > 0f && this.method_329(sensor25.float_0))
																								{
																									System.Drawing.Point[] array62 = this.method_328(geopoint_Struct4, sensor25, activeUnit3, sensor25.float_0);
																									if (Client.smethod_52().method_23())
																									{
																										if (array62.Length > 0)
																										{
																											this.list_23.Add(array62);
																										}
																									}
																									else if (array62.Length > 0)
																									{
																										this.list_37.Add(array62);
																									}
																								}
																							}
																							continue;
																						}
																						finally
																						{
																							List<Sensor>.Enumerator enumerator38;
																							((IDisposable)enumerator38).Dispose();
																						}
																					}
																					if (Client.smethod_52().method_23())
																					{
																						if (contact != Client.smethod_54())
																						{
																							if (!this.method_329(sensor.float_0))
																							{
																								continue;
																							}
																							System.Drawing.Point[] array63 = this.method_330(geopoint_Struct4, sensor.float_0);
																							if (Client.smethod_52().method_23())
																							{
																								if (array63.Length > 0)
																								{
																									this.list_23.Add(array63);
																									continue;
																								}
																								continue;
																							}
																							else
																							{
																								if (array63.Length > 0)
																								{
																									this.list_37.Add(array63);
																									continue;
																								}
																								continue;
																							}
																						}
																					}
																					if (this.method_329(sensor.float_0))
																					{
																						System.Drawing.Point[] array64 = this.method_330(geopoint_Struct4, sensor.float_0);
																						if (array64.Length > 0)
																						{
																							this.list_30.Add(array64);
																						}
																					}
																				}
																			}
																			goto IL_3933;
																		}
																		finally
																		{
																			List<Sensor>.Enumerator enumerator36;
																			((IDisposable)enumerator36).Dispose();
																		}
																	}
																	if (contact2.method_87() != null)
																	{
																		float value10 = contact2.method_87().Value;
																		if (this.method_329(value10))
																		{
																			System.Drawing.Point[] array65 = this.method_330(geopoint_Struct4, value10);
																			if (array65.Length > 0)
																			{
																				this.list_23.Add(array65);
																			}
																		}
																	}
																}
																IL_3933:
																if (contact2.method_125() >= Contact_Base.IdentificationStatus.KnownClass)
																{
																	if (Client.smethod_52().method_31() != Class285.Enum85.const_2 && contact2.method_81() != null)
																	{
																		float value11 = contact2.method_81().Value;
																		if (contact == Client.smethod_54())
																		{
																			if (this.method_329(value11))
																			{
																				System.Drawing.Point[] array66 = this.method_330(geopoint_Struct4, value11);
																				if (array66.Length > 0)
																				{
																					this.list_31.Add(array66);
																				}
																			}
																		}
																		else if (this.method_329(value11))
																		{
																			System.Drawing.Point[] array67 = this.method_330(geopoint_Struct4, value11);
																			if (Client.smethod_52().method_23())
																			{
																				if (array67.Length > 0)
																				{
																					this.list_24.Add(array67);
																				}
																			}
																			else if (array67.Length > 0)
																			{
																				this.list_38.Add(array67);
																			}
																		}
																	}
																	if (Client.smethod_52().method_35() != Class285.Enum85.const_2 && contact2.method_82() != null)
																	{
																		float value12 = contact2.method_82().Value;
																		if (contact == Client.smethod_54())
																		{
																			if (this.method_329(value12))
																			{
																				System.Drawing.Point[] array68 = this.method_330(geopoint_Struct4, value12);
																				if (array68.Length > 0)
																				{
																					this.list_32.Add(array68);
																				}
																			}
																		}
																		else if (this.method_329(value12))
																		{
																			System.Drawing.Point[] array69 = this.method_330(geopoint_Struct4, value12);
																			if (Client.smethod_52().method_23())
																			{
																				if (array69.Length > 0)
																				{
																					this.list_25.Add(array69);
																				}
																			}
																			else if (Enumerable.Count<System.Drawing.Point>(array69) > 0)
																			{
																				this.list_39.Add(array69);
																			}
																		}
																	}
																	if (Client.smethod_52().method_37() != Class285.Enum85.const_2 && contact2.method_83() != null)
																	{
																		float value13 = contact2.method_83().Value;
																		if (contact == Client.smethod_54())
																		{
																			if (this.method_329(value13))
																			{
																				System.Drawing.Point[] array70 = this.method_330(geopoint_Struct4, value13);
																				if (array70.Length > 0)
																				{
																					this.list_33.Add(array70);
																				}
																			}
																		}
																		else if (this.method_329(value13))
																		{
																			System.Drawing.Point[] array71 = this.method_330(geopoint_Struct4, value13);
																			if (Client.smethod_52().method_23())
																			{
																				if (array71.Length > 0)
																				{
																					this.list_26.Add(array71);
																				}
																			}
																			else if (Enumerable.Count<System.Drawing.Point>(array71) > 0)
																			{
																				this.list_40.Add(array71);
																			}
																		}
																	}
																	if (Client.smethod_52().method_41() != Class285.Enum85.const_2 && contact2.method_84() != null)
																	{
																		float value14 = contact2.method_84().Value;
																		if (contact == Client.smethod_54())
																		{
																			if (this.method_329(value14))
																			{
																				System.Drawing.Point[] array72 = this.method_330(geopoint_Struct4, value14);
																				if (array72.Length > 0)
																				{
																					this.list_34.Add(array72);
																				}
																			}
																		}
																		else if (this.method_329(value14))
																		{
																			System.Drawing.Point[] array73 = this.method_330(geopoint_Struct4, value14);
																			if (Client.smethod_52().method_23())
																			{
																				if (array73.Length > 0)
																				{
																					this.list_27.Add(array73);
																				}
																			}
																			else if (Enumerable.Count<System.Drawing.Point>(array73) > 0)
																			{
																				this.list_41.Add(array73);
																			}
																		}
																	}
																}
															}
														}
													}
													finally
													{
														IEnumerator<ActiveUnit> enumerator29;
														if (enumerator29 != null)
														{
															enumerator29.Dispose();
														}
													}
													if (!Client.smethod_52().method_23())
													{
														this.method_16(this.list_36, this.list_35, this.list_37, this.list_38, this.list_39, this.list_40, this.list_41);
														this.list_35.Clear();
														this.list_36.Clear();
														this.list_37.Clear();
														this.list_38.Clear();
														this.list_39.Clear();
														this.list_40.Clear();
														this.list_41.Clear();
													}
												}
											}
										}
									}
								}
							}
							catch (Exception ex)
							{
								if (Debugger.IsAttached)
								{
									Debugger.Break();
								}
							}
							IL_3CE8:;
						}
						if (Client.smethod_52().method_23())
						{
							this.method_10(this.list_8, this.list_7, this.list_9, this.list_10, this.list_11, this.list_12, this.list_13);
						}
						this.method_12(this.list_15, this.list_14, this.list_16, this.list_17, this.list_18, this.list_19, this.list_20);
						if (Client.smethod_52().method_23())
						{
							this.method_11(this.list_22, this.list_21, this.list_23, this.list_24, this.list_25, this.list_26, this.list_27);
						}
						this.method_13(this.list_29, this.list_28, this.list_30, this.list_31, this.list_32, this.list_33, this.list_34);
						this.list_7.Clear();
						this.list_8.Clear();
						this.list_9.Clear();
						this.list_10.Clear();
						this.list_11.Clear();
						this.list_12.Clear();
						this.list_13.Clear();
						this.list_14.Clear();
						this.list_15.Clear();
						this.list_16.Clear();
						this.list_17.Clear();
						this.list_18.Clear();
						this.list_19.Clear();
						this.list_20.Clear();
						this.list_21.Clear();
						this.list_22.Clear();
						this.list_23.Clear();
						this.list_24.Clear();
						this.list_25.Clear();
						this.list_26.Clear();
						this.list_27.Clear();
						this.list_28.Clear();
						this.list_29.Clear();
						this.list_30.Clear();
						this.list_31.Clear();
						this.list_32.Clear();
						this.list_33.Clear();
						this.list_34.Clear();
					}
				}
				catch (Exception ex2)
				{
					ex2.Data.Add("Error at 200207", ex2.Message);
					GameGeneral.smethod_25(ref ex2);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F19 RID: 24345 RVA: 0x0033B740 File Offset: 0x00339940
		private void method_18(double double_2, double double_3, float float_6, Color color_8)
		{
			if (!CommandLayer.smethod_1("CL_DrawCZRings"))
			{
				try
				{
					Class432.Struct48[] array = new Class432.Struct48[91];
					Class432.Struct48[] array2 = new Class432.Struct48[91];
					System.Drawing.Point[] array3 = new System.Drawing.Point[91];
					System.Drawing.Point[] array4 = new System.Drawing.Point[91];
					this.bool_14 = false;
					float num = Class568.smethod_0(double_2);
					this.int_7 = 0;
					while (!this.bool_14)
					{
						ref int ptr = ref this.int_7;
						this.int_7 = ptr + 1;
						this.float_4 = (float)((double)((float)this.int_7 * num) - 2.5);
						this.float_5 = (float)((double)((float)this.int_7 * num) + 2.5);
						if (this.float_4 > float_6)
						{
							this.bool_14 = true;
							break;
						}
						if (this.float_5 > float_6)
						{
							this.float_5 = float_6;
						}
						Class411.smethod_0(double_2, double_3, (double)this.float_4, 90, ref array);
						this.int_6 = 0;
						do
						{
							array3[this.int_6] = Class2572.smethod_0(this.vmethod_796(), array[this.int_6].double_1, array[this.int_6].double_0);
							this.int_6++;
						}
						while (this.int_6 <= 89);
						array3[90] = array3[0];
						Class411.smethod_0(double_2, double_3, (double)this.float_5, 90, ref array2);
						this.int_6 = 0;
						do
						{
							array4[this.int_6] = Class2572.smethod_0(this.vmethod_796(), array2[this.int_6].double_1, array2[this.int_6].double_0);
							this.int_6++;
						}
						while (this.int_6 <= 89);
						array4[90] = array4[0];
						this.commandLayer_0.method_9(color_8, array4, array3, Class2572.smethod_0(this.vmethod_796(), double_2, double_3));
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200210", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F1A RID: 24346 RVA: 0x0033B978 File Offset: 0x00339B78
		private void method_19(Geopoint_Struct thePoint, Sensor theSensor, Unit theUnit, Color theColor, byte LineThickness, bool IsFriendlySymbol, float theSensorRange = 0f)
		{
			if (!CommandLayer.smethod_1("CL_RangeWedges_Draw"))
			{
				List<RangeSymbol> list = this.method_327(thePoint, theSensor, theSensorRange);
				try
				{
					foreach (RangeSymbol rangeSymbol in list)
					{
						if (theSensorRange == 0f)
						{
							try
							{
								this.method_7(thePoint, theUnit.vmethod_9(), theSensor.float_0, rangeSymbol.float_0, rangeSymbol.float_1, theColor, LineThickness, IsFriendlySymbol, false);
								continue;
							}
							catch (Exception ex)
							{
								ex.Data.Add("Error at 200208", ex.Message);
								GameGeneral.smethod_25(ref ex);
								if (Debugger.IsAttached)
								{
									Debugger.Break();
								}
								continue;
							}
						}
						try
						{
							this.method_7(thePoint, theUnit.vmethod_9(), theSensorRange, rangeSymbol.float_0, rangeSymbol.float_1, theColor, LineThickness, IsFriendlySymbol, false);
						}
						catch (Exception ex2)
						{
							ex2.Data.Add("Error at 200209", ex2.Message);
							GameGeneral.smethod_25(ref ex2);
							if (Debugger.IsAttached)
							{
								Debugger.Break();
							}
						}
					}
				}
				finally
				{
					List<RangeSymbol>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
		}

		// Token: 0x06005F1B RID: 24347 RVA: 0x0033BAC4 File Offset: 0x00339CC4
		private void method_20(Pen pen_2, List<System.Drawing.Point[]> list_62)
		{
			if (!CommandLayer.smethod_1("CL_DrawPathIfPointsVisible"))
			{
				try
				{
					int count = list_62.Count;
					if (count != 0)
					{
						if (pen_2.DashStyle == DashStyle.Solid)
						{
							int num = count - 1;
							for (int i = 0; i <= num; i++)
							{
								try
								{
									System.Drawing.Point[] array = list_62[i];
									this.commandLayer_0.method_30(pen_2, array);
								}
								catch (Exception ex)
								{
									if (Debugger.IsAttached)
									{
										Debugger.Break();
									}
								}
							}
						}
						else
						{
							int num2 = count - 1;
							for (int j = 0; j <= num2; j++)
							{
								try
								{
									System.Drawing.Point[] array = list_62[j];
									this.commandLayer_0.method_29(pen_2, array);
								}
								catch (Exception ex2)
								{
									if (Debugger.IsAttached)
									{
										Debugger.Break();
									}
								}
							}
						}
					}
				}
				catch (Exception ex3)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F1C RID: 24348 RVA: 0x0033BBD0 File Offset: 0x00339DD0
		private void method_21(Pen pen_2, GraphicsPath graphicsPath_1)
		{
			if (!CommandLayer.smethod_1("CL_DrawPathIfPointsVisible2"))
			{
				try
				{
					if (graphicsPath_1.PointCount != 0)
					{
						this.commandLayer_0.method_31(pen_2, graphicsPath_1);
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F1D RID: 24349 RVA: 0x0033BC30 File Offset: 0x00339E30
		private void method_22()
		{
			if (!CommandLayer.smethod_1("CL_DrawUnderwaterUnguidedWeapons"))
			{
				try
				{
					if (Client.smethod_50() != null)
					{
						int count = Client.smethod_46().vmethod_20().Count;
						if (count != 0)
						{
							List<UnguidedWeapon> list = new List<UnguidedWeapon>(count);
							int num = count - 1;
							for (int i = 0; i <= num; i++)
							{
								try
								{
									UnguidedWeapon unguidedWeapon = Enumerable.ElementAtOrDefault<UnguidedWeapon>(Client.smethod_46().vmethod_20().Values, i);
									if (unguidedWeapon != null && unguidedWeapon.method_64() && Class2572.smethod_6(this.vmethod_796(), unguidedWeapon))
									{
										list.Add(unguidedWeapon);
									}
								}
								catch (Exception ex)
								{
									if (Debugger.IsAttached)
									{
										Debugger.Break();
									}
								}
							}
							count = list.Count;
							if (count != 0)
							{
								int num2 = 255;
								for (int j = count - 1; j >= 0; j += -1)
								{
									UnguidedWeapon unguidedWeapon = list[j];
									Weapon._WeaponType weaponType = unguidedWeapon.method_63();
									if (weaponType != Weapon._WeaponType.DepthCharge)
									{
										if (weaponType - Weapon._WeaponType.BottomMine <= 4 && (Client.smethod_52().method_1() || unguidedWeapon.vmethod_7(false) == Client.smethod_50() || unguidedWeapon.vmethod_7(false).method_68(Client.smethod_50()) == Misc.PostureStance.Friendly || Client.smethod_50().hashSet_0.Contains(unguidedWeapon.string_0)))
										{
											string text = "";
											System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null));
											switch (unguidedWeapon.method_63())
											{
											case Weapon._WeaponType.BottomMine:
												text = this.method_83("mine_bottom.png");
												break;
											case Weapon._WeaponType.MooredMine:
												text = this.method_83("mine_moored.png");
												break;
											case Weapon._WeaponType.FloatingMine:
												text = this.method_83("mine_float.png");
												break;
											case Weapon._WeaponType.MovingMine:
												text = this.method_83("mine_mobile.png");
												break;
											case Weapon._WeaponType.RisingMine:
												text = this.method_83("mine_rising.png");
												break;
											}
											this.commandLayer_0.method_16(text, num2, point.X - 8, point.Y - 8, 16, 16, this.enum164_0);
											if (unguidedWeapon.method_62() > 0f && (Client.smethod_52().method_1() || unguidedWeapon.vmethod_7(false) == Client.smethod_50() || unguidedWeapon.vmethod_7(false).method_68(Client.smethod_50()) == Misc.PostureStance.Friendly))
											{
												this.commandLayer_0.method_13(Color.White, point.X - 8, point.Y + 8, Misc.smethod_11((long)Math.Round((double)unguidedWeapon.method_62()), Aircraft_AirOps.Enum44.const_0, false, false), 0.0, 10, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
											}
										}
									}
									else
									{
										System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null));
										string text2 = this.method_83("DC.png");
										this.commandLayer_0.method_16(text2, num2, point.X - 8, point.Y - 8, 16, 16, this.enum164_0);
									}
								}
							}
						}
					}
				}
				catch (Exception ex2)
				{
					ex2.Data.Add("Error at 200350", ex2.Message);
					GameGeneral.smethod_25(ref ex2);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
					throw;
				}
			}
		}

		// Token: 0x06005F1E RID: 24350 RVA: 0x0033BFC4 File Offset: 0x0033A1C4
		private void method_23()
		{
			if (!CommandLayer.smethod_1("CL_DrawUnguidedWeapons"))
			{
				try
				{
					List<UnguidedWeapon> list = Enumerable.ToList<UnguidedWeapon>(Client.smethod_46().vmethod_20().Values);
					if (list.Count != 0)
					{
						list = Enumerable.ToList<UnguidedWeapon>(Enumerable.Where<UnguidedWeapon>(list, new Func<UnguidedWeapon, bool>(this.method_636)));
						int count = list.Count;
						if (count != 0)
						{
							int num = 255;
							for (int i = count - 1; i >= 0; i += -1)
							{
								UnguidedWeapon unguidedWeapon = list[i];
								if (unguidedWeapon != null)
								{
									Weapon._WeaponType weaponType = unguidedWeapon.method_63();
									switch (weaponType)
									{
									case Weapon._WeaponType.Rocket:
									{
										bool flag = unguidedWeapon.Name.ToLower().Contains("salvo");
										float num2 = 0.2f;
										float num3 = unguidedWeapon.method_23(unguidedWeapon.method_56());
										if (num2 > num3)
										{
											num2 = num3;
										}
										if (num2 != 0f)
										{
											Warhead.WarheadCaliber warheadCaliber_ = unguidedWeapon.warhead_0[0].warheadCaliber_0;
											byte b;
											if (warheadCaliber_ - Warhead.WarheadCaliber.Rocket_6_15mm > 2)
											{
												if (warheadCaliber_ - Warhead.WarheadCaliber.Rocket_61_80mm > 1)
												{
													b = 3;
												}
												else
												{
													b = 2;
												}
											}
											else
											{
												b = 1;
											}
											float num4 = Math2.smethod_17(unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null), unguidedWeapon.method_56().imethod_2(), unguidedWeapon.method_56().imethod_0());
											double num5;
											double num6;
											Class411.smethod_1(unguidedWeapon.vmethod_28(null), unguidedWeapon.vmethod_30(null), ref num5, ref num6, (double)num2, (double)num4);
											System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null));
											System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), num6, num5);
											if (point.X != point2.X || point.Y != point2.Y)
											{
												this.commandLayer_0.method_5(Color.Yellow, (int)(b + 1), point.X - 1, point.Y - 1, (int)(b + 1), (int)(b + 1));
												this.commandLayer_0.method_34(Color.Red, (int)b, flag, (float)point2.X, (float)point2.Y, (float)point.X, (float)point.Y);
											}
										}
										break;
									}
									case Weapon._WeaponType.IronBomb:
									{
										System.Drawing.Point point3 = Class2572.smethod_0(this.vmethod_796(), unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null));
										point3.X = GameGeneral.smethod_5().Next(point3.X - 2, point3.X + 3);
										point3.Y = GameGeneral.smethod_5().Next(point3.Y - 2, point3.Y + 3);
										string text = this.method_83("Bomb.png");
										this.commandLayer_0.method_17(text, num, point3.X - 8, point3.Y - 8, 16, 16, (double)unguidedWeapon.vmethod_9(), this.enum164_0);
										break;
									}
									case Weapon._WeaponType.Gun:
									{
										bool flag2 = UnguidedWeapon.smethod_0(unguidedWeapon.Name);
										UnguidedWeapon.smethod_1(unguidedWeapon.Name);
										if (flag2)
										{
											float num7 = 0.3f;
											float num8 = unguidedWeapon.method_23(unguidedWeapon.method_56());
											if (num7 > num8)
											{
												num7 = num8;
											}
											if (num7 != 0f)
											{
												float num9 = Math2.smethod_17(unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null), unguidedWeapon.method_56().imethod_2(), unguidedWeapon.method_56().imethod_0());
												double num10;
												double num11;
												Class411.smethod_1(unguidedWeapon.vmethod_28(null), unguidedWeapon.vmethod_30(null), ref num10, ref num11, (double)num7, (double)num9);
												System.Drawing.Point point4 = Class2572.smethod_0(this.vmethod_796(), unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null));
												System.Drawing.Point point5 = Class2572.smethod_0(this.vmethod_796(), num11, num10);
												if (point4.X != point5.X || point4.Y != point5.Y)
												{
													this.commandLayer_0.method_34(Color.White, 2, false, (float)point5.X, (float)point5.Y, (float)point4.X, (float)point4.Y);
												}
											}
										}
										else
										{
											float num12 = 0.2f;
											float num13 = unguidedWeapon.method_23(unguidedWeapon.method_56());
											if (num12 > num13)
											{
												num12 = num13;
											}
											if (num12 != 0f)
											{
												Warhead.WarheadCaliber warheadCaliber_2 = unguidedWeapon.warhead_0[0].warheadCaliber_0;
												byte b2;
												if (warheadCaliber_2 - Warhead.WarheadCaliber.Gun_6_15mm > 2)
												{
													if (warheadCaliber_2 - Warhead.WarheadCaliber.Gun_61_80mm > 1)
													{
														b2 = 3;
													}
													else
													{
														b2 = 2;
													}
												}
												else
												{
													b2 = 1;
												}
												float num14 = Math2.smethod_17(unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null), unguidedWeapon.method_56().imethod_2(), unguidedWeapon.method_56().imethod_0());
												double num15;
												double num16;
												Class411.smethod_1(unguidedWeapon.vmethod_28(null), unguidedWeapon.vmethod_30(null), ref num15, ref num16, (double)num12, (double)num14);
												System.Drawing.Point point6 = Class2572.smethod_0(this.vmethod_796(), unguidedWeapon.vmethod_30(null), unguidedWeapon.vmethod_28(null));
												System.Drawing.Point point7 = Class2572.smethod_0(this.vmethod_796(), num16, num15);
												if (point6.X != point7.X || point6.Y != point7.Y)
												{
													this.commandLayer_0.method_34(Color.White, (int)b2, false, (float)point7.X, (float)point7.Y, (float)point6.X, (float)point6.Y);
												}
											}
										}
										break;
									}
									default:
										if (weaponType == Weapon._WeaponType.Laser)
										{
											ActiveUnit activeUnit = null;
											Client.smethod_46().vmethod_0().TryGetValue(unguidedWeapon.string_4, ref activeUnit);
											if (activeUnit != null)
											{
												System.Drawing.Point point8 = Class2572.smethod_0(this.vmethod_796(), activeUnit.vmethod_30(null), activeUnit.vmethod_28(null));
												System.Drawing.Point point9 = Class2572.smethod_0(this.vmethod_796(), unguidedWeapon.contact_0.vmethod_30(null), unguidedWeapon.contact_0.vmethod_28(null));
												if (point8.X != point9.X || point8.Y != point9.Y)
												{
													int num17 = (int)Math.Round((double)(255f * Math.Min(1f, 2f - unguidedWeapon.method_62())));
													int green = num17;
													Color color = Color.FromArgb(255, num17, green, 255);
													this.commandLayer_0.method_23(color, point8, point9);
												}
											}
										}
										break;
									}
								}
							}
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F1F RID: 24351 RVA: 0x0033C6E8 File Offset: 0x0033A8E8
		private void method_24()
		{
			if (!CommandLayer.smethod_1("CL_DrawChaffClouds") && Client.smethod_46().ChaffClouds.Count != 0)
			{
				try
				{
					Pen pen = new Pen(Color.DarkCyan, 2f);
					for (int i = Client.smethod_46().ChaffClouds.Count - 1; i >= 0; i += -1)
					{
						ChaffCorridorCloud chaffCorridorCloud = Client.smethod_46().ChaffClouds[i];
						int num = GameGeneral.smethod_5().Next(100, 1000);
						Geopoint_Struct[] array = Math2.smethod_24(chaffCorridorCloud.vmethod_30(null), chaffCorridorCloud.vmethod_28(null), (float)chaffCorridorCloud.method_57(), (float)chaffCorridorCloud.method_58(), chaffCorridorCloud.vmethod_9());
						double num2 = Enumerable.Max(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I76-0 == null) ? (MainForm._Closure$__.$I76-0 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_0)) : MainForm._Closure$__.$I76-0));
						double num3 = Enumerable.Min(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I76-1 == null) ? (MainForm._Closure$__.$I76-1 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_1)) : MainForm._Closure$__.$I76-1));
						double num4 = Enumerable.Max(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I76-2 == null) ? (MainForm._Closure$__.$I76-2 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_2)) : MainForm._Closure$__.$I76-2));
						double num5 = Enumerable.Min(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I76-3 == null) ? (MainForm._Closure$__.$I76-3 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_3)) : MainForm._Closure$__.$I76-3));
						Random random = GameGeneral.smethod_5();
						int num6 = num;
						System.Drawing.Point point;
						string text;
						for (int j = 1; j <= num6; j++)
						{
							try
							{
								double num7 = num3 + random.NextDouble() * (num2 - num3);
								double theLat = Math2.smethod_10(ref num7);
								num7 = num5 + random.NextDouble() * (num4 - num5);
								double theLon = Math2.smethod_11(ref num7);
								if (Class2572.smethod_5(this.vmethod_796(), theLat, theLon) && GeoPoint.smethod_2(theLat, theLon, array, true))
								{
									point = Class2572.smethod_0(this.vmethod_796(), theLat, theLon);
									this.commandLayer_0.method_27(pen.Color, 2f, new System.Drawing.Point(point.X - 1, point.Y), new System.Drawing.Point(point.X + 1, point.Y));
								}
								if (Class570.class280_0.method_12())
								{
									text = Conversions.ToString((int)Math.Round((double)((float)chaffCorridorCloud.method_60() * 3.28084f / 1000f))) + "-" + Conversions.ToString((int)Math.Round((double)((float)chaffCorridorCloud.method_59() * 3.28084f / 1000f))) + "Kft";
								}
								else
								{
									text = Conversions.ToString((int)Math.Round((double)chaffCorridorCloud.method_60() / 1000.0)) + "-" + Conversions.ToString((int)Math.Round((double)chaffCorridorCloud.method_59() / 1000.0)) + "KM";
								}
								goto IL_37D;
							}
							catch (Exception ex)
							{
								ex.Data.Add("Error at 200158", ex.Message);
								GameGeneral.smethod_25(ref ex);
								if (Debugger.IsAttached)
								{
									Debugger.Break();
								}
								goto IL_37D;
							}
							break;
							IL_37D:;
						}
						point = Class2572.smethod_0(this.vmethod_796(), chaffCorridorCloud.vmethod_30(null), chaffCorridorCloud.vmethod_28(null));
						this.commandLayer_0.method_13(pen.Color, point.X, point.Y, text, 0.0, 15, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
					}
				}
				catch (Exception ex2)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F20 RID: 24352 RVA: 0x0033CAD0 File Offset: 0x0033ACD0
		private void method_25()
		{
			if (!CommandLayer.smethod_1("CL_DrawMissionAreas"))
			{
				switch (Class570.class280_0.method_30())
				{
				case Class279.Class280.Enum78.const_0:
					if (Information.IsNothing(Client.smethod_50()))
					{
						return;
					}
					try
					{
						foreach (Mission mission_ in Client.smethod_50().method_36(Client.smethod_46()))
						{
							this.method_26(mission_);
						}
						return;
					}
					finally
					{
						IEnumerator<Mission> enumerator;
						if (enumerator != null)
						{
							enumerator.Dispose();
						}
					}
					break;
				case Class279.Class280.Enum78.const_1:
					break;
				case Class279.Class280.Enum78.const_2:
					return;
				default:
					return;
				}
				if (!Information.IsNothing(Client.smethod_30()) && !Information.IsNothing(Client.smethod_50()) && !Information.IsNothing(Client.smethod_30().method_6()) && Client.smethod_50().method_36(Client.smethod_46()).Contains(Client.smethod_30().method_6()))
				{
					this.method_26(Client.smethod_30().method_6());
					return;
				}
			}
		}

		// Token: 0x06005F21 RID: 24353 RVA: 0x0033CBC0 File Offset: 0x0033ADC0
		private void method_26(Mission mission_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawMissionArea") && !Information.IsNothing(mission_0))
			{
				try
				{
					switch (mission_0._MissionClass_0)
					{
					case Mission._MissionClass.Patrol:
					{
						Class343 @class = (Class343)mission_0;
						if (@class.list_5.Count >= 2)
						{
							Color baseColor;
							switch (@class.patrolType_0)
							{
							case GlobalVariables.PatrolType.ASW:
								baseColor = Client.smethod_52().struct27_0.color_6;
								break;
							case GlobalVariables.PatrolType.ASuW_Naval:
							case GlobalVariables.PatrolType.ASuW_Land:
							case GlobalVariables.PatrolType.ASuW_Mixed:
							case GlobalVariables.PatrolType.SEAD:
							case GlobalVariables.PatrolType.SeaControl:
								baseColor = Client.smethod_52().struct27_0.color_3;
								break;
							case GlobalVariables.PatrolType.AAW:
								baseColor = Client.smethod_52().struct27_0.color_1;
								break;
							}
							Class343.Enum107 enum107_ = @class.enum107_0;
							if (enum107_ != Class343.Enum107.const_0)
							{
								if (enum107_ == Class343.Enum107.const_1)
								{
									List<System.Drawing.Point> list = new List<System.Drawing.Point>();
									int num = @class.list_5.Count - 1;
									for (int i = 0; i <= num; i++)
									{
										ReferencePoint referencePoint = @class.list_5[i];
										list.Add(Class2572.smethod_0(this.vmethod_796(), referencePoint.imethod_2(), referencePoint.imethod_0()));
									}
									int num2 = list.Count - 2;
									for (int j = 0; j <= num2; j++)
									{
										this.commandLayer_0.method_27(Color.FromArgb(80, Client.color_0), 5f, list[j], list[j + 1]);
									}
								}
							}
							else
							{
								this.method_27(@class.list_5, Color.FromArgb(80, baseColor));
							}
							Geopoint_Struct geopoint_Struct = Misc.smethod_48(@class.list_5);
							System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
							this.commandLayer_0.method_13(Color.FromArgb(120, baseColor), point.X, point.Y, mission_0.Name, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
							if (@class.list_15.Count >= 2)
							{
								this.method_27(@class.list_15, Color.FromArgb(60, baseColor));
							}
						}
						break;
					}
					case Mission._MissionClass.Support:
					{
						Class344 class2 = (Class344)mission_0;
						if (class2.list_5 != null)
						{
							if (class2.list_5.Count >= 2)
							{
								List<System.Drawing.Point> list2 = new List<System.Drawing.Point>();
								int num3 = class2.list_5.Count - 1;
								for (int k = 0; k <= num3; k++)
								{
									ReferencePoint referencePoint2 = class2.list_5[k];
									list2.Add(Class2572.smethod_0(this.vmethod_796(), referencePoint2.imethod_2(), referencePoint2.imethod_0()));
								}
								int num4 = list2.Count - 2;
								for (int l = 0; l <= num4; l++)
								{
									this.commandLayer_0.method_27(Color.FromArgb(80, Client.color_0), 5f, list2[l], list2[l + 1]);
								}
								Geopoint_Struct geopoint_Struct2 = Misc.smethod_48(class2.list_5);
								System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct2.double_1, geopoint_Struct2.double_0);
								this.commandLayer_0.method_13(Color.FromArgb(120, Client.color_0), point2.X, point2.Y, mission_0.Name, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
							}
						}
						break;
					}
					case Mission._MissionClass.Mining:
					{
						Class340 class3 = (Class340)mission_0;
						if (class3.list_5.Count >= 2)
						{
							Color baseColor2 = Client.smethod_52().struct27_0.color_6;
							this.method_27(class3.list_5, Color.FromArgb(80, baseColor2));
							Geopoint_Struct geopoint_Struct3 = Misc.smethod_48(class3.list_5);
							System.Drawing.Point point3 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct3.double_1, geopoint_Struct3.double_0);
							this.commandLayer_0.method_13(Color.FromArgb(120, baseColor2), point3.X, point3.Y, mission_0.Name, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
						}
						break;
					}
					case Mission._MissionClass.MineClearing:
					{
						Class341 class4 = (Class341)mission_0;
						if (class4.list_5.Count >= 2)
						{
							Color baseColor3 = Client.smethod_52().struct27_0.color_6;
							this.method_27(class4.list_5, Color.FromArgb(80, baseColor3));
							Geopoint_Struct geopoint_Struct4 = Misc.smethod_48(class4.list_5);
							System.Drawing.Point point4 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct4.double_1, geopoint_Struct4.double_0);
							this.commandLayer_0.method_13(Color.FromArgb(120, baseColor3), point4.X, point4.Y, mission_0.Name, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
						}
						break;
					}
					case Mission._MissionClass.Cargo:
					{
						Class338 class5 = (Class338)mission_0;
						if (class5.list_5.Count >= 2)
						{
							Color baseColor4 = Client.smethod_52().struct27_0.color_6;
							this.method_27(class5.list_5, Color.FromArgb(80, baseColor4));
							Geopoint_Struct geopoint_Struct5 = Misc.smethod_48(class5.list_5);
							System.Drawing.Point point5 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct5.double_1, geopoint_Struct5.double_0);
							this.commandLayer_0.method_13(Color.FromArgb(120, baseColor4), point5.X, point5.Y, mission_0.Name, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
						}
						break;
					}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F22 RID: 24354 RVA: 0x0033D178 File Offset: 0x0033B378
		private void method_27(List<ReferencePoint> list_62, Color color_8)
		{
			if (!CommandLayer.smethod_1("CL_DrawPatrolBox"))
			{
				Collection<System.Drawing.Point> collection = new Collection<System.Drawing.Point>();
				try
				{
					foreach (ReferencePoint referencePoint in list_62)
					{
						System.Drawing.Point item = Class2572.smethod_0(this.vmethod_796(), referencePoint.imethod_2(), referencePoint.imethod_0());
						collection.Add(item);
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				collection.Add(collection[0]);
				System.Drawing.Point[] array = new System.Drawing.Point[collection.Count - 1 + 1];
				int count = collection.Count;
				for (int i = 1; i <= count; i++)
				{
					array[i - 1] = collection[i - 1];
				}
				this.commandLayer_0.method_8(array, color_8);
			}
		}

		// Token: 0x06005F23 RID: 24355 RVA: 0x0033D250 File Offset: 0x0033B450
		private void method_28()
		{
			if (!CommandLayer.smethod_1("CL_DrawLOS"))
			{
				try
				{
					if (Class2413.smethod_2().lostool_0 != null && Client.smethod_54() != null && Client.list_2 != null)
					{
						this.bitmap_0 = new Bitmap(this.vmethod_796().Width, this.vmethod_796().Height);
						Graphics graphics_ = Graphics.FromImage(this.bitmap_0);
						try
						{
							foreach (Geopoint_Struct[] geopoint_Struct_ in Client.list_2)
							{
								this.method_29(geopoint_Struct_, 1, Client.color_5, Client.color_5, graphics_);
							}
						}
						finally
						{
							List<Geopoint_Struct[]>.Enumerator enumerator;
							((IDisposable)enumerator).Dispose();
						}
						this.commandLayer_0.method_14(this.bitmap_0, 0, 0, this.bitmap_0.Height, this.bitmap_0.Width);
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F24 RID: 24356 RVA: 0x0033D360 File Offset: 0x0033B560
		private void method_29(Geopoint_Struct[] geopoint_Struct_2, int int_11, Color color_8, Color color_9, Graphics graphics_0)
		{
			if (!CommandLayer.smethod_1("CLX_DrawArea"))
			{
				try
				{
					if (geopoint_Struct_2 != null)
					{
						System.Drawing.Point[] array = new System.Drawing.Point[geopoint_Struct_2.Length + 1];
						int num = geopoint_Struct_2.Length;
						long num2 = (long)(num - 1);
						for (long num3 = 0L; num3 <= num2; num3 += 1L)
						{
							Geopoint_Struct geopoint_Struct = geopoint_Struct_2[(int)num3];
							array[(int)num3] = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
						}
						array[num] = array[0];
						if (!Information.IsNothing(color_8))
						{
							this.graphicsPath_0 = new GraphicsPath();
							this.graphicsPath_0.AddPolygon(array);
							Pen pen_ = new Pen(color_8, (float)int_11);
							this.method_30(pen_, this.graphicsPath_0, graphics_0);
						}
						if (!Information.IsNothing(color_9))
						{
							this.solidBrush_0 = new SolidBrush(color_9);
							graphics_0.FillPolygon(this.solidBrush_0, array);
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
					ex.Data.Add("Error at 2234095898677111", ex.Message);
					GameGeneral.smethod_25(ref ex);
				}
			}
		}

		// Token: 0x06005F25 RID: 24357 RVA: 0x0033D4A4 File Offset: 0x0033B6A4
		private void method_30(Pen pen_2, GraphicsPath graphicsPath_1, Graphics graphics_0)
		{
			checked
			{
				if (!CommandLayer.smethod_1("CLX_DrawPathIfPointsVisible"))
				{
					try
					{
						if (graphicsPath_1.PointCount != 0)
						{
							bool flag = false;
							PointF[] pathPoints = graphicsPath_1.PathPoints;
							int i = 0;
							while (i < pathPoints.Length)
							{
								PointF pointF = pathPoints[i];
								if (!this.method_326(pointF.X, pointF.Y))
								{
									i++;
								}
								else
								{
									flag = true;
									IL_50:
									if (!flag)
									{
										return;
									}
									graphics_0.DrawPath(pen_2, graphicsPath_1);
									return;
								}
							}
							goto IL_50;
						}
					}
					catch (Exception ex)
					{
						if (Debugger.IsAttached)
						{
							Debugger.Break();
						}
					}
				}
			}
		}

		// Token: 0x06005F26 RID: 24358 RVA: 0x0033D53C File Offset: 0x0033B73C
		private void method_31()
		{
			if (!CommandLayer.smethod_1("CL_DrawPlottedCourses") && Class570.class280_0.method_32() != Class279.Class280.Enum75.const_2)
			{
				int num = 255;
				float num2 = 1f;
				if (Client.smethod_54() != null && Client.smethod_54().bool_0)
				{
					ActiveUnit activeUnit = (ActiveUnit)Client.smethod_54();
					if (activeUnit.vmethod_85().method_47() && Class570.class280_0.method_32() != Class279.Class280.Enum75.const_2)
					{
						this.method_32(activeUnit);
					}
					if (activeUnit.vmethod_85().method_49() && Class570.class280_0.method_34() != Class279.Class280.Enum76.const_2)
					{
						this.method_35(activeUnit.vmethod_85().method_7(), Color.FromArgb(255, Color.White), ref this.list_61, ref this.list_59, DashStyle.DashDotDot, DashStyle.Dot);
					}
				}
				if (Class570.class280_0.method_32() == Class279.Class280.Enum75.const_0)
				{
					try
					{
						if (this.list_53.Count > 0)
						{
							for (int i = this.list_53.Count - 1; i >= 0; i += -1)
							{
								Unit unit = this.list_53[i];
								if (unit.bool_0)
								{
									ActiveUnit activeUnit2 = (ActiveUnit)unit;
									if (Client.smethod_77(activeUnit2) && activeUnit2.vmethod_85().method_47())
									{
										Client.smethod_91(ref num2, ref num, activeUnit2);
										if (!Information.IsNothing(activeUnit2.vmethod_7(false)) && (activeUnit2.vmethod_7(false) == Client.smethod_50() || (Client.smethod_50().method_68(activeUnit2.vmethod_7(false)) == Misc.PostureStance.Friendly && Class2572.smethod_6(this.vmethod_796(), activeUnit2))) && (!activeUnit2.method_122() || Client.smethod_52().enum87_0 != Class285.Enum87.const_0))
										{
											this.method_32(activeUnit2);
										}
									}
								}
							}
						}
					}
					catch (Exception ex)
					{
						if (Debugger.IsAttached)
						{
							Debugger.Break();
						}
					}
				}
			}
		}

		// Token: 0x06005F27 RID: 24359 RVA: 0x0033D710 File Offset: 0x0033B910
		public void method_32(ActiveUnit activeUnit_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawPlottedCourse") && !Information.IsNothing(activeUnit_0))
			{
				try
				{
					if (!activeUnit_0.bool_0 || Client.smethod_77(activeUnit_0))
					{
						Waypoint[] array = activeUnit_0.vmethod_85().method_4();
						if (array.Length != 0)
						{
							Color color;
							if (activeUnit_0 == Client.smethod_54())
							{
								color = Color.FromArgb(255, Color.LightGray);
							}
							else
							{
								color = Color.FromArgb(90, Color.LightGray);
							}
							List<System.Drawing.Point> list = new List<System.Drawing.Point>();
							List<Geopoint_Struct> list2 = new List<Geopoint_Struct>();
							Tuple<int, int> tuple = null;
							this.dictionary_2.TryGetValue(activeUnit_0, out tuple);
							if (!Information.IsNothing(tuple))
							{
								int item = tuple.Item1;
								int item2 = tuple.Item2;
								list.Add(new System.Drawing.Point(item, item2));
								list2.Add(new Geopoint_Struct(activeUnit_0.vmethod_28(null), activeUnit_0.vmethod_30(null)));
							}
							else
							{
								list.Add(Class2572.smethod_0(this.vmethod_796(), activeUnit_0.vmethod_30(null), activeUnit_0.vmethod_28(null)));
								list2.Add(new Geopoint_Struct(activeUnit_0.vmethod_28(null), activeUnit_0.vmethod_30(null)));
							}
							int num2;
							bool flag;
							if ((Class570.class280_0.method_34() == Class279.Class280.Enum76.const_0 || (Class570.class280_0.method_34() == Class279.Class280.Enum76.const_1 && Client.smethod_54() == activeUnit_0)) && (activeUnit_0.bool_3 || (activeUnit_0.bool_1 && ((Group)activeUnit_0).method_143() == Group.GroupType.AirGroup)) && !activeUnit_0.method_121() && activeUnit_0.vmethod_85().method_49())
							{
								int num = array.Length - 1;
								for (int i = 0; i <= num; i++)
								{
									Waypoint waypoint = array[i];
									if (waypoint.waypointType_0 != Waypoint.WaypointType.PathfindingPoint)
									{
										num2 = i;
										IL_1C5:
										flag = false;
										goto IL_1D4;
									}
									num2 = i;
								}
								goto IL_1C5;
							}
							num2 = array.Length - 1;
							flag = true;
							IL_1D4:
							int num3 = num2;
							for (int j = 0; j <= num3; j++)
							{
								Waypoint waypoint = array[j];
								if (!Information.IsNothing(waypoint))
								{
									list.Add(Class2572.smethod_0(this.vmethod_796(), waypoint.imethod_2(), waypoint.imethod_0()));
									list2.Add(new Geopoint_Struct(waypoint.imethod_0(), waypoint.imethod_2()));
									this.list_58.Add(waypoint);
								}
							}
							int num4 = list.Count - 2;
							for (int k = 0; k <= num4; k++)
							{
								System.Drawing.Point point = list[k];
								System.Drawing.Point point2 = list[k + 1];
								Waypoint waypoint = array[k];
								if (k > 0 && num2 - 2 - k > 0 && array[k].waypointType_0 == Waypoint.WaypointType.WeaponTarget)
								{
									if (array[k].waypointType_0 == Waypoint.WaypointType.PathfindingPoint)
									{
										this.commandLayer_0.method_25(color, 1f, true, point, list[k + 2]);
									}
									else
									{
										this.commandLayer_0.method_25(color, 1f, false, point, list[k + 2]);
									}
								}
								if ((k <= 0 || num2 < k || array[k - 1].waypointType_0 != Waypoint.WaypointType.WeaponTarget) && k <= list.Count - 2)
								{
									if (array[k].waypointType_0 == Waypoint.WaypointType.PathfindingPoint)
									{
										this.commandLayer_0.method_25(color, 1f, true, point, point2);
										this.commandLayer_0.method_11(color, 1f, list2[k].double_1, list2[k].double_0, list2[k + 1].double_1, list2[k + 1].double_0);
									}
									else
									{
										this.commandLayer_0.method_11(color, 1f, list2[k].double_1, list2[k].double_0, list2[k + 1].double_1, list2[k + 1].double_0);
									}
								}
								if (flag && activeUnit_0 == Client.smethod_54())
								{
									if (!Information.IsNothing(Client.smethod_58()))
									{
										if (waypoint == Client.smethod_58())
										{
											if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_1 && Class570.class280_0.method_34() != Class279.Class280.Enum76.const_2)
											{
												goto IL_7D1;
											}
											switch (Client.smethod_58().waypointType_0)
											{
											case Waypoint.WaypointType.ManualPlottedCourseWaypoint:
											case Waypoint.WaypointType.Assemble:
											case Waypoint.WaypointType.TurningPoint:
											case Waypoint.WaypointType.Split:
											case Waypoint.WaypointType.Formate:
											case Waypoint.WaypointType.LandingMarshal:
											case Waypoint.WaypointType.StrikeIngress:
											case Waypoint.WaypointType.StrikeEgress:
											case Waypoint.WaypointType.Refuel:
											case Waypoint.WaypointType.StationStart_Racetrack:
											case Waypoint.WaypointType.StationStart_FigureEight:
											case Waypoint.WaypointType.StationStart_Area:
											case Waypoint.WaypointType.StationStart_RaceTrackRandom:
											case Waypoint.WaypointType.StationEnd:
											case Waypoint.WaypointType.HoldStart:
											case Waypoint.WaypointType.HoldEnd:
												this.commandLayer_0.method_5(Color.Yellow, 2, point2.X - 3, point2.Y - 3, 6, 6);
												goto IL_7D1;
											case Waypoint.WaypointType.PatrolStation:
											case Waypoint.WaypointType.TerminalPoint:
											case Waypoint.WaypointType.LocalizationRun:
											case Waypoint.WaypointType.PathfindingPoint:
											case Waypoint.WaypointType.TakeOff:
											case Waypoint.WaypointType.Marshal:
											case Waypoint.WaypointType.Land:
											case Waypoint.WaypointType.PickupPoint:
												goto IL_7D1;
											case Waypoint.WaypointType.InitialPoint:
												this.commandLayer_0.method_5(Color.Yellow, 2, point2.X - 4, point2.Y - 4, 8, 8);
												this.commandLayer_0.method_13(Color.Yellow, point2.X + 6, point2.Y - 8, "IP", 0.0, 10, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Verdana");
												goto IL_7D1;
											case Waypoint.WaypointType.Target:
											case Waypoint.WaypointType.WeaponTarget:
											{
												System.Drawing.Point[] path = new System.Drawing.Point[]
												{
													new System.Drawing.Point(point2.X + 4, point2.Y + 4),
													new System.Drawing.Point(point2.X - 4, point2.Y + 4),
													new System.Drawing.Point(point2.X, point2.Y - 4)
												};
												this.commandLayer_0.method_21(Color.Yellow, 2, path, false);
												goto IL_7D1;
											}
											case Waypoint.WaypointType.WeaponLaunch:
												this.commandLayer_0.method_5(Color.Yellow, 2, point2.X - 3, point2.Y - 3, 8, 8);
												this.commandLayer_0.method_13(Color.Yellow, point2.X + 6, point2.Y - 8, "Wpn Lnch", 0.0, 10, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Verdana");
												goto IL_7D1;
											default:
												goto IL_7D1;
											}
										}
									}
									switch (array[k].waypointType_0)
									{
									case Waypoint.WaypointType.ManualPlottedCourseWaypoint:
									case Waypoint.WaypointType.Assemble:
									case Waypoint.WaypointType.TurningPoint:
									case Waypoint.WaypointType.Split:
									case Waypoint.WaypointType.Formate:
									case Waypoint.WaypointType.LandingMarshal:
									case Waypoint.WaypointType.StrikeIngress:
									case Waypoint.WaypointType.StrikeEgress:
									case Waypoint.WaypointType.Refuel:
									case Waypoint.WaypointType.StationStart_Racetrack:
									case Waypoint.WaypointType.StationStart_FigureEight:
									case Waypoint.WaypointType.StationStart_Area:
									case Waypoint.WaypointType.StationStart_RaceTrackRandom:
									case Waypoint.WaypointType.StationEnd:
									case Waypoint.WaypointType.HoldStart:
									case Waypoint.WaypointType.HoldEnd:
										this.commandLayer_0.method_4(color, point2.X - 2, point2.Y - 2, 4, 4);
										break;
									case Waypoint.WaypointType.InitialPoint:
										this.commandLayer_0.method_4(color, point2.X - 4, point2.Y - 4, 8, 8);
										this.commandLayer_0.method_13(color, point2.X + 6, point2.Y - 8, "IP", 0.0, 10, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Verdana");
										break;
									case Waypoint.WaypointType.Target:
									case Waypoint.WaypointType.WeaponTarget:
									{
										System.Drawing.Point[] path2 = new System.Drawing.Point[]
										{
											new System.Drawing.Point(point2.X + 4, point2.Y + 4),
											new System.Drawing.Point(point2.X - 4, point2.Y + 4),
											new System.Drawing.Point(point2.X, point2.Y - 4)
										};
										this.commandLayer_0.method_21(color, 1, path2, true);
										break;
									}
									case Waypoint.WaypointType.WeaponLaunch:
										this.commandLayer_0.method_4(color, point2.X - 4, point2.Y - 4, 8, 8);
										this.commandLayer_0.method_13(color, point2.X + 6, point2.Y - 8, "Wpn Lnch", 0.0, 10, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Verdana");
										break;
									}
								}
								IL_7D1:;
							}
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F28 RID: 24360 RVA: 0x0033DF38 File Offset: 0x0033C138
		public void method_33()
		{
			if (!CommandLayer.smethod_1("CL_DrawSalvoPlottedCourse") && Client.smethod_61() == Client.Enum197.const_23 && !Information.IsNothing(Client.class316_0))
			{
				Color.FromArgb(255, Color.LightGray);
				try
				{
					Contact contact_ = Client.class316_0.contact_0;
					System.Drawing.Point point;
					if (Enumerable.Count<Waypoint>(Client.class316_0.waypoint_0) == 0)
					{
						point = Class2572.smethod_0(this.vmethod_796(), contact_.vmethod_30(null), contact_.vmethod_28(null));
					}
					else
					{
						point = Class2572.smethod_0(this.vmethod_796(), Client.class316_0.waypoint_0[0].imethod_2(), Client.class316_0.waypoint_0[0].imethod_0());
					}
					foreach (Class316.Class273 @class in Client.class316_0.class273_0)
					{
						ActiveUnit activeUnit = Client.smethod_46().vmethod_0()[@class.string_0];
						System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), activeUnit.vmethod_30(null), activeUnit.vmethod_28(null));
						this.commandLayer_0.method_25(Color.White, 1f, true, point2, point);
					}
					if (Enumerable.Count<Waypoint>(Client.class316_0.waypoint_0) > 0)
					{
						List<System.Drawing.Point> list = new List<System.Drawing.Point>();
						foreach (Waypoint waypoint in Client.class316_0.waypoint_0)
						{
							list.Add(Class2572.smethod_0(this.vmethod_796(), waypoint.imethod_2(), waypoint.imethod_0()));
						}
						list.Add(Class2572.smethod_0(this.vmethod_796(), contact_.vmethod_30(null), contact_.vmethod_28(null)));
						this.commandLayer_0.method_26(Color.White, 1f, true, list);
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F29 RID: 24361 RVA: 0x0003D7FC File Offset: 0x0003B9FC
		private void method_34()
		{
			CommandLayer.smethod_1("CL_DrawFlightPlans_Planned");
		}

		// Token: 0x06005F2A RID: 24362 RVA: 0x0033E158 File Offset: 0x0033C358
		public void method_35(Mission.Flight flight_0, Color color_8, ref List<Mission.Flight> list_62, ref List<Waypoint> list_63, DashStyle dashStyle_0, DashStyle dashStyle_1)
		{
			if (!CommandLayer.smethod_1("CL_DrawFlightPlan"))
			{
				try
				{
					if (!Information.IsNothing(list_62))
					{
						this.list_61.Add(flight_0);
					}
					if (Enumerable.Count<Waypoint>(flight_0.method_15()) != 0)
					{
						Pen pen = new Pen(color_8, 1f);
						pen.SetLineCap(LineCap.Round, LineCap.Round, DashCap.Flat);
						bool flag = false;
						bool flag2 = false;
						try
						{
							List<System.Drawing.Point> list = new List<System.Drawing.Point>();
							int num = Enumerable.Count<Waypoint>(flight_0.method_15()) - 1;
							for (int i = 0; i <= num; i++)
							{
								Waypoint waypoint = flight_0.method_15()[i];
								if (!Information.IsNothing(waypoint))
								{
									list.Add(Class2572.smethod_0(this.vmethod_796(), waypoint.imethod_2(), waypoint.imethod_0()));
									list_63.Add(waypoint);
								}
							}
							int num2 = Enumerable.Count<Waypoint>(flight_0.method_15()) - 1;
							for (int j = 0; j <= num2; j++)
							{
								Waypoint waypoint = flight_0.method_15()[j];
								bool flag3;
								if (Class2572.smethod_5(this.vmethod_796(), waypoint.imethod_2(), waypoint.imethod_0()))
								{
									flag3 = true;
									flag = true;
									if (waypoint.waypointType_0 == Waypoint.WaypointType.WeaponLaunch)
									{
										flag2 = true;
									}
								}
								else if (flag2)
								{
									flag3 = true;
									flag = true;
									flag2 = false;
								}
								else if (flag)
								{
									flag3 = true;
									flag = false;
								}
								else
								{
									flag3 = false;
								}
								if (flag3)
								{
									this.graphicsPath_0 = new GraphicsPath();
									if (!Information.IsNothing(waypoint.list_2))
									{
										try
										{
											foreach (Waypoint.Class281 @class in waypoint.list_2)
											{
												this.graphicsPath_0.AddLine(Class2572.smethod_0(this.vmethod_796(), @class.double_0, @class.double_1), Class2572.smethod_0(this.vmethod_796(), @class.double_2, @class.double_3));
											}
										}
										finally
										{
											List<Waypoint.Class281>.Enumerator enumerator;
											((IDisposable)enumerator).Dispose();
										}
									}
									if (this.graphicsPath_0.PointCount > 0 || waypoint.waypointType_0 == Waypoint.WaypointType.TakeOff)
									{
										pen.DashStyle = dashStyle_0;
										if (this.graphicsPath_0.PointCount > 0)
										{
											this.method_21(pen, this.graphicsPath_0);
										}
										this.method_39(color_8, ref pen, ref waypoint, list[j], "");
									}
									if (!Information.IsNothing(waypoint.waypoint_0))
									{
										this.method_38(ref waypoint.waypoint_0, waypoint.enum83_0, color_8, ref pen, "-2", dashStyle_1);
										if (waypoint.enum83_0 == Waypoint.Enum83.const_2)
										{
											list_63.Add(waypoint.waypoint_0);
										}
									}
									if (!Information.IsNothing(waypoint.waypoint_1))
									{
										this.method_38(ref waypoint.waypoint_1, waypoint.enum83_0, color_8, ref pen, "-3", dashStyle_1);
										if (waypoint.enum83_0 == Waypoint.Enum83.const_2)
										{
											list_63.Add(waypoint.waypoint_1);
										}
									}
									if (!Information.IsNothing(waypoint.waypoint_2))
									{
										this.method_38(ref waypoint.waypoint_2, waypoint.enum83_0, color_8, ref pen, "-4", dashStyle_1);
										if (waypoint.enum83_0 == Waypoint.Enum83.const_2)
										{
											list_63.Add(waypoint.waypoint_2);
										}
									}
									if (!Information.IsNothing(waypoint.waypoint_3))
									{
										this.method_38(ref waypoint.waypoint_3, waypoint.enum83_0, color_8, ref pen, "-5", dashStyle_1);
										if (waypoint.enum83_0 == Waypoint.Enum83.const_2)
										{
											list_63.Add(waypoint.waypoint_3);
										}
									}
									if (!Information.IsNothing(waypoint.waypoint_4))
									{
										this.method_38(ref waypoint.waypoint_4, waypoint.enum83_0, color_8, ref pen, "-6", dashStyle_1);
										if (waypoint.enum83_0 == Waypoint.Enum83.const_2)
										{
											list_63.Add(waypoint.waypoint_4);
										}
									}
									if ((waypoint.waypointType_0 == Waypoint.WaypointType.Target || waypoint.waypointType_0 == Waypoint.WaypointType.WeaponTarget) && waypoint.enum105_0 == Mission.Enum105.const_2)
									{
										if (!Information.IsNothing(waypoint.list_9))
										{
											try
											{
												foreach (Mission.Class289 class2 in waypoint.list_9)
												{
													if (!Information.IsNothing(class2.waypoint_0))
													{
														foreach (Waypoint waypoint2 in class2.waypoint_0)
														{
															this.method_36(ref waypoint2, color_8, ref pen);
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator2;
												((IDisposable)enumerator2).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint.list_10))
										{
											try
											{
												foreach (Mission.Class289 class3 in waypoint.list_10)
												{
													if (!Information.IsNothing(class3.waypoint_0))
													{
														foreach (Waypoint waypoint3 in class3.waypoint_0)
														{
															this.method_36(ref waypoint3, color_8, ref pen);
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator3;
												((IDisposable)enumerator3).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint.list_11))
										{
											try
											{
												foreach (Mission.Class289 class4 in waypoint.list_11)
												{
													if (!Information.IsNothing(class4.waypoint_0))
													{
														foreach (Waypoint waypoint4 in class4.waypoint_0)
														{
															this.method_36(ref waypoint4, color_8, ref pen);
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator4;
												((IDisposable)enumerator4).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint.list_12))
										{
											try
											{
												foreach (Mission.Class289 class5 in waypoint.list_12)
												{
													if (!Information.IsNothing(class5.waypoint_0))
													{
														foreach (Waypoint waypoint5 in class5.waypoint_0)
														{
															this.method_36(ref waypoint5, color_8, ref pen);
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator5;
												((IDisposable)enumerator5).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint.list_13))
										{
											try
											{
												foreach (Mission.Class289 class6 in waypoint.list_13)
												{
													if (!Information.IsNothing(class6.waypoint_0))
													{
														foreach (Waypoint waypoint6 in class6.waypoint_0)
														{
															this.method_36(ref waypoint6, color_8, ref pen);
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator6;
												((IDisposable)enumerator6).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint.list_14))
										{
											try
											{
												foreach (Mission.Class289 class7 in waypoint.list_14)
												{
													if (!Information.IsNothing(class7.waypoint_0))
													{
														foreach (Waypoint waypoint7 in class7.waypoint_0)
														{
															this.method_36(ref waypoint7, color_8, ref pen);
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator7;
												((IDisposable)enumerator7).Dispose();
											}
										}
									}
								}
							}
							pen.Dispose();
							if (!Information.IsNothing(this.graphicsPath_0))
							{
								this.graphicsPath_0.Dispose();
							}
						}
						catch (Exception ex)
						{
							ex.Data.Add("Error at 200586", ex.Message);
							GameGeneral.smethod_25(ref ex);
							if (Debugger.IsAttached)
							{
								Debugger.Break();
							}
						}
					}
				}
				catch (Exception ex2)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F2B RID: 24363 RVA: 0x0033E934 File Offset: 0x0033CB34
		public void method_36(ref Waypoint waypoint_0, Color color_8, ref Pen pen_2)
		{
			if (!CommandLayer.smethod_1("CL_DrawWeaponRoute"))
			{
				try
				{
					this.graphicsPath_0 = new GraphicsPath();
					if (!Information.IsNothing(waypoint_0.list_2))
					{
						try
						{
							foreach (Waypoint.Class281 @class in waypoint_0.list_2)
							{
								this.graphicsPath_0.AddLine(Class2572.smethod_0(this.vmethod_796(), @class.double_0, @class.double_1), Class2572.smethod_0(this.vmethod_796(), @class.double_2, @class.double_3));
							}
						}
						finally
						{
							List<Waypoint.Class281>.Enumerator enumerator;
							((IDisposable)enumerator).Dispose();
						}
					}
					if (this.graphicsPath_0.PointCount > 0)
					{
						pen_2.DashStyle = DashStyle.DashDotDot;
						this.method_21(pen_2, this.graphicsPath_0);
						this.method_37(color_8, ref pen_2, ref waypoint_0, Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0()));
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 999999", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F2C RID: 24364 RVA: 0x0033EA70 File Offset: 0x0033CC70
		private void method_37(Color color_8, ref Pen pen_2, ref Waypoint waypoint_0, System.Drawing.Point point_6)
		{
			if (!CommandLayer.smethod_1("CL_DrawWeaponRouteWaypoints"))
			{
				try
				{
					if (!Information.IsNothing(Client.smethod_58()))
					{
						if (waypoint_0 == Client.smethod_58())
						{
							Pen pen = new Pen(Color.Yellow, 2f);
							Waypoint.WaypointType waypointType_ = Client.smethod_58().waypointType_0;
							if (waypointType_ != Waypoint.WaypointType.Target)
							{
								if (waypointType_ != Waypoint.WaypointType.WeaponTarget)
								{
									this.commandLayer_0.method_2(pen.Width, pen.Color, point_6.X, point_6.Y, 7, 7);
									System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
									if (waypoint_0.waypointType_0 != Waypoint.WaypointType.Land)
									{
										new System.Drawing.Font("Verdana", 10f, System.Drawing.FontStyle.Bold);
										new SolidBrush(color_8);
										this.commandLayer_0.method_13(color_8, point.X + 6, point.Y - 8, waypoint_0.string_2, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
										goto IL_3BE;
									}
									goto IL_3BE;
								}
							}
							System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), Client.smethod_58().imethod_2(), Client.smethod_58().imethod_0());
							System.Drawing.Point[] path = new System.Drawing.Point[]
							{
								new System.Drawing.Point(point2.X + 5, point2.Y + 5),
								new System.Drawing.Point(point2.X - 5, point2.Y + 5),
								new System.Drawing.Point(point2.X, point2.Y - 5)
							};
							this.commandLayer_0.method_21(pen.Color, 1, path, true);
							if (waypoint_0.waypointType_0 == Waypoint.WaypointType.Target)
							{
								new System.Drawing.Font("Verdana", 10f, System.Drawing.FontStyle.Bold);
								new SolidBrush(color_8);
								this.commandLayer_0.method_13(color_8, point2.X + 6, point2.Y - 8, waypoint_0.string_2, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
								goto IL_3BE;
							}
							goto IL_3BE;
						}
					}
					Waypoint.WaypointType waypointType_2 = waypoint_0.waypointType_0;
					if (waypointType_2 != Waypoint.WaypointType.Target)
					{
						if (waypointType_2 != Waypoint.WaypointType.WeaponTarget)
						{
							this.commandLayer_0.method_2(1f, color_8, point_6.X, point_6.Y, 8, 8);
							System.Drawing.Point point3 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
							if (waypoint_0.waypointType_0 != Waypoint.WaypointType.Land && waypoint_0.waypointType_0 != Waypoint.WaypointType.TakeOff)
							{
								new System.Drawing.Font("Verdana", 10f, System.Drawing.FontStyle.Bold);
								new SolidBrush(color_8);
								this.commandLayer_0.method_13(color_8, point3.X + 6, point3.Y - 8, waypoint_0.string_2, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
								goto IL_3BE;
							}
							goto IL_3BE;
						}
					}
					System.Drawing.Point point4 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
					System.Drawing.Point[] path2 = new System.Drawing.Point[]
					{
						new System.Drawing.Point(point4.X + 6, point4.Y + 6),
						new System.Drawing.Point(point4.X - 6, point4.Y + 6),
						new System.Drawing.Point(point4.X, point4.Y - 6)
					};
					this.commandLayer_0.method_21(pen_2.Color, 1, path2, true);
					if (waypoint_0.waypointType_0 == Waypoint.WaypointType.Target)
					{
						new System.Drawing.Font("Verdana", 10f, System.Drawing.FontStyle.Bold);
						new SolidBrush(color_8);
						this.commandLayer_0.method_13(color_8, point4.X + 6, point4.Y - 8, waypoint_0.string_2, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
					}
					IL_3BE:;
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 999999", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F2D RID: 24365 RVA: 0x0033EE94 File Offset: 0x0033D094
		public void method_38(ref Waypoint waypoint_0, Waypoint.Enum83 enum83_0, Color color_8, ref Pen pen_2, string string_11, DashStyle dashStyle_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawFlightPlan"))
			{
				try
				{
					this.graphicsPath_0 = new GraphicsPath();
					if (!Information.IsNothing(waypoint_0.list_2))
					{
						try
						{
							foreach (Waypoint.Class281 @class in waypoint_0.list_2)
							{
								this.graphicsPath_0.AddLine(Class2572.smethod_0(this.vmethod_796(), @class.double_0, @class.double_1), Class2572.smethod_0(this.vmethod_796(), @class.double_2, @class.double_3));
							}
						}
						finally
						{
							List<Waypoint.Class281>.Enumerator enumerator;
							((IDisposable)enumerator).Dispose();
						}
					}
					if (this.graphicsPath_0.PointCount > 0)
					{
						pen_2.DashStyle = dashStyle_0;
						this.method_21(pen_2, this.graphicsPath_0);
						if (enum83_0 == Waypoint.Enum83.const_2)
						{
							this.method_39(color_8, ref pen_2, ref waypoint_0, Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0()), string_11);
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200602", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F2E RID: 24366 RVA: 0x0033EFDC File Offset: 0x0033D1DC
		private void method_39(Color color_8, ref Pen pen_2, ref Waypoint waypoint_0, System.Drawing.Point point_6, string string_11)
		{
			if (!CommandLayer.smethod_1("CLX_DrawFlightPlanWaypoints"))
			{
				try
				{
					if (!Information.IsNothing(Client.smethod_58()))
					{
						if (waypoint_0 == Client.smethod_58())
						{
							Pen pen = new Pen(Color.Yellow, 2f);
							switch (Client.smethod_58().waypointType_0)
							{
							case Waypoint.WaypointType.ManualPlottedCourseWaypoint:
							case Waypoint.WaypointType.PatrolStation:
							case Waypoint.WaypointType.Assemble:
							case Waypoint.WaypointType.TurningPoint:
							case Waypoint.WaypointType.Split:
							case Waypoint.WaypointType.Formate:
							case Waypoint.WaypointType.LandingMarshal:
							case Waypoint.WaypointType.StrikeIngress:
							case Waypoint.WaypointType.StrikeEgress:
							case Waypoint.WaypointType.Refuel:
							case Waypoint.WaypointType.TakeOff:
							case Waypoint.WaypointType.Land:
							case Waypoint.WaypointType.StationStart_Racetrack:
							case Waypoint.WaypointType.StationStart_FigureEight:
							case Waypoint.WaypointType.StationStart_Area:
							case Waypoint.WaypointType.StationStart_RaceTrackRandom:
							case Waypoint.WaypointType.StationEnd:
							case Waypoint.WaypointType.HoldStart:
							case Waypoint.WaypointType.HoldEnd:
							{
								this.commandLayer_0.method_2(pen.Width, pen.Color, point_6.X, point_6.Y, 7, 7);
								System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
								if (waypoint_0.waypointType_0 != Waypoint.WaypointType.Land)
								{
									this.commandLayer_0.method_13(color_8, point.X + 6, point.Y - 8, waypoint_0.string_2 + string_11, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
									goto IL_668;
								}
								goto IL_668;
							}
							case Waypoint.WaypointType.TerminalPoint:
							case Waypoint.WaypointType.LocalizationRun:
							case Waypoint.WaypointType.PathfindingPoint:
							case Waypoint.WaypointType.Marshal:
							case Waypoint.WaypointType.PickupPoint:
								goto IL_668;
							case Waypoint.WaypointType.InitialPoint:
							{
								this.commandLayer_0.method_4(color_8, point_6.X - 3, point_6.Y - 3, 7, 7);
								System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
								this.commandLayer_0.method_13(color_8, point2.X + 6, point2.Y - 8, waypoint_0.string_2 + string_11 + ": IP", 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
								goto IL_668;
							}
							case Waypoint.WaypointType.Target:
							case Waypoint.WaypointType.WeaponTarget:
							{
								System.Drawing.Point point3 = Class2572.smethod_0(this.vmethod_796(), Client.smethod_58().imethod_2(), Client.smethod_58().imethod_0());
								System.Drawing.Point[] path = new System.Drawing.Point[]
								{
									new System.Drawing.Point(point3.X + 5, point3.Y + 5),
									new System.Drawing.Point(point3.X - 5, point3.Y + 5),
									new System.Drawing.Point(point3.X, point3.Y - 5)
								};
								this.commandLayer_0.method_21(pen.Color, 2, path, true);
								if (waypoint_0.waypointType_0 == Waypoint.WaypointType.Target)
								{
									this.commandLayer_0.method_13(color_8, point3.X + 6, point3.Y - 8, waypoint_0.string_2 + string_11, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
									goto IL_668;
								}
								goto IL_668;
							}
							case Waypoint.WaypointType.WeaponLaunch:
							{
								this.commandLayer_0.method_4(color_8, point_6.X - 3, point_6.Y - 3, 7, 7);
								System.Drawing.Point point4 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
								this.commandLayer_0.method_13(color_8, point4.X + 6, point4.Y - 8, waypoint_0.string_2 + string_11 + ": Wpn Lnch", 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
								goto IL_668;
							}
							default:
								goto IL_668;
							}
						}
					}
					switch (waypoint_0.waypointType_0)
					{
					case Waypoint.WaypointType.ManualPlottedCourseWaypoint:
					case Waypoint.WaypointType.PatrolStation:
					case Waypoint.WaypointType.Assemble:
					case Waypoint.WaypointType.TurningPoint:
					case Waypoint.WaypointType.Split:
					case Waypoint.WaypointType.Formate:
					case Waypoint.WaypointType.LandingMarshal:
					case Waypoint.WaypointType.StrikeIngress:
					case Waypoint.WaypointType.StrikeEgress:
					case Waypoint.WaypointType.Refuel:
					case Waypoint.WaypointType.TakeOff:
					case Waypoint.WaypointType.Land:
					case Waypoint.WaypointType.StationStart_Racetrack:
					case Waypoint.WaypointType.StationStart_FigureEight:
					case Waypoint.WaypointType.StationStart_Area:
					case Waypoint.WaypointType.StationStart_RaceTrackRandom:
					case Waypoint.WaypointType.StationEnd:
					case Waypoint.WaypointType.HoldStart:
					case Waypoint.WaypointType.HoldEnd:
					{
						this.commandLayer_0.method_2(1f, color_8, point_6.X, point_6.Y, 8, 8);
						System.Drawing.Point point5 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
						if (waypoint_0.waypointType_0 != Waypoint.WaypointType.Land && waypoint_0.waypointType_0 != Waypoint.WaypointType.TakeOff)
						{
							this.commandLayer_0.method_13(color_8, point5.X + 6, point5.Y - 8, waypoint_0.string_2 + string_11, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
						}
						break;
					}
					case Waypoint.WaypointType.InitialPoint:
					{
						this.commandLayer_0.method_4(color_8, point_6.X - 4, point_6.Y - 4, 8, 8);
						System.Drawing.Point point6 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
						this.commandLayer_0.method_13(color_8, point6.X + 6, point6.Y - 8, waypoint_0.string_2 + string_11 + ": IP", 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
						break;
					}
					case Waypoint.WaypointType.Target:
					case Waypoint.WaypointType.WeaponTarget:
					{
						System.Drawing.Point point7 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
						System.Drawing.Point[] path2 = new System.Drawing.Point[]
						{
							new System.Drawing.Point(point7.X + 6, point7.Y + 6),
							new System.Drawing.Point(point7.X - 6, point7.Y + 6),
							new System.Drawing.Point(point7.X, point7.Y - 6)
						};
						this.commandLayer_0.method_21(pen_2.Color, 1, path2, true);
						if (waypoint_0.waypointType_0 == Waypoint.WaypointType.Target)
						{
							this.commandLayer_0.method_13(color_8, point7.X + 6, point7.Y - 8, waypoint_0.string_2 + string_11, 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
						}
						break;
					}
					case Waypoint.WaypointType.WeaponLaunch:
					{
						this.commandLayer_0.method_4(color_8, point_6.X - 4, point_6.Y - 4, 8, 8);
						System.Drawing.Point point8 = Class2572.smethod_0(this.vmethod_796(), waypoint_0.imethod_2(), waypoint_0.imethod_0());
						this.commandLayer_0.method_13(color_8, point8.X + 6, point8.Y - 8, waypoint_0.string_2 + string_11 + ": Wpn Lnch", 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
						break;
					}
					}
					IL_668:;
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200603", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F2F RID: 24367 RVA: 0x0033F6AC File Offset: 0x0033D8AC
		private void method_40()
		{
			if (!CommandLayer.smethod_1("CL_DrawEventBalloons"))
			{
				object obj = this.list_49;
				List<Class2449> list;
				lock (obj)
				{
					list = Enumerable.ToList<Class2449>(this.list_49);
				}
				DateTime now = DateTime.Now;
				try
				{
					foreach (Class2449 @class in list)
					{
						@class.double_2 -= (DateTime.Now - this.dateTime_0).TotalSeconds;
						Rectangle rectangle = this.commandLayer_0.method_12(Color.White, 20, 20, @class.string_1, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
						int num = 15;
						@class.int_4 = rectangle.Height + 30;
						@class.int_5 = rectangle.Width + 30;
						System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), @class.double_0, @class.double_1);
						int x = point.X;
						double y = (double)point.Y;
						double num2 = @class.double_7 * Math.Cos(@class.double_8);
						double num3 = @class.double_7 * Math.Sin(@class.double_8);
						double num4 = (double)@class.int_5 / 2.0;
						double num5 = (double)@class.int_4 / 2.0;
						double num6 = (double)x - num4 - num2;
						double num7 = y - num5 - num3;
						@class.int_0 = (int)Math.Round(num6);
						@class.int_1 = (int)Math.Round(num7);
						double num8 = num6 + num4;
						double num9 = num7 + num5;
						double num10 = Math.Min(num8, num8 + num2);
						double num11 = Math.Min(num9, num9 + num3);
						if (num2 < 0.0)
						{
							if (num3 < 0.0)
							{
								@class.double_3 = 0.0;
								@class.double_5 = 0.0;
								@class.double_4 = num2;
								@class.double_6 = num3;
								@class.int_2 = (int)Math.Round(num10 - num2);
								@class.int_3 = (int)Math.Round(num11 - num3);
							}
							else
							{
								@class.double_3 = num2;
								@class.double_5 = num3;
								@class.double_4 = 0.0;
								@class.double_6 = 0.0;
								@class.int_2 = (int)Math.Round(num10 - num2);
								@class.int_3 = (int)Math.Round(num11);
							}
						}
						else if (num3 < 0.0)
						{
							@class.double_3 = 0.0;
							@class.double_5 = 0.0;
							@class.double_4 = num2;
							@class.double_6 = num3;
							@class.int_2 = (int)Math.Round(num10);
							@class.int_3 = (int)Math.Round(num11 - num3);
						}
						else
						{
							@class.double_3 = 0.0;
							@class.double_5 = 0.0;
							@class.double_4 = num2;
							@class.double_6 = num3;
							@class.int_2 = (int)Math.Round(num10);
							@class.int_3 = (int)Math.Round(num11);
						}
						int num12 = (int)Math.Round(@class.double_2 * 255.0);
						if (num12 > 255)
						{
							num12 = 255;
						}
						else if (num12 < 0)
						{
							num12 = 0;
						}
						int num13 = @class.int_0;
						int num14 = @class.int_1;
						int num15 = num;
						int width = rectangle.Width;
						int height = rectangle.Height;
						Color color = Color.FromArgb(num12, Color.Black);
						Color color2 = Color.FromArgb(num12, Color.Gray);
						this.commandLayer_0.method_24(Color.FromArgb(num12, Color.White), (int)Math.Round(@class.double_3 + (double)@class.int_2), (int)Math.Round(@class.double_5 + (double)@class.int_3), (int)Math.Round(@class.double_4 + (double)@class.int_2), (int)Math.Round(@class.double_6 + (double)@class.int_3));
						this.commandLayer_0.method_3(color, color2, num13 + num15 + width, num14 + num15, num15 * 2, num15 * 2);
						this.commandLayer_0.method_3(color, color2, num13 + num15 + width, num14 + num15 + height, num15 * 2, num15 * 2);
						this.commandLayer_0.method_3(color, color2, num13 + num15, num14 + num15, num15 * 2, num15 * 2);
						this.commandLayer_0.method_3(color, color2, num13 + num15, num14 + num15 + height, num15 * 2, num15 * 2);
						this.commandLayer_0.method_6(color, color, num13 + num15, num14, height + num15 * 2, width);
						this.commandLayer_0.method_6(color, color, num13, num14 + num15, height, width + num15 * 2);
						this.commandLayer_0.method_28(color2, 2f, (float)num13, (float)(num14 + num15), (float)num13, (float)(num14 + num15 + height));
						this.commandLayer_0.method_28(color2, 2f, (float)(num13 + width + num15 * 2), (float)(num14 + num15), (float)(num13 + width + num15 * 2), (float)(num14 + num15 + height));
						this.commandLayer_0.method_28(color2, 2f, (float)(num13 + num15), (float)num14, (float)(num13 + num15 + width), (float)num14);
						this.commandLayer_0.method_28(color2, 2f, (float)(num13 + num15), (float)(num14 + height + num15 * 2), (float)(num13 + num15 + width), (float)(num14 + height + num15 * 2));
						Color color3 = @class.color_0;
						this.commandLayer_0.method_13(Color.FromArgb(num12, (int)color3.R, (int)color3.G, (int)color3.B), @class.int_0 + num, @class.int_1 + num, @class.string_1, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
					}
				}
				finally
				{
					List<Class2449>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				foreach (Class2449 class2 in this.list_49.ToArray())
				{
					if (class2.double_2 < 0.0)
					{
						this.list_49.Remove(class2);
					}
				}
				this.dateTime_0 = now;
			}
		}

		// Token: 0x06005F30 RID: 24368 RVA: 0x0033FD58 File Offset: 0x0033DF58
		private void method_41()
		{
			if (!CommandLayer.smethod_1("CL_DrawStatusCaption"))
			{
				try
				{
					Color color = Color.FromArgb(128, 0, 0, 0);
					int num = 0;
					if (this.bool_0)
					{
						Rectangle rectangle = this.commandLayer_0.method_12(Color.White, 20, 20, this.string_0, 0.0, 30, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
						this.commandLayer_0.method_6(color, color, 1, 1, rectangle.Height + 4, rectangle.Width + 4);
						this.commandLayer_0.method_13(Color.White, 3, 3, this.string_0, 0.0, rectangle.Height, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
						num = num + rectangle.Height + 4;
						this.int_0 = rectangle.Y + rectangle.Height;
					}
					if (this.bool_1)
					{
						Rectangle rectangle2 = this.commandLayer_0.method_12(Color.White, 20, 20, this.string_1, 0.0, 30, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
						int num2 = 1 + num;
						this.commandLayer_0.method_6(color, color, 1, num2, rectangle2.Height + 4, rectangle2.Width + 4);
						this.commandLayer_0.method_13(Color.White, 3, num2 + 2, this.string_1, 0.0, rectangle2.Height, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
						this.int_0 = rectangle2.Y + rectangle2.Height;
					}
				}
				catch (Exception ex)
				{
					DarkMessageBox.smethod_2(ex.Message, "CL Error", Enum11.const_0);
					if (ex.InnerException != null)
					{
						DarkMessageBox.smethod_2(ex.InnerException.Message, "CL Inner Error", Enum11.const_0);
					}
				}
			}
		}

		// Token: 0x06005F31 RID: 24369 RVA: 0x0033FF4C File Offset: 0x0033E14C
		private void method_42()
		{
			if (!CommandLayer.smethod_1("CL_DrawSelectedUnitsText"))
			{
				try
				{
					if (Client.smethod_50() != null && Enumerable.Count<Unit>(Enumerable.Where<Unit>(Client.smethod_50().method_56(), (MainForm._Closure$__.$I105-0 == null) ? (MainForm._Closure$__.$I105-0 = new Func<Unit, bool>(MainForm._Closure$__.$I.method_4)) : MainForm._Closure$__.$I105-0)) > 0)
					{
						int num = this.int_0 + 5;
						int num2 = 20;
						this.commandLayer_0.method_13(Color.White, 10, num, "Selected:", 0.0, 20, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
						num += 21;
						this.list_50.Clear();
						try
						{
							foreach (Unit unit in Client.smethod_50().method_56())
							{
								if (unit.bool_0)
								{
									if (unit.bool_1)
									{
										try
										{
											foreach (ActiveUnit item in ((Group)unit).vmethod_141().Values)
											{
												this.list_50.Add(item);
											}
											continue;
										}
										finally
										{
											IEnumerator<ActiveUnit> enumerator2;
											if (enumerator2 != null)
											{
												enumerator2.Dispose();
											}
										}
									}
									this.list_50.Add((ActiveUnit)unit);
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
						List<IGrouping<string, ActiveUnit>> list = Enumerable.ToList<IGrouping<string, ActiveUnit>>(Enumerable.GroupBy<ActiveUnit, string>(this.list_50, (MainForm._Closure$__.$I105-1 == null) ? (MainForm._Closure$__.$I105-1 = new Func<ActiveUnit, string>(MainForm._Closure$__.$I.method_5)) : MainForm._Closure$__.$I105-1));
						try
						{
							foreach (IGrouping<string, ActiveUnit> grouping in list)
							{
								this.commandLayer_0.method_13(Color.White, 10, num, Conversions.ToString(Enumerable.Count<ActiveUnit>(grouping)) + "x " + Enumerable.ElementAtOrDefault<ActiveUnit>(grouping, 0).string_2, 0.0, num2, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
								num += num2 + 1;
							}
						}
						finally
						{
							List<IGrouping<string, ActiveUnit>>.Enumerator enumerator3;
							((IDisposable)enumerator3).Dispose();
						}
					}
				}
				catch (Exception ex)
				{
					DarkMessageBox.smethod_2(ex.Message, "CL Error", Enum11.const_0);
					if (ex.InnerException != null)
					{
						DarkMessageBox.smethod_2(ex.InnerException.Message, "CL Inner Error", Enum11.const_0);
					}
				}
			}
		}

		// Token: 0x06005F32 RID: 24370 RVA: 0x003401F4 File Offset: 0x0033E3F4
		private void method_43()
		{
			if (!CommandLayer.smethod_1("CL_DrawDataCursor"))
			{
				try
				{
					int num = Class134.smethod_0();
					switch (Class570.class280_0.method_24())
					{
					case Class279.Class280.Enum72.const_0:
					{
						int num2 = this.int_1 + 10;
						int num3 = this.int_2 + 20;
						int num4 = 5;
						int num5 = 15;
						if (num < 10)
						{
							this.commandLayer_0.method_13(Color.White, num2 + num4, num3 + num4, this.string_2, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
							num3 += num5;
							this.commandLayer_0.method_13(Color.White, num2 + num4, num3 + num4, this.string_3, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
							num3 += num5;
							this.commandLayer_0.method_13(Color.White, num2 + num4, num3 + num4, this.string_4, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
							num3 += num5;
							this.commandLayer_0.method_13(Color.White, num2 + num4, num3 + num4, this.string_5, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
						}
						else
						{
							this.stringBuilder_0.Clear();
							this.stringBuilder_0.Append(this.string_2).Append("\r\n").Append(this.string_3).Append("\r\n").Append(this.string_4).Append("\r\n").Append(this.string_5);
							this.commandLayer_0.method_13(Color.White, num2 + num4, num3 + num4, this.stringBuilder_0.ToString(), 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
						}
						break;
					}
					case Class279.Class280.Enum72.const_1:
					{
						int num6 = this.int_3 + 10;
						int num7 = 15;
						int num8 = this.vmethod_796().Height - 10 - 60;
						int num9 = 0;
						if (num < 10)
						{
							this.commandLayer_0.method_13(Color.White, num6 + num9, num8 + num9, this.string_2, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
							num8 += num7;
							this.commandLayer_0.method_13(Color.White, num6 + num9, num8 + num9, this.string_3, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
							num8 += num7;
							this.commandLayer_0.method_13(Color.White, num6 + num9, num8 + num9, this.string_4, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
							num8 += num7;
							this.commandLayer_0.method_13(Color.White, num6 + num9, num8 + num9, this.string_5, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
						}
						else
						{
							this.stringBuilder_0.Clear();
							this.stringBuilder_0.Append(this.string_2).Append("\r\n").Append(this.string_3).Append("\r\n").Append(this.string_4).Append("\r\n").Append(this.string_5);
							this.commandLayer_0.method_13(Color.White, num6 + num9, num8 + num9, this.stringBuilder_0.ToString(), 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
						}
						break;
					}
					}
				}
				catch (Exception ex)
				{
					DarkMessageBox.smethod_2(ex.Message, "CL Error", Enum11.const_0);
					if (ex.InnerException != null)
					{
						DarkMessageBox.smethod_2(ex.InnerException.Message, "CL Inner Error", Enum11.const_0);
					}
				}
			}
		}

		// Token: 0x06005F33 RID: 24371 RVA: 0x00340600 File Offset: 0x0033E800
		private void method_44()
		{
			if (!CommandLayer.smethod_1("CL_DrawMeasuringLine"))
			{
				try
				{
					if (Client.smethod_61() == Client.Enum197.const_1 && !this.geopoint_Struct_1.method_0())
					{
						this.graphicsPath_0 = new GraphicsPath();
						this.pen_1 = new Pen(Color.White, 1f);
						GeoPoint geoPoint = Class2572.smethod_1(this.vmethod_796(), this.point_0.X, this.point_0.Y);
						if (!double.IsNaN(geoPoint.imethod_2()) && !double.IsNaN(geoPoint.imethod_0()))
						{
							Math2.smethod_15(this.geopoint_Struct_1.double_1, this.geopoint_Struct_1.double_0, geoPoint.imethod_2(), geoPoint.imethod_0());
							this.graphicsPath_0.AddLine(Class2572.smethod_0(this.vmethod_796(), this.geopoint_Struct_1.double_1, this.geopoint_Struct_1.double_0), this.point_0);
							this.method_21(this.pen_1, this.graphicsPath_0);
							float num = Math2.smethod_15(this.geopoint_Struct_1.double_1, this.geopoint_Struct_1.double_0, geoPoint.imethod_2(), geoPoint.imethod_0());
							float num2 = Math2.smethod_17(this.geopoint_Struct_1.double_1, this.geopoint_Struct_1.double_0, geoPoint.imethod_2(), geoPoint.imethod_0());
							string text;
							if (num < 1f)
							{
								text = string.Concat(new string[]
								{
									string.Format("{0:0.0}", num, 5),
									"nm (",
									Conversions.ToString((int)Math.Round((double)(num * 1852f))),
									"m) - ",
									string.Format("{0:0.0}", num2, 2),
									"deg"
								});
							}
							else
							{
								text = string.Format("{0:0.0}", num, 2) + "nm - " + string.Format("{0:0.0}", num2, 2) + "deg";
							}
							this.commandLayer_0.method_13(Color.White, this.point_0.X + 10, this.point_0.Y - 5, text, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
							this.pen_1.Dispose();
							this.graphicsPath_0.Dispose();
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F34 RID: 24372 RVA: 0x003408A0 File Offset: 0x0033EAA0
		private void method_45()
		{
			if (!CommandLayer.smethod_1("CL_DrawEventEditorAreas"))
			{
				try
				{
					if (Class2413.smethod_2().method_23().Visible || Class2413.smethod_2().method_34().Visible || Class2413.smethod_2().method_36().Visible || Class2413.smethod_2().method_32().Visible)
					{
						try
						{
							foreach (Command_Core.EventTrigger eventTrigger in Client.smethod_46().vmethod_4().Values)
							{
								Command_Core.EventTrigger.EventTriggerType eventTriggerType_ = eventTrigger.eventTriggerType_0;
								if (eventTriggerType_ != Command_Core.EventTrigger.EventTriggerType.UnitRemainsInArea)
								{
									if (eventTriggerType_ == Command_Core.EventTrigger.EventTriggerType.UnitEntersArea)
									{
										Geopoint_Struct[] array = new Geopoint_Struct[((Class332)eventTrigger).list_0.Count - 1 + 1];
										int num = ((Class332)eventTrigger).list_0.Count - 1;
										this.int_6 = 0;
										while (this.int_6 <= num)
										{
											array[this.int_6] = new Geopoint_Struct(((Class332)eventTrigger).list_0[this.int_6].imethod_0(), ((Class332)eventTrigger).list_0[this.int_6].imethod_2());
											this.int_6++;
										}
										this.commandLayer_0.method_1(array, 1, Color.HotPink, Color.HotPink, 50);
									}
								}
								else
								{
									Geopoint_Struct[] array2 = new Geopoint_Struct[((Class333)eventTrigger).list_0.Count - 1 + 1];
									int num2 = ((Class333)eventTrigger).list_0.Count - 1;
									this.int_6 = 0;
									while (this.int_6 <= num2)
									{
										array2[this.int_6] = new Geopoint_Struct(((Class333)eventTrigger).list_0[this.int_6].imethod_0(), ((Class333)eventTrigger).list_0[this.int_6].imethod_2());
										this.int_6++;
									}
									this.commandLayer_0.method_1(array2, 1, Color.HotPink, Color.HotPink, 50);
								}
							}
						}
						finally
						{
							IEnumerator<Command_Core.EventTrigger> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
						try
						{
							foreach (EventAction eventAction in Client.smethod_46().vmethod_8().Values)
							{
								EventAction.EventActionType eventActionType_ = eventAction.eventActionType_0;
								if (eventActionType_ == EventAction.EventActionType.TeleportInArea)
								{
									Geopoint_Struct[] array3 = new Geopoint_Struct[((EventAction_TeleportInArea)eventAction).list_0.Count - 1 + 1];
									int num3 = ((EventAction_TeleportInArea)eventAction).list_0.Count - 1;
									this.int_6 = 0;
									while (this.int_6 <= num3)
									{
										array3[this.int_6] = new Geopoint_Struct(((EventAction_TeleportInArea)eventAction).list_0[this.int_6].imethod_0(), ((EventAction_TeleportInArea)eventAction).list_0[this.int_6].imethod_2());
										this.int_6++;
									}
									this.commandLayer_0.method_1(array3, 1, Color.HotPink, Color.HotPink, 50);
								}
							}
						}
						finally
						{
							IEnumerator<EventAction> enumerator2;
							if (enumerator2 != null)
							{
								enumerator2.Dispose();
							}
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F35 RID: 24373 RVA: 0x00340C28 File Offset: 0x0033EE28
		private void method_46()
		{
			if (!CommandLayer.smethod_1("CL_DrawWaterSplashes"))
			{
				try
				{
					int count = Client.smethod_46().vmethod_16().Count;
					int num = (int)((short)(count - 1));
					this.int_6 = num;
					while (this.int_6 >= 0)
					{
						WaterSplash waterSplash = Client.smethod_46().vmethod_16()[this.int_6];
						float num2 = waterSplash.float_10 / 10f;
						Color color = Color.FromArgb((int)((short)Math.Round(63.0 + 192.0 * (1.0 - ((double)waterSplash.float_10 + 1E-07) / (double)waterSplash.float_9))), Color.White);
						WorldWindow worldWindow = this.vmethod_796();
						double num3 = waterSplash.vmethod_30(null);
						double num4 = waterSplash.vmethod_28(null);
						double num5;
						double num6;
						Class411.smethod_1(num4, num3, ref num5, ref num6, (double)num2, 0.0);
						System.Drawing.Point point = Class2572.smethod_0(worldWindow, num3, num4);
						short num7 = (short)Math.Abs(Class2572.smethod_0(worldWindow, num6, num5).Y - point.Y);
						if (num7 >= 2)
						{
							this.commandLayer_0.method_3(color, color, point.X, point.Y, (int)(num7 * 2), (int)(num7 * 2));
						}
						this.int_6 += -1;
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				if (Information.IsNothing(Client.smethod_46().vmethod_16()))
				{
					Client.smethod_46().vmethod_17(new List<WaterSplash>());
				}
			}
		}

		// Token: 0x06005F36 RID: 24374 RVA: 0x00340DE0 File Offset: 0x0033EFE0
		private void method_47()
		{
			if (!CommandLayer.smethod_1("CL_DrawGroundImpacts"))
			{
				try
				{
					if (Information.IsNothing(Client.smethod_46().vmethod_18()))
					{
						Client.smethod_46().vmethod_19(new List<GroundImpact>());
					}
					int count = Client.smethod_46().vmethod_18().Count;
					List<System.Drawing.Point> list = new List<System.Drawing.Point>();
					int num = (int)((short)(count - 1));
					this.int_6 = num;
					while (this.int_6 >= 0)
					{
						GroundImpact groundImpact = Client.smethod_46().vmethod_18()[this.int_6];
						float num2 = (float)Math.Max(0.008099352051835854, (double)groundImpact.float_10);
						short alpha = (short)Math.Round(63.0 + 192.0 * (1.0 - ((double)groundImpact.float_10 + 1E-07) / (double)groundImpact.float_9));
						Color color;
						if (groundImpact.bool_12)
						{
							color = Color.FromArgb((int)alpha, Color.Yellow);
						}
						else
						{
							color = Color.FromArgb((int)alpha, Color.SaddleBrown);
						}
						WorldWindow worldWindow = this.vmethod_796();
						double num3 = groundImpact.vmethod_30(null);
						double num4 = groundImpact.vmethod_28(null);
						double num5;
						double num6;
						Class411.smethod_1(num4, num3, ref num5, ref num6, (double)num2, 0.0);
						System.Drawing.Point item = Class2572.smethod_0(worldWindow, num3, num4);
						short num7 = (short)Math.Abs(Class2572.smethod_0(worldWindow, num6, num5).Y - item.Y);
						if (num7 >= 2)
						{
							this.commandLayer_0.method_3(color, color, item.X, item.Y, (int)(num7 * 2), (int)(num7 * 2));
							list.Add(item);
						}
						this.int_6 += -1;
					}
					try
					{
						foreach (System.Drawing.Point point in list)
						{
							Color color2 = Color.FromArgb(255, Color.OrangeRed);
							this.commandLayer_0.method_3(color2, color2, point.X - 2, point.Y - 2, 4, 4);
						}
					}
					finally
					{
						List<System.Drawing.Point>.Enumerator enumerator;
						((IDisposable)enumerator).Dispose();
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F37 RID: 24375 RVA: 0x00341048 File Offset: 0x0033F248
		private void method_48()
		{
			if (!CommandLayer.smethod_1("CL_DrawMineSweep"))
			{
				try
				{
					try
					{
						foreach (Unit unit in this.list_53)
						{
							if (unit.bool_0)
							{
								ActiveUnit activeUnit = (ActiveUnit)unit;
								try
								{
									foreach (Sensor sensor in activeUnit.vmethod_95())
									{
										Geopoint_Struct[] array = sensor.method_60();
										if (!Information.IsNothing(array))
										{
											System.Drawing.Point[] array2 = new System.Drawing.Point[Enumerable.Count<Geopoint_Struct>(array) + 1];
											long num = (long)(Enumerable.Count<Geopoint_Struct>(array) - 1);
											for (long num2 = 0L; num2 <= num; num2 += 1L)
											{
												Geopoint_Struct geopoint_Struct = array[(int)num2];
												array2[(int)num2] = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
											}
											array2[Enumerable.Count<Geopoint_Struct>(array)] = array2[0];
											this.commandLayer_0.method_8(array2, Color.FromArgb(50, Color.DodgerBlue));
										}
									}
								}
								finally
								{
									List<Sensor>.Enumerator enumerator2;
									((IDisposable)enumerator2).Dispose();
								}
							}
						}
					}
					finally
					{
						List<Unit>.Enumerator enumerator;
						((IDisposable)enumerator).Dispose();
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F38 RID: 24376 RVA: 0x003411F8 File Offset: 0x0033F3F8
		public void method_49()
		{
			if (!CommandLayer.smethod_1("CL_DrawSelectedMountArcs") && !Information.IsNothing(Client.mount_0))
			{
				try
				{
					ActiveUnit activeUnit = Client.mount_0.method_18();
					if (!Information.IsNothing(activeUnit))
					{
						if (this.method_329(5f))
						{
							Color color_ = Color.FromArgb(32, Color.White);
							Geopoint_Struct geopoint_Struct_ = new Geopoint_Struct(activeUnit.vmethod_28(null), activeUnit.vmethod_30(null));
							if (Client.mount_0.class295_0.method_1())
							{
								float float_ = 5f;
								byte b = 1;
								bool flag = true;
								bool flag2 = true;
								this.method_9(ref geopoint_Struct_, float_, ref color_, ref b, ref flag, ref flag2);
							}
							else
							{
								List<RangeSymbol> list = this.method_327(geopoint_Struct_, Client.mount_0, 5f);
								try
								{
									foreach (RangeSymbol rangeSymbol in list)
									{
										this.method_7(geopoint_Struct_, activeUnit.vmethod_9(), 5f, rangeSymbol.float_0, rangeSymbol.float_1, color_, 1, true, true);
									}
								}
								finally
								{
									List<RangeSymbol>.Enumerator enumerator;
									((IDisposable)enumerator).Dispose();
								}
							}
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F39 RID: 24377 RVA: 0x0034134C File Offset: 0x0033F54C
		private void method_50()
		{
			if (!CommandLayer.smethod_1("CL_DrawOrbitPath") && !Information.IsNothing(Client.smethod_54()))
			{
				try
				{
					Satellite satellite;
					if (Client.smethod_54().method_1())
					{
						satellite = (Satellite)Client.smethod_54();
					}
					else
					{
						if (!Client.smethod_54().method_14())
						{
							return;
						}
						Contact contact = (Contact)Client.smethod_54();
						if (Information.IsNothing(contact.activeUnit_0))
						{
							return;
						}
						if (contact.method_124(Client.smethod_46()))
						{
							return;
						}
						if (!contact.activeUnit_0.method_1())
						{
							return;
						}
						if (!contact.method_121())
						{
							return;
						}
						satellite = (Satellite)contact.activeUnit_0;
					}
					if (Class2572.smethod_6(this.vmethod_796(), Client.smethod_54()))
					{
						if (!satellite.method_144())
						{
							DateTime dateTime = Client.smethod_46().method_31();
							Class201 @class = satellite.method_142();
							this.graphicsPath_0 = new GraphicsPath();
							List<Geopoint_Struct> list = new List<Geopoint_Struct>();
							for (int i = -60; i <= 60; i++)
							{
								int num = i + 1;
								double double_;
								double double_2;
								double num2;
								double num3;
								@class.method_21(dateTime.AddMinutes((double)i), ref double_, ref double_2, ref num2, ref num3);
								if (Class2572.smethod_5(this.vmethod_796(), double_, double_2))
								{
									list.Add(new Geopoint_Struct(double_2, double_));
								}
								else
								{
									double num4;
									double num5;
									@class.method_21(dateTime.AddMinutes((double)num), ref num4, ref num5, ref num2, ref num3);
									if (Class2572.smethod_5(this.vmethod_796(), num4, num5))
									{
										list.Add(new Geopoint_Struct(double_2, double_));
									}
								}
							}
							int num6 = list.Count - 2;
							this.int_6 = 0;
							while (this.int_6 <= num6)
							{
								Geopoint_Struct geopoint_Struct = list[this.int_6];
								Geopoint_Struct geopoint_Struct2 = list[this.int_6 + 1];
								this.commandLayer_0.method_20(Color.White, geopoint_Struct.double_1, geopoint_Struct.double_0, geopoint_Struct2.double_1, geopoint_Struct2.double_0, 0.0, 0.0);
								this.int_6++;
							}
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F3A RID: 24378 RVA: 0x0034159C File Offset: 0x0033F79C
		private void method_51(Collection<Group> collection_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawGroupLeashes") && Class570.class280_0.method_28() != Class279.Class280.Enum74.const_2)
			{
				try
				{
					for (int i = collection_0.Count - 1; i >= 0; i += -1)
					{
						Group group = collection_0[i];
						if (!Information.IsNothing(group) && !Information.IsNothing(group.vmethod_7(false)) && (Class570.class280_0.method_28() != Class279.Class280.Enum74.const_1 || group == Client.smethod_54()) && (group.vmethod_7(false) == Client.smethod_50() || Client.smethod_50().method_68(group.vmethod_7(false)) == Misc.PostureStance.Friendly))
						{
							System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), group.method_147().vmethod_30(null), group.method_147().vmethod_28(null));
							try
							{
								foreach (ActiveUnit activeUnit in group.vmethod_141().Values)
								{
									if (activeUnit.vmethod_127())
									{
										System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), activeUnit.vmethod_30(null), activeUnit.vmethod_28(null));
										this.method_52(ref point, ref point2);
									}
								}
							}
							finally
							{
								IEnumerator<ActiveUnit> enumerator;
								if (enumerator != null)
								{
									enumerator.Dispose();
								}
							}
						}
					}
				}
				catch (Exception ex)
				{
					bool isAttached = Debugger.IsAttached;
				}
			}
		}

		// Token: 0x06005F3B RID: 24379 RVA: 0x0003D809 File Offset: 0x0003BA09
		public void method_52(ref System.Drawing.Point point_6, ref System.Drawing.Point point_7)
		{
			if (!CommandLayer.smethod_1("CL_DrawGroupLeash"))
			{
				this.commandLayer_0.method_23(Color.White, point_6, point_7);
			}
		}

		// Token: 0x06005F3C RID: 24380 RVA: 0x00341738 File Offset: 0x0033F938
		private void method_53()
		{
			if (!CommandLayer.smethod_1("CL_DrawHealthBars"))
			{
				try
				{
					int count = this.list_53.Count;
					int num = count - 1;
					this.int_6 = 0;
					while (this.int_6 <= num)
					{
						Unit unit = this.list_53[this.int_6];
						if (unit.bool_0)
						{
							ActiveUnit activeUnit_ = (ActiveUnit)unit;
							this.method_54(activeUnit_);
						}
						this.int_6++;
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F3D RID: 24381 RVA: 0x003417D8 File Offset: 0x0033F9D8
		private void method_54(ActiveUnit activeUnit_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawHealthBarForThisUnit") && activeUnit_0 != null && !activeUnit_0.bool_2 && !activeUnit_0.bool_1 && (!activeUnit_0.bool_3 || Client.smethod_46().DeclaredFeatures.Contains(Scenario.ScenarioFeatureOption.const_3)) && Client.smethod_77(activeUnit_0))
			{
				try
				{
					float num = activeUnit_0.vmethod_91().method_0();
					Color color;
					if (num > 80f)
					{
						color = Color.Red;
					}
					else if (num > 60f)
					{
						color = Color.Orange;
					}
					else if (num > 40f)
					{
						color = Color.Yellow;
					}
					else if (num > 0f)
					{
						color = Color.Lime;
					}
					else
					{
						color = Color.Green;
					}
					this.int_10 = (int)Math.Round((double)Math.Max(20f * ((100f - activeUnit_0.vmethod_91().method_0()) / 100f), 1f));
					Tuple<int, int> tuple = null;
					this.dictionary_2.TryGetValue(activeUnit_0, out tuple);
					System.Drawing.Point point;
					if (!Information.IsNothing(tuple))
					{
						int item = tuple.Item1;
						int item2 = tuple.Item2;
						point = new System.Drawing.Point(item, item2);
					}
					else
					{
						point = Class2572.smethod_0(this.vmethod_796(), activeUnit_0.vmethod_30(null), activeUnit_0.vmethod_28(null));
					}
					this.commandLayer_0.method_27(color, 4f, new System.Drawing.Point(point.X - 10, point.Y - 14), new System.Drawing.Point(point.X - 10 + this.int_10, point.Y - 14));
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 101151", "");
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F3E RID: 24382 RVA: 0x003419C0 File Offset: 0x0033FBC0
		private void method_55()
		{
			if (!CommandLayer.smethod_1("CL_DrawFuelBars"))
			{
				try
				{
					for (int i = this.list_53.Count - 1; i >= 0; i += -1)
					{
						try
						{
							if (this.list_53[i].bool_0)
							{
								ActiveUnit activeUnit = (ActiveUnit)this.list_53[i];
								if (activeUnit.vmethod_7(false) == Client.smethod_50())
								{
									this.method_56(activeUnit);
								}
							}
						}
						catch (Exception ex)
						{
						}
					}
				}
				catch (Exception ex2)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F3F RID: 24383 RVA: 0x00341A78 File Offset: 0x0033FC78
		private void method_56(ActiveUnit activeUnit_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawFuelBarForThisUnit") && activeUnit_0 != null && (activeUnit_0.bool_2 || activeUnit_0.bool_3 || activeUnit_0.bool_6 || activeUnit_0.bool_5) && Client.smethod_77(activeUnit_0) && (activeUnit_0.bool_2 || activeUnit_0.bool_3 || activeUnit_0.bool_6 || activeUnit_0.bool_5))
			{
				if (activeUnit_0.bool_5)
				{
					if (((Submarine)activeUnit_0).method_160())
					{
						return;
					}
				}
				else if (activeUnit_0.bool_6 && ((Ship)activeUnit_0).method_151())
				{
					return;
				}
				if (!activeUnit_0.bool_2 || ((Weapon)activeUnit_0).method_167() != Weapon._WeaponType.Sonobuoy || Class570.class280_0.method_16() != Class279.Class280.Enum69.const_2)
				{
					Color baseColor = Color.Silver;
					if (activeUnit_0.bool_2 && ((Weapon)activeUnit_0).method_167() == Weapon._WeaponType.Sonobuoy && Class570.class280_0.method_16() == Class279.Class280.Enum69.const_1)
					{
						baseColor = Color.FromArgb(128, baseColor);
					}
					double num = 18.0;
					double num2 = 0.0;
					double num3 = 0.0;
					this.int_10 = (int)Math.Round(num * activeUnit_0.vmethod_119(ref num2, ref num3, false));
					Tuple<int, int> tuple = null;
					this.dictionary_2.TryGetValue(activeUnit_0, out tuple);
					System.Drawing.Point point;
					if (!Information.IsNothing(tuple))
					{
						int item = tuple.Item1;
						int item2 = tuple.Item2;
						point = new System.Drawing.Point(item, item2);
					}
					else
					{
						point = Class2572.smethod_0(this.vmethod_796(), activeUnit_0.vmethod_30(null), activeUnit_0.vmethod_28(null));
					}
					this.commandLayer_0.method_27(baseColor, 4f, new System.Drawing.Point(point.X - 9, point.Y + 13), new System.Drawing.Point(point.X - 9 + this.int_10, point.Y + 13));
				}
			}
		}

		// Token: 0x06005F40 RID: 24384 RVA: 0x00341C60 File Offset: 0x0033FE60
		private void method_57()
		{
			if (!CommandLayer.smethod_1("CL_DrawUnitSelectionRectangles"))
			{
				Tuple<int, int> tuple = null;
				try
				{
					try
					{
						foreach (Unit unit in Client.smethod_50().method_56())
						{
							int item;
							int item2;
							if (unit.bool_0)
							{
								if (!((ActiveUnit)unit).vmethod_90().vmethod_1() && !Client.smethod_52().method_1() && !Class2558.smethod_17((ActiveUnit)unit))
								{
									Class2572.smethod_4(this.vmethod_796(), ((ActiveUnit)unit).method_56().Value, ((ActiveUnit)unit).method_58().Value, ref item, ref item2);
								}
								else
								{
									this.dictionary_2.TryGetValue(unit, out tuple);
									if (!Information.IsNothing(tuple))
									{
										item = tuple.Item1;
										item2 = tuple.Item2;
										new System.Drawing.Point(item, item2);
									}
									else
									{
										Class2572.smethod_4(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null), ref item, ref item2);
									}
								}
							}
							else
							{
								Class2572.smethod_4(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null), ref item, ref item2);
							}
							this.commandLayer_0.method_4(Color.White, item - 10, item2 - 10, 20, 20);
						}
					}
					finally
					{
						IEnumerator<Unit> enumerator;
						if (enumerator != null)
						{
							enumerator.Dispose();
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F41 RID: 24385 RVA: 0x00341E24 File Offset: 0x00340024
		private void method_58()
		{
			if (!CommandLayer.smethod_1("CL_DrawSelectionRectangle"))
			{
				try
				{
					this.commandLayer_0.method_4(Color.White, this.rectangle_1.Left, this.rectangle_1.Top, this.rectangle_1.Height, this.rectangle_1.Width);
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F42 RID: 24386 RVA: 0x00341EA8 File Offset: 0x003400A8
		private void method_59()
		{
			if (!CommandLayer.smethod_1("CL_DrawWeaponImpacts"))
			{
				try
				{
					if (Client.smethod_46().vmethod_14() == null)
					{
						Client.smethod_46().vmethod_15(new ObservableList<WeaponImpact>());
					}
					int count = Client.smethod_46().vmethod_14().Count;
					if (count != 0)
					{
						int num = (int)((short)(count - 1));
						this.int_6 = num;
						while (this.int_6 >= 0)
						{
							WeaponImpact weaponImpact = Client.smethod_46().vmethod_14()[this.int_6];
							string text = "";
							WeaponImpact.Enum124 enum124_ = weaponImpact.enum124_0;
							if (enum124_ != WeaponImpact.Enum124.const_0)
							{
								if (enum124_ == WeaponImpact.Enum124.const_1)
								{
									text = System.Windows.Forms.Application.StartupPath + "\\Symbols\\Impact_Electronic.png";
								}
							}
							else
							{
								text = System.Windows.Forms.Application.StartupPath + "\\Symbols\\Impact.png";
							}
							System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), weaponImpact.vmethod_30(null), weaponImpact.vmethod_28(null));
							this.commandLayer_0.method_16(text, 255, point.X - 22, point.Y - 22, 44, 44, CommandLayer.Enum164.const_0);
							this.int_6 += -1;
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F43 RID: 24387 RVA: 0x00342004 File Offset: 0x00340204
		private void method_60()
		{
			if (!CommandLayer.smethod_1("CL_DrawExplosions"))
			{
				try
				{
					int count = Client.smethod_46().vmethod_12().Count;
					if (count != 0)
					{
						List<Explosion> list = new List<Explosion>();
						list.AddRange(Client.smethod_46().vmethod_12());
						for (int i = count - 1; i >= 0; i += -1)
						{
							Explosion explosion = list[i];
							double num;
							if (explosion.method_62() < 0.5)
							{
								num = 0.5;
							}
							else
							{
								num = explosion.method_62();
							}
							if (Class2572.smethod_5(this.vmethod_796(), explosion.method_58(), explosion.method_56()))
							{
								Warhead.WarheadType warheadType_ = explosion.warheadType_0;
								if (warheadType_ <= Warhead.WarheadType.SuperFrag)
								{
									if (warheadType_ <= Warhead.WarheadType.SemiAP)
									{
										if (warheadType_ != Warhead.WarheadType.HE_BlastFrag && warheadType_ != Warhead.WarheadType.SemiAP)
										{
											goto IL_653;
										}
									}
									else if (warheadType_ != Warhead.WarheadType.HardTargetPenetrator)
									{
										if (warheadType_ != Warhead.WarheadType.SuperFrag)
										{
											goto IL_653;
										}
										goto IL_497;
									}
								}
								else if (warheadType_ <= Warhead.WarheadType.Nuclear)
								{
									if (warheadType_ - Warhead.WarheadType.Torpedo > 1)
									{
										if (warheadType_ != Warhead.WarheadType.Nuclear)
										{
											goto IL_653;
										}
										int num2;
										Color baseColor;
										if (explosion.method_66())
										{
											num2 = 661;
											baseColor = Color.White;
										}
										else if (explosion.vmethod_26())
										{
											num2 = 5832;
											baseColor = Color.YellowGreen;
										}
										else if (explosion.vmethod_27())
										{
											num2 = 2916;
											baseColor = Color.DodgerBlue;
										}
										else
										{
											if (Debugger.IsAttached)
											{
												Debugger.Break();
												goto IL_653;
											}
											goto IL_653;
										}
										float num3 = (float)(num / 3600.0 * (double)num2);
										WorldWindow worldWindow = this.vmethod_796();
										double num4 = explosion.method_58();
										double num5 = explosion.method_56();
										double num6;
										double num7;
										Class411.smethod_1(num5, num4, ref num6, ref num7, (double)num3, 0.0);
										System.Drawing.Point point = Class2572.smethod_0(worldWindow, num4, num5);
										short num8 = (short)Math.Abs(Class2572.smethod_0(worldWindow, num7, num6).Y - point.Y);
										float num9 = (float)(num / (double)explosion.method_61());
										int alpha;
										if ((double)num9 < 0.5)
										{
											alpha = 255;
										}
										else
										{
											alpha = (int)Math.Round((double)(255f * (2f - 2f * num9)));
										}
										this.commandLayer_0.method_3(Color.FromArgb(alpha, baseColor), Color.FromArgb(alpha, baseColor), point.X, point.Y, (int)(num8 * 2), (int)(num8 * 2));
										goto IL_653;
									}
								}
								else
								{
									if (warheadType_ - Warhead.WarheadType.Cluster_AP <= 2 || warheadType_ == Warhead.WarheadType.Cluster_SmartSubs)
									{
										goto IL_497;
									}
									goto IL_653;
								}
								int num10;
								Color baseColor2;
								if (explosion.method_66())
								{
									num10 = 661;
									baseColor2 = Color.White;
								}
								else if (explosion.vmethod_26())
								{
									num10 = 5832;
									baseColor2 = Color.YellowGreen;
								}
								else if (explosion.vmethod_27())
								{
									num10 = 2916;
									baseColor2 = Color.DodgerBlue;
								}
								else
								{
									num10 = 661;
									baseColor2 = Color.White;
								}
								float num11 = (float)(num / (double)explosion.method_61());
								int alpha2;
								if ((double)num11 < 0.5)
								{
									alpha2 = 255;
								}
								else
								{
									alpha2 = (int)Math.Round((double)(255f * Math.Max(0f, 1f - num11)));
								}
								baseColor2 = Color.FromArgb(alpha2, baseColor2);
								float num12 = Math.Min((float)(num / 3600.0 * (double)num10), Explosion.smethod_1(explosion.double_3, Weapon.Enum128.const_0));
								WorldWindow worldWindow2 = this.vmethod_796();
								double num13 = explosion.method_58();
								double num14 = explosion.method_56();
								double num15;
								double num16;
								Class411.smethod_1(num14, num13, ref num15, ref num16, (double)num12, 0.0);
								System.Drawing.Point point2 = Class2572.smethod_0(worldWindow2, num13, num14);
								int num17 = Math.Abs(Class2572.smethod_0(worldWindow2, num16, num15).Y - point2.Y);
								int num18 = num17 - 2;
								int num19 = num18 - 2;
								int num20 = num19 - 2;
								int num21 = num20 - 2;
								this.commandLayer_0.method_2(2f, baseColor2, point2.X, point2.Y, num17 * 2, num17 * 2);
								this.commandLayer_0.method_2(2f, Color.FromArgb(230, baseColor2), point2.X, point2.Y, num18 * 2, num18 * 2);
								this.commandLayer_0.method_2(2f, Color.FromArgb(180, baseColor2), point2.X, point2.Y, num19 * 2, num19 * 2);
								this.commandLayer_0.method_2(2f, Color.FromArgb(120, baseColor2), point2.X, point2.Y, num20 * 2, num20 * 2);
								this.commandLayer_0.method_2(2f, Color.FromArgb(50, baseColor2), point2.X, point2.Y, num21 * 2, num21 * 2);
								goto IL_653;
								IL_497:
								int num22 = explosion.int_2;
								Geopoint_Struct[] array = explosion.method_77((float)(num / (double)explosion.method_61()));
								double num23 = Enumerable.Max(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I131-0 == null) ? (MainForm._Closure$__.$I131-0 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_6)) : MainForm._Closure$__.$I131-0));
								double num24 = Enumerable.Min(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I131-1 == null) ? (MainForm._Closure$__.$I131-1 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_7)) : MainForm._Closure$__.$I131-1));
								double num25 = Enumerable.Max(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I131-2 == null) ? (MainForm._Closure$__.$I131-2 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_8)) : MainForm._Closure$__.$I131-2));
								double num26 = Enumerable.Min(Enumerable.Select<Geopoint_Struct, double>(array, (MainForm._Closure$__.$I131-3 == null) ? (MainForm._Closure$__.$I131-3 = new Func<Geopoint_Struct, double>(MainForm._Closure$__.$I.method_9)) : MainForm._Closure$__.$I131-3));
								Random random = GameGeneral.smethod_5();
								int num27 = num22;
								this.int_7 = 1;
								while (this.int_7 <= num27)
								{
									double num28 = num24 + random.NextDouble() * (num23 - num24);
									double theLat = Math2.smethod_10(ref num28);
									num28 = num26 + random.NextDouble() * (num25 - num26);
									double theLon = Math2.smethod_11(ref num28);
									if (GeoPoint.smethod_2(theLat, theLon, Enumerable.ToArray<Geopoint_Struct>(Enumerable.Select<Geopoint_Struct, Geopoint_Struct>(array, (MainForm._Closure$__.$I131-4 == null) ? (MainForm._Closure$__.$I131-4 = new Func<Geopoint_Struct, Geopoint_Struct>(MainForm._Closure$__.$I.method_10)) : MainForm._Closure$__.$I131-4)), true))
									{
										System.Drawing.Point point3 = Class2572.smethod_0(this.vmethod_796(), theLat, theLon);
										this.commandLayer_0.method_4(Color.Yellow, point3.X - 1, point3.Y - 1, 2, 2);
									}
									this.int_7++;
								}
							}
							IL_653:;
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F44 RID: 24388 RVA: 0x003426A8 File Offset: 0x003408A8
		private void method_61()
		{
			if (!CommandLayer.smethod_1("CL_DrawCanals"))
			{
				try
				{
					foreach (FixedGeoPolygon fixedGeoPolygon in this.list_56)
					{
						try
						{
							this.commandLayer_0.method_18(Color.Yellow, fixedGeoPolygon.vmethod_0(), true);
						}
						catch (Exception ex)
						{
							if (Debugger.IsAttached)
							{
								Debugger.Break();
							}
						}
					}
				}
				finally
				{
					List<FixedGeoPolygon>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
		}

		// Token: 0x06005F45 RID: 24389 RVA: 0x00342740 File Offset: 0x00340940
		private void method_62()
		{
			if (!CommandLayer.smethod_1("CL_DrawPierLanes"))
			{
				try
				{
					List<Geopoint_Struct[]> list = new List<Geopoint_Struct[]>();
					try
					{
						foreach (Unit unit in this.list_53)
						{
							if (unit.bool_0 && unit.method_5() && ActiveUnit_DockingOps.smethod_10((ActiveUnit)unit))
							{
								list.Add(Enumerable.ToArray<Geopoint_Struct>(Enumerable.Select<Geopoint_Struct, Geopoint_Struct>(((ActiveUnit)unit).vmethod_93().method_4(), (MainForm._Closure$__.$I133-0 == null) ? (MainForm._Closure$__.$I133-0 = new Func<Geopoint_Struct, Geopoint_Struct>(MainForm._Closure$__.$I.method_11)) : MainForm._Closure$__.$I133-0)));
							}
						}
					}
					finally
					{
						List<Unit>.Enumerator enumerator;
						((IDisposable)enumerator).Dispose();
					}
					list = Math2.smethod_32(list);
					try
					{
						foreach (Geopoint_Struct[] ienumerable_ in list)
						{
							try
							{
								this.commandLayer_0.method_0(ienumerable_, 1, Color.FromArgb(25, Color.DodgerBlue), Color.FromArgb(10, Color.DodgerBlue));
							}
							catch (Exception ex)
							{
								bool isAttached = Debugger.IsAttached;
							}
						}
					}
					finally
					{
						List<Geopoint_Struct[]>.Enumerator enumerator2;
						((IDisposable)enumerator2).Dispose();
					}
				}
				catch (Exception ex2)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F46 RID: 24390 RVA: 0x003428E4 File Offset: 0x00340AE4
		private void method_63()
		{
			if (!CommandLayer.smethod_1("CL_DrawExclusionZone"))
			{
				try
				{
					if (!Information.IsNothing(this.exclusionZonesWindow_0))
					{
						ExclusionZone exclusionZone = this.exclusionZonesWindow_0.method_3();
						if (!Information.IsNothing(exclusionZone))
						{
							Misc.PostureStance postureStance_ = exclusionZone.postureStance_0;
							Color color;
							if (postureStance_ != Misc.PostureStance.Unfriendly)
							{
								if (postureStance_ == Misc.PostureStance.Hostile)
								{
									color = Color.Red;
								}
							}
							else
							{
								color = Color.Orange;
							}
							Geopoint_Struct[] array = new Geopoint_Struct[exclusionZone.list_0.Count - 1 + 1];
							int num = exclusionZone.list_0.Count - 1;
							this.int_6 = 0;
							while (this.int_6 <= num)
							{
								array[this.int_6] = new Geopoint_Struct(exclusionZone.list_0[this.int_6].imethod_0(), exclusionZone.list_0[this.int_6].imethod_2());
								this.int_6++;
							}
							this.commandLayer_0.method_18(color, array, true);
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F47 RID: 24391 RVA: 0x00342A08 File Offset: 0x00340C08
		private void method_64()
		{
			if (!CommandLayer.smethod_1("CL_DrawNoNavZones") && !Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					try
					{
						foreach (NoNavZone noNavZone in Client.smethod_50().list_7)
						{
							if (!Information.IsNothing(noNavZone) && noNavZone.bool_11 && noNavZone.list_0.Count != 0)
							{
								Color darkRed = Color.DarkRed;
								this.commandLayer_0.method_7(Enumerable.Select<ReferencePoint, Geopoint_Struct>(noNavZone.list_0, (MainForm._Closure$__.$I135-0 == null) ? (MainForm._Closure$__.$I135-0 = new Func<ReferencePoint, Geopoint_Struct>(MainForm._Closure$__.$I.method_12)) : MainForm._Closure$__.$I135-0), Color.FromArgb(100, darkRed));
							}
						}
					}
					finally
					{
						List<NoNavZone>.Enumerator enumerator;
						((IDisposable)enumerator).Dispose();
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F48 RID: 24392 RVA: 0x0000378C File Offset: 0x0000198C
		private void method_65()
		{
		}

		// Token: 0x06005F49 RID: 24393 RVA: 0x00342B04 File Offset: 0x00340D04
		private void method_66()
		{
			if (!CommandLayer.smethod_1("CL_DrawRefPoints") && Client.smethod_50() != null)
			{
				try
				{
					Color color;
					byte b;
					switch (Class570.class280_0.method_20())
					{
					case Class279.Class280.Enum71.const_0:
						color = Color.White;
						b = 4;
						break;
					case Class279.Class280.Enum71.const_1:
						color = Color.Gray;
						b = 2;
						break;
					case Class279.Class280.Enum71.const_2:
						return;
					}
					int count = Client.smethod_50().vmethod_12().Count;
					int num = count - 1;
					this.int_6 = 0;
					while (this.int_6 <= num)
					{
						try
						{
							ReferencePoint referencePoint = Client.smethod_50().vmethod_12()[this.int_6];
							double num2 = referencePoint.imethod_2();
							double num3 = referencePoint.imethod_0();
							if (Class2572.smethod_5(this.vmethod_796(), num2, num3))
							{
								int num4;
								int num5;
								Class2572.smethod_4(this.vmethod_796(), num2, num3, ref num4, ref num5);
								if (referencePoint.bool_12)
								{
									string text;
									if (referencePoint.method_19())
									{
										text = this.method_83("LockedRP_selected.png");
									}
									else
									{
										text = this.method_83("LockedRP.png");
									}
									this.commandLayer_0.method_16(text, 255, num4, num5, 8, 8, CommandLayer.Enum164.const_0);
									if (referencePoint.method_19())
									{
										this.commandLayer_0.method_13(Color.White, num4 + 5, num5, referencePoint.Name, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
									}
								}
								else if (referencePoint.method_19())
								{
									System.Drawing.Point[] path = new System.Drawing.Point[]
									{
										new System.Drawing.Point(num4 - (int)b, num5),
										new System.Drawing.Point(num4, num5 - (int)b),
										new System.Drawing.Point(num4 + (int)b, num5),
										new System.Drawing.Point(num4, num5 + (int)b),
										new System.Drawing.Point(num4 - (int)b, num5)
									};
									this.commandLayer_0.method_21(Color.White, 2, path, false);
									string text2 = referencePoint.Name;
									if (!Information.IsNothing(referencePoint.unit_0))
									{
										if (referencePoint.orientationType_0 == ReferencePoint.OrientationType.Fixed)
										{
											text2 = string.Concat(new string[]
											{
												"[F]",
												referencePoint.Name,
												" (",
												referencePoint.unit_0.Name,
												")"
											});
										}
										else
										{
											text2 = string.Concat(new string[]
											{
												"[R]",
												referencePoint.Name,
												" (",
												referencePoint.unit_0.Name,
												")"
											});
										}
									}
									else
									{
										text2 = referencePoint.Name;
									}
									this.commandLayer_0.method_13(Color.White, num4 + 5, num5, text2, 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, true, "Segoe UI");
								}
								else
								{
									this.commandLayer_0.method_24(color, num4 - (int)b, num5 - (int)b, num4 + (int)b, num5 + (int)b);
									this.commandLayer_0.method_24(color, num4 - (int)b, num5 + (int)b, num4 + (int)b, num5 - (int)b);
								}
							}
						}
						catch (Exception ex)
						{
							if (Debugger.IsAttached)
							{
								Debugger.Break();
							}
						}
						this.int_6++;
					}
				}
				catch (Exception ex2)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F4A RID: 24394 RVA: 0x00342E84 File Offset: 0x00341084
		private void method_67()
		{
			if (!CommandLayer.smethod_1("CL_DrawCoursePreview") && Client.smethod_50() != null && Client.smethod_54() != null && Client.smethod_54().bool_0 && Client.smethod_61() == Client.Enum197.const_6)
			{
				ActiveUnit activeUnit = (ActiveUnit)Client.smethod_54();
				double num;
				double num2;
				if (activeUnit.vmethod_85().method_47())
				{
					Waypoint waypoint = Enumerable.Last<Waypoint>(activeUnit.vmethod_85().method_4());
					num = waypoint.imethod_2();
					num2 = waypoint.imethod_0();
				}
				else
				{
					num = activeUnit.vmethod_30(null);
					num2 = activeUnit.vmethod_28(null);
				}
				Color color = Color.FromArgb(255, Color.LightGray);
				GeoPoint geoPoint = Class2572.smethod_1(this.vmethod_796(), this.point_0.X, this.point_0.Y);
				this.commandLayer_0.method_11(color, 2f, geoPoint.imethod_2(), geoPoint.imethod_0(), num, num2);
				Tuple<double, double> tuple = this.commandLayer_0.method_10(geoPoint.imethod_2() * 3.141592653589793 / 180.0, geoPoint.imethod_0() * 3.141592653589793 / 180.0, num * 3.141592653589793 / 180.0, num2 * 3.141592653589793 / 180.0, 0.05);
				System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), tuple.Item1 * 180.0 / 3.141592653589793, tuple.Item2 * 180.0 / 3.141592653589793);
				double num3 = 3.141592653589793 + Math.Atan2((double)(point.Y - this.point_0.Y), (double)(point.X - this.point_0.X));
				double num4 = 0.2617993877991494;
				this.commandLayer_0.method_28(color, 2f, (float)this.point_0.X, (float)this.point_0.Y, (float)((double)this.point_0.X - Math.Cos(num3 + num4) * (double)15f), (float)((double)this.point_0.Y - Math.Sin(num3 + num4) * (double)15f));
				this.commandLayer_0.method_28(color, 2f, (float)this.point_0.X, (float)this.point_0.Y, (float)((double)this.point_0.X - Math.Cos(num3 - num4) * (double)15f), (float)((double)this.point_0.Y - Math.Sin(num3 - num4) * (double)15f));
			}
		}

		// Token: 0x06005F4B RID: 24395 RVA: 0x00343144 File Offset: 0x00341344
		private void method_68(Contact contact_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawContact") && contact_0 != null && !contact_0.method_124(Client.smethod_46()))
			{
				int num = 255;
				try
				{
					Color color = Client.smethod_29(contact_0.method_130(Client.smethod_50()));
					Color color_;
					if (Client.smethod_52().method_27())
					{
						color_ = color;
					}
					else
					{
						color_ = Color.White;
					}
					if (contact_0.method_112() != null)
					{
						this.method_82(color, ref contact_0);
					}
					Tuple<int, int> tuple = null;
					this.dictionary_2.TryGetValue(contact_0, out tuple);
					System.Drawing.Point point_;
					if (tuple != null)
					{
						int item = tuple.Item1;
						int item2 = tuple.Item2;
						point_ = new System.Drawing.Point(item, item2);
					}
					else
					{
						point_ = Class2572.smethod_0(this.vmethod_796(), contact_0.vmethod_30(null), contact_0.vmethod_28(null));
					}
					bool flag = false;
					string value = this.method_83(this.method_78(contact_0, ref flag));
					if (Class570.class280_0.method_22() == Class279.Class280.Enum73.const_0 | Class570.class280_0.method_22() == Class279.Class280.Enum73.const_1)
					{
						flag = false;
					}
					int num2 = 20;
					if (flag && (contact_0.activeUnit_0.bool_6 || contact_0.activeUnit_0.bool_5))
					{
						num2 = 40;
					}
					if (!string.IsNullOrEmpty(value))
					{
						if (Class570.class280_0.method_22() == Class279.Class280.Enum73.const_2)
						{
							if (flag && contact_0.bool_18)
							{
								this.bitmap_1 = Class2558.smethod_1(contact_0.activeUnit_0.string_0 + "Contact", this.bitmap_1, contact_0.vmethod_9());
							}
							Contact_Base.ContactType contactType_ = contact_0.contactType_0;
							if (contactType_ - Contact_Base.ContactType.Surface > 1)
							{
								if (contactType_ - Contact_Base.ContactType.Installation <= 1)
								{
									num2 = 30;
								}
							}
							else
							{
								num2 = 40;
							}
						}
						if (flag && (contact_0.activeUnit_0.bool_6 || contact_0.activeUnit_0.bool_5))
						{
							double num3 = 0.0;
							if (contact_0.activeUnit_0.bool_6)
							{
								num3 = (double)((Ship)contact_0.activeUnit_0).float_13;
							}
							if (contact_0.activeUnit_0.bool_5)
							{
								num3 = (double)((Submarine)contact_0.activeUnit_0).float_13;
							}
							if (num3 >= 1.0)
							{
								GeoPoint geoPoint = Class2572.smethod_1(this.vmethod_796(), point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0));
								GeoPoint geoPoint2 = Class2572.smethod_1(this.vmethod_796(), point_.X + (int)Math.Round((double)num2 / 2.0), point_.Y + (int)Math.Round((double)num2 / 2.0));
								double num4 = Math2.smethod_16(geoPoint.imethod_2(), geoPoint.imethod_0(), 0.0, geoPoint2.imethod_2(), geoPoint2.imethod_0(), 0.0) * 1852.0;
								double num5 = num3 / num4;
								if (num5 > 1.0)
								{
									num2 = (int)Math.Round((double)num2 * num5 * 1.4);
								}
							}
						}
						Class285.Enum87 enum87_ = Client.smethod_52().enum87_0;
						if (enum87_ != Class285.Enum87.const_0)
						{
							if (enum87_ != Class285.Enum87.const_1)
							{
								goto IL_980;
							}
							if (contact_0.bool_16 && (Information.IsNothing(Client.smethod_42()) || contact_0 != Client.smethod_42()))
							{
								if (Information.IsNothing(Client.smethod_54()) || contact_0 != Client.smethod_54())
								{
									num = 128;
									if (flag)
									{
										if (contact_0.activeUnit_0.bool_6 || contact_0.activeUnit_0.bool_5)
										{
											num2 = 40;
										}
										this.commandLayer_0.method_17(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, (double)contact_0.vmethod_9(), this.enum164_0);
										goto IL_4F7;
									}
									this.commandLayer_0.method_16(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, this.enum164_0);
									goto IL_4F7;
								}
							}
							if (flag)
							{
								if (contact_0.activeUnit_0.bool_6 || contact_0.activeUnit_0.bool_5)
								{
									num2 = 40;
								}
								this.commandLayer_0.method_17(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, (double)contact_0.vmethod_9(), this.enum164_0);
							}
							else
							{
								this.commandLayer_0.method_16(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, this.enum164_0);
							}
							IL_4F7:
							try
							{
								if (contact_0.method_73(Client.smethod_50()).Count > 0)
								{
									this.commandLayer_0.method_16(this.method_83("hosted_units.png"), num, point_.X, point_.Y, 10, 10, this.enum164_0);
								}
								goto IL_980;
							}
							catch (Exception ex)
							{
								goto IL_980;
							}
						}
						Contact_Base.ContactType contactType_2 = contact_0.contactType_0;
						if (contactType_2 - Contact_Base.ContactType.Facility_Fixed <= 1)
						{
							if (!Information.IsNothing(contact_0.activeUnit_0) && !contact_0.activeUnit_0.method_122())
							{
								if (contact_0.bool_16 && (Information.IsNothing(Client.smethod_42()) || contact_0 != Client.smethod_42()))
								{
									if (Information.IsNothing(Client.smethod_54()) || contact_0 != Client.smethod_54())
									{
										num = 128;
										if (flag)
										{
											this.commandLayer_0.method_17(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, (double)contact_0.vmethod_9(), this.enum164_0);
											goto IL_73B;
										}
										this.commandLayer_0.method_16(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, this.enum164_0);
										goto IL_73B;
									}
								}
								if (flag)
								{
									if (contact_0.activeUnit_0.bool_6 || contact_0.activeUnit_0.bool_5)
									{
										num2 = 40;
									}
									this.commandLayer_0.method_17(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, (double)contact_0.vmethod_9(), this.enum164_0);
								}
								else
								{
									this.commandLayer_0.method_16(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, this.enum164_0);
								}
								IL_73B:
								if (contact_0.method_73(Client.smethod_50()).Count > 0)
								{
									this.commandLayer_0.method_16(this.method_83("hosted_units.png"), num, point_.X, point_.Y, 10, 10, this.enum164_0);
								}
							}
						}
						else
						{
							if (contact_0.bool_16 && (Information.IsNothing(Client.smethod_42()) || contact_0 != Client.smethod_42()))
							{
								if (Information.IsNothing(Client.smethod_54()) || contact_0 != Client.smethod_54())
								{
									num = 128;
									if (flag)
									{
										if (contact_0.activeUnit_0.bool_6 || contact_0.activeUnit_0.bool_5)
										{
											num2 = 40;
										}
										this.commandLayer_0.method_17(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, (double)contact_0.vmethod_9(), this.enum164_0);
										goto IL_93E;
									}
									this.commandLayer_0.method_16(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, this.enum164_0);
									goto IL_93E;
								}
							}
							if (flag)
							{
								this.commandLayer_0.method_17(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, (double)contact_0.vmethod_9(), this.enum164_0);
							}
							else
							{
								this.commandLayer_0.method_16(value, num, point_.X - (int)Math.Round((double)num2 / 2.0), point_.Y - (int)Math.Round((double)num2 / 2.0), num2, num2, this.enum164_0);
							}
							IL_93E:
							if (contact_0.method_73(Client.smethod_50()).Count > 0)
							{
								this.commandLayer_0.method_16(this.method_83("hosted_units.png"), num, point_.X, point_.Y, 10, 10, this.enum164_0);
							}
						}
						IL_980:
						if ((!flag || Class570.class280_0.method_22() != Class279.Class280.Enum73.const_2) && contact_0.bool_17 && contact_0.bool_18 && contact_0.vmethod_40() > 0f)
						{
							this.method_77(contact_0.vmethod_30(null), contact_0.vmethod_28(null), contact_0.vmethod_9(), contact_0.vmethod_40(), point_, color);
						}
						Contact.Enum47? @enum = contact_0.method_74(Client.smethod_50());
						byte? b = (@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null;
						if (((b != null) ? new bool?(b.GetValueOrDefault() == 4) : null).GetValueOrDefault())
						{
							this.commandLayer_0.method_23(color, new System.Drawing.Point(point_.X - 10, point_.Y - 10), new System.Drawing.Point(point_.X + 10, point_.Y + 10));
							this.commandLayer_0.method_23(color, new System.Drawing.Point(point_.X - 10, point_.Y + 10), new System.Drawing.Point(point_.X + 10, point_.Y - 10));
						}
						if (!contact_0.bool_16 || (!Information.IsNothing(Client.smethod_42()) && contact_0 == Client.smethod_42()) || (!Information.IsNothing(Client.smethod_54()) && contact_0 == Client.smethod_54()))
						{
							Weapon[] array = contact_0.method_100();
							int num6 = 0;
							if (!Client.smethod_52().method_1() && !Information.IsNothing(array))
							{
								Weapon[] array2 = array;
								int i = 0;
								while (i < array2.Length)
								{
									Weapon weapon = array2[i];
									if (weapon.vmethod_7(false) == Client.smethod_50())
									{
										goto IL_B6A;
									}
									if (weapon.vmethod_7(false).method_68(Client.smethod_50()) == Misc.PostureStance.Friendly)
									{
										goto IL_B6A;
									}
									if (Client.smethod_50().method_11().ContainsKey(weapon.string_0))
									{
										num6++;
									}
									IL_B70:
									checked
									{
										i++;
										continue;
										IL_B6A:;
									}
									num6++;
									goto IL_B70;
								}
							}
							int num7;
							if (Client.smethod_52().method_1())
							{
								num7 = array.Length;
							}
							else
							{
								num7 = num6;
							}
							if (num7 != 0)
							{
								this.commandLayer_0.method_13(Color.White, point_.X - 25, point_.Y - 8, num7.ToString(), 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
							}
						}
						if (!contact_0.bool_16 || (Client.smethod_42() != null && contact_0 == Client.smethod_42()) || (Client.smethod_54() != null && contact_0 == Client.smethod_54()))
						{
							if (contact_0.method_74(Client.smethod_50()) != null)
							{
								this.method_69(contact_0);
							}
							if (contact_0.method_76(Client.smethod_50()) != null)
							{
								this.method_70(contact_0);
							}
							if (contact_0.method_78(Client.smethod_50()) != null)
							{
								this.method_71(contact_0);
							}
						}
						if ((!contact_0.bool_16 || (Client.smethod_42() != null && contact_0 == Client.smethod_42()) || (Client.smethod_54() != null && contact_0 == Client.smethod_54())) && contact_0.activeUnit_0 != null && contact_0.activeUnit_0.method_6())
						{
							List<Mount> list = new List<Mount>();
							list.AddRange(contact_0.activeUnit_0.vmethod_51());
							int value2 = Enumerable.Count<Mount>(Enumerable.Where<Mount>(Enumerable.Select<Mount, Mount>(list, (MainForm._Closure$__.$I139-0 == null) ? (MainForm._Closure$__.$I139-0 = new Func<Mount, Mount>(MainForm._Closure$__.$I.method_13)) : MainForm._Closure$__.$I139-0), (MainForm._Closure$__.$I139-1 == null) ? (MainForm._Closure$__.$I139-1 = new Func<Mount, bool>(MainForm._Closure$__.$I.method_14)) : MainForm._Closure$__.$I139-1));
							this.commandLayer_0.method_13(Color.White, point_.X - 25, point_.Y - 16, Conversions.ToString(value2), 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
						}
						if ((!contact_0.bool_16 || (Client.smethod_42() != null && contact_0 == Client.smethod_42()) || (Client.smethod_54() != null && contact_0 == Client.smethod_54())) && contact_0.method_57() >= 1f)
						{
							this.commandLayer_0.method_13(Color.White, point_.X - 10, point_.Y + 10, Misc.smethod_11((long)((int)Math.Round((double)contact_0.method_57())), Aircraft_AirOps.Enum44.const_0, false, false), 0.0, 13, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
						}
						if (!contact_0.bool_16 || (Client.smethod_42() != null && contact_0 == Client.smethod_42()) || (Client.smethod_54() != null && contact_0 == Client.smethod_54()))
						{
							Class285.Enum85 enum2 = Client.smethod_52().method_47();
							if (enum2 != Class285.Enum85.const_0)
							{
								if (enum2 == Class285.Enum85.const_1)
								{
									if (contact_0 == Client.smethod_54())
									{
										this.method_72(contact_0, color_);
									}
								}
							}
							else
							{
								this.method_72(contact_0, color_);
							}
						}
						switch (Client.smethod_52().method_53())
						{
						case Class285.Enum85.const_0:
							this.method_73(contact_0, point_);
							break;
						case Class285.Enum85.const_1:
							if (contact_0 == Client.smethod_54())
							{
								this.method_73(contact_0, point_);
							}
							break;
						}
						if (contact_0.bool_12)
						{
							if (Client.smethod_50().method_67(contact_0.activeUnit_0.vmethod_7(false)))
							{
								this.commandLayer_0.method_13(Client.color_0, point_.X - 4, point_.Y + 10, "A", 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
							}
							else if (Client.smethod_50().method_68(contact_0.activeUnit_0.vmethod_7(false)) == Misc.PostureStance.Friendly)
							{
								this.commandLayer_0.method_13(Client.color_0, point_.X - 4, point_.Y + 10, "F", 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
							}
							else if (this.dictionary_0[Client.smethod_50().string_0].Contains(contact_0.activeUnit_0.vmethod_7(false).string_0))
							{
								this.commandLayer_0.method_13(Client.color_0, point_.X - 6, point_.Y + 10, "(F)", 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
							}
						}
					}
				}
				catch (Exception ex2)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F4C RID: 24396 RVA: 0x00344138 File Offset: 0x00342338
		private void method_69(Contact contact_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawHealthBarForThisContact") && !Information.IsNothing(contact_0) && !Information.IsNothing(contact_0.activeUnit_0))
			{
				ActiveUnit activeUnit_ = contact_0.activeUnit_0;
				if (!activeUnit_.bool_2 && !activeUnit_.bool_1 && !activeUnit_.bool_3)
				{
					this.int_10 = 20;
					Contact.Enum47? @enum = contact_0.method_74(Client.smethod_50());
					byte? b = (@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null;
					Color color;
					if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
					{
						this.int_10 = this.int_10;
						color = Color.Green;
					}
					else
					{
						b = ((@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null);
						if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
						{
							this.int_10 = (int)Math.Round((double)this.int_10 * 0.75);
							color = Color.Yellow;
						}
						else
						{
							b = ((@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null);
							if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
							{
								this.int_10 = (int)Math.Round((double)this.int_10 * 0.5);
								color = Color.Orange;
							}
							else
							{
								b = ((@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null);
								if (((b != null) ? new bool?(b.GetValueOrDefault() == 3) : null).GetValueOrDefault())
								{
									this.int_10 = (int)Math.Round((double)this.int_10 * 0.25);
									color = Color.Red;
								}
								else
								{
									b = ((@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null);
									if (((b != null) ? new bool?(b.GetValueOrDefault() == 4) : null).GetValueOrDefault())
									{
										return;
									}
								}
							}
						}
					}
					System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), contact_0.vmethod_30(null), contact_0.vmethod_28(null));
					this.commandLayer_0.method_27(color, 4f, new System.Drawing.Point(point.X - 10, point.Y - 14), new System.Drawing.Point(point.X - 10 + this.int_10, point.Y - 14));
				}
			}
		}

		// Token: 0x06005F4D RID: 24397 RVA: 0x00344448 File Offset: 0x00342648
		private void method_70(Contact contact_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawFireDamageBarForThisContact") && !Information.IsNothing(contact_0) && !Information.IsNothing(contact_0.activeUnit_0))
			{
				ActiveUnit activeUnit_ = contact_0.activeUnit_0;
				if (activeUnit_.bool_2 || activeUnit_.bool_3 || activeUnit_.bool_6)
				{
					Color red = Color.Red;
					this.int_10 = 18;
					if (contact_0.method_76(Client.smethod_50()) != null)
					{
						ActiveUnit_Damage.FireIntensityLevel? fireIntensityLevel = contact_0.method_76(Client.smethod_50());
						byte? b = (fireIntensityLevel != null) ? new byte?((byte)fireIntensityLevel.GetValueOrDefault()) : null;
						if (!((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
						{
							b = ((fireIntensityLevel != null) ? new byte?((byte)fireIntensityLevel.GetValueOrDefault()) : null);
							if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
							{
								this.int_10 = (int)Math.Round((double)this.int_10 * 0.25);
							}
							else
							{
								b = ((fireIntensityLevel != null) ? new byte?((byte)fireIntensityLevel.GetValueOrDefault()) : null);
								if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
								{
									this.int_10 = (int)Math.Round((double)this.int_10 * 0.5);
								}
								else
								{
									b = ((fireIntensityLevel != null) ? new byte?((byte)fireIntensityLevel.GetValueOrDefault()) : null);
									if (((b != null) ? new bool?(b.GetValueOrDefault() == 3) : null).GetValueOrDefault())
									{
										this.int_10 = (int)Math.Round((double)this.int_10 * 0.75);
									}
									else
									{
										b = ((fireIntensityLevel != null) ? new byte?((byte)fireIntensityLevel.GetValueOrDefault()) : null);
										if (((b != null) ? new bool?(b.GetValueOrDefault() == 4) : null).GetValueOrDefault())
										{
											this.int_10 = this.int_10;
										}
									}
								}
							}
							System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), contact_0.vmethod_30(null), contact_0.vmethod_28(null));
							this.commandLayer_0.method_23(red, new System.Drawing.Point(point.X - 9, point.Y + 13), new System.Drawing.Point(point.X - 9 + this.int_10, point.Y + 13));
						}
					}
				}
			}
		}

		// Token: 0x06005F4E RID: 24398 RVA: 0x00344750 File Offset: 0x00342950
		private void method_71(Contact contact_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawFloodDamageBarForThisContact") && !Information.IsNothing(contact_0) && !Information.IsNothing(contact_0.activeUnit_0))
			{
				ActiveUnit activeUnit_ = contact_0.activeUnit_0;
				if (activeUnit_.bool_2 || activeUnit_.bool_3 || activeUnit_.bool_6)
				{
					Color dodgerBlue = Color.DodgerBlue;
					this.int_10 = 18;
					if (contact_0.method_78(Client.smethod_50()) != null)
					{
						ActiveUnit_Damage.FloodingIntensityLevel? floodingIntensityLevel = contact_0.method_78(Client.smethod_50());
						byte? b = (floodingIntensityLevel != null) ? new byte?((byte)floodingIntensityLevel.GetValueOrDefault()) : null;
						if (!((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
						{
							b = ((floodingIntensityLevel != null) ? new byte?((byte)floodingIntensityLevel.GetValueOrDefault()) : null);
							if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
							{
								this.int_10 = (int)Math.Round((double)this.int_10 * 0.25);
							}
							else
							{
								b = ((floodingIntensityLevel != null) ? new byte?((byte)floodingIntensityLevel.GetValueOrDefault()) : null);
								if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
								{
									this.int_10 = (int)Math.Round((double)this.int_10 * 0.5);
								}
								else
								{
									b = ((floodingIntensityLevel != null) ? new byte?((byte)floodingIntensityLevel.GetValueOrDefault()) : null);
									if (((b != null) ? new bool?(b.GetValueOrDefault() == 3) : null).GetValueOrDefault())
									{
										this.int_10 = (int)Math.Round((double)this.int_10 * 0.75);
									}
									else
									{
										b = ((floodingIntensityLevel != null) ? new byte?((byte)floodingIntensityLevel.GetValueOrDefault()) : null);
										if (((b != null) ? new bool?(b.GetValueOrDefault() == 4) : null).GetValueOrDefault())
										{
											this.int_10 = this.int_10;
										}
									}
								}
							}
							System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), contact_0.vmethod_30(null), contact_0.vmethod_28(null));
							this.commandLayer_0.method_23(dodgerBlue, new System.Drawing.Point(point.X - 9, point.Y + 17), new System.Drawing.Point(point.X - 9 + this.int_10, point.Y + 17));
						}
					}
				}
			}
		}

		// Token: 0x06005F4F RID: 24399 RVA: 0x00344A58 File Offset: 0x00342C58
		private void method_72(Contact contact_0, Color color_8)
		{
			if (!CommandLayer.smethod_1("CL_DrawContactDatablock") && contact_0 != null)
			{
				this.stringBuilder_1.Clear();
				this.stringBuilder_1.Append(Misc.smethod_9(contact_0.Name)).Append(" ");
				this.stringBuilder_1.Append("\r\n");
				this.stringBuilder_1.Append(string.Format("{0:0.0}", contact_0.vmethod_9(), 0)).Append(" deg").Append(" ");
				this.stringBuilder_1.Append("\r\n");
				this.stringBuilder_1.Append(string.Format("{0:0.0}", contact_0.vmethod_40(), 0)).Append(" kts").Append(" ");
				Tuple<int, int> tuple = null;
				this.dictionary_2.TryGetValue(contact_0, out tuple);
				System.Drawing.Point point;
				if (tuple != null)
				{
					int item = tuple.Item1;
					int item2 = tuple.Item2;
					point = new System.Drawing.Point(item, item2);
				}
				else
				{
					point = Class2572.smethod_0(this.vmethod_796(), contact_0.vmethod_30(null), contact_0.vmethod_28(null));
				}
				Contact_Base.ContactType contactType_ = contact_0.contactType_0;
				if (contactType_ <= Contact_Base.ContactType.Missile || contactType_ == Contact_Base.ContactType.Submarine || contactType_ - Contact_Base.ContactType.Torpedo <= 1)
				{
					this.stringBuilder_1.Append("\r\n").Append(contact_0.method_90(Class570.class280_0.method_12())).Append(" ");
				}
				System.Drawing.Point point2 = new System.Drawing.Point(point.X + 10, point.Y - 13);
				this.commandLayer_0.method_13(color_8, point2.X, point2.Y, this.stringBuilder_1.ToString(), 0.0, (int)this.short_0, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, !Client.smethod_52().method_27(), "Segoe UI");
			}
		}

		// Token: 0x06005F50 RID: 24400 RVA: 0x00344C4C File Offset: 0x00342E4C
		private void method_73(Contact contact_0, System.Drawing.Point point_6)
		{
			if (!CommandLayer.smethod_1("CL_DrawContactEmissions") && contact_0 != null && (!contact_0.bool_16 || (Client.smethod_42() != null && contact_0 == Client.smethod_42()) || (Client.smethod_54() != null && contact_0 == Client.smethod_54())) && contact_0.method_67())
			{
				ObservableDictionary<int, EmissionContainer> observableDictionary = contact_0.method_68();
				List<KeyValuePair<int, EmissionContainer>> list = new List<KeyValuePair<int, EmissionContainer>>(observableDictionary.Count);
				try
				{
					try
					{
						foreach (int key in observableDictionary.Keys)
						{
							list.Add(new KeyValuePair<int, EmissionContainer>(key, observableDictionary[key]));
						}
					}
					finally
					{
						IEnumerator<int> enumerator;
						if (enumerator != null)
						{
							enumerator.Dispose();
						}
					}
				}
				catch (Exception ex)
				{
				}
				if (list.Count != 0)
				{
					List<KeyValuePair<int, EmissionContainer>> list2;
					if (Client.smethod_52().method_55() == Class285.Enum86.const_1)
					{
						list2 = Enumerable.ToList<KeyValuePair<int, EmissionContainer>>(Enumerable.OrderBy<KeyValuePair<int, EmissionContainer>, float>(Enumerable.Where<KeyValuePair<int, EmissionContainer>>(Enumerable.Select<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(list, (MainForm._Closure$__.$I145-0 == null) ? (MainForm._Closure$__.$I145-0 = new Func<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(MainForm._Closure$__.$I.method_15)) : MainForm._Closure$__.$I145-0), (MainForm._Closure$__.$I145-1 == null) ? (MainForm._Closure$__.$I145-1 = new Func<KeyValuePair<int, EmissionContainer>, bool>(MainForm._Closure$__.$I.method_16)) : MainForm._Closure$__.$I145-1), (MainForm._Closure$__.$I145-2 == null) ? (MainForm._Closure$__.$I145-2 = new Func<KeyValuePair<int, EmissionContainer>, float>(MainForm._Closure$__.$I.method_17)) : MainForm._Closure$__.$I145-2));
					}
					else if (Client.smethod_52().method_55() == Class285.Enum86.const_2)
					{
						if (Client.smethod_54() != null && contact_0 == Client.smethod_54())
						{
							list2 = Enumerable.ToList<KeyValuePair<int, EmissionContainer>>(Enumerable.OrderBy<KeyValuePair<int, EmissionContainer>, float>(Enumerable.Where<KeyValuePair<int, EmissionContainer>>(Enumerable.Select<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(list, (MainForm._Closure$__.$I145-3 == null) ? (MainForm._Closure$__.$I145-3 = new Func<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(MainForm._Closure$__.$I.method_18)) : MainForm._Closure$__.$I145-3), (MainForm._Closure$__.$I145-4 == null) ? (MainForm._Closure$__.$I145-4 = new Func<KeyValuePair<int, EmissionContainer>, bool>(MainForm._Closure$__.$I.method_19)) : MainForm._Closure$__.$I145-4), (MainForm._Closure$__.$I145-5 == null) ? (MainForm._Closure$__.$I145-5 = new Func<KeyValuePair<int, EmissionContainer>, float>(MainForm._Closure$__.$I.method_20)) : MainForm._Closure$__.$I145-5));
						}
						else
						{
							list2 = Enumerable.ToList<KeyValuePair<int, EmissionContainer>>(Enumerable.OrderBy<KeyValuePair<int, EmissionContainer>, float>(Enumerable.Where<KeyValuePair<int, EmissionContainer>>(Enumerable.Select<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(list, (MainForm._Closure$__.$I145-6 == null) ? (MainForm._Closure$__.$I145-6 = new Func<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(MainForm._Closure$__.$I.method_21)) : MainForm._Closure$__.$I145-6), (MainForm._Closure$__.$I145-7 == null) ? (MainForm._Closure$__.$I145-7 = new Func<KeyValuePair<int, EmissionContainer>, bool>(MainForm._Closure$__.$I.method_22)) : MainForm._Closure$__.$I145-7), (MainForm._Closure$__.$I145-8 == null) ? (MainForm._Closure$__.$I145-8 = new Func<KeyValuePair<int, EmissionContainer>, float>(MainForm._Closure$__.$I.method_23)) : MainForm._Closure$__.$I145-8));
						}
					}
					else
					{
						list2 = Enumerable.ToList<KeyValuePair<int, EmissionContainer>>(Enumerable.OrderBy<KeyValuePair<int, EmissionContainer>, float>(Enumerable.Where<KeyValuePair<int, EmissionContainer>>(Enumerable.Select<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(list, (MainForm._Closure$__.$I145-9 == null) ? (MainForm._Closure$__.$I145-9 = new Func<KeyValuePair<int, EmissionContainer>, KeyValuePair<int, EmissionContainer>>(MainForm._Closure$__.$I.method_24)) : MainForm._Closure$__.$I145-9), (MainForm._Closure$__.$I145-10 == null) ? (MainForm._Closure$__.$I145-10 = new Func<KeyValuePair<int, EmissionContainer>, bool>(MainForm._Closure$__.$I.method_25)) : MainForm._Closure$__.$I145-10), (MainForm._Closure$__.$I145-11 == null) ? (MainForm._Closure$__.$I145-11 = new Func<KeyValuePair<int, EmissionContainer>, float>(MainForm._Closure$__.$I.method_26)) : MainForm._Closure$__.$I145-11));
					}
					int count = list2.Count;
					int num = 13;
					for (int i = count - 1; i >= 0; i += -1)
					{
						KeyValuePair<int, EmissionContainer> keyValuePair = list2[i];
						if (keyValuePair.Value != null)
						{
							int alpha = (int)Math.Round(Math.Min(255.0 * (1.0 / ((double)keyValuePair.Value.float_0 + 0.1)), 255.0));
							Color color;
							if (keyValuePair.Value.bool_0)
							{
								color = Color.OrangeRed;
							}
							else if (!keyValuePair.Value.method_0(keyValuePair.Key, Client.smethod_46()).method_72() && !keyValuePair.Value.method_0(keyValuePair.Key, Client.smethod_46()).method_71())
							{
								color = Color.FromArgb(alpha, 255, 255, 255);
							}
							else
							{
								color = Color.Yellow;
							}
							string text = keyValuePair.Value.method_1(keyValuePair.Key, Client.smethod_46());
							this.commandLayer_0.method_13(color, point_6.X - 23, point_6.Y - (count * num + 2) + (i * num + 2), text, 0.0, num, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
						}
					}
				}
			}
		}

		// Token: 0x06005F51 RID: 24401 RVA: 0x003450D0 File Offset: 0x003432D0
		private void method_74(ActiveUnit activeUnit_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawActiveUnit") && activeUnit_0 != null)
			{
				Color color = Client.smethod_29(Client.smethod_50().method_68(activeUnit_0.vmethod_7(false)));
				int int_ = 255;
				float num = 1f;
				Client.smethod_91(ref num, ref int_, activeUnit_0);
				Color color_;
				if (Client.smethod_52().method_27())
				{
					color_ = color;
				}
				else
				{
					color_ = Color.White;
				}
				try
				{
					if (!activeUnit_0.bool_2 || ((Weapon)activeUnit_0).method_167() != Weapon._WeaponType.Sonobuoy || Class570.class280_0.method_16() != Class279.Class280.Enum69.const_2)
					{
						if (activeUnit_0 == Client.smethod_54() && !activeUnit_0.method_5())
						{
							this.method_75(activeUnit_0);
						}
						if (activeUnit_0.method_56() == null)
						{
							activeUnit_0.method_57(new double?(activeUnit_0.vmethod_30(null)));
						}
						if (activeUnit_0.method_58() == null)
						{
							activeUnit_0.method_59(new double?(activeUnit_0.vmethod_28(null)));
						}
						System.Drawing.Point point;
						if (!activeUnit_0.vmethod_90().vmethod_1() && !Client.smethod_52().method_1() && !Class2558.smethod_17(activeUnit_0))
						{
							point = Class2572.smethod_0(this.vmethod_796(), activeUnit_0.method_56().Value, activeUnit_0.method_58().Value);
						}
						else
						{
							Tuple<int, int> tuple = null;
							this.dictionary_2.TryGetValue(activeUnit_0, out tuple);
							if (tuple != null)
							{
								int item = tuple.Item1;
								int item2 = tuple.Item2;
								point = new System.Drawing.Point(item, item2);
							}
							else
							{
								point = Class2572.smethod_0(this.vmethod_796(), activeUnit_0.vmethod_30(null), activeUnit_0.vmethod_28(null));
							}
						}
						if (activeUnit_0.bool_2)
						{
							float num2 = Conversions.ToSingle(string.Format("{0:0.0}", ((Weapon)activeUnit_0).method_183(), 1));
							if (num2 != 0f)
							{
								this.commandLayer_0.method_13(Color.White, point.X - 65, point.Y - 8, "Blind:" + Conversions.ToString(num2) + "s", 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
							}
							if (((Weapon)activeUnit_0).method_179() != null)
							{
								float num3 = Conversions.ToSingle(string.Format("{0:0.0}", ((Weapon)activeUnit_0).method_185(), 1));
								if (num3 > 6f)
								{
									this.commandLayer_0.method_13(Color.White, point.X - 65, point.Y - 18, "Attempt Retargeting:" + Conversions.ToString(num3) + "s", 0.0, 18, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
								}
							}
						}
						bool flag = false;
						string text = this.method_78(activeUnit_0, ref flag);
						if (!string.IsNullOrEmpty(text))
						{
							string value = this.method_83(text);
							if (Class570.class280_0.method_22() == Class279.Class280.Enum73.const_0 | Class570.class280_0.method_22() == Class279.Class280.Enum73.const_1)
							{
								flag = false;
							}
							int num4 = 20;
							if (flag && (activeUnit_0.bool_6 || activeUnit_0.bool_5))
							{
								num4 = 40;
							}
							if (flag && (activeUnit_0.bool_6 || activeUnit_0.bool_5))
							{
								double num5 = 0.0;
								if (activeUnit_0.bool_6)
								{
									num5 = (double)((Ship)activeUnit_0).float_13;
								}
								if (activeUnit_0.bool_5)
								{
									num5 = (double)((Submarine)activeUnit_0).float_13;
								}
								if (num5 >= 1.0)
								{
									GeoPoint geoPoint = Class2572.smethod_1(this.vmethod_796(), point.X - (int)Math.Round((double)num4 / 2.0), point.Y - (int)Math.Round((double)num4 / 2.0));
									GeoPoint geoPoint2 = Class2572.smethod_1(this.vmethod_796(), point.X + (int)Math.Round((double)num4 / 2.0), point.Y + (int)Math.Round((double)num4 / 2.0));
									double num6 = Math2.smethod_16(geoPoint.imethod_2(), geoPoint.imethod_0(), 0.0, geoPoint2.imethod_2(), geoPoint2.imethod_0(), 0.0) * 1852.0;
									double num7 = num5 / num6;
									if (num7 > 1.0)
									{
										num4 = (int)Math.Round((double)num4 * num7 * 1.4);
									}
								}
							}
							if (!string.IsNullOrEmpty(value))
							{
								System.Drawing.Point point2 = point;
								int int_2 = 255;
								if (activeUnit_0.bool_2 && ((Weapon)activeUnit_0).method_167() == Weapon._WeaponType.Sonobuoy && Class570.class280_0.method_16() == Class279.Class280.Enum69.const_1)
								{
									int_2 = 128;
								}
								Class285.Enum87 enum87_ = Client.smethod_52().enum87_0;
								if (enum87_ != Class285.Enum87.const_0)
								{
									if (enum87_ == Class285.Enum87.const_1)
									{
										if (flag)
										{
											this.commandLayer_0.method_17(value, int_2, point2.X - (int)Math.Round((double)num4 / 2.0), point2.Y - (int)Math.Round((double)num4 / 2.0), num4, num4, (double)activeUnit_0.vmethod_9(), this.enum164_0);
										}
										else
										{
											this.commandLayer_0.method_16(value, int_2, point2.X - (int)Math.Round((double)num4 / 2.0), point2.Y - (int)Math.Round((double)num4 / 2.0), num4, num4, this.enum164_0);
										}
										if (activeUnit_0.vmethod_92().vmethod_4().Count > 0 || activeUnit_0.vmethod_93().method_14().Count > 0)
										{
											this.commandLayer_0.method_16(this.method_83("hosted_units.png"), int_2, point.X, point.Y, 10, 10, this.enum164_0);
										}
									}
								}
								else if (!activeUnit_0.method_122())
								{
									if (flag)
									{
										this.commandLayer_0.method_17(value, int_2, point2.X - (int)Math.Round((double)num4 / 2.0), point2.Y - (int)Math.Round((double)num4 / 2.0), num4, num4, (double)activeUnit_0.vmethod_9(), this.enum164_0);
									}
									else
									{
										this.commandLayer_0.method_16(value, int_2, point2.X - (int)Math.Round((double)num4 / 2.0), point2.Y - (int)Math.Round((double)num4 / 2.0), num4, num4, this.enum164_0);
									}
									if (activeUnit_0.vmethod_92().vmethod_4().Count > 0 || activeUnit_0.vmethod_93().method_14().Count > 0)
									{
										this.commandLayer_0.method_16(this.method_83("hosted_units.png"), int_2, point.X, point.Y, 10, 10, this.enum164_0);
									}
								}
								if ((!flag || Class570.class280_0.method_22() != Class279.Class280.Enum73.const_2) && Math.Round((double)activeUnit_0.vmethod_40(), 1) > 0.0 && (activeUnit_0.vmethod_90().vmethod_1() || Client.smethod_52().method_1() || Class2558.smethod_17(activeUnit_0)))
								{
									this.method_77(activeUnit_0.vmethod_30(null), activeUnit_0.vmethod_28(null), activeUnit_0.vmethod_9(), activeUnit_0.vmethod_40(), point, color);
								}
								if (activeUnit_0.bool_6 && ((Ship)activeUnit_0).method_152())
								{
									this.commandLayer_0.method_24(color, point.X - 10, point.Y - 10, point.X + 10, point.Y + 10);
									this.commandLayer_0.method_24(color, point.X - 10, point.Y + 10, point.X + 10, point.Y - 10);
								}
								if (activeUnit_0.bool_2 && ((Weapon)activeUnit_0).method_167() == Weapon._WeaponType.Sonobuoy)
								{
									if (Class570.class280_0.method_16() == Class279.Class280.Enum69.const_1)
									{
										color = Color.FromArgb(128, color);
									}
									if (activeUnit_0.vmethod_14(false) >= -40f)
									{
										this.commandLayer_0.method_23(color, new System.Drawing.Point(point.X - 8, point.Y), new System.Drawing.Point(point.X, point.Y - 8));
										this.commandLayer_0.method_23(color, new System.Drawing.Point(point.X, point.Y - 8), new System.Drawing.Point(point.X + 8, point.Y));
									}
									else
									{
										this.commandLayer_0.method_23(color, new System.Drawing.Point(point.X - 8, point.Y + 4), new System.Drawing.Point(point.X, point.Y + 12));
										this.commandLayer_0.method_23(color, new System.Drawing.Point(point.X, point.Y + 12), new System.Drawing.Point(point.X + 8, point.Y + 4));
									}
								}
								Class285.Enum85 @enum = Client.smethod_52().method_47();
								if (@enum != Class285.Enum85.const_0)
								{
									if (@enum == Class285.Enum85.const_1)
									{
										if (activeUnit_0 == Client.smethod_54())
										{
											Class285.Enum87 enum87_2 = Client.smethod_52().enum87_0;
											if (enum87_2 != Class285.Enum87.const_0)
											{
												if (enum87_2 == Class285.Enum87.const_1)
												{
													if (!activeUnit_0.bool_1)
													{
														this.method_76(activeUnit_0, int_2, color_, "Verdana", (int)this.short_0, true);
													}
												}
											}
											else if (activeUnit_0.bool_1 || !activeUnit_0.method_120())
											{
												this.method_76(activeUnit_0, int_, color_, "Verdana", (int)this.short_0, true);
											}
										}
									}
								}
								else
								{
									Class285.Enum87 enum87_3 = Client.smethod_52().enum87_0;
									if (enum87_3 != Class285.Enum87.const_0)
									{
										if (enum87_3 == Class285.Enum87.const_1)
										{
											if (!activeUnit_0.bool_1)
											{
												this.method_76(activeUnit_0, int_2, color_, "Verdana", (int)this.short_0, true);
											}
										}
									}
									else if (activeUnit_0.bool_1 || !activeUnit_0.method_120())
									{
										this.method_76(activeUnit_0, int_, color_, "Verdana", (int)this.short_0, true);
									}
								}
								if (Client.smethod_77(activeUnit_0) && !activeUnit_0.bool_1 && activeUnit_0.vmethod_88().method_12())
								{
									System.Drawing.Point point3 = new System.Drawing.Point(point.X - 14, point.Y - 28);
									this.commandLayer_0.method_13(Color.Red, point3.X, point3.Y, "JAM", 0.0, 11, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
								}
								if (Client.smethod_77(activeUnit_0) && activeUnit_0 != null)
								{
									if (!activeUnit_0.bool_1)
									{
										if (activeUnit_0.vmethod_88() != null && (activeUnit_0.vmethod_88().method_9() || activeUnit_0.vmethod_90().method_8()))
										{
											this.commandLayer_0.method_13(Color.Red, point.X - 65, point.Y - 8, "JAMMED", 0.0, 11, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
										}
									}
									else
									{
										try
										{
											foreach (ActiveUnit activeUnit in ((Group)activeUnit_0).vmethod_141().Values)
											{
												if (activeUnit.vmethod_88().method_9() || activeUnit.vmethod_90().method_8())
												{
													this.commandLayer_0.method_13(Color.Red, point.X - 65, point.Y - 8, "JAMMED", 0.0, 11, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
													break;
												}
											}
										}
										finally
										{
											IEnumerator<ActiveUnit> enumerator;
											if (enumerator != null)
											{
												enumerator.Dispose();
											}
										}
									}
								}
								if (activeUnit_0.vmethod_7(false) != Client.smethod_50())
								{
									if (Client.smethod_50().method_67(activeUnit_0.vmethod_7(false)))
									{
										this.commandLayer_0.method_13(Client.color_0, point.X - 5, point.Y + 15, "A", 0.0, 13, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
									}
									else if (Client.smethod_50().method_68(activeUnit_0.vmethod_7(false)) == Misc.PostureStance.Friendly)
									{
										this.commandLayer_0.method_13(Client.color_0, point.X - 5, point.Y + 15, "A", 0.0, 13, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
									}
									else if (this.dictionary_0[Client.smethod_50().string_0].Contains(activeUnit_0.vmethod_7(false).string_0))
									{
										this.commandLayer_0.method_13(Client.color_0, point.X - 5, point.Y + 15, "A", 0.0, 13, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
									}
								}
								if (activeUnit_0.bool_2 && ((Weapon)activeUnit_0).class394_0.bool_5 && !Information.IsNothing(((Weapon)activeUnit_0).keyValuePair_0))
								{
									System.Drawing.Point point4 = default(System.Drawing.Point);
									point4.X = point.X - 12;
									point4.Y = point.Y - 22;
									int key = ((Weapon)activeUnit_0).keyValuePair_0.Key;
									string text2;
									if (key > 0)
									{
										int num8 = key;
										SQLiteConnection sqliteConnection = Client.smethod_46().method_39();
										text2 = Misc.smethod_9(DBFunctions.smethod_97(num8, ref sqliteConnection).Name);
									}
									else
									{
										text2 = "No emission lock";
									}
									this.commandLayer_0.method_13(Color.White, point4.X, point4.Y, text2, 0.0, 9, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
								}
								if (!activeUnit_0.vmethod_90().vmethod_1())
								{
									Class285.Enum87 enum87_4 = Client.smethod_52().enum87_0;
									if (enum87_4 != Class285.Enum87.const_0)
									{
										if (enum87_4 == Class285.Enum87.const_1)
										{
											this.commandLayer_0.method_13(Color.OrangeRed, point.X - 26, point.Y + 12, "NOCOMM", 0.0, 11, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
										}
									}
									else if (!activeUnit_0.method_120() || activeUnit_0.vmethod_65(false).vmethod_90().vmethod_1())
									{
										this.commandLayer_0.method_13(Color.OrangeRed, point.X - 26, point.Y + 12, "NOCOMM", 0.0, 11, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
									}
								}
								if (Client.smethod_77(activeUnit_0) && (Client.smethod_52().method_39() != Class285.Enum85.const_2 || Client.smethod_52().method_41() != Class285.Enum85.const_2) && ((activeUnit_0.bool_6 && ((Ship)activeUnit_0).method_142()) || (activeUnit_0.bool_5 && ((Submarine)activeUnit_0).method_150())))
								{
									this.commandLayer_0.method_13(Client.color_3, point.X - 10, point.Y + 15, "CAV", 0.0, 13, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Segoe UI");
								}
								if (Client.smethod_77(activeUnit_0) && activeUnit_0.bool_3 && ((Aircraft_AirOps)activeUnit_0.vmethod_92()).method_36() == Aircraft_AirOps._AirOpsCondition.HoldingOnLandingQueue)
								{
									if (!Information.IsNothing(activeUnit_0.vmethod_101()) && activeUnit_0.vmethod_101()._MissionClass_0 == Mission._MissionClass.Ferry && !Information.IsNothing(((Aircraft_AirOps)activeUnit_0.vmethod_92()).method_21()))
									{
										this.commandLayer_0.method_13(Color.Yellow, point.X - 16, point.Y + 15, "L" + Conversions.ToString(Array.IndexOf<Aircraft>(((Aircraft_AirOps)activeUnit_0.vmethod_92()).method_21().vmethod_92().method_4(), (Aircraft)activeUnit_0)), 0.0, 11, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
									}
									else
									{
										this.commandLayer_0.method_13(Color.Yellow, point.X - 16, point.Y + 15, "L" + Conversions.ToString(Array.IndexOf<Aircraft>(((Aircraft_AirOps)activeUnit_0.vmethod_92()).method_32(false).vmethod_92().method_4(), (Aircraft)activeUnit_0)), 0.0, 11, Microsoft.DirectX.Direct3D.FontWeight.Normal, false, false, "Verdana");
									}
								}
							}
						}
					}
				}
				catch (Exception ex)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F52 RID: 24402 RVA: 0x00346154 File Offset: 0x00344354
		private void method_75(ActiveUnit activeUnit_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawFormationStation"))
			{
				try
				{
					if (activeUnit_0 != null)
					{
						if (activeUnit_0.vmethod_7(false) == Client.smethod_50())
						{
							if (Client.smethod_77(activeUnit_0))
							{
								if (activeUnit_0.method_120())
								{
									if (!activeUnit_0.method_122())
									{
										if (activeUnit_0.vmethod_65(false).method_147() != null)
										{
											if (activeUnit_0.vmethod_85().method_2() != null)
											{
												ActiveUnit activeUnit_ = activeUnit_0.vmethod_65(false).method_147();
												Color color = Color.FromArgb(128, 255, 255, 255);
												ActiveUnit_Navigator.Class216 @class = activeUnit_0.vmethod_85().method_2();
												if (@class != null)
												{
													Tuple<double, double> tuple = @class.method_0(activeUnit_0, activeUnit_);
													double item = tuple.Item1;
													double item2 = tuple.Item2;
													Class2572.smethod_4(this.vmethod_796(), item, item2, ref this.int_8, ref this.int_9);
													System.Drawing.Point point = new System.Drawing.Point(this.int_8, this.int_9);
													System.Drawing.Point[] path = new System.Drawing.Point[]
													{
														new System.Drawing.Point(point.X - 10, point.Y),
														new System.Drawing.Point(point.X, point.Y - 10),
														new System.Drawing.Point(point.X + 10, point.Y),
														new System.Drawing.Point(point.X, point.Y + 10),
														new System.Drawing.Point(point.X - 10, point.Y)
													};
													this.commandLayer_0.method_21(color, 1, path, false);
													string text;
													if (@class.orientationType_0 == ReferencePoint.OrientationType.Fixed)
													{
														text = "Station(F)";
													}
													else
													{
														text = "Station(R)";
													}
													this.commandLayer_0.method_13(color, point.X - 70, point.Y, text, 0.0, Client.font_1.Height, Microsoft.DirectX.Direct3D.FontWeight.Bold, false, false, "Segoe UI");
												}
											}
										}
									}
								}
							}
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 101153", "");
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F53 RID: 24403 RVA: 0x003463AC File Offset: 0x003445AC
		private void method_76(ActiveUnit activeUnit_0, int int_11, Color color_8, string string_11, int int_12, bool bool_15)
		{
			if (!CommandLayer.smethod_1("CL_DrawActiveUnitDatablock") && activeUnit_0 != null)
			{
				this.stringBuilder_2.Clear();
				this.stringBuilder_2.Append(Misc.smethod_9(activeUnit_0.Name)).Append(" ");
				this.string_10 = "";
				if (!activeUnit_0.vmethod_90().vmethod_1() && !Client.smethod_52().method_1() && !Class2558.smethod_17(activeUnit_0))
				{
					int_11 = 64;
				}
				else if (!activeUnit_0.bool_25 && (activeUnit_0.vmethod_56() != GlobalVariables.ActiveUnitType.Facility || ((Facility)activeUnit_0).method_154()))
				{
					this.stringBuilder_2.Append("\r\n");
					this.stringBuilder_2.Append((int)Math.Round((double)activeUnit_0.vmethod_9())).Append(" deg").Append(" ");
					this.stringBuilder_2.Append("\r\n");
					if (activeUnit_0.vmethod_40() > 1f)
					{
						this.stringBuilder_2.Append((int)Math.Round((double)activeUnit_0.vmethod_40())).Append(" kts").Append(" ");
					}
					else if (activeUnit_0.vmethod_40() > 0f)
					{
						this.stringBuilder_2.Append(string.Format("{0:0.0}", activeUnit_0.vmethod_40(), 0)).Append(" kts").Append(" ");
					}
				}
				if ((int)color_8.A != int_11)
				{
					color_8 = Color.FromArgb(int_11, (int)color_8.R, (int)color_8.G, (int)color_8.B);
				}
				System.Drawing.Point point;
				if (activeUnit_0.bool_1)
				{
					if (((Group)activeUnit_0).method_147() == null)
					{
						point = Class2572.smethod_0(this.vmethod_796(), activeUnit_0.vmethod_30(null), activeUnit_0.vmethod_28(null));
					}
					else
					{
						point = Class2572.smethod_0(this.vmethod_796(), ((Group)activeUnit_0).method_147().vmethod_30(null), ((Group)activeUnit_0).method_147().vmethod_28(null));
					}
				}
				else if (!activeUnit_0.vmethod_90().vmethod_1() && !Client.smethod_52().method_1() && Operators.CompareString(activeUnit_0.string_0, Client.smethod_52().method_59(), false) != 0)
				{
					point = Class2572.smethod_0(this.vmethod_796(), activeUnit_0.method_56().Value, activeUnit_0.method_58().Value);
				}
				else
				{
					point = Class2572.smethod_0(this.vmethod_796(), activeUnit_0.vmethod_30(null), activeUnit_0.vmethod_28(null));
				}
				if (activeUnit_0.bool_5 && (activeUnit_0.vmethod_90().vmethod_1() || Class2558.smethod_17(activeUnit_0) || Client.smethod_52().method_1()))
				{
					if (Class570.class280_0.method_12())
					{
						this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false) * 3.28084f, 0) + " ft";
					}
					else
					{
						this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false), 0) + " m";
					}
					this.stringBuilder_2.Append("\r\n").Append(this.string_10).Append(" ");
				}
				if ((activeUnit_0.bool_3 && (activeUnit_0.vmethod_90().vmethod_1() || Class2558.smethod_17(activeUnit_0) || Client.smethod_52().method_1())) || activeUnit_0.bool_2)
				{
					if (Class570.class280_0.method_12())
					{
						if (activeUnit_0.vmethod_14(false) > 45720f)
						{
							this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false) / 1000f, 1) + " km ASL";
						}
						else if (activeUnit_0.vmethod_14(false) > 3048f)
						{
							this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false) * 3.28084f, 0) + " ft ASL";
						}
						else if (activeUnit_0.method_15())
						{
							this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false) * 3.28084f, 0) + " ft ASL (" + string.Format("{0:0.0}", activeUnit_0.vmethod_13() * 3.28084f, 0) + " ft AGL)";
						}
						else
						{
							this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false) * 3.28084f, 0) + " ft ASL";
						}
					}
					else if (activeUnit_0.vmethod_14(false) > 45720f)
					{
						this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false) / 1000f, 1) + " km ASL";
					}
					else if (activeUnit_0.vmethod_14(false) > 3048f)
					{
						this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false), 0) + " m ASL";
					}
					else if (activeUnit_0.method_15())
					{
						this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false), 0) + " m ASL (" + string.Format("{0:0.0}", activeUnit_0.vmethod_13(), 0) + " m AGL)";
					}
					else
					{
						this.string_10 = string.Format("{0:0.0}", activeUnit_0.vmethod_14(false), 0) + " m ASL";
					}
					this.stringBuilder_2.Append("\r\n").Append(this.string_10).Append(" ");
				}
				if ((activeUnit_0.vmethod_90().vmethod_1() || Class2558.smethod_17(activeUnit_0) || Client.smethod_52().method_1()) && activeUnit_0.bool_1 && ((Group)activeUnit_0).method_143() == Group.GroupType.AirGroup)
				{
					if (((Group)activeUnit_0).method_147() != null)
					{
						if (Class570.class280_0.method_12())
						{
							this.string_10 = string.Format("{0:0.0}", ((Group)activeUnit_0).method_147().vmethod_14(false) * 3.28084f, 0) + " ft";
						}
						else
						{
							this.string_10 = string.Format("{0:0.0}", ((Group)activeUnit_0).method_147().vmethod_14(false), 0) + " m";
						}
					}
					this.stringBuilder_2.Append("\r\n").Append(this.string_10).Append(" ");
				}
				if (GameGeneral.bool_6 && activeUnit_0.vmethod_43())
				{
					this.stringBuilder_2.Append("\r\n").Append("TGT:").Append(string.Format("{0:0.0}", activeUnit_0.vmethod_86().float_1)).Append(" ");
					this.stringBuilder_2.Append("\r\n").Append("THR:").Append(string.Format("{0:0.0}", activeUnit_0.vmethod_86().float_2)).Append(" ");
				}
				System.Drawing.Point point2 = new System.Drawing.Point(point.X + 12, point.Y - 13);
				this.commandLayer_0.method_13(color_8, point2.X, point2.Y, this.stringBuilder_2.ToString(), 0.0, int_12, bool_15 ? Microsoft.DirectX.Direct3D.FontWeight.Bold : Microsoft.DirectX.Direct3D.FontWeight.Normal, false, !Client.smethod_52().method_27(), "Segoe UI");
			}
		}

		// Token: 0x06005F54 RID: 24404 RVA: 0x00346BB0 File Offset: 0x00344DB0
		public void method_77(double double_2, double double_3, float float_6, float float_7, System.Drawing.Point point_6, Color color_8)
		{
			if (!CommandLayer.smethod_1("CL_DrawMovementVector"))
			{
				this.float_2 = float_6;
				Geopoint_Struct geopoint_Struct;
				Class411.smethod_1(double_3, double_2, ref geopoint_Struct.double_0, ref geopoint_Struct.double_1, 100.0, (double)this.float_2);
				System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
				int num = point.Y - point_6.Y;
				int num2 = point.X - point_6.X;
				this.float_3 = (float)Math2.smethod_6(Math.Atan2((double)num, (double)num2) * 180.0 / 3.14159265358979 + 90.0);
				short num3 = (short)Math.Round((double)20f * Math2.smethod_2((double)this.float_3));
				short num4 = (short)Math.Round((double)20f * Math2.smethod_1((double)this.float_3));
				this.commandLayer_0.method_24(color_8, point_6.X, point_6.Y, point_6.X + (int)num4, point_6.Y - (int)num3);
			}
		}

		// Token: 0x06005F55 RID: 24405 RVA: 0x00346CC8 File Offset: 0x00344EC8
		private string method_78(Unit unit_0, ref bool bool_15)
		{
			string str = "";
			string result = "";
			try
			{
				if (unit_0.bool_0)
				{
					if (this.dictionary_0[Client.smethod_50().string_0].Contains(unit_0.vmethod_7(false).string_0))
					{
						str = "friendly.png";
					}
					else
					{
						switch (Client.smethod_50().method_68(unit_0.vmethod_7(false)))
						{
						case Misc.PostureStance.Neutral:
							str = "neutral.png";
							break;
						case Misc.PostureStance.Friendly:
							str = "friendly.png";
							break;
						case Misc.PostureStance.Unfriendly:
							str = "unfriendly.png";
							break;
						case Misc.PostureStance.Hostile:
							str = "hostile.png";
							break;
						case Misc.PostureStance.Unknown:
							str = "unknown.png";
							break;
						}
					}
				}
				if (unit_0.bool_1)
				{
					if (((Group)unit_0).vmethod_141().Count == 0)
					{
						return null;
					}
					switch (((Group)unit_0).method_143())
					{
					case Group.GroupType.AirGroup:
						result = "AirGroup_" + str;
						bool_15 = true;
						break;
					case Group.GroupType.SurfaceGroup:
						result = "SurfaceGroup_" + str;
						bool_15 = true;
						break;
					case Group.GroupType.SubGroup:
						result = "SubGroup_" + str;
						bool_15 = true;
						break;
					case Group.GroupType.Installation:
					case Group.GroupType.NavalBase:
						result = "Installation_" + str;
						break;
					case Group.GroupType.MobileGroup:
						result = "mobilegroup_" + str;
						break;
					case Group.GroupType.AirBase:
						result = "AirBase_" + str;
						break;
					}
				}
				else if (unit_0.bool_3)
				{
					if (((Aircraft)unit_0).method_169())
					{
						result = "air_rw_" + str;
					}
					else if (((Aircraft)unit_0).enum40_0 == Aircraft.Enum40.const_6)
					{
						result = "aerostat_" + str;
					}
					else
					{
						result = "air_fw_" + str;
					}
					bool_15 = true;
				}
				else if (unit_0.bool_6)
				{
					if (((Ship)unit_0).enum118_0 == Ship.Enum118.const_2)
					{
						result = "carrier_" + str;
					}
					else
					{
						result = "seasurface_" + str;
					}
					bool_15 = true;
				}
				else if (unit_0.bool_5)
				{
					result = "sub_" + str;
					bool_15 = true;
				}
				else if (unit_0.bool_8)
				{
					Facility._FacilityCategory facilityCategory_ = ((Facility)unit_0)._FacilityCategory_0;
					if (facilityCategory_ != Facility._FacilityCategory.Mobile_Vehicle)
					{
						if (facilityCategory_ != Facility._FacilityCategory.Mobile_Personnel)
						{
							string left = Misc.smethod_41(unit_0.string_2);
							uint num = Class2574.smethod_0(left);
							if (num <= 716611045U)
							{
								if (num <= 536261884U)
								{
									if (num != 108276744U)
									{
										if (num == 536261884U)
										{
											if (Operators.CompareString(left, "SAM", false) == 0)
											{
												result = "airdef_mis_" + str;
												goto IL_6EA;
											}
										}
									}
									else if (Operators.CompareString(left, "Inf", false) == 0)
									{
										result = "infantry_" + str;
										goto IL_6EA;
									}
								}
								else if (num != 562859689U)
								{
									if (num == 716611045U)
									{
										if (Operators.CompareString(left, "Armored", false) == 0)
										{
											result = "armor_" + str;
											goto IL_6EA;
										}
									}
								}
								else if (Operators.CompareString(left, "Arty", false) == 0)
								{
									result = "arty_gun_" + str;
									goto IL_6EA;
								}
							}
							else if (num <= 1267298235U)
							{
								if (num != 1142521834U)
								{
									if (num == 1267298235U)
									{
										if (Operators.CompareString(left, "Radar", false) == 0)
										{
											result = "radar_" + str;
											goto IL_6EA;
										}
									}
								}
								else if (Operators.CompareString(left, "SSM", false) == 0)
								{
									result = "arty_mis_" + str;
									goto IL_6EA;
								}
							}
							else if (num != 3061902210U)
							{
								if (num == 3887666188U)
								{
									if (Operators.CompareString(left, "Mech", false) == 0)
									{
										result = "mechinf_" + str;
										goto IL_6EA;
									}
								}
							}
							else if (Operators.CompareString(left, "AAA", false) == 0)
							{
								result = "airdef_arty_" + str;
								goto IL_6EA;
							}
							if (unit_0.string_2.Contains("irfield"))
							{
								result = "AirBase_" + str;
							}
							else
							{
								result = "fixed_" + str;
							}
						}
						else
						{
							result = "infantry_" + str;
						}
					}
					else
					{
						string left2 = Misc.smethod_41(unit_0.string_2);
						uint num = Class2574.smethod_0(left2);
						if (num <= 716611045U)
						{
							if (num <= 536261884U)
							{
								if (num != 108276744U)
								{
									if (num == 536261884U)
									{
										if (Operators.CompareString(left2, "SAM", false) == 0)
										{
											result = "airdef_mis_" + str;
											goto IL_6EA;
										}
									}
								}
								else if (Operators.CompareString(left2, "Inf", false) == 0)
								{
									result = "infantry_" + str;
									goto IL_6EA;
								}
							}
							else if (num != 562859689U)
							{
								if (num == 716611045U)
								{
									if (Operators.CompareString(left2, "Armored", false) == 0)
									{
										result = "armor_" + str;
										goto IL_6EA;
									}
								}
							}
							else if (Operators.CompareString(left2, "Arty", false) == 0)
							{
								result = "arty_gun_" + str;
								goto IL_6EA;
							}
						}
						else if (num <= 1267298235U)
						{
							if (num != 1142521834U)
							{
								if (num == 1267298235U)
								{
									if (Operators.CompareString(left2, "Radar", false) == 0)
									{
										result = "radar_" + str;
										goto IL_6EA;
									}
								}
							}
							else if (Operators.CompareString(left2, "SSM", false) == 0)
							{
								result = "arty_mis_" + str;
								goto IL_6EA;
							}
						}
						else if (num != 3061902210U)
						{
							if (num == 3887666188U)
							{
								if (Operators.CompareString(left2, "Mech", false) == 0)
								{
									result = "mechinf_" + str;
									goto IL_6EA;
								}
							}
						}
						else if (Operators.CompareString(left2, "AAA", false) == 0)
						{
							result = "airdef_arty_" + str;
							goto IL_6EA;
						}
						result = "mobile_" + str;
					}
				}
				else if (unit_0.bool_2)
				{
					Weapon._WeaponType weaponType = ((Weapon)unit_0).method_167();
					if (weaponType <= Weapon._WeaponType.GuidedProjectile)
					{
						if (weaponType != Weapon._WeaponType.GuidedWeapon)
						{
							if (weaponType == Weapon._WeaponType.Decoy_Vehicle)
							{
								if (((Weapon)unit_0).method_88())
								{
									result = "air_decoy_" + str;
								}
								bool_15 = true;
								goto IL_6EA;
							}
							if (weaponType != Weapon._WeaponType.GuidedProjectile)
							{
								goto IL_6EA;
							}
						}
					}
					else if (weaponType <= Weapon._WeaponType.Sonobuoy)
					{
						if (weaponType == Weapon._WeaponType.Torpedo)
						{
							result = "torp_" + str;
							bool_15 = true;
							goto IL_6EA;
						}
						if (weaponType != Weapon._WeaponType.Sonobuoy)
						{
							goto IL_6EA;
						}
						if (((Weapon)unit_0).method_78().Length <= 0)
						{
							result = "sonobuoy_passive_" + str;
							goto IL_6EA;
						}
						if (((Weapon)unit_0).method_78()[0].method_46())
						{
							result = "sonobuoy_active_" + str;
							goto IL_6EA;
						}
						result = "sonobuoy_passive_" + str;
						goto IL_6EA;
					}
					else if (weaponType - Weapon._WeaponType.BallisticMissile > 1 && weaponType != Weapon._WeaponType.HGV)
					{
						goto IL_6EA;
					}
					result = "missile_" + str;
					bool_15 = true;
				}
				else if (unit_0.method_1())
				{
					result = "satellite_" + str;
				}
				IL_6EA:
				if (unit_0.method_14())
				{
					switch (((Contact)unit_0).method_130(Client.smethod_50()))
					{
					case Misc.PostureStance.Neutral:
						str = "neutral.png";
						break;
					case Misc.PostureStance.Friendly:
						str = "friendly.png";
						break;
					case Misc.PostureStance.Unfriendly:
						str = "unfriendly.png";
						break;
					case Misc.PostureStance.Hostile:
						str = "hostile.png";
						break;
					case Misc.PostureStance.Unknown:
						str = "unknown.png";
						break;
					}
					Contact contact = (Contact)unit_0;
					switch (contact.contactType_0)
					{
					case Contact_Base.ContactType.Air:
						if (Information.IsNothing(contact.activeUnit_0))
						{
							return null;
						}
						if (contact.activeUnit_0.bool_3)
						{
							if (((Aircraft)contact.activeUnit_0).method_169())
							{
								result = "air_rw_" + str;
							}
							else if (((Aircraft)contact.activeUnit_0).enum40_0 == Aircraft.Enum40.const_6)
							{
								result = "aerostat_" + str;
							}
							else
							{
								result = "air_fw_" + str;
							}
						}
						else
						{
							result = "air_fw_" + str;
						}
						bool_15 = true;
						goto IL_1030;
					case Contact_Base.ContactType.Missile:
					case Contact_Base.ContactType.Torpedo:
					case Contact_Base.ContactType.Mine:
					{
						if (Information.IsNothing(contact.activeUnit_0))
						{
							return null;
						}
						Weapon._WeaponType weaponType2 = ((Weapon)contact.activeUnit_0).method_167();
						if (weaponType2 <= Weapon._WeaponType.GuidedProjectile)
						{
							if (weaponType2 != Weapon._WeaponType.GuidedWeapon && weaponType2 != Weapon._WeaponType.Decoy_Vehicle && weaponType2 != Weapon._WeaponType.GuidedProjectile)
							{
								goto IL_E3C;
							}
						}
						else
						{
							if (weaponType2 == Weapon._WeaponType.Torpedo)
							{
								result = "torp_hostile.png";
								goto IL_E3C;
							}
							if (weaponType2 - Weapon._WeaponType.BallisticMissile > 1 && weaponType2 != Weapon._WeaponType.HGV)
							{
								goto IL_E3C;
							}
						}
						result = "missile_hostile.png";
						IL_E3C:
						bool_15 = true;
						goto IL_1030;
					}
					case Contact_Base.ContactType.Surface:
					{
						Contact_Base.IdentificationStatus identificationStatus = contact.method_125();
						if (identificationStatus > Contact_Base.IdentificationStatus.KnownDomain)
						{
							if (identificationStatus - Contact_Base.IdentificationStatus.KnownType <= 2)
							{
								if (Information.IsNothing(contact.activeUnit_0))
								{
									return null;
								}
								if (contact.activeUnit_0.bool_6)
								{
									if (((Ship)contact.activeUnit_0).enum118_0 == Ship.Enum118.const_2)
									{
										result = "carrier_" + str;
									}
									else
									{
										result = "seasurface_" + str;
									}
								}
								else if (contact.activeUnit_0.bool_5)
								{
									result = "sub_" + str;
								}
							}
						}
						else
						{
							result = "seasurface_" + str;
						}
						bool_15 = true;
						goto IL_1030;
					}
					case Contact_Base.ContactType.Submarine:
						result = "sub_" + str;
						bool_15 = true;
						goto IL_1030;
					case Contact_Base.ContactType.Aimpoint:
						result = "Installation_" + str;
						goto IL_1030;
					case Contact_Base.ContactType.Orbital:
						result = "satellite_" + str;
						goto IL_1030;
					case Contact_Base.ContactType.Facility_Fixed:
					{
						if (Information.IsNothing(contact.activeUnit_0))
						{
							return null;
						}
						Facility._FacilityCategory facilityCategory_2 = ((Facility)contact.activeUnit_0)._FacilityCategory_0;
						if (facilityCategory_2 != Facility._FacilityCategory.Runway)
						{
							if (facilityCategory_2 != Facility._FacilityCategory.AirBase)
							{
								string left3 = Misc.smethod_41(contact.activeUnit_0.string_2);
								if (Operators.CompareString(left3, "Radar", false) == 0)
								{
									result = "radar_" + str;
									goto IL_1030;
								}
								if (Operators.CompareString(left3, "SAM", false) == 0)
								{
									result = "airdef_mis_" + str;
									goto IL_1030;
								}
								if (Operators.CompareString(left3, "AAA", false) == 0)
								{
									result = "airdef_arty_" + str;
									goto IL_1030;
								}
								if (Operators.CompareString(left3, "Arty", false) == 0)
								{
									result = "arty_gun_" + str;
									goto IL_1030;
								}
								if (Operators.CompareString(left3, "SSM", false) == 0)
								{
									result = "arty_mis_" + str;
									goto IL_1030;
								}
								if (Operators.CompareString(left3, "Remote", false) != 0)
								{
									result = "fixed_" + str;
									goto IL_1030;
								}
								result = "AirBase_" + str;
								goto IL_1030;
							}
						}
						result = "AirBase_" + str;
						goto IL_1030;
					}
					case Contact_Base.ContactType.Facility_Mobile:
						switch (contact.method_125())
						{
						case Contact_Base.IdentificationStatus.Unknown:
							result = "unknown.png";
							goto IL_1030;
						case Contact_Base.IdentificationStatus.KnownDomain:
							switch (contact.method_130(Client.smethod_50()))
							{
							case Misc.PostureStance.Neutral:
								result = "unknown.png";
								goto IL_1030;
							case Misc.PostureStance.Friendly:
								result = "unknown.png";
								goto IL_1030;
							case Misc.PostureStance.Unfriendly:
								result = "unknown_unfriendly.png";
								goto IL_1030;
							case Misc.PostureStance.Hostile:
								result = "unknown_hostile.png";
								goto IL_1030;
							case Misc.PostureStance.Unknown:
								result = "unknown.png";
								goto IL_1030;
							default:
								goto IL_1030;
							}
							break;
						case Contact_Base.IdentificationStatus.KnownType:
						case Contact_Base.IdentificationStatus.KnownClass:
						case Contact_Base.IdentificationStatus.PreciseID:
						{
							if (Information.IsNothing(contact.activeUnit_0))
							{
								return null;
							}
							string left4 = Misc.smethod_41(contact.activeUnit_0.string_2);
							uint num = Class2574.smethod_0(left4);
							if (num <= 716611045U)
							{
								if (num <= 536261884U)
								{
									if (num != 108276744U)
									{
										if (num == 536261884U)
										{
											if (Operators.CompareString(left4, "SAM", false) == 0)
											{
												result = "airdef_mis_" + str;
												goto IL_1030;
											}
										}
									}
									else if (Operators.CompareString(left4, "Inf", false) == 0)
									{
										switch (contact.method_130(Client.smethod_50()))
										{
										case Misc.PostureStance.Neutral:
											result = "infantry_neutral.png";
											goto IL_1030;
										case Misc.PostureStance.Friendly:
											result = "infantry_friendly.png";
											goto IL_1030;
										case Misc.PostureStance.Unfriendly:
											result = "infantry_unfriendly.png";
											goto IL_1030;
										case Misc.PostureStance.Hostile:
											result = "infantry_hostile.png";
											goto IL_1030;
										case Misc.PostureStance.Unknown:
											result = "infantry_unknown.png";
											goto IL_1030;
										default:
											goto IL_1030;
										}
									}
								}
								else if (num != 562859689U)
								{
									if (num == 716611045U)
									{
										if (Operators.CompareString(left4, "Armored", false) == 0)
										{
											result = "armor_" + str;
											goto IL_1030;
										}
									}
								}
								else if (Operators.CompareString(left4, "Arty", false) == 0)
								{
									result = "arty_gun_" + str;
									goto IL_1030;
								}
							}
							else if (num <= 1267298235U)
							{
								if (num != 1142521834U)
								{
									if (num == 1267298235U)
									{
										if (Operators.CompareString(left4, "Radar", false) == 0)
										{
											result = "radar_" + str;
											goto IL_1030;
										}
									}
								}
								else if (Operators.CompareString(left4, "SSM", false) == 0)
								{
									result = "arty_mis_" + str;
									goto IL_1030;
								}
							}
							else if (num != 3061902210U)
							{
								if (num == 3887666188U)
								{
									if (Operators.CompareString(left4, "Mech", false) == 0)
									{
										switch (contact.method_130(Client.smethod_50()))
										{
										case Misc.PostureStance.Neutral:
											result = "mechinf_neutral.png";
											goto IL_1030;
										case Misc.PostureStance.Friendly:
											result = "mechinf_friendly.png";
											goto IL_1030;
										case Misc.PostureStance.Unfriendly:
											result = "mechinf_unfriendly.png";
											goto IL_1030;
										case Misc.PostureStance.Hostile:
											result = "mechinf_hostile.png";
											goto IL_1030;
										case Misc.PostureStance.Unknown:
											result = "mechinf_unknown.png";
											goto IL_1030;
										default:
											goto IL_1030;
										}
									}
								}
							}
							else if (Operators.CompareString(left4, "AAA", false) == 0)
							{
								result = "airdef_arty_" + str;
								goto IL_1030;
							}
							switch (contact.method_130(Client.smethod_50()))
							{
							case Misc.PostureStance.Neutral:
								result = "mobile_neutral.png";
								goto IL_1030;
							case Misc.PostureStance.Friendly:
								result = "mobile_friendly.png";
								goto IL_1030;
							case Misc.PostureStance.Unfriendly:
								result = "mobile_unfriendly.png";
								goto IL_1030;
							case Misc.PostureStance.Hostile:
								result = "mobile_hostile.png";
								goto IL_1030;
							case Misc.PostureStance.Unknown:
								result = "mobile_unknown.png";
								goto IL_1030;
							default:
								goto IL_1030;
							}
							break;
						}
						default:
							goto IL_1030;
						}
						break;
					case Contact_Base.ContactType.Decoy_Air:
					case Contact_Base.ContactType.Decoy_Surface:
					case Contact_Base.ContactType.Decoy_Land:
					case Contact_Base.ContactType.Decoy_Sub:
						switch (contact.method_130(Client.smethod_50()))
						{
						case Misc.PostureStance.Neutral:
							result = "air_decoy_neutral.png";
							break;
						case Misc.PostureStance.Friendly:
							result = "air_decoy_friendly.png";
							break;
						case Misc.PostureStance.Unfriendly:
							result = "air_decoy_unfriendly.png";
							break;
						case Misc.PostureStance.Hostile:
							result = "air_decoy_hostile.png";
							break;
						case Misc.PostureStance.Unknown:
							result = "air_decoy_unknown.png";
							break;
						}
						bool_15 = true;
						goto IL_1030;
					case Contact_Base.ContactType.Sonobuoy:
						result = "sonobuoy_active_" + str;
						goto IL_1030;
					case Contact_Base.ContactType.Installation:
						switch (contact.method_130(Client.smethod_50()))
						{
						case Misc.PostureStance.Neutral:
							result = "Installation_neutral.png";
							goto IL_1030;
						case Misc.PostureStance.Friendly:
							result = "Installation_friendly.png";
							goto IL_1030;
						case Misc.PostureStance.Unfriendly:
							result = "Installation_unfriendly.png";
							goto IL_1030;
						case Misc.PostureStance.Hostile:
							result = "Installation_hostile.png";
							goto IL_1030;
						case Misc.PostureStance.Unknown:
							result = "Installation_unknown.png";
							goto IL_1030;
						default:
							goto IL_1030;
						}
						break;
					case Contact_Base.ContactType.AirBase:
						switch (contact.method_130(Client.smethod_50()))
						{
						case Misc.PostureStance.Neutral:
							result = "AirBase_neutral.png";
							goto IL_1030;
						case Misc.PostureStance.Friendly:
							result = "AirBase_friendly.png";
							goto IL_1030;
						case Misc.PostureStance.Unfriendly:
							result = "AirBase_unfriendly.png";
							goto IL_1030;
						case Misc.PostureStance.Hostile:
							result = "AirBase_hostile.png";
							goto IL_1030;
						case Misc.PostureStance.Unknown:
							result = "AirBase_unknown.png";
							goto IL_1030;
						default:
							goto IL_1030;
						}
						break;
					case Contact_Base.ContactType.NavalBase:
						switch (contact.method_130(Client.smethod_50()))
						{
						case Misc.PostureStance.Neutral:
							result = "Installation_neutral.png";
							goto IL_1030;
						case Misc.PostureStance.Friendly:
							result = "Installation_friendly.png";
							goto IL_1030;
						case Misc.PostureStance.Unfriendly:
							result = "Installation_unfriendly.png";
							goto IL_1030;
						case Misc.PostureStance.Hostile:
							result = "Installation_hostile.png";
							goto IL_1030;
						case Misc.PostureStance.Unknown:
							result = "Installation_unknown.png";
							goto IL_1030;
						default:
							goto IL_1030;
						}
						break;
					case Contact_Base.ContactType.MobileGroup:
						switch (contact.method_130(Client.smethod_50()))
						{
						case Misc.PostureStance.Neutral:
							result = "mobile_neutral.png";
							goto IL_1030;
						case Misc.PostureStance.Friendly:
							result = "mobile_friendly.png";
							goto IL_1030;
						case Misc.PostureStance.Unfriendly:
							result = "mobile_unfriendly.png";
							goto IL_1030;
						case Misc.PostureStance.Hostile:
							result = "mobile_hostile.png";
							goto IL_1030;
						case Misc.PostureStance.Unknown:
							result = "mobile_unknown.png";
							goto IL_1030;
						default:
							goto IL_1030;
						}
						break;
					}
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				IL_1030:
				return result;
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200178", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			return result;
		}

		// Token: 0x06005F56 RID: 24406 RVA: 0x00347D64 File Offset: 0x00345F64
		private void method_79()
		{
			if (!CommandLayer.smethod_1("CL_DrawMouseHoverRectangleAndDatablock") && !Information.IsNothing(Client.smethod_42()) && Client.smethod_42() != Client.smethod_54() && (!Client.smethod_42().bool_1 || !((Group)Client.smethod_42()).method_82()))
			{
				try
				{
					if (Client.smethod_42().bool_0 && !(((ActiveUnit)Client.smethod_42()).vmethod_90().vmethod_1() | Client.smethod_52().method_1()))
					{
						Class2572.smethod_4(this.vmethod_796(), ((ActiveUnit)Client.smethod_42()).method_56().Value, ((ActiveUnit)Client.smethod_42()).method_58().Value, ref this.int_8, ref this.int_9);
					}
					else
					{
						Class2572.smethod_4(this.vmethod_796(), Client.smethod_42().vmethod_30(null), Client.smethod_42().vmethod_28(null), ref this.int_8, ref this.int_9);
					}
					new Rectangle(this.int_8 - 10, this.int_9 - 10, 20, 20);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 - 11, this.int_9 - 11), new System.Drawing.Point(this.int_8 - 5, this.int_9 - 11));
					this.method_21(this.pen_0, this.graphicsPath_0);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 + 5, this.int_9 - 11), new System.Drawing.Point(this.int_8 + 11, this.int_9 - 11));
					this.method_21(this.pen_0, this.graphicsPath_0);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 + 11, this.int_9 - 11), new System.Drawing.Point(this.int_8 + 11, this.int_9 - 5));
					this.method_21(this.pen_0, this.graphicsPath_0);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 + 11, this.int_9 + 5), new System.Drawing.Point(this.int_8 + 11, this.int_9 + 11));
					this.method_21(this.pen_0, this.graphicsPath_0);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 + 11, this.int_9 + 11), new System.Drawing.Point(this.int_8 + 5, this.int_9 + 11));
					this.method_21(this.pen_0, this.graphicsPath_0);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 - 5, this.int_9 + 11), new System.Drawing.Point(this.int_8 - 11, this.int_9 + 11));
					this.method_21(this.pen_0, this.graphicsPath_0);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 - 11, this.int_9 + 11), new System.Drawing.Point(this.int_8 - 11, this.int_9 + 5));
					this.method_21(this.pen_0, this.graphicsPath_0);
					this.graphicsPath_0 = new GraphicsPath();
					this.graphicsPath_0.AddLine(new System.Drawing.Point(this.int_8 - 11, this.int_9 - 5), new System.Drawing.Point(this.int_8 - 11, this.int_9 - 11));
					this.method_21(this.pen_0, this.graphicsPath_0);
					if (Client.smethod_52().method_47() != Class285.Enum85.const_0)
					{
						if (Client.smethod_42().bool_0)
						{
							this.method_76((ActiveUnit)Client.smethod_42(), 200, Color.White, "Verdana", (int)this.short_0, true);
						}
						else if (Client.smethod_42().method_14())
						{
							this.method_72((Contact)Client.smethod_42(), Color.FromArgb(200, Color.White));
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200153", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				finally
				{
					this.graphicsPath_0.Dispose();
				}
			}
		}

		// Token: 0x06005F57 RID: 24407 RVA: 0x00348218 File Offset: 0x00346418
		private void method_80()
		{
			Class1873.bool_3 = this.method_162();
			Class1873.bool_3 = this.method_162();
			if (Client.smethod_46().method_31().Year > 1990)
			{
				if (this.class1873_0 != null)
				{
					this.class1873_0.bool_4 = false;
				}
				this.class1873_1.bool_4 = Client.smethod_52().method_15();
			}
			else
			{
				this.class1873_0.bool_4 = Client.smethod_52().method_15();
				this.class1873_1.bool_4 = false;
			}
			try
			{
				this.method_223();
			}
			catch (Exception ex)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			try
			{
				this.method_224();
			}
			catch (Exception ex2)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			try
			{
				this.method_61();
			}
			catch (Exception ex3)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			if (Client.smethod_50() != null)
			{
				try
				{
					this.method_62();
				}
				catch (Exception ex4)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_24();
				}
				catch (Exception ex5)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_63();
				}
				catch (Exception ex6)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_64();
				}
				catch (Exception ex7)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_65();
				}
				catch (Exception ex8)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_25();
				}
				catch (Exception ex9)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_45();
				}
				catch (Exception ex10)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_28();
				}
				catch (Exception ex11)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_66();
				}
				catch (Exception ex12)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_22();
				}
				catch (Exception ex13)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_46();
				}
				catch (Exception ex14)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_47();
				}
				catch (Exception ex15)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_48();
				}
				catch (Exception ex16)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_49();
				}
				catch (Exception ex17)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_17(Client.smethod_50());
				}
				catch (Exception ex18)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_50();
				}
				catch (Exception ex19)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_0();
				}
				catch (Exception ex20)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_51(Client.smethod_46().Groups);
				}
				catch (Exception ex21)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_2();
				}
				catch (Exception ex22)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_1();
				}
				catch (Exception ex23)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_53();
				}
				catch (Exception ex24)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_55();
				}
				catch (Exception ex25)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				this.list_58.Clear();
				this.list_60.Clear();
				this.list_59.Clear();
				this.list_61.Clear();
				try
				{
					this.method_222();
				}
				catch (Exception ex26)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_34();
				}
				catch (Exception ex27)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_81();
				}
				catch (Exception ex28)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_57();
				}
				catch (Exception ex29)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_31();
				}
				catch (Exception ex30)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_33();
				}
				catch (Exception ex31)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_59();
				}
				catch (Exception ex32)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_60();
				}
				catch (Exception ex33)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				try
				{
					this.method_23();
				}
				catch (Exception ex34)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				this.method_401();
				try
				{
					this.method_79();
				}
				catch (Exception ex35)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
			try
			{
				this.method_58();
			}
			catch (Exception ex36)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			try
			{
				this.method_44();
			}
			catch (Exception ex37)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			try
			{
				this.method_43();
			}
			catch (Exception ex38)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			if (Client.smethod_50() != null)
			{
				try
				{
					this.method_40();
				}
				catch (Exception ex39)
				{
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
			try
			{
				this.method_41();
			}
			catch (Exception ex40)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			try
			{
				this.method_42();
			}
			catch (Exception ex41)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			try
			{
				this.method_67();
			}
			catch (Exception ex42)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06005F58 RID: 24408 RVA: 0x00348CA0 File Offset: 0x00346EA0
		private void method_81()
		{
			if (this.list_53 != null)
			{
				foreach (Unit unit in Enumerable.ToArray<Unit>(Enumerable.OrderBy<Unit, float>(this.list_53, (MainForm._Closure$__.$I159-0 == null) ? (MainForm._Closure$__.$I159-0 = new Func<Unit, float>(MainForm._Closure$__.$I.method_27)) : MainForm._Closure$__.$I159-0)))
				{
					if (unit.bool_0)
					{
						this.method_74((ActiveUnit)unit);
					}
					else
					{
						this.method_68((Contact)unit);
					}
				}
			}
		}

		// Token: 0x06005F59 RID: 24409 RVA: 0x00348D20 File Offset: 0x00346F20
		private void method_82(Color color_8, ref Contact contact_0)
		{
			if (!CommandLayer.smethod_1("CL_DrawUncertaintyArea") && (!contact_0.bool_16 || (Client.smethod_42() != null && contact_0 == Client.smethod_42()) || (Client.smethod_54() != null && contact_0 == Client.smethod_54())))
			{
				int line_thickness;
				if (contact_0 == Client.smethod_54())
				{
					line_thickness = 3;
				}
				else
				{
					line_thickness = 1;
				}
				if (contact_0.method_112() != null)
				{
					List<Geopoint_Struct> path = Enumerable.ToList<Geopoint_Struct>(Enumerable.Select<GeoPoint, Geopoint_Struct>(contact_0.method_112(), (MainForm._Closure$__.$I160-0 == null) ? (MainForm._Closure$__.$I160-0 = new Func<GeoPoint, Geopoint_Struct>(MainForm._Closure$__.$I.method_28)) : MainForm._Closure$__.$I160-0));
					if (contact_0.method_57() > 0f)
					{
						color_8 = Color.FromArgb(127, (int)color_8.R, (int)color_8.G, (int)color_8.B);
					}
					this.commandLayer_0.method_19(color_8, line_thickness, path, true);
				}
			}
		}

		// Token: 0x06005F5A RID: 24410 RVA: 0x00348DF4 File Offset: 0x00346FF4
		private string method_83(string string_11)
		{
			string result;
			switch (Class570.class280_0.method_22())
			{
			case Class279.Class280.Enum73.const_0:
				result = System.Windows.Forms.Application.StartupPath + "\\Symbols\\NTDS\\" + string_11;
				break;
			case Class279.Class280.Enum73.const_1:
				result = System.Windows.Forms.Application.StartupPath + "\\Symbols\\Stylized\\" + string_11;
				break;
			case Class279.Class280.Enum73.const_2:
				result = System.Windows.Forms.Application.StartupPath + "\\Symbols\\Directional\\" + string_11;
				break;
			}
			return result;
		}

		// Token: 0x06005F5B RID: 24411 RVA: 0x0003A6AD File Offset: 0x000388AD
		public void method_84()
		{
			Client.bool_1 = true;
		}

		// Token: 0x06005F5C RID: 24412 RVA: 0x00348E58 File Offset: 0x00347058
		public void method_85()
		{
			if (Client.smethod_42() == null | !Control.ModifierKeys.HasFlag(Keys.Control))
			{
				this.vmethod_1000().Visible = false;
				this.vmethod_1000().SendToBack();
				return;
			}
			this.hoverInfoMain_0.method_0(Client.smethod_42());
			this.vmethod_1000().Visible = true;
		}

		// Token: 0x06005F5D RID: 24413 RVA: 0x00348EC0 File Offset: 0x003470C0
		public void method_86()
		{
			ActiveUnit activeUnit = (ActiveUnit)Client.smethod_54();
			if (activeUnit != null)
			{
				Class2413.smethod_2().method_12().activeUnit_0 = activeUnit;
				Class2413.smethod_2().method_12().activeUnit_1 = null;
				Class2413.smethod_2().method_12().Show();
			}
		}

		// Token: 0x06005F5E RID: 24414 RVA: 0x0003D833 File Offset: 0x0003BA33
		private void method_87(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_26);
		}

		// Token: 0x06005F5F RID: 24415 RVA: 0x0003D83C File Offset: 0x0003BA3C
		private void method_88(object sender, EventArgs e)
		{
			this.method_89(RuntimeHelpers.GetObjectValue(sender), e);
		}

		// Token: 0x06005F60 RID: 24416 RVA: 0x00348F0C File Offset: 0x0034710C
		private void method_89(object sender, EventArgs e)
		{
			if (Client.smethod_50() != null)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (!Information.IsNothing(unit) && unit.bool_0)
						{
							if (unit.GetType() == typeof(Aircraft))
							{
								Aircraft aircraft = (Aircraft)unit;
								if (aircraft.method_167().bool_15)
								{
									aircraft.method_164().method_88();
								}
								if (Enumerable.Count<Cargo>(aircraft.cargo_0) != 0 && aircraft.method_169())
								{
									aircraft.method_164().method_37(Aircraft_AirOps._AirOpsCondition.TransferringCargo);
									aircraft.method_164().method_39(120f);
								}
							}
							else
							{
								if (unit.bool_1)
								{
									if (!(unit is Group & ((Group)unit).method_140()))
									{
										goto IL_254;
									}
									try
									{
										foreach (ActiveUnit activeUnit in ((Group)unit).vmethod_141().Values)
										{
											if (Enumerable.Count<Cargo>(activeUnit.cargo_0) > 0)
											{
												List<Facility> list = Facility.smethod_10(Enumerable.ToList<Mount>(Enumerable.Select<Cargo, Mount>(activeUnit.cargo_0, (MainForm._Closure$__.$I167-0 == null) ? (MainForm._Closure$__.$I167-0 = new Func<Cargo, Mount>(MainForm._Closure$__.$I.method_29)) : MainForm._Closure$__.$I167-0)), activeUnit.scenario_0, activeUnit.vmethod_7(false));
												try
												{
													foreach (Facility facility in list)
													{
														facility.vmethod_29(null, activeUnit.vmethod_28(null));
														facility.vmethod_31(null, activeUnit.vmethod_30(null));
													}
												}
												finally
												{
													List<Facility>.Enumerator enumerator3;
													((IDisposable)enumerator3).Dispose();
												}
												Class429.smethod_8(ref activeUnit.cargo_0);
												break;
											}
										}
										goto IL_254;
									}
									finally
									{
										IEnumerator<ActiveUnit> enumerator2;
										if (enumerator2 != null)
										{
											enumerator2.Dispose();
										}
									}
								}
								((ActiveUnit)unit).vmethod_93().method_20();
							}
							IL_254:
							if (!unit.bool_1 && Enumerable.Count<Cargo>(((ActiveUnit)unit).cargo_0) > 0)
							{
								((ActiveUnit)unit).method_124(unit.Name + " unable to unload cargo here", "Cannot unload cargo", LoggedMessage.MessageType.UI, 0, false, new Geopoint_Struct(unit.vmethod_28(null), unit.vmethod_30(null)));
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x06005F61 RID: 24417 RVA: 0x003491D4 File Offset: 0x003473D4
		private void method_90(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_54()))
			{
				DarkMessageBox.smethod_2("No unit selected!", "Error", Enum11.const_0);
				return;
			}
			if (Client.smethod_54().bool_0)
			{
				Class2413.smethod_2().method_22().activeUnit_0 = (ActiveUnit)Client.smethod_54();
				Class2413.smethod_2().method_22().Show();
			}
		}

		// Token: 0x06005F62 RID: 24418 RVA: 0x0003D84B File Offset: 0x0003BA4B
		private void method_91(Unit unit_0, int int_11, int int_12)
		{
			Client.smethod_56(unit_0, false);
			this.method_93((Contact)unit_0);
			this.vmethod_728().Show(this.vmethod_796(), int_11, int_12);
		}

		// Token: 0x06005F63 RID: 24419 RVA: 0x00349234 File Offset: 0x00347434
		private void method_92(List<Unit> list_62)
		{
			try
			{
				if (this.vmethod_964().Items.Count > 1)
				{
					for (int i = this.vmethod_964().Items.Count - 1; i >= 1; i += -1)
					{
						this.vmethod_964().Items.RemoveAt(i);
					}
				}
				list_62 = Enumerable.ToList<Unit>(Enumerable.OrderBy<Unit, string>(list_62, (MainForm._Closure$__.$I170-0 == null) ? (MainForm._Closure$__.$I170-0 = new Func<Unit, string>(MainForm._Closure$__.$I.method_30)) : MainForm._Closure$__.$I170-0));
				try
				{
					List<Unit>.Enumerator enumerator = list_62.GetEnumerator();
					while (enumerator.MoveNext())
					{
						MainForm.Class2444 @class = new MainForm.Class2444(@class);
						@class.unit_0 = enumerator.Current;
						Misc.PostureStance postureStance_;
						if (@class.unit_0.bool_0)
						{
							postureStance_ = Client.smethod_50().method_68(@class.unit_0.vmethod_7(false));
						}
						else
						{
							postureStance_ = ((Contact)@class.unit_0).method_130(Client.smethod_50());
						}
						Class128 class2 = new Class128(Client.smethod_29(postureStance_));
						class2.Text = @class.unit_0.Name;
						class2.Click += @class.method_0;
						this.vmethod_964().Items.Add(class2);
					}
				}
				finally
				{
					List<Unit>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
			catch (Exception ex)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06005F64 RID: 24420 RVA: 0x003493C0 File Offset: 0x003475C0
		private void method_93(Contact contact_0)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14() && !Information.IsNothing(Client.smethod_50()))
			{
				this.vmethod_892().Enabled = true;
				this.vmethod_890().Enabled = true;
				this.vmethod_888().Enabled = true;
				this.vmethod_886().Enabled = true;
				switch (((Contact)Client.smethod_54()).method_130(Client.smethod_50()))
				{
				case Misc.PostureStance.Neutral:
					this.vmethod_890().Enabled = false;
					break;
				case Misc.PostureStance.Friendly:
					this.vmethod_892().Enabled = false;
					break;
				case Misc.PostureStance.Unfriendly:
					this.vmethod_888().Enabled = false;
					break;
				case Misc.PostureStance.Hostile:
					this.vmethod_886().Enabled = false;
					break;
				}
				if (((Contact)Client.smethod_54()).bool_16)
				{
					this.vmethod_730().Text = "Cancel filter-out";
					return;
				}
				this.vmethod_730().Text = "Filter-out";
			}
		}

		// Token: 0x06005F65 RID: 24421 RVA: 0x0003D873 File Offset: 0x0003BA73
		private void method_94(Unit unit_0, int int_11, int int_12)
		{
			Client.smethod_56(unit_0, false);
			this.method_96(unit_0);
			this.vmethod_40().Show(this.vmethod_796(), int_11, int_12);
		}

		// Token: 0x06005F66 RID: 24422 RVA: 0x0003D896 File Offset: 0x0003BA96
		private void method_95(object sender, EventArgs e)
		{
			this.method_172();
		}

		// Token: 0x06005F67 RID: 24423 RVA: 0x003494C0 File Offset: 0x003476C0
		private void method_96(Unit unit_0)
		{
			if (unit_0 != null && unit_0.vmethod_7(false) != null)
			{
				try
				{
					if (Client.smethod_61() == Client.Enum197.const_6)
					{
						this.vmethod_306().Text = "End Plotting Course";
					}
					else
					{
						this.vmethod_306().Text = "Plot Course";
					}
					this.vmethod_642().Visible = (Client.smethod_0().method_1() == Class279.Enum67.const_2);
					this.vmethod_962().Visible = (unit_0.bool_0 && !((ActiveUnit)unit_0).vmethod_90().vmethod_1() && !((ActiveUnit)unit_0).vmethod_90().method_3());
					if (unit_0.bool_0)
					{
						this.vmethod_926().Checked = ((ActiveUnit)unit_0).vmethod_89().bool_1;
						this.vmethod_322().Enabled = (!unit_0.bool_1 && !unit_0.bool_2);
						this.vmethod_566().Enabled = false;
						this.vmethod_638().Enabled = true;
						this.vmethod_638().Checked = true;
						foreach (ActiveUnit unit in Client.smethod_50().activeUnit_0)
						{
							if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && unit.bool_8 && !unit.method_5())
							{
								bool flag = true;
								if (!((Facility)unit).method_148().bool_4)
								{
									this.vmethod_638().Checked = false;
									IL_15E:
									if (!flag)
									{
										this.vmethod_638().Checked = false;
										this.vmethod_638().Enabled = false;
									}
									if (unit_0.vmethod_7(false) == Client.smethod_50())
									{
										if (!unit_0.bool_2)
										{
											this.vmethod_378().Enabled = true;
										}
										else
										{
											this.vmethod_378().Enabled = false;
										}
										Side side_ = Client.smethod_50();
										bool flag2 = true;
										string text = null;
										if (GameGeneral.smethod_45(side_, unit_0, flag2, ref text, Client.smethod_52().method_59()))
										{
											this.vmethod_324().Enabled = true;
										}
										else
										{
											this.vmethod_324().Enabled = false;
										}
										Side side_2 = Client.smethod_50();
										bool flag3 = false;
										text = null;
										if (GameGeneral.smethod_45(side_2, unit_0, flag3, ref text, Client.smethod_52().method_59()))
										{
											this.vmethod_306().Enabled = true;
											this.vmethod_304().Enabled = true;
										}
										else
										{
											this.vmethod_306().Enabled = false;
											this.vmethod_304().Enabled = false;
										}
										Doctrine doctrine = null;
										if (Client.smethod_54().bool_0 && !Client.smethod_54().bool_2 && Client.smethod_54().vmethod_7(false) == Client.smethod_50())
										{
											doctrine = ((ActiveUnit)Client.smethod_54()).doctrine_0;
										}
										if (doctrine != null && doctrine.method_86(Client.smethod_46()))
										{
											if (!Client.smethod_54().bool_2)
											{
												this.vmethod_328().Enabled = true;
												Doctrine.Enum64? @enum = doctrine.method_83(Client.smethod_46(), false, null, false, false);
												byte? b;
												if (doctrine.method_85())
												{
													this.vmethod_698().Checked = false;
													this.vmethod_700().Checked = false;
													this.vmethod_702().Checked = true;
												}
												else
												{
													b = ((@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
													{
														this.vmethod_698().Checked = true;
														this.vmethod_700().Checked = false;
														this.vmethod_702().Checked = false;
													}
													else
													{
														this.vmethod_698().Checked = false;
														this.vmethod_700().Checked = true;
														this.vmethod_702().Checked = false;
													}
												}
												Doctrine doctrine2 = doctrine;
												Scenario scenario_ = Client.smethod_46();
												bool flag4 = true;
												Doctrine.Enum64? enum2 = doctrine2.method_3(scenario_, ref flag4).method_83(Client.smethod_46(), false, null, false, false);
												b = ((enum2 != null) ? new byte?((byte)enum2.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
												{
													this.vmethod_702().Text = "Inherited, Yes";
												}
												else
												{
													this.vmethod_702().Text = "Inherited, No";
												}
											}
											else
											{
												this.vmethod_328().Enabled = false;
											}
											if (!Client.smethod_54().bool_2)
											{
												int num = 1;
												bool flag5 = true;
												ActiveUnit[] activeUnit_2 = Client.smethod_50().activeUnit_0;
												int j = 0;
												while (j < activeUnit_2.Length)
												{
													Unit unit2 = activeUnit_2[j];
													if (!unit2.bool_0 || unit2.vmethod_7(false) != Client.smethod_50())
													{
														goto IL_5E1;
													}
													if (!unit2.bool_2)
													{
														if (num == 1)
														{
															Doctrine.Enum64? enum3;
															if (((ActiveUnit)unit2).doctrine_0.method_85())
															{
																enum3 = null;
																goto IL_5E1;
															}
															enum3 = ((ActiveUnit)unit2).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
															goto IL_5E1;
														}
														else
														{
															Doctrine.Enum64? enum3;
															byte? b2;
															if (enum3 == null)
															{
																if (((ActiveUnit)unit2).doctrine_0.method_85())
																{
																	goto IL_5E1;
																}
																flag5 = false;
															}
															else if (!((ActiveUnit)unit2).doctrine_0.method_85())
															{
																byte? b = (enum3 != null) ? new byte?((byte)enum3.GetValueOrDefault()) : null;
																Doctrine.Enum64? enum4 = ((ActiveUnit)unit2).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
																b2 = ((enum4 != null) ? new byte?((byte)enum4.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	goto IL_5E1;
																}
																flag5 = false;
															}
															else
															{
																flag5 = false;
															}
															IL_607:
															this.vmethod_626().Enabled = true;
															if (flag5)
															{
																if (enum3 == null)
																{
																	this.vmethod_704().Checked = false;
																	this.vmethod_706().Checked = false;
																	this.vmethod_708().Checked = true;
																}
																else
																{
																	b2 = ((enum3 != null) ? new byte?((byte)enum3.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																	{
																		this.vmethod_704().Checked = true;
																		this.vmethod_706().Checked = false;
																		this.vmethod_708().Checked = false;
																	}
																	else
																	{
																		this.vmethod_704().Checked = false;
																		this.vmethod_706().Checked = true;
																		this.vmethod_708().Checked = false;
																	}
																}
															}
															else
															{
																this.vmethod_704().Checked = false;
																this.vmethod_706().Checked = false;
																this.vmethod_708().Checked = false;
															}
															Doctrine.Enum52? enum5 = Client.smethod_50().doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
															b2 = ((enum5 != null) ? new byte?((byte)enum5.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																this.vmethod_708().Text = "Inherited, Yes";
																goto IL_7B3;
															}
															this.vmethod_708().Text = "Inherited, No";
															goto IL_7B3;
														}
													}
													IL_5E7:
													checked
													{
														j++;
														continue;
														IL_5E1:;
													}
													num++;
													goto IL_5E7;
												}
												goto IL_607;
											}
											this.vmethod_626().Enabled = false;
										}
										IL_7B3:
										if (!Client.smethod_50().doctrine_0.method_66(Client.smethod_46()) && !Client.smethod_50().doctrine_0.method_71(Client.smethod_46()) && !Client.smethod_50().doctrine_0.method_76(Client.smethod_46()) && !Client.smethod_50().doctrine_0.method_81(Client.smethod_46()))
										{
											this.vmethod_626().Enabled = false;
											this.vmethod_328().Enabled = false;
											this.vmethod_622().Enabled = false;
											this.vmethod_374().Enabled = false;
										}
										else
										{
											if (!Client.smethod_54().bool_2)
											{
												this.vmethod_374().Enabled = true;
												Doctrine.Enum52? enum6 = doctrine.method_63(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum7 = doctrine.method_68(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum8 = doctrine.method_73(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum9 = doctrine.method_78(Client.smethod_46(), false, null, false, false);
												byte? b;
												if (doctrine.method_65() && doctrine.method_70() && doctrine.method_75() && doctrine.method_80())
												{
													this.vmethod_710().Checked = false;
													this.vmethod_712().Checked = false;
													this.vmethod_714().Checked = false;
													this.vmethod_716().Checked = true;
												}
												else
												{
													bool flag7 = false;
													byte? b2 = (enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null;
													b = ((enum7 != null) ? new byte?((byte)enum7.GetValueOrDefault()) : null);
													if (((b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null).GetValueOrDefault())
													{
														b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
														b2 = ((enum8 != null) ? new byte?((byte)enum8.GetValueOrDefault()) : null);
														if (((b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null).GetValueOrDefault())
														{
															b2 = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
															b = ((enum9 != null) ? new byte?((byte)enum9.GetValueOrDefault()) : null);
															if (((b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null).GetValueOrDefault())
															{
																flag7 = true;
															}
														}
													}
													if (!flag7)
													{
														this.vmethod_710().Checked = false;
														this.vmethod_712().Checked = false;
														this.vmethod_714().Checked = false;
														this.vmethod_716().Checked = false;
													}
													else
													{
														b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															this.vmethod_710().Checked = false;
															this.vmethod_712().Checked = false;
															this.vmethod_714().Checked = true;
															this.vmethod_716().Checked = false;
														}
														else
														{
															b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																this.vmethod_710().Checked = true;
																this.vmethod_712().Checked = false;
																this.vmethod_714().Checked = false;
																this.vmethod_716().Checked = false;
															}
															else
															{
																b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
																if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																{
																	this.vmethod_710().Checked = false;
																	this.vmethod_712().Checked = true;
																	this.vmethod_714().Checked = false;
																	this.vmethod_716().Checked = false;
																}
															}
														}
													}
												}
												Doctrine doctrine3 = doctrine;
												Scenario scenario_2 = Client.smethod_46();
												bool flag4 = true;
												Doctrine.Enum52? enum10 = doctrine3.method_3(scenario_2, ref flag4).method_63(Client.smethod_46(), false, null, false, false);
												Doctrine doctrine4 = doctrine;
												Scenario scenario_3 = Client.smethod_46();
												flag4 = true;
												Doctrine.Enum52? enum11 = doctrine4.method_3(scenario_3, ref flag4).method_68(Client.smethod_46(), false, null, false, false);
												Doctrine doctrine5 = doctrine;
												Scenario scenario_4 = Client.smethod_46();
												flag4 = true;
												Doctrine.Enum52? enum12 = doctrine5.method_3(scenario_4, ref flag4).method_73(Client.smethod_46(), false, null, false, false);
												Doctrine doctrine6 = doctrine;
												Scenario scenario_5 = Client.smethod_46();
												flag4 = true;
												Doctrine.Enum52? enum13 = doctrine6.method_3(scenario_5, ref flag4).method_78(Client.smethod_46(), false, null, false, false);
												b = ((enum10 != null) ? new byte?((byte)enum10.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
												{
													b = ((enum11 != null) ? new byte?((byte)enum11.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
													{
														b = ((enum12 != null) ? new byte?((byte)enum12.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															b = ((enum13 != null) ? new byte?((byte)enum13.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
															{
																this.vmethod_716().Text = "Inherited, Free";
																goto IL_116A;
															}
														}
													}
												}
												b = ((enum10 != null) ? new byte?((byte)enum10.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
												{
													b = ((enum11 != null) ? new byte?((byte)enum11.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
													{
														b = ((enum12 != null) ? new byte?((byte)enum12.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
														{
															b = ((enum13 != null) ? new byte?((byte)enum13.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																this.vmethod_716().Text = "Inherited, Tight";
																goto IL_116A;
															}
														}
													}
												}
												b = ((enum10 != null) ? new byte?((byte)enum10.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
												{
													b = ((enum11 != null) ? new byte?((byte)enum11.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
													{
														b = ((enum12 != null) ? new byte?((byte)enum12.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
														{
															b = ((enum13 != null) ? new byte?((byte)enum13.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																this.vmethod_716().Text = "Inherited, Hold";
																goto IL_116A;
															}
														}
													}
												}
												this.vmethod_716().Text = "Inherited, Various";
											}
											else
											{
												this.vmethod_374().Enabled = false;
											}
											IL_116A:
											if (!Client.smethod_54().bool_2)
											{
												int num2 = 1;
												bool flag8 = true;
												ActiveUnit[] activeUnit_3 = Client.smethod_50().activeUnit_0;
												int k = 0;
												while (k < activeUnit_3.Length)
												{
													Unit unit3 = activeUnit_3[k];
													if (!unit3.bool_0 || unit3.vmethod_7(false) != Client.smethod_50())
													{
														goto IL_18C4;
													}
													if (!unit3.bool_2)
													{
														byte? b2;
														Doctrine.Enum52? enum14;
														if (num2 == 1)
														{
															ActiveUnit activeUnit = (ActiveUnit)unit3;
															if (activeUnit.doctrine_0.method_65())
															{
																enum14 = null;
															}
															else
															{
																enum14 = activeUnit.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
															}
															if (enum14 == null)
															{
																if (!activeUnit.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (enum14 == null)
															{
																if (!activeUnit.doctrine_0.method_75())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit.doctrine_0.method_75())
																{
																	flag8 = false;
																	break;
																}
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																Doctrine.Enum52? enum15 = activeUnit.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
																byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
																bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (enum14 == null)
															{
																if (activeUnit.doctrine_0.method_80())
																{
																	goto IL_18C4;
																}
																flag8 = false;
															}
															else if (!activeUnit.doctrine_0.method_80())
															{
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	goto IL_18C4;
																}
																flag8 = false;
															}
															else
															{
																flag8 = false;
															}
														}
														else
														{
															ActiveUnit activeUnit2 = (ActiveUnit)unit3;
															if (enum14 == null)
															{
																if (!activeUnit2.doctrine_0.method_65())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit2.doctrine_0.method_65())
																{
																	flag8 = false;
																	break;
																}
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
																byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
																bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (enum14 == null)
															{
																if (!activeUnit2.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit2.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (enum14 == null)
															{
																if (!activeUnit2.doctrine_0.method_75())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit2.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
																byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
																bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (enum14 == null)
															{
																if (activeUnit2.doctrine_0.method_80())
																{
																	goto IL_18C4;
																}
																flag8 = false;
															}
															else if (!activeUnit2.doctrine_0.method_80())
															{
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	goto IL_18C4;
																}
																flag8 = false;
															}
															else
															{
																flag8 = false;
															}
														}
														IL_1944:
														this.vmethod_622().Enabled = true;
														if (flag8)
														{
															if (enum14 == null)
															{
																this.vmethod_718().Checked = false;
																this.vmethod_720().Checked = false;
																this.vmethod_722().Checked = false;
																this.vmethod_724().Checked = true;
															}
															else
															{
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
																{
																	this.vmethod_718().Checked = false;
																	this.vmethod_720().Checked = false;
																	this.vmethod_722().Checked = true;
																	this.vmethod_724().Checked = false;
																}
																else
																{
																	b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
																	{
																		this.vmethod_718().Checked = true;
																		this.vmethod_720().Checked = false;
																		this.vmethod_722().Checked = false;
																		this.vmethod_724().Checked = false;
																	}
																	else
																	{
																		this.vmethod_718().Checked = false;
																		this.vmethod_720().Checked = true;
																		this.vmethod_722().Checked = false;
																		this.vmethod_724().Checked = false;
																	}
																}
															}
														}
														else
														{
															this.vmethod_718().Checked = false;
															this.vmethod_720().Checked = false;
															this.vmethod_722().Checked = false;
															this.vmethod_724().Checked = false;
														}
														Doctrine.Enum52? enum16 = Client.smethod_50().doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
														Doctrine.Enum52? enum17 = Client.smethod_50().doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
														Doctrine.Enum52? enum18 = Client.smethod_50().doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
														Doctrine.Enum52? enum19 = Client.smethod_50().doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
														b2 = ((enum16 != null) ? new byte?((byte)enum16.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															b2 = ((enum17 != null) ? new byte?((byte)enum17.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
															{
																b2 = ((enum18 != null) ? new byte?((byte)enum18.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
																{
																	b2 = ((enum19 != null) ? new byte?((byte)enum19.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
																	{
																		this.vmethod_724().Text = "Inherited, Free";
																		goto IL_1FD2;
																	}
																}
															}
														}
														b2 = ((enum16 != null) ? new byte?((byte)enum16.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
														{
															b2 = ((enum17 != null) ? new byte?((byte)enum17.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																b2 = ((enum18 != null) ? new byte?((byte)enum18.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																{
																	b2 = ((enum19 != null) ? new byte?((byte)enum19.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																	{
																		this.vmethod_724().Text = "Inherited, Tight";
																		goto IL_1FD2;
																	}
																}
															}
														}
														b2 = ((enum16 != null) ? new byte?((byte)enum16.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
														{
															b2 = ((enum17 != null) ? new byte?((byte)enum17.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																b2 = ((enum18 != null) ? new byte?((byte)enum18.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
																{
																	b2 = ((enum19 != null) ? new byte?((byte)enum19.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
																	{
																		this.vmethod_724().Text = "Inherited, Hold";
																		goto IL_1FD2;
																	}
																}
															}
														}
														this.vmethod_724().Text = "Inherited, Various";
														goto IL_1FD2;
													}
													IL_18CA:
													checked
													{
														k++;
														continue;
														IL_18C4:;
													}
													num2++;
													goto IL_18CA;
												}
												goto IL_1944;
											}
											this.vmethod_622().Enabled = false;
										}
										IL_1FD2:
										this.vmethod_212().Enabled = (unit_0.vmethod_43() || unit_0.bool_1);
										this.vmethod_374().Enabled = true;
										Side side_3 = Client.smethod_50();
										bool flag9 = false;
										text = null;
										if (GameGeneral.smethod_45(side_3, unit_0, flag9, ref text, Client.smethod_52().method_59()))
										{
											this.vmethod_314().Enabled = true;
										}
										else
										{
											this.vmethod_314().Enabled = false;
										}
										if (!unit_0.bool_2)
										{
											this.vmethod_316().Enabled = true;
											this.vmethod_318().Enabled = true;
										}
										else
										{
											this.vmethod_316().Enabled = false;
											this.vmethod_318().Enabled = false;
										}
										if (!unit_0.bool_2)
										{
											this.vmethod_582().Enabled = true;
											this.vmethod_588().Enabled = true;
											this.vmethod_592().Enabled = true;
											this.vmethod_590().Enabled = true;
											this.vmethod_594().Enabled = true;
											this.vmethod_596().Enabled = true;
											this.vmethod_586().Enabled = true;
										}
										else
										{
											this.vmethod_582().Enabled = false;
											this.vmethod_588().Enabled = false;
											this.vmethod_592().Enabled = false;
											this.vmethod_590().Enabled = false;
											this.vmethod_594().Enabled = false;
											this.vmethod_596().Enabled = false;
											this.vmethod_586().Enabled = false;
										}
										if (Client.smethod_54().bool_3)
										{
											Aircraft aircraft = (Aircraft)Client.smethod_54();
											if (!aircraft.bool_28 && !aircraft.bool_27)
											{
												this.vmethod_248().Visible = false;
												this.vmethod_248().Text = "Refuel (not AAR capable)";
											}
											else
											{
												this.vmethod_248().Visible = true;
												this.vmethod_248().Text = "Refuel (if possible)";
												this.vmethod_860().Text = "Select tanker manually";
												this.vmethod_852().Text = "Select tanker automatically";
												this.vmethod_856().Text = "Select tanker from mission:";
											}
										}
										else if (Client.smethod_54().bool_1 && ((Group)Client.smethod_54()).method_143() == Group.GroupType.AirGroup)
										{
											Aircraft aircraft2 = (Aircraft)((Group)Client.smethod_54()).method_147();
											if (!aircraft2.bool_28 && !aircraft2.bool_27)
											{
												this.vmethod_248().Visible = false;
												this.vmethod_248().Text = "Refuel (not AAR capable)";
											}
											else
											{
												this.vmethod_248().Visible = true;
												this.vmethod_248().Text = "Refuel (if possible)";
												this.vmethod_860().Text = "Select provider manually";
												this.vmethod_852().Text = "Select provider automatically";
												this.vmethod_856().Text = "Select provider from mission:";
											}
										}
										else
										{
											if (!Client.smethod_54().bool_6)
											{
												if (!Client.smethod_54().bool_1 || ((Group)Client.smethod_54()).method_143() != Group.GroupType.SurfaceGroup)
												{
													if (Client.smethod_54().bool_8 && !Client.smethod_54().method_5())
													{
														this.vmethod_248().Visible = true;
														this.vmethod_248().Text = "Replenish (if possible)";
														this.vmethod_860().Text = "Select provider manually";
														this.vmethod_852().Text = "Select provider automatically";
														this.vmethod_856().Text = "Select provider from mission:";
														goto IL_2368;
													}
													this.vmethod_248().Visible = false;
													goto IL_2368;
												}
											}
											this.vmethod_248().Visible = true;
											this.vmethod_248().Text = "UNREP (if possible)";
											this.vmethod_860().Text = "Select provider manually";
											this.vmethod_852().Text = "Select provider automatically";
											this.vmethod_856().Text = "Select provider from mission:";
										}
										IL_2368:
										if (unit_0.bool_3)
										{
											Aircraft aircraft3 = (Aircraft)unit_0;
											if (aircraft3.method_167() != null && aircraft3.method_167().bool_13)
											{
												this.vmethod_662().Enabled = true;
											}
											else
											{
												this.vmethod_662().Enabled = false;
											}
										}
										else
										{
											this.vmethod_662().Enabled = false;
										}
									}
									else
									{
										this.vmethod_306().Enabled = false;
										this.vmethod_304().Enabled = false;
										this.vmethod_324().Enabled = false;
										this.vmethod_378().Enabled = false;
										this.vmethod_328().Checked = false;
										this.vmethod_328().Enabled = false;
										this.vmethod_626().Enabled = false;
										this.vmethod_626().Checked = false;
										this.vmethod_374().Checked = false;
										this.vmethod_374().Enabled = false;
										this.vmethod_622().Enabled = false;
										this.vmethod_622().Checked = false;
										this.vmethod_212().Enabled = false;
										this.vmethod_374().Enabled = false;
										this.vmethod_314().Enabled = false;
										this.vmethod_316().Enabled = false;
										this.vmethod_318().Enabled = false;
										this.vmethod_582().Enabled = false;
										this.vmethod_588().Enabled = false;
										this.vmethod_592().Enabled = false;
										this.vmethod_590().Enabled = false;
										this.vmethod_594().Enabled = false;
										this.vmethod_596().Enabled = false;
										this.vmethod_586().Enabled = false;
										this.vmethod_662().Enabled = false;
										this.vmethod_248().Visible = false;
									}
									if (unit_0.bool_1)
									{
										this.vmethod_326().Enabled = false;
										Group.GroupType groupType = ((Group)Client.smethod_54()).method_143();
										this.vmethod_310().Enabled = (groupType == Group.GroupType.AirBase || groupType == Group.GroupType.SurfaceGroup);
										this.vmethod_312().Enabled = (groupType == Group.GroupType.NavalBase || groupType == Group.GroupType.SurfaceGroup || groupType == Group.GroupType.SubGroup);
										this.vmethod_568().Enabled = false;
										this.vmethod_388().Enabled = false;
										this.vmethod_388().Checked = false;
										this.vmethod_320().Enabled = ((Group)unit_0).method_140();
										if (unit_0.vmethod_7(false) != Client.smethod_50())
										{
											this.vmethod_308().Enabled = false;
											this.vmethod_300().Enabled = false;
											this.vmethod_302().Enabled = false;
											this.vmethod_52().Enabled = false;
											this.vmethod_184().Enabled = false;
											goto IL_289F;
										}
										this.vmethod_308().Enabled = true;
										this.vmethod_300().Enabled = true;
										this.vmethod_302().Enabled = true;
										if (((Group)unit_0).method_143() == Group.GroupType.AirGroup)
										{
											this.vmethod_52().Enabled = true;
											this.vmethod_184().Enabled = true;
											goto IL_289F;
										}
										this.vmethod_52().Enabled = false;
										this.vmethod_184().Enabled = false;
										goto IL_289F;
									}
									else
									{
										if (unit_0.bool_2)
										{
											this.vmethod_320().Enabled = false;
										}
										else
										{
											this.vmethod_320().Enabled = (Enumerable.Count<Magazine>(((Class350)unit_0).magazine_0) > 0);
										}
										this.vmethod_326().Enabled = (unit_0.bool_8 || unit_0.bool_6 || unit_0.bool_5);
										this.vmethod_310().Enabled = (unit_0.bool_8 || unit_0.bool_6);
										this.vmethod_312().Enabled = (unit_0.bool_8 || unit_0.bool_6 || unit_0.bool_5);
										this.vmethod_308().Enabled = false;
										if (unit_0.vmethod_7(false) != Client.smethod_50())
										{
											this.vmethod_568().Enabled = false;
											this.vmethod_300().Enabled = false;
											this.vmethod_302().Enabled = false;
											this.vmethod_52().Enabled = false;
											this.vmethod_184().Enabled = false;
											this.vmethod_388().Enabled = false;
											this.vmethod_388().Checked = false;
											goto IL_289F;
										}
										this.vmethod_568().Enabled = ((ActiveUnit)unit_0).method_120();
										if (!unit_0.bool_2)
										{
											this.vmethod_300().Enabled = (((ActiveUnit)unit_0).vmethod_86().method_12().Length > 0);
											this.vmethod_302().Enabled = this.vmethod_300().Enabled;
										}
										else
										{
											this.vmethod_300().Enabled = false;
											this.vmethod_302().Enabled = false;
										}
										ToolStripMenuItem toolStripMenuItem = this.vmethod_52();
										bool enabled;
										if (!unit_0.bool_3 && !unit_0.bool_6 && !unit_0.bool_5)
										{
											enabled = false;
										}
										else
										{
											Side side_4 = Client.smethod_50();
											Unit unit_ = Client.smethod_54();
											bool flag10 = false;
											string text = null;
											enabled = GameGeneral.smethod_45(side_4, unit_, flag10, ref text, Client.smethod_52().method_59());
										}
										toolStripMenuItem.Enabled = enabled;
										ToolStripMenuItem toolStripMenuItem2 = this.vmethod_184();
										bool enabled2;
										if (!unit_0.bool_3 && !unit_0.bool_6 && !unit_0.bool_5)
										{
											enabled2 = false;
										}
										else
										{
											Side side_5 = Client.smethod_50();
											Unit unit_2 = Client.smethod_54();
											bool flag11 = false;
											string text = null;
											enabled2 = GameGeneral.smethod_45(side_5, unit_2, flag11, ref text, Client.smethod_52().method_59());
										}
										toolStripMenuItem2.Enabled = enabled2;
										if (unit_0.bool_8 && !unit_0.method_5())
										{
											this.vmethod_388().Enabled = true;
											this.vmethod_388().Checked = ((Facility)unit_0).method_148().bool_4;
											goto IL_289F;
										}
										this.vmethod_388().Enabled = false;
										this.vmethod_388().Checked = false;
										goto IL_289F;
									}
								}
							}
						}
						goto IL_15E;
					}
					IL_289F:
					if (unit_0.bool_0 && ((ActiveUnit)unit_0).vmethod_7(false) == Client.smethod_50())
					{
						if (!((ActiveUnit)unit_0).vmethod_90().vmethod_1())
						{
							this.vmethod_292().Enabled = false;
						}
						else
						{
							this.vmethod_292().Enabled = true;
							this.vmethod_292().DropDownItems.Clear();
							this.vmethod_862().DropDownItems.Clear();
							if (!unit_0.bool_2)
							{
								try
								{
									foreach (Mission mission in Client.smethod_50().method_35())
									{
										if (mission.enum88_0 != Mission.Enum88.const_2 && (unit_0.bool_3 || (unit_0.bool_1 && ((Group)unit_0).method_143() == Group.GroupType.AirGroup) || mission.enum88_0 != Mission.Enum88.const_1))
										{
											ToolStripMenuItem toolStripMenuItem3 = new ToolStripMenuItem();
											ToolStripMenuItem toolStripMenuItem4 = new ToolStripMenuItem();
											toolStripMenuItem3 = (ToolStripMenuItem)this.vmethod_292().DropDownItems.Add(mission.Name, null, new EventHandler(this.method_211));
											toolStripMenuItem3.Tag = mission;
											if (mission._MissionClass_0 == Mission._MissionClass.Support || mission._MissionClass_0 == Mission._MissionClass.Ferry)
											{
												bool flag12 = false;
												try
												{
													foreach (ActiveUnit activeUnit3 in mission.method_15(Client.smethod_46()))
													{
														if (activeUnit3.bool_3)
														{
															if (!((Aircraft)activeUnit3).method_146())
															{
																continue;
															}
															flag12 = true;
														}
														else
														{
															if (!activeUnit3.bool_6 || !((Ship)activeUnit3).vmethod_106())
															{
																continue;
															}
															flag12 = true;
														}
														break;
													}
												}
												finally
												{
													List<ActiveUnit>.Enumerator enumerator2;
													((IDisposable)enumerator2).Dispose();
												}
												if (flag12)
												{
													new ToolStripMenuItem();
													((ToolStripMenuItem)this.vmethod_862().DropDownItems.Add(mission.Name, null, new EventHandler(this.method_575))).Tag = mission;
												}
											}
											if (mission._MissionClass_0 == Mission._MissionClass.Strike)
											{
												toolStripMenuItem4 = (ToolStripMenuItem)this.vmethod_292().DropDownItems.Add(mission.Name + " - Escort", null, new EventHandler(this.method_211));
												toolStripMenuItem4.Tag = mission;
											}
											ActiveUnit activeUnit4 = (ActiveUnit)unit_0;
											if (mission == activeUnit4.vmethod_101())
											{
												if (mission._MissionClass_0 == Mission._MissionClass.Strike)
												{
													if (activeUnit4.bool_1)
													{
														Group group = (Group)activeUnit4;
														if (!Information.IsNothing(group.method_147()))
														{
															if (group.method_147().vmethod_86().bool_2)
															{
																toolStripMenuItem4.Checked = true;
															}
															else
															{
																toolStripMenuItem3.Checked = true;
															}
														}
														else
														{
															toolStripMenuItem3.Checked = true;
														}
													}
													else if (activeUnit4.vmethod_86().bool_2)
													{
														toolStripMenuItem4.Checked = true;
													}
													else
													{
														toolStripMenuItem3.Checked = true;
													}
												}
												else
												{
													toolStripMenuItem3.Checked = true;
												}
											}
										}
									}
								}
								finally
								{
									IEnumerator<Mission> enumerator;
									if (enumerator != null)
									{
										enumerator.Dispose();
									}
								}
								foreach (Side side in Client.smethod_46().method_44())
								{
									if (side != Client.smethod_50() && side.method_67(Client.smethod_50()))
									{
										try
										{
											foreach (Mission mission2 in Enumerable.OrderBy<Mission, string>(side.method_35(), (MainForm._Closure$__.$I174-0 == null) ? (MainForm._Closure$__.$I174-0 = new Func<Mission, string>(MainForm._Closure$__.$I.method_31)) : MainForm._Closure$__.$I174-0))
											{
												if (mission2._MissionClass_0 == Mission._MissionClass.Support || mission2._MissionClass_0 == Mission._MissionClass.Ferry)
												{
													bool flag13 = false;
													try
													{
														foreach (ActiveUnit activeUnit5 in mission2.method_15(Client.smethod_46()))
														{
															if (activeUnit5.bool_3)
															{
																if (!((Aircraft)activeUnit5).method_146())
																{
																	continue;
																}
																flag13 = true;
															}
															else
															{
																if (!activeUnit5.bool_6 || !((Ship)activeUnit5).vmethod_106())
																{
																	continue;
																}
																flag13 = true;
															}
															break;
														}
													}
													finally
													{
														List<ActiveUnit>.Enumerator enumerator4;
														((IDisposable)enumerator4).Dispose();
													}
													if (flag13)
													{
														new ToolStripMenuItem();
														((ToolStripMenuItem)this.vmethod_862().DropDownItems.Add(mission2.Name + " (" + side.method_51() + ")", null, new EventHandler(this.method_575))).Tag = mission2;
													}
												}
											}
										}
										finally
										{
											IEnumerator<Mission> enumerator3;
											if (enumerator3 != null)
											{
												enumerator3.Dispose();
											}
										}
									}
								}
								this.vmethod_292().Enabled = (Client.smethod_50().method_35().Count > 0);
								this.vmethod_862().Enabled = (this.vmethod_862().DropDownItems.Count > 0);
							}
							else
							{
								this.vmethod_292().Enabled = false;
								this.vmethod_862().Enabled = false;
							}
						}
					}
					else
					{
						this.vmethod_292().DropDownItems.Clear();
						this.vmethod_292().Enabled = false;
						this.vmethod_862().DropDownItems.Clear();
						this.vmethod_862().Enabled = false;
					}
					if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
					{
						if (!unit_0.bool_2)
						{
							this.vmethod_46().Enabled = true;
							this.vmethod_44().Enabled = true;
						}
						else
						{
							this.vmethod_46().Enabled = false;
							this.vmethod_44().Enabled = false;
						}
						if (unit_0.bool_0 && !unit_0.bool_1)
						{
							this.vmethod_208().Enabled = true;
							this.vmethod_208().Checked = ((ActiveUnit)unit_0).method_92(null);
							this.vmethod_776().Enabled = true;
							this.vmethod_776().Checked = !((ActiveUnit)unit_0).vmethod_90().vmethod_1();
						}
						else
						{
							this.vmethod_208().Enabled = false;
							this.vmethod_208().Checked = false;
							this.vmethod_776().Enabled = false;
							this.vmethod_776().Checked = false;
						}
					}
					else
					{
						this.vmethod_44().Visible = false;
						this.vmethod_208().Visible = false;
					}
					if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
					{
						if (!Information.IsNothing(unit_0))
						{
							if (unit_0.bool_8)
							{
								this.vmethod_214().Enabled = true;
							}
							else
							{
								this.vmethod_214().Enabled = false;
							}
						}
						else
						{
							this.vmethod_214().Enabled = false;
						}
					}
					else
					{
						this.vmethod_214().Visible = false;
					}
					this.vmethod_906().Enabled = (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && (Client.smethod_0().method_1() == Class279.Enum67.const_2 || ((ActiveUnit)Client.smethod_54()).vmethod_90().vmethod_1()));
					this.vmethod_906().Checked = !string.IsNullOrEmpty(Client.smethod_52().method_59());
					this.vmethod_872().Visible = (Client.smethod_0().method_1() == Class279.Enum67.const_2);
					this.vmethod_570().Visible = this.vmethod_872().Visible;
					this.vmethod_920().Visible = Client.smethod_54().method_1();
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200281", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x06005F68 RID: 24424 RVA: 0x0003D89E File Offset: 0x0003BA9E
		[CompilerGenerated]
		public Class2425 method_97()
		{
			return this.class2425_0;
		}

		// Token: 0x06005F69 RID: 24425 RVA: 0x0003D8A6 File Offset: 0x0003BAA6
		[CompilerGenerated]
		public void method_98(Class2425 class2425_1)
		{
			this.class2425_0 = class2425_1;
		}

		// Token: 0x06005F6A RID: 24426 RVA: 0x0003D8AF File Offset: 0x0003BAAF
		[CompilerGenerated]
		private Transition vmethod_0()
		{
			return this.transition_0;
		}

		// Token: 0x06005F6B RID: 24427 RVA: 0x0034C4FC File Offset: 0x0034A6FC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		private void vmethod_1(Transition transition_2)
		{
			EventHandler<Transition.Args> value = new EventHandler<Transition.Args>(this.method_103);
			Transition transition = this.transition_0;
			if (transition != null)
			{
				transition.TransitionCompletedEvent -= value;
			}
			this.transition_0 = transition_2;
			transition = this.transition_0;
			if (transition != null)
			{
				transition.TransitionCompletedEvent += value;
			}
		}

		// Token: 0x06005F6C RID: 24428 RVA: 0x0003D8B7 File Offset: 0x0003BAB7
		[CompilerGenerated]
		public Transition vmethod_2()
		{
			return this.transition_1;
		}

		// Token: 0x06005F6D RID: 24429 RVA: 0x0034C540 File Offset: 0x0034A740
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		public void vmethod_3(Transition transition_2)
		{
			EventHandler<Transition.Args> value = new EventHandler<Transition.Args>(this.method_104);
			Transition transition = this.transition_1;
			if (transition != null)
			{
				transition.TransitionCompletedEvent -= value;
			}
			this.transition_1 = transition_2;
			transition = this.transition_1;
			if (transition != null)
			{
				transition.TransitionCompletedEvent += value;
			}
		}

		// Token: 0x06005F6E RID: 24430 RVA: 0x0034C584 File Offset: 0x0034A784
		private void MainForm_Resize(object sender, EventArgs e)
		{
			this.rightColumnWPF_0.method_4(this);
			this.vmethod_778().Visible = false;
			this.vmethod_778().Left = base.Width;
			this.vmethod_944().Left = base.Width - this.vmethod_944().Width - 15;
			if (Client.smethod_54() != null)
			{
				if (this.int_4 > 0)
				{
					this.method_99();
					this.vmethod_778().Visible = true;
					this.vmethod_2().run();
					this.class1880_0.double_0 = 270.0;
				}
				this.int_4++;
			}
		}

		// Token: 0x06005F6F RID: 24431 RVA: 0x0034C62C File Offset: 0x0034A82C
		private void method_99()
		{
			this.vmethod_1(new Transition(new TransitionType_Linear(500)));
			this.vmethod_0().add(this.vmethod_778(), "Left", base.Width);
			this.vmethod_0().add(this.vmethod_944(), "Left", base.Width - this.vmethod_944().Width - 15);
			this.vmethod_3(new Transition(new TransitionType_Linear(500)));
			this.vmethod_2().add(this.vmethod_778(), "Left", base.Width - this.vmethod_778().Width - 14);
			this.vmethod_2().add(this.vmethod_944(), "Left", base.Width - this.vmethod_778().Width - 14 - this.vmethod_944().Width - 5);
		}

		// Token: 0x06005F70 RID: 24432 RVA: 0x0003D8BF File Offset: 0x0003BABF
		private void method_100(object sender, EventArgs e)
		{
			if (this.vmethod_778().Visible)
			{
				this.method_101();
				return;
			}
			this.method_102();
		}

		// Token: 0x06005F71 RID: 24433 RVA: 0x0003D8DB File Offset: 0x0003BADB
		public void method_101()
		{
			this.vmethod_0().run();
			this.class1880_0.double_0 = 0.0;
		}

		// Token: 0x06005F72 RID: 24434 RVA: 0x0003D8FC File Offset: 0x0003BAFC
		public void method_102()
		{
			this.vmethod_778().Visible = true;
			this.vmethod_2().run();
			this.class1880_0.double_0 = 270.0;
		}

		// Token: 0x06005F73 RID: 24435 RVA: 0x0003D929 File Offset: 0x0003BB29
		private void method_103(object object_1, Transition.Args args_0)
		{
			this.vmethod_778().Visible = false;
			this.vmethod_944().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\ArrowWhiteLeft.gif");
		}

		// Token: 0x06005F74 RID: 24436 RVA: 0x0003D956 File Offset: 0x0003BB56
		private void method_104(object object_1, Transition.Args args_0)
		{
			this.vmethod_944().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\ArrowWhiteRight.gif");
		}

		// Token: 0x06005F75 RID: 24437 RVA: 0x0034C724 File Offset: 0x0034A924
		private void method_105()
		{
			Client.elementHost_0 = this.vmethod_778();
			this.vmethod_778().Visible = false;
			this.vmethod_778().Left = base.Width;
			this.vmethod_944().Left = base.Width - this.vmethod_944().Width - 15;
		}

		// Token: 0x06005F76 RID: 24438 RVA: 0x0003D977 File Offset: 0x0003BB77
		public void method_106(double double_2)
		{
			if (this.double_0 < double_2)
			{
				this.double_0 = double_2;
			}
		}

		// Token: 0x06005F77 RID: 24439 RVA: 0x0034C77C File Offset: 0x0034A97C
		private void method_107()
		{
			if (!MainForm.bool_2)
			{
				if (this.vmethod_796().Width != this.vmethod_798().Width | this.vmethod_796().Height != this.vmethod_798().Height)
				{
					this.vmethod_796().Width = this.vmethod_798().Width;
					this.vmethod_796().Height = this.vmethod_798().Height;
					this.vmethod_796().Size = new System.Drawing.Size(this.vmethod_798().Width, this.vmethod_798().Height);
				}
				if (Client.smethod_20())
				{
					this.method_234();
					this.vmethod_796().Refresh();
					Client.bool_1 = false;
				}
			}
		}

		// Token: 0x06005F78 RID: 24440 RVA: 0x0034C83C File Offset: 0x0034AA3C
		public void method_108(object sender, EventArgs e)
		{
			if (this.vmethod_1004().Checked)
			{
				this.vmethod_1004().Checked = false;
				this.scenarioMinimapWindow_0.Close();
				this.scenarioMinimapWindow_0 = null;
				return;
			}
			this.vmethod_1004().Checked = true;
			this.scenarioMinimapWindow_0 = new ScenarioMinimapWindow();
			this.scenarioMinimapWindow_0.Show();
		}

		// Token: 0x06005F79 RID: 24441 RVA: 0x0034C898 File Offset: 0x0034AA98
		public void method_109(object sender, EventArgs e)
		{
			if (this.vmethod_990().Checked)
			{
				this.vmethod_990().Checked = false;
				this.globalMinimapWindow_0.Close();
				this.globalMinimapWindow_0 = null;
				return;
			}
			this.vmethod_990().Checked = true;
			this.globalMinimapWindow_0 = new GlobalMinimapWindow();
			this.globalMinimapWindow_0.Show();
		}

		// Token: 0x06005F7A RID: 24442 RVA: 0x0034C8F4 File Offset: 0x0034AAF4
		public void method_110(object sender, EventArgs e)
		{
			if (this.vmethod_992().Checked)
			{
				this.vmethod_992().Checked = false;
				this.cameraFollowingMinimapWindow_0.Close();
				this.cameraFollowingMinimapWindow_0 = null;
				return;
			}
			this.vmethod_992().Checked = true;
			this.cameraFollowingMinimapWindow_0 = new CameraFollowingMinimapWindow();
			this.cameraFollowingMinimapWindow_0.Show();
		}

		// Token: 0x06005F7B RID: 24443 RVA: 0x0003D989 File Offset: 0x0003BB89
		[CompilerGenerated]
		private Timer vmethod_4()
		{
			return this.timer_0;
		}

		// Token: 0x06005F7C RID: 24444 RVA: 0x0034C950 File Offset: 0x0034AB50
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		private void vmethod_5(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_115);
			Timer timer = this.timer_0;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_0 = timer_10;
			timer = this.timer_0;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x06005F7D RID: 24445 RVA: 0x0034C994 File Offset: 0x0034AB94
		private void method_111(object sender, EventArgs e)
		{
			if (this.bool_6)
			{
				this.bool_6 = false;
				if (this.mouseEventArgs_1 != null)
				{
					MouseEventArgs mouseEventArgs = this.mouseEventArgs_1;
					try
					{
						bool flag;
						if (flag = (mouseEventArgs.X != this.point_0.X || mouseEventArgs.Y != this.point_0.Y))
						{
							this.method_401();
						}
						if (!this.bool_4)
						{
							if (mouseEventArgs.Button == MouseButtons.Left && flag && Control.ModifierKeys == Keys.Control && !this.method_158())
							{
								if (!Information.IsNothing(Client.smethod_54()) && !Information.IsNothing(Client.smethod_58()) && Client.smethod_58().enum79_0 == Waypoint.Enum79.const_0)
								{
									if (!Client.smethod_58().method_40())
									{
										System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), Client.smethod_58().imethod_2(), Client.smethod_58().imethod_0());
										if (point.X - this.point_0.X > 4 || point.X - this.point_0.X < -4 || point.Y - this.point_0.Y > 4 || point.Y - this.point_0.Y < -4)
										{
											GeoPoint geoPoint = Class2572.smethod_1(this.vmethod_796(), mouseEventArgs.X, mouseEventArgs.Y);
											int num = Array.IndexOf<Waypoint>(((ActiveUnit)Client.smethod_54()).vmethod_85().method_4(), Client.smethod_58());
											if (num >= 0)
											{
												Waypoint.WaypointType waypointType_;
												switch (Client.smethod_58().waypointType_0)
												{
												case Waypoint.WaypointType.ManualPlottedCourseWaypoint:
													waypointType_ = Waypoint.WaypointType.ManualPlottedCourseWaypoint;
													goto IL_23D;
												case Waypoint.WaypointType.PatrolStation:
												case Waypoint.WaypointType.Assemble:
												case Waypoint.WaypointType.LandingMarshal:
												case Waypoint.WaypointType.Refuel:
												case Waypoint.WaypointType.TakeOff:
												case Waypoint.WaypointType.Marshal:
												case Waypoint.WaypointType.Land:
												case Waypoint.WaypointType.StationStart_Racetrack:
												case Waypoint.WaypointType.StationStart_FigureEight:
												case Waypoint.WaypointType.StationStart_Area:
												case Waypoint.WaypointType.StationStart_RaceTrackRandom:
												case Waypoint.WaypointType.StationEnd:
												case Waypoint.WaypointType.HoldStart:
												case Waypoint.WaypointType.HoldEnd:
													waypointType_ = Waypoint.WaypointType.TurningPoint;
													goto IL_23D;
												case Waypoint.WaypointType.TurningPoint:
													waypointType_ = Waypoint.WaypointType.TurningPoint;
													goto IL_23D;
												case Waypoint.WaypointType.InitialPoint:
												case Waypoint.WaypointType.Split:
												case Waypoint.WaypointType.WeaponLaunch:
													waypointType_ = Waypoint.WaypointType.StrikeIngress;
													goto IL_23D;
												case Waypoint.WaypointType.Formate:
												case Waypoint.WaypointType.Target:
												case Waypoint.WaypointType.WeaponTarget:
													waypointType_ = Waypoint.WaypointType.StrikeEgress;
													goto IL_23D;
												case Waypoint.WaypointType.StrikeIngress:
													waypointType_ = Waypoint.WaypointType.StrikeIngress;
													goto IL_23D;
												case Waypoint.WaypointType.StrikeEgress:
													waypointType_ = Waypoint.WaypointType.StrikeEgress;
													goto IL_23D;
												}
												waypointType_ = Waypoint.WaypointType.ManualPlottedCourseWaypoint;
												IL_23D:
												((ActiveUnit)Client.smethod_54()).vmethod_85().method_51(num + 1, new Waypoint(geoPoint.imethod_0(), geoPoint.imethod_2(), geoPoint.imethod_4(), waypointType_, Waypoint.Enum80.const_2, Waypoint.Enum79.const_0));
												Client.smethod_59(((ActiveUnit)Client.smethod_54()).vmethod_85().method_4()[num + 1]);
												this.method_159(true);
												this.bool_13 = true;
												Client.bool_1 = true;
											}
										}
									}
									else
									{
										DarkMessageBox.smethod_1("Cannot insert a new waypoint between Station Start and Station End waypoints!", string.Empty, Enum11.const_0);
									}
								}
								if (!Information.IsNothing(Client.smethod_58()) && Client.smethod_58().enum79_0 == Waypoint.Enum79.const_1)
								{
									if (!Client.smethod_58().method_40())
									{
										if (Client.smethod_50().method_35().Count > 0)
										{
											bool flag2 = false;
											bool flag3 = false;
											Waypoint waypoint2;
											Waypoint waypoint4;
											try
											{
												foreach (Mission mission in Client.smethod_50().method_35())
												{
													if (mission.method_55())
													{
														try
														{
															List<Mission.Flight>.Enumerator enumerator2 = mission.list_1.GetEnumerator();
															IL_835:
															while (enumerator2.MoveNext())
															{
																Mission.Flight flight = enumerator2.Current;
																int num2 = Enumerable.Count<Waypoint>(flight.method_15()) - 1;
																int i = 0;
																while (i <= num2)
																{
																	Waypoint waypoint = flight.method_15()[i];
																	if (waypoint == Client.smethod_58())
																	{
																		if (Client.smethod_58().method_40())
																		{
																			DarkMessageBox.smethod_1("Cannot create a new waypoint from a Station Start waypoint. Change the waypoint type in the Flightplan Editor, and try again.", string.Empty, Enum11.const_0);
																		}
																		else if (Client.smethod_58().method_42())
																		{
																			DarkMessageBox.smethod_1("Cannot create a new waypoint from a Hold waypoint! Change the waypoint type in the Flightplan Editor, and try again.", string.Empty, Enum11.const_0);
																		}
																		else if (Client.smethod_58().waypointType_0 == Waypoint.WaypointType.LandingMarshal)
																		{
																			DarkMessageBox.smethod_1("Cannot create a new waypoint from a Landing Marshal waypoint! Change the waypoint type in the Flightplan Editor, and try again.", string.Empty, Enum11.const_0);
																		}
																		else if (Client.smethod_58().waypointType_0 == Waypoint.WaypointType.Land)
																		{
																			DarkMessageBox.smethod_1("Cannot create a new waypoint from a Landing waypoint! Change the waypoint type in the Flightplan Editor, and try again.", string.Empty, Enum11.const_0);
																		}
																		else if (waypoint.method_22())
																		{
																			DarkMessageBox.smethod_1("Cannot create new waypoints from a waypoint with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																		}
																		else
																		{
																			System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), Client.smethod_58().imethod_2(), Client.smethod_58().imethod_0());
																			if (point2.X - this.point_0.X > 4 || point2.X - this.point_0.X < -4 || point2.Y - this.point_0.Y > 4 || point2.Y - this.point_0.Y < -4)
																			{
																				GeoPoint geoPoint2 = Class2572.smethod_1(this.vmethod_796(), mouseEventArgs.X, mouseEventArgs.Y);
																				if (i >= 0)
																				{
																					Waypoint.WaypointType waypointType;
																					switch (Client.smethod_58().waypointType_0)
																					{
																					case Waypoint.WaypointType.ManualPlottedCourseWaypoint:
																						waypointType = Waypoint.WaypointType.ManualPlottedCourseWaypoint;
																						break;
																					case Waypoint.WaypointType.PatrolStation:
																					case Waypoint.WaypointType.Assemble:
																					case Waypoint.WaypointType.LandingMarshal:
																					case Waypoint.WaypointType.Refuel:
																					case Waypoint.WaypointType.TakeOff:
																					case Waypoint.WaypointType.Marshal:
																					case Waypoint.WaypointType.Land:
																					case Waypoint.WaypointType.StationStart_Racetrack:
																					case Waypoint.WaypointType.StationStart_FigureEight:
																					case Waypoint.WaypointType.StationStart_Area:
																					case Waypoint.WaypointType.StationStart_RaceTrackRandom:
																					case Waypoint.WaypointType.StationEnd:
																					case Waypoint.WaypointType.HoldStart:
																					case Waypoint.WaypointType.HoldEnd:
																						waypointType = Waypoint.WaypointType.TurningPoint;
																						break;
																					case Waypoint.WaypointType.TerminalPoint:
																					case Waypoint.WaypointType.LocalizationRun:
																					case Waypoint.WaypointType.PathfindingPoint:
																					case Waypoint.WaypointType.PickupPoint:
																						goto IL_61D;
																					case Waypoint.WaypointType.TurningPoint:
																						waypointType = Waypoint.WaypointType.TurningPoint;
																						break;
																					case Waypoint.WaypointType.InitialPoint:
																					case Waypoint.WaypointType.Split:
																					case Waypoint.WaypointType.WeaponLaunch:
																						waypointType = Waypoint.WaypointType.StrikeIngress;
																						break;
																					case Waypoint.WaypointType.Formate:
																					case Waypoint.WaypointType.Target:
																					case Waypoint.WaypointType.WeaponTarget:
																						waypointType = Waypoint.WaypointType.StrikeEgress;
																						break;
																					case Waypoint.WaypointType.StrikeIngress:
																						waypointType = Waypoint.WaypointType.StrikeIngress;
																						break;
																					case Waypoint.WaypointType.StrikeEgress:
																						waypointType = Waypoint.WaypointType.StrikeEgress;
																						break;
																					default:
																						goto IL_61D;
																					}
																					IL_625:
																					waypoint2 = new Waypoint(geoPoint2.imethod_0(), geoPoint2.imethod_2(), geoPoint2.imethod_4(), waypointType, Waypoint.Enum80.const_3, Waypoint.Enum79.const_1);
																					Scenario scenario = Client.smethod_46();
																					Waypoint waypoint_ = Client.smethod_58();
																					bool bool_ = false;
																					bool bool_2 = false;
																					Doctrine doctrine = null;
																					Waypoint waypoint3 = Waypoint.smethod_14(ref scenario, ref waypoint_, bool_, bool_2, ref doctrine);
																					Client.smethod_59(waypoint_);
																					waypoint2 = waypoint3;
																					waypoint2.waypointType_0 = waypointType;
																					waypoint2.imethod_3(geoPoint2.imethod_2());
																					waypoint2.imethod_1(geoPoint2.imethod_0());
																					waypoint2.float_24 = 0f;
																					waypoint2.float_25 = 0f;
																					waypoint2.float_26 = 0f;
																					Mission.Flight flight2 = flight;
																					Waypoint[] array = flight2.method_15();
																					ActiveUnit_Navigator.smethod_1(ref array, i + 1, waypoint2);
																					flight2.method_16(array);
																					waypoint4 = Client.smethod_58();
																					Client.smethod_59(flight.method_15()[i + 1]);
																					this.method_159(true);
																					this.bool_13 = true;
																					Client.bool_1 = true;
																					flag2 = true;
																					Scenario scenario_ = Client.smethod_46();
																					Mission mission_ = mission;
																					ActiveUnit activeUnit_ = flight.method_32(Client.smethod_46());
																					Mission.Flight flight_ = flight;
																					Mission.Flight flight3;
																					array = (flight3 = flight).method_15();
																					float num3 = 0f;
																					float num4 = 0f;
																					Class514.smethod_28(scenario_, mission_, activeUnit_, flight_, ref array, ref num3, ref num4, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
																					flight3.method_16(array);
																					this.method_235();
																					if (Client.smethod_32().Visible)
																					{
																						Client.smethod_32().method_12();
																					}
																					if (Client.smethod_31().Visible)
																					{
																						Client.smethod_31().method_5();
																					}
																					if (Client.flightPlanTime_0.Visible)
																					{
																						FlightPlanTime flightPlanTime_ = Client.flightPlanTime_0;
																						Mission mission2 = null;
																						flight3 = null;
																						waypoint_ = null;
																						flightPlanTime_.method_4(ref mission2, ref flight3, ref waypoint_, Mission.Flight.Enum106.const_0, true);
																						break;
																					}
																					break;
																					IL_61D:
																					waypointType = Waypoint.WaypointType.ManualPlottedCourseWaypoint;
																					goto IL_625;
																				}
																			}
																		}
																	}
																	if (!Information.IsNothing(waypoint.waypoint_0) && waypoint.waypoint_0 == Client.smethod_58())
																	{
																		DarkMessageBox.smethod_1("Cannot create new waypoints from a waypoint with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	}
																	else if (!Information.IsNothing(waypoint.waypoint_1) && waypoint.waypoint_1 == Client.smethod_58())
																	{
																		DarkMessageBox.smethod_1("Cannot create new waypoints from a waypoint with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	}
																	else if (!Information.IsNothing(waypoint.waypoint_2) && waypoint.waypoint_2 == Client.smethod_58())
																	{
																		DarkMessageBox.smethod_1("Cannot create new waypoints from a waypoint with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	}
																	else if (!Information.IsNothing(waypoint.waypoint_3) && waypoint.waypoint_3 == Client.smethod_58())
																	{
																		DarkMessageBox.smethod_1("Cannot create new waypoints from a waypoint with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	}
																	else
																	{
																		if (Information.IsNothing(waypoint.waypoint_4) || waypoint.waypoint_4 != Client.smethod_58())
																		{
																			i++;
																			continue;
																		}
																		DarkMessageBox.smethod_1("Cannot create new waypoints from a waypoint with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	}
																	IL_831:
																	if (!flag2)
																	{
																		goto IL_835;
																	}
																	goto IL_841;
																}
																goto IL_831;
															}
															IL_841:;
														}
														finally
														{
															List<Mission.Flight>.Enumerator enumerator2;
															((IDisposable)enumerator2).Dispose();
														}
														if (flag2)
														{
															break;
														}
													}
												}
											}
											finally
											{
												IEnumerator<Mission> enumerator;
												if (enumerator != null)
												{
													enumerator.Dispose();
												}
											}
											if (!Information.IsNothing(waypoint2) && !Information.IsNothing(waypoint4))
											{
												for (int j = Client.smethod_46().method_42().Count - 1; j >= 0; j += -1)
												{
													ActiveUnit activeUnit = Client.smethod_46().method_42()[j];
													if (!Information.IsNothing(activeUnit) && activeUnit.vmethod_127() && (Class570.class280_0.method_34() != Class279.Class280.Enum76.const_1 || Client.smethod_54() == activeUnit))
													{
														if ((activeUnit.bool_3 || (activeUnit.bool_1 && ((Group)activeUnit).method_143() == Group.GroupType.AirGroup)) && activeUnit.vmethod_85().method_49() && !Information.IsNothing(activeUnit.vmethod_7(false)) && activeUnit.vmethod_7(false) == Client.smethod_50())
														{
															int num5 = Enumerable.Count<Waypoint>(activeUnit.vmethod_85().method_4()) - 1;
															for (int k = 0; k <= num5; k++)
															{
																if (activeUnit.vmethod_85().method_4()[k] == waypoint4 && k >= 0)
																{
																	ActiveUnit_Navigator activeUnit_Navigator = activeUnit.vmethod_85();
																	Waypoint[] array = activeUnit_Navigator.method_4();
																	ActiveUnit_Navigator.smethod_1(ref array, k + 1, waypoint2);
																	activeUnit_Navigator.method_5(array);
																	flag3 = true;
																	break;
																}
															}
														}
														if (flag3)
														{
															break;
														}
													}
												}
											}
										}
									}
									else
									{
										DarkMessageBox.smethod_1("Cannot insert a new waypoint between Station Start and Station End waypoints!", string.Empty, Enum11.const_0);
									}
								}
								if (!Information.IsNothing(this.referencePoint_0) && !this.referencePoint_0.bool_12)
								{
									System.Drawing.Point point3 = Class2572.smethod_0(this.vmethod_796(), this.referencePoint_0.imethod_2(), this.referencePoint_0.imethod_0());
									if (point3.X - this.point_0.X > 4 || point3.X - this.point_0.X < -4 || point3.Y - this.point_0.Y > 4 || point3.Y - this.point_0.Y < -4)
									{
										GeoPoint geoPoint3 = Class2572.smethod_1(this.vmethod_796(), mouseEventArgs.X, mouseEventArgs.Y);
										ReferencePoint referencePoint = new ReferencePoint();
										referencePoint.imethod_1(geoPoint3.imethod_0());
										referencePoint.imethod_3(geoPoint3.imethod_2());
										Client.smethod_46().UnitsAutoIncrement = Client.smethod_46().UnitsAutoIncrement + 1;
										referencePoint.Name = "RP-" + Conversions.ToString(Client.smethod_46().UnitsAutoIncrement);
										Client.smethod_50().vmethod_12().method_4(referencePoint);
										this.referencePoint_0 = referencePoint;
										this.method_159(true);
										this.bool_12 = false;
										Client.bool_1 = true;
									}
								}
							}
							else if (mouseEventArgs.Button == MouseButtons.Left && flag)
							{
								if (Information.IsNothing(Client.smethod_58()) && Information.IsNothing(this.referencePoint_0))
								{
									if (Client.smethod_61() != Client.Enum197.const_1 && (this.point_3.X - this.point_0.X > 4 || this.point_3.X - this.point_0.X < -4 || this.point_3.Y - this.point_0.Y > 4 || this.point_3.Y - this.point_0.Y < -4))
									{
										this.method_157(true);
										this.point_4 = this.point_0;
										int x = this.point_3.X;
										int y = this.point_3.Y;
										int x2 = this.point_4.X;
										int y2 = this.point_4.Y;
										if (x2 > x && y2 > y)
										{
											this.rectangle_1 = new Rectangle(x, y, x2 - x, y2 - y);
										}
										if (x2 > x && y2 < y)
										{
											this.rectangle_1 = new Rectangle(x, y2, x2 - x, y - y2);
										}
										if (x2 < x && this.point_0.Y < y)
										{
											this.rectangle_1 = new Rectangle(this.point_0.X, this.point_0.Y, x - x2, y - y2);
										}
										if (x2 < x && y2 > y)
										{
											this.rectangle_1 = new Rectangle(x2, y, x - x2, y2 - y);
										}
									}
								}
								else
								{
									this.method_157(false);
								}
								checked
								{
									if (!Information.IsNothing(Client.smethod_58()) && Client.smethod_58().waypointType_0 != Waypoint.WaypointType.TakeOff && Client.smethod_58().waypointType_0 != Waypoint.WaypointType.Land && Client.smethod_58().waypointType_0 != Waypoint.WaypointType.LandingMarshal)
									{
										System.Drawing.Point point4 = Class2572.smethod_0(this.vmethod_796(), Client.smethod_58().imethod_2(), Client.smethod_58().imethod_0());
										if (unchecked((this.method_158() || point4.X - this.point_0.X <= 4) && point4.X - this.point_0.X >= -4 && point4.Y - this.point_0.Y <= 4 && point4.Y - this.point_0.Y >= -4))
										{
											if (this.method_158())
											{
												WorldWindow worldWindow = this.vmethod_796();
												ref System.Drawing.Point ptr = ref this.point_0;
												int num6 = this.point_0.X;
												ref System.Drawing.Point ptr2 = ref this.point_0;
												int l = this.point_0.Y;
												double num7;
												double num8;
												Class2572.smethod_3(worldWindow, ref num6, ref l, ref num7, ref num8);
												ptr2.Y = l;
												ptr.X = num6;
												if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_0)
												{
													if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
													{
														Unit unit = (ActiveUnit)Client.smethod_54();
														double double_ = num8;
														double double_2 = num7;
														l = 0;
														bool flag4 = true;
														bool flag5 = false;
														bool flag6 = false;
														bool flag7 = true;
														bool bool_3 = true;
														bool flag8 = true;
														float? nullable_ = null;
														short? nullable_2 = null;
														List<ActiveUnit> list = null;
														float float_ = 0f;
														bool bool_4 = false;
														bool bool_5 = false;
														string text = "";
														bool flag9 = false;
														if (unit.vmethod_47(double_, double_2, ref l, flag4, flag5, flag6, ref flag7, bool_3, ref flag8, nullable_, nullable_2, ref list, float_, bool_4, bool_5, ref text, ref flag9))
														{
															Client.smethod_58().imethod_3(num8);
															Client.smethod_58().imethod_1(num7);
														}
													}
												}
												else
												{
													bool flag10 = false;
													try
													{
														foreach (Mission mission3 in Client.smethod_50().method_35())
														{
															if (mission3.method_55())
															{
																try
																{
																	List<Mission.Flight>.Enumerator enumerator4 = mission3.list_1.GetEnumerator();
																	IL_114C:
																	while (enumerator4.MoveNext())
																	{
																		Mission.Flight flight4 = enumerator4.Current;
																		Waypoint[] array2 = flight4.method_15();
																		l = 0;
																		while (l < array2.Length)
																		{
																			Waypoint waypoint5 = array2[l];
																			if (waypoint5 == Client.smethod_58())
																			{
																				flag10 = true;
																			}
																			if (waypoint5.enum83_0 == Waypoint.Enum83.const_2)
																			{
																				if (!Information.IsNothing(waypoint5.waypoint_0) && waypoint5.waypoint_0 == Client.smethod_58())
																				{
																					flag10 = true;
																				}
																				else if (!Information.IsNothing(waypoint5.waypoint_1) && waypoint5.waypoint_1 == Client.smethod_58())
																				{
																					flag10 = true;
																				}
																				else if (!Information.IsNothing(waypoint5.waypoint_2) && waypoint5.waypoint_2 == Client.smethod_58())
																				{
																					flag10 = true;
																				}
																				else if (!Information.IsNothing(waypoint5.waypoint_3) && waypoint5.waypoint_3 == Client.smethod_58())
																				{
																					flag10 = true;
																				}
																				else if (!Information.IsNothing(waypoint5.waypoint_4) && waypoint5.waypoint_4 == Client.smethod_58())
																				{
																					flag10 = true;
																				}
																			}
																			if (!flag10)
																			{
																				l++;
																			}
																			else
																			{
																				if (!Information.IsNothing(flight4.method_32(Client.smethod_46())))
																				{
																					Unit unit2 = flight4.method_32(Client.smethod_46());
																					double double_3 = num8;
																					double double_4 = num7;
																					num6 = 0;
																					bool flag11 = true;
																					bool flag12 = false;
																					bool flag13 = false;
																					bool flag9 = true;
																					bool bool_6 = true;
																					bool flag8 = true;
																					float? nullable_3 = null;
																					short? nullable_4 = null;
																					List<ActiveUnit> list = null;
																					float float_2 = 0f;
																					bool bool_7 = false;
																					bool bool_8 = false;
																					string text = "";
																					bool flag7 = false;
																					if (unit2.vmethod_47(double_3, double_4, ref num6, flag11, flag12, flag13, ref flag9, bool_6, ref flag8, nullable_3, nullable_4, ref list, float_2, bool_7, bool_8, ref text, ref flag7))
																					{
																						Client.smethod_58().imethod_3(num8);
																						Client.smethod_58().imethod_1(num7);
																						Scenario scenario_2 = Client.smethod_46();
																						Mission mission_2 = mission3;
																						ActiveUnit activeUnit_2 = flight4.method_32(Client.smethod_46());
																						Mission.Flight flight_2 = flight4;
																						Mission.Flight flight3;
																						Waypoint[] waypoint_2 = (flight3 = flight4).method_15();
																						float num3 = 0f;
																						float num4 = 0f;
																						Class514.smethod_28(scenario_2, mission_2, activeUnit_2, flight_2, ref waypoint_2, ref num3, ref num4, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
																						flight3.method_16(waypoint_2);
																					}
																				}
																				else
																				{
																					Client.smethod_58().imethod_3(num8);
																					Client.smethod_58().imethod_1(num7);
																					Scenario scenario_3 = Client.smethod_46();
																					Mission mission_3 = mission3;
																					ActiveUnit activeUnit_3 = flight4.method_32(Client.smethod_46());
																					Mission.Flight flight_3 = flight4;
																					Mission.Flight flight3;
																					Waypoint[] waypoint_2 = (flight3 = flight4).method_15();
																					float num4 = 0f;
																					float num3 = 0f;
																					Class514.smethod_28(scenario_3, mission_3, activeUnit_3, flight_3, ref waypoint_2, ref num4, ref num3, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
																					flight3.method_16(waypoint_2);
																				}
																				IL_1148:
																				if (!flag10)
																				{
																					goto IL_114C;
																				}
																				goto IL_1158;
																			}
																		}
																		goto IL_1148;
																	}
																	IL_1158:;
																}
																finally
																{
																	List<Mission.Flight>.Enumerator enumerator4;
																	((IDisposable)enumerator4).Dispose();
																}
																if (flag10)
																{
																	break;
																}
															}
														}
													}
													finally
													{
														IEnumerator<Mission> enumerator3;
														if (enumerator3 != null)
														{
															enumerator3.Dispose();
														}
													}
												}
												Client.bool_1 = true;
											}
										}
										else
										{
											WorldWindow worldWindow2 = this.vmethod_796();
											ref System.Drawing.Point ptr2 = ref this.point_0;
											int m = this.point_0.X;
											ref System.Drawing.Point ptr = ref this.point_0;
											int n = this.point_0.Y;
											double num9;
											double num10;
											Class2572.smethod_3(worldWindow2, ref m, ref n, ref num9, ref num10);
											ptr.Y = n;
											ptr2.X = m;
											if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_0)
											{
												if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
												{
													Unit unit3 = (ActiveUnit)Client.smethod_54();
													double double_5 = num10;
													double double_6 = num9;
													n = 0;
													bool flag14 = true;
													bool flag15 = false;
													bool flag16 = false;
													bool flag7 = true;
													bool bool_9 = true;
													bool flag8 = true;
													float? nullable_5 = null;
													short? nullable_6 = null;
													List<ActiveUnit> list = null;
													float float_3 = 0f;
													bool bool_10 = false;
													bool bool_11 = false;
													string text = "";
													bool flag9 = false;
													if (unit3.vmethod_47(double_5, double_6, ref n, flag14, flag15, flag16, ref flag7, bool_9, ref flag8, nullable_5, nullable_6, ref list, float_3, bool_10, bool_11, ref text, ref flag9))
													{
														Client.smethod_58().imethod_3(num10);
														Client.smethod_58().imethod_1(num9);
														((ActiveUnit)Client.smethod_54()).vmethod_85().vmethod_2();
													}
												}
											}
											else
											{
												if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_1)
												{
													bool flag17 = false;
													try
													{
														foreach (Mission mission4 in Client.smethod_50().method_35())
														{
															if (mission4.method_55())
															{
																try
																{
																	List<Mission.Flight>.Enumerator enumerator6 = mission4.list_1.GetEnumerator();
																	IL_1572:
																	while (enumerator6.MoveNext())
																	{
																		Mission.Flight flight5 = enumerator6.Current;
																		Waypoint[] array = flight5.method_15();
																		n = 0;
																		while (n < array.Length)
																		{
																			Waypoint waypoint6 = array[n];
																			if (waypoint6 == Client.smethod_58())
																			{
																				flag17 = true;
																			}
																			if (waypoint6.enum83_0 == Waypoint.Enum83.const_2)
																			{
																				if (!Information.IsNothing(waypoint6.waypoint_0) && waypoint6.waypoint_0 == Client.smethod_58())
																				{
																					flag17 = true;
																				}
																				else if (!Information.IsNothing(waypoint6.waypoint_1) && waypoint6.waypoint_1 == Client.smethod_58())
																				{
																					flag17 = true;
																				}
																				else if (!Information.IsNothing(waypoint6.waypoint_2) && waypoint6.waypoint_2 == Client.smethod_58())
																				{
																					flag17 = true;
																				}
																				else if (!Information.IsNothing(waypoint6.waypoint_3) && waypoint6.waypoint_3 == Client.smethod_58())
																				{
																					flag17 = true;
																				}
																				else if (!Information.IsNothing(waypoint6.waypoint_4) && waypoint6.waypoint_4 == Client.smethod_58())
																				{
																					flag17 = true;
																				}
																			}
																			if (!flag17)
																			{
																				n++;
																			}
																			else
																			{
																				if (!Information.IsNothing(flight5.method_32(Client.smethod_46())))
																				{
																					Unit unit4 = flight5.method_32(Client.smethod_46());
																					double double_7 = num10;
																					double double_8 = num9;
																					m = 0;
																					bool flag18 = true;
																					bool flag19 = false;
																					bool flag20 = false;
																					bool flag9 = true;
																					bool bool_12 = true;
																					bool flag8 = true;
																					float? nullable_7 = null;
																					short? nullable_8 = null;
																					List<ActiveUnit> list = null;
																					float float_4 = 0f;
																					bool bool_13 = false;
																					bool bool_14 = false;
																					string text = "";
																					bool flag7 = false;
																					if (unit4.vmethod_47(double_7, double_8, ref m, flag18, flag19, flag20, ref flag9, bool_12, ref flag8, nullable_7, nullable_8, ref list, float_4, bool_13, bool_14, ref text, ref flag7))
																					{
																						Client.smethod_58().imethod_3(num10);
																						Client.smethod_58().imethod_1(num9);
																						Scenario scenario_4 = Client.smethod_46();
																						Mission mission_4 = mission4;
																						ActiveUnit activeUnit_4 = flight5.method_32(Client.smethod_46());
																						Mission.Flight flight_4 = flight5;
																						Mission.Flight flight3;
																						Waypoint[] array3 = (flight3 = flight5).method_15();
																						float num4 = 0f;
																						float num3 = 0f;
																						Class514.smethod_28(scenario_4, mission_4, activeUnit_4, flight_4, ref array3, ref num4, ref num3, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
																						flight3.method_16(array3);
																					}
																				}
																				else
																				{
																					Client.smethod_58().imethod_3(num10);
																					Client.smethod_58().imethod_1(num9);
																					Scenario scenario_5 = Client.smethod_46();
																					Mission mission_5 = mission4;
																					ActiveUnit activeUnit_5 = flight5.method_32(Client.smethod_46());
																					Mission.Flight flight_5 = flight5;
																					Mission.Flight flight3;
																					Waypoint[] array3 = (flight3 = flight5).method_15();
																					float num3 = 0f;
																					float num4 = 0f;
																					Class514.smethod_28(scenario_5, mission_5, activeUnit_5, flight_5, ref array3, ref num3, ref num4, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
																					flight3.method_16(array3);
																				}
																				IL_156E:
																				if (!flag17)
																				{
																					goto IL_1572;
																				}
																				goto IL_157E;
																			}
																		}
																		goto IL_156E;
																	}
																	IL_157E:;
																}
																finally
																{
																	List<Mission.Flight>.Enumerator enumerator6;
																	((IDisposable)enumerator6).Dispose();
																}
																if (flag17)
																{
																	break;
																}
															}
														}
														goto IL_1A58;
													}
													finally
													{
														IEnumerator<Mission> enumerator5;
														if (enumerator5 != null)
														{
															enumerator5.Dispose();
														}
													}
												}
												if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_2)
												{
													bool flag21 = false;
													try
													{
														foreach (Mission mission5 in Client.smethod_50().method_35())
														{
															if (mission5.method_55())
															{
																try
																{
																	List<Mission.Flight>.Enumerator enumerator8 = mission5.list_1.GetEnumerator();
																	IL_1A1E:
																	while (enumerator8.MoveNext())
																	{
																		Mission.Flight flight6 = enumerator8.Current;
																		Waypoint[] array3 = flight6.method_15();
																		m = 0;
																		while (m < array3.Length)
																		{
																			Waypoint waypoint7 = array3[m];
																			if ((waypoint7.waypointType_0 == Waypoint.WaypointType.Target || waypoint7.waypointType_0 == Waypoint.WaypointType.WeaponTarget) && waypoint7.enum105_0 == Mission.Enum105.const_2)
																			{
																				if (!Information.IsNothing(waypoint7.list_9))
																				{
																					try
																					{
																						foreach (Mission.Class289 @class in waypoint7.list_9)
																						{
																							if (!Information.IsNothing(@class.waypoint_0))
																							{
																								Waypoint[] waypoint_3 = @class.waypoint_0;
																								for (int num11 = 0; num11 < waypoint_3.Length; num11++)
																								{
																									if (waypoint_3[num11] == Client.smethod_58())
																									{
																										flag21 = true;
																										break;
																									}
																								}
																							}
																							if (flag21)
																							{
																								break;
																							}
																						}
																					}
																					finally
																					{
																						List<Mission.Class289>.Enumerator enumerator9;
																						((IDisposable)enumerator9).Dispose();
																					}
																				}
																				if (!flag21 && !Information.IsNothing(waypoint7.list_10))
																				{
																					try
																					{
																						foreach (Mission.Class289 class2 in waypoint7.list_10)
																						{
																							if (!Information.IsNothing(class2.waypoint_0))
																							{
																								Waypoint[] waypoint_4 = class2.waypoint_0;
																								for (int num12 = 0; num12 < waypoint_4.Length; num12++)
																								{
																									if (waypoint_4[num12] == Client.smethod_58())
																									{
																										flag21 = true;
																										break;
																									}
																								}
																							}
																							if (flag21)
																							{
																								break;
																							}
																						}
																					}
																					finally
																					{
																						List<Mission.Class289>.Enumerator enumerator10;
																						((IDisposable)enumerator10).Dispose();
																					}
																				}
																				if (!flag21 && !Information.IsNothing(waypoint7.list_11))
																				{
																					try
																					{
																						foreach (Mission.Class289 class3 in waypoint7.list_11)
																						{
																							if (!Information.IsNothing(class3.waypoint_0))
																							{
																								Waypoint[] waypoint_5 = class3.waypoint_0;
																								for (int num13 = 0; num13 < waypoint_5.Length; num13++)
																								{
																									if (waypoint_5[num13] == Client.smethod_58())
																									{
																										flag21 = true;
																										break;
																									}
																								}
																							}
																							if (flag21)
																							{
																								break;
																							}
																						}
																					}
																					finally
																					{
																						List<Mission.Class289>.Enumerator enumerator11;
																						((IDisposable)enumerator11).Dispose();
																					}
																				}
																				if (!flag21 && !Information.IsNothing(waypoint7.list_12))
																				{
																					try
																					{
																						foreach (Mission.Class289 class4 in waypoint7.list_12)
																						{
																							if (!Information.IsNothing(class4.waypoint_0))
																							{
																								Waypoint[] waypoint_6 = class4.waypoint_0;
																								for (int num14 = 0; num14 < waypoint_6.Length; num14++)
																								{
																									if (waypoint_6[num14] == Client.smethod_58())
																									{
																										flag21 = true;
																										break;
																									}
																								}
																							}
																							if (flag21)
																							{
																								break;
																							}
																						}
																					}
																					finally
																					{
																						List<Mission.Class289>.Enumerator enumerator12;
																						((IDisposable)enumerator12).Dispose();
																					}
																				}
																				if (!flag21 && !Information.IsNothing(waypoint7.list_13))
																				{
																					try
																					{
																						foreach (Mission.Class289 class5 in waypoint7.list_13)
																						{
																							if (!Information.IsNothing(class5.waypoint_0))
																							{
																								Waypoint[] waypoint_7 = class5.waypoint_0;
																								for (int num15 = 0; num15 < waypoint_7.Length; num15++)
																								{
																									if (waypoint_7[num15] == Client.smethod_58())
																									{
																										flag21 = true;
																										break;
																									}
																								}
																							}
																							if (flag21)
																							{
																								break;
																							}
																						}
																					}
																					finally
																					{
																						List<Mission.Class289>.Enumerator enumerator13;
																						((IDisposable)enumerator13).Dispose();
																					}
																				}
																				if (!flag21 && !Information.IsNothing(waypoint7.list_14))
																				{
																					try
																					{
																						foreach (Mission.Class289 class6 in waypoint7.list_14)
																						{
																							if (!Information.IsNothing(class6.waypoint_0))
																							{
																								Waypoint[] waypoint_8 = class6.waypoint_0;
																								for (int num16 = 0; num16 < waypoint_8.Length; num16++)
																								{
																									if (waypoint_8[num16] == Client.smethod_58())
																									{
																										flag21 = true;
																										break;
																									}
																								}
																							}
																							if (flag21)
																							{
																								break;
																							}
																						}
																					}
																					finally
																					{
																						List<Mission.Class289>.Enumerator enumerator14;
																						((IDisposable)enumerator14).Dispose();
																					}
																				}
																			}
																			if (!flag21)
																			{
																				m++;
																			}
																			else
																			{
																				Client.smethod_58().imethod_3(num10);
																				Client.smethod_58().imethod_1(num9);
																				Scenario scenario_6 = Client.smethod_46();
																				Mission mission_6 = mission5;
																				ActiveUnit activeUnit_6 = flight6.method_32(Client.smethod_46());
																				Mission.Flight flight_6 = flight6;
																				Mission.Flight flight3;
																				Waypoint[] array2 = (flight3 = flight6).method_15();
																				float num4 = 0f;
																				float num3 = 0f;
																				Class514.smethod_28(scenario_6, mission_6, activeUnit_6, flight_6, ref array2, ref num4, ref num3, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
																				flight3.method_16(array2);
																				IL_1A1A:
																				if (!flag21)
																				{
																					goto IL_1A1E;
																				}
																				goto IL_1A2A;
																			}
																		}
																		goto IL_1A1A;
																	}
																	IL_1A2A:;
																}
																finally
																{
																	List<Mission.Flight>.Enumerator enumerator8;
																	((IDisposable)enumerator8).Dispose();
																}
																if (flag21)
																{
																	break;
																}
															}
														}
													}
													finally
													{
														IEnumerator<Mission> enumerator7;
														if (enumerator7 != null)
														{
															enumerator7.Dispose();
														}
													}
												}
											}
											IL_1A58:
											this.method_159(true);
											this.bool_13 = true;
											Client.bool_1 = true;
										}
									}
								}
								if (!Information.IsNothing(this.referencePoint_0) && !this.referencePoint_0.bool_12)
								{
									System.Drawing.Point point5 = Class2572.smethod_0(this.vmethod_796(), this.referencePoint_0.imethod_2(), this.referencePoint_0.imethod_0());
									if ((this.method_158() || point5.X - this.point_0.X <= 4) && point5.X - this.point_0.X >= -4 && point5.Y - this.point_0.Y <= 4 && point5.Y - this.point_0.Y >= -4)
									{
										if (this.method_158())
										{
											WorldWindow worldWindow3 = this.vmethod_796();
											ref System.Drawing.Point ptr = ref this.point_0;
											int num17 = this.point_0.X;
											ref System.Drawing.Point ptr2 = ref this.point_0;
											int num6 = this.point_0.Y;
											ReferencePoint referencePoint2;
											double double_9 = (referencePoint2 = this.referencePoint_0).imethod_0();
											ReferencePoint referencePoint3;
											double double_10 = (referencePoint3 = this.referencePoint_0).imethod_2();
											Class2572.smethod_3(worldWindow3, ref num17, ref num6, ref double_9, ref double_10);
											referencePoint3.imethod_3(double_10);
											referencePoint2.imethod_1(double_9);
											ptr2.Y = num6;
											ptr.X = num17;
											this.referencePoint_0.method_21();
											Client.bool_1 = true;
										}
									}
									else
									{
										WorldWindow worldWindow4 = this.vmethod_796();
										ref System.Drawing.Point ptr2 = ref this.point_0;
										int num6 = this.point_0.X;
										ref System.Drawing.Point ptr = ref this.point_0;
										int num17 = this.point_0.Y;
										ReferencePoint referencePoint3;
										double double_10 = (referencePoint3 = this.referencePoint_0).imethod_0();
										ReferencePoint referencePoint2;
										double double_9 = (referencePoint2 = this.referencePoint_0).imethod_2();
										Class2572.smethod_3(worldWindow4, ref num6, ref num17, ref double_10, ref double_9);
										referencePoint2.imethod_3(double_9);
										referencePoint3.imethod_1(double_10);
										ptr.Y = num17;
										ptr2.X = num6;
										this.referencePoint_0.method_21();
										this.method_159(true);
										this.bool_12 = false;
										Client.bool_1 = true;
									}
								}
							}
						}
						this.point_0.X = mouseEventArgs.X;
						this.point_0.Y = mouseEventArgs.Y;
						this.method_249();
					}
					catch (Exception ex)
					{
						ex.Data.Add("Error at 200606", ex.Message);
						GameGeneral.smethod_25(ref ex);
						if (Debugger.IsAttached)
						{
							Debugger.Break();
						}
					}
				}
			}
		}

		// Token: 0x06005F7E RID: 24446 RVA: 0x0034E7B8 File Offset: 0x0034C9B8
		private void method_112(object sender, EventArgs e)
		{
			Client.Enum197 @enum = Client.smethod_61();
			if (@enum != Client.Enum197.const_0)
			{
				if (@enum != Client.Enum197.const_2)
				{
					if (@enum == Client.Enum197.const_6)
					{
						this.vmethod_796().Cursor = Cursors.Cross;
					}
				}
				else
				{
					this.vmethod_796().Cursor = Cursors.Hand;
				}
			}
			else
			{
				this.vmethod_796().Cursor = Cursors.Default;
			}
			this.method_249();
			this.vmethod_66().Start();
		}

		// Token: 0x06005F7F RID: 24447 RVA: 0x0034E81C File Offset: 0x0034CA1C
		private void method_113(object sender, MouseEventArgs e)
		{
			try
			{
				if (this.method_158() && !Information.IsNothing(Client.smethod_58()))
				{
					if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_1)
					{
						if (Client.smethod_50().method_35().Count <= 0)
						{
							goto IL_783;
						}
						bool flag = false;
						bool flag2 = false;
						try
						{
							foreach (Mission mission in Client.smethod_50().method_35())
							{
								if (mission.method_55())
								{
									try
									{
										List<Mission.Flight>.Enumerator enumerator2 = mission.list_1.GetEnumerator();
										IL_29B:
										while (enumerator2.MoveNext())
										{
											Mission.Flight flight = enumerator2.Current;
											int num = Enumerable.Count<Waypoint>(flight.method_15()) - 1;
											int i = 0;
											while (i <= num)
											{
												Waypoint waypoint = flight.method_15()[i];
												if (waypoint == Client.smethod_58())
												{
													flag2 = true;
												}
												if (waypoint.enum83_0 == Waypoint.Enum83.const_2)
												{
													if (!Information.IsNothing(waypoint.waypoint_0) && waypoint.waypoint_0 == Client.smethod_58())
													{
														flag2 = true;
													}
													else if (!Information.IsNothing(waypoint.waypoint_1) && waypoint.waypoint_1 == Client.smethod_58())
													{
														flag2 = true;
													}
													else if (!Information.IsNothing(waypoint.waypoint_2) && waypoint.waypoint_2 == Client.smethod_58())
													{
														flag2 = true;
													}
													else if (!Information.IsNothing(waypoint.waypoint_3) && waypoint.waypoint_3 == Client.smethod_58())
													{
														flag2 = true;
													}
													else if (!Information.IsNothing(waypoint.waypoint_4) && waypoint.waypoint_4 == Client.smethod_58())
													{
														flag2 = true;
													}
												}
												if (!flag2)
												{
													i++;
												}
												else
												{
													Mission.Flight flight2;
													if (Client.smethod_58().waypointType_0 == Waypoint.WaypointType.Target || Client.smethod_58().waypointType_0 == Waypoint.WaypointType.WeaponTarget)
													{
														FlightPlanEditorTargets flightPlanEditorTargets = Client.smethod_22();
														Scenario scenario_;
														ActiveUnit activeUnit_ = (flight2 = flight).method_32(scenario_ = Client.smethod_46());
														flightPlanEditorTargets.method_3(ref activeUnit_, ref mission, false, Client.smethod_58());
														flight2.method_33(scenario_, activeUnit_);
													}
													Scenario scenario_2 = Client.smethod_46();
													Mission mission_ = mission;
													ActiveUnit activeUnit_2 = flight.method_32(Client.smethod_46());
													Mission.Flight flight_ = flight;
													Waypoint[] array = (flight2 = flight).method_15();
													float num2 = 0f;
													float num3 = 0f;
													Class514.smethod_28(scenario_2, mission_, activeUnit_2, flight_, ref array, ref num2, ref num3, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
													flight2.method_16(array);
													this.method_235();
													if (Client.smethod_32().Visible)
													{
														Client.smethod_32().method_12();
													}
													if (Client.smethod_31().Visible)
													{
														Client.smethod_31().method_5();
													}
													if (Client.flightPlanTime_0.Visible)
													{
														FlightPlanTime flightPlanTime_ = Client.flightPlanTime_0;
														Mission mission2 = null;
														flight2 = null;
														Waypoint waypoint2 = null;
														flightPlanTime_.method_4(ref mission2, ref flight2, ref waypoint2, Mission.Flight.Enum106.const_0, true);
													}
													flag = true;
													IL_298:
													if (!flag)
													{
														goto IL_29B;
													}
													goto IL_2A7;
												}
											}
											goto IL_298;
										}
										IL_2A7:;
									}
									finally
									{
										List<Mission.Flight>.Enumerator enumerator2;
										((IDisposable)enumerator2).Dispose();
									}
									if (flag)
									{
										break;
									}
								}
							}
							goto IL_783;
						}
						finally
						{
							IEnumerator<Mission> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
					}
					checked
					{
						if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_2)
						{
							bool flag3 = false;
							bool flag4 = false;
							try
							{
								foreach (Mission mission3 in Client.smethod_50().method_35())
								{
									if (mission3.method_55())
									{
										try
										{
											List<Mission.Flight>.Enumerator enumerator4 = mission3.list_1.GetEnumerator();
											IL_749:
											while (enumerator4.MoveNext())
											{
												Mission.Flight flight3 = enumerator4.Current;
												Waypoint[] array = flight3.method_15();
												int j = 0;
												while (j < array.Length)
												{
													Waypoint waypoint3 = array[j];
													if ((waypoint3.waypointType_0 == Waypoint.WaypointType.Target || waypoint3.waypointType_0 == Waypoint.WaypointType.WeaponTarget) && waypoint3.enum105_0 == Mission.Enum105.const_2)
													{
														if (!Information.IsNothing(waypoint3.list_9))
														{
															try
															{
																foreach (Mission.Class289 @class in waypoint3.list_9)
																{
																	if (!Information.IsNothing(@class.waypoint_0))
																	{
																		Waypoint[] waypoint_ = @class.waypoint_0;
																		for (int k = 0; k < waypoint_.Length; k++)
																		{
																			if (waypoint_[k] == Client.smethod_58())
																			{
																				flag3 = true;
																				break;
																			}
																		}
																	}
																	if (flag3)
																	{
																		break;
																	}
																}
															}
															finally
															{
																List<Mission.Class289>.Enumerator enumerator5;
																((IDisposable)enumerator5).Dispose();
															}
														}
														if (!flag3 && !Information.IsNothing(waypoint3.list_10))
														{
															try
															{
																foreach (Mission.Class289 class2 in waypoint3.list_10)
																{
																	if (!Information.IsNothing(class2.waypoint_0))
																	{
																		Waypoint[] waypoint_2 = class2.waypoint_0;
																		for (int l = 0; l < waypoint_2.Length; l++)
																		{
																			if (waypoint_2[l] == Client.smethod_58())
																			{
																				flag3 = true;
																				break;
																			}
																		}
																	}
																	if (flag3)
																	{
																		break;
																	}
																}
															}
															finally
															{
																List<Mission.Class289>.Enumerator enumerator6;
																((IDisposable)enumerator6).Dispose();
															}
														}
														if (!flag3 && !Information.IsNothing(waypoint3.list_11))
														{
															try
															{
																foreach (Mission.Class289 class3 in waypoint3.list_11)
																{
																	if (!Information.IsNothing(class3.waypoint_0))
																	{
																		Waypoint[] waypoint_3 = class3.waypoint_0;
																		for (int m = 0; m < waypoint_3.Length; m++)
																		{
																			if (waypoint_3[m] == Client.smethod_58())
																			{
																				flag3 = true;
																				break;
																			}
																		}
																	}
																	if (flag3)
																	{
																		break;
																	}
																}
															}
															finally
															{
																List<Mission.Class289>.Enumerator enumerator7;
																((IDisposable)enumerator7).Dispose();
															}
														}
														if (!flag3 && !Information.IsNothing(waypoint3.list_12))
														{
															try
															{
																foreach (Mission.Class289 class4 in waypoint3.list_12)
																{
																	if (!Information.IsNothing(class4.waypoint_0))
																	{
																		Waypoint[] waypoint_4 = class4.waypoint_0;
																		for (int n = 0; n < waypoint_4.Length; n++)
																		{
																			if (waypoint_4[n] == Client.smethod_58())
																			{
																				flag3 = true;
																				break;
																			}
																		}
																	}
																	if (flag3)
																	{
																		break;
																	}
																}
															}
															finally
															{
																List<Mission.Class289>.Enumerator enumerator8;
																((IDisposable)enumerator8).Dispose();
															}
														}
														if (!flag3 && !Information.IsNothing(waypoint3.list_13))
														{
															try
															{
																foreach (Mission.Class289 class5 in waypoint3.list_13)
																{
																	if (!Information.IsNothing(class5.waypoint_0))
																	{
																		Waypoint[] waypoint_5 = class5.waypoint_0;
																		for (int num4 = 0; num4 < waypoint_5.Length; num4++)
																		{
																			if (waypoint_5[num4] == Client.smethod_58())
																			{
																				flag3 = true;
																				break;
																			}
																		}
																	}
																	if (flag3)
																	{
																		break;
																	}
																}
															}
															finally
															{
																List<Mission.Class289>.Enumerator enumerator9;
																((IDisposable)enumerator9).Dispose();
															}
														}
														if (!flag3 && !Information.IsNothing(waypoint3.list_14))
														{
															try
															{
																foreach (Mission.Class289 class6 in waypoint3.list_14)
																{
																	if (!Information.IsNothing(class6.waypoint_0))
																	{
																		Waypoint[] waypoint_6 = class6.waypoint_0;
																		for (int num5 = 0; num5 < waypoint_6.Length; num5++)
																		{
																			if (waypoint_6[num5] == Client.smethod_58())
																			{
																				flag3 = true;
																				break;
																			}
																		}
																	}
																	if (flag3)
																	{
																		break;
																	}
																}
															}
															finally
															{
																List<Mission.Class289>.Enumerator enumerator10;
																((IDisposable)enumerator10).Dispose();
															}
														}
													}
													if (!flag3)
													{
														j++;
													}
													else
													{
														Scenario scenario_3 = Client.smethod_46();
														Mission mission_2 = mission3;
														ActiveUnit activeUnit_3 = flight3.method_32(Client.smethod_46());
														Mission.Flight flight_2 = flight3;
														Mission.Flight flight2;
														Waypoint[] waypoint_7 = (flight2 = flight3).method_15();
														float num3 = 0f;
														float num2 = 0f;
														Class514.smethod_28(scenario_3, mission_2, activeUnit_3, flight_2, ref waypoint_7, ref num3, ref num2, false, true, true, true, false, true, true, 0f, 0f, Misc.Enum143.const_0, null, false, false, null, null, false);
														flight2.method_16(waypoint_7);
														if (Client.smethod_22().Visible)
														{
															Client.smethod_22().method_10(false, false);
														}
														flag4 = true;
														IL_745:
														if (!flag4)
														{
															goto IL_749;
														}
														goto IL_755;
													}
												}
												goto IL_745;
											}
											IL_755:;
										}
										finally
										{
											List<Mission.Flight>.Enumerator enumerator4;
											((IDisposable)enumerator4).Dispose();
										}
										if (flag4)
										{
											break;
										}
									}
								}
							}
							finally
							{
								IEnumerator<Mission> enumerator3;
								if (enumerator3 != null)
								{
									enumerator3.Dispose();
								}
							}
						}
					}
				}
				IL_783:
				this.method_159(false);
				if (!this.bool_4)
				{
					if (!this.bool_13)
					{
						if (this.bool_12)
						{
							if (!Information.IsNothing(this.referencePoint_1))
							{
								this.referencePoint_1.method_20(!this.referencePoint_1.method_19());
							}
							this.bool_12 = false;
							this.method_164();
						}
					}
					else
					{
						this.bool_13 = false;
					}
					Client.Enum197 @enum = Client.smethod_61();
					if (this.method_156())
					{
						Client.Enum197 enum2 = Client.smethod_61();
						if (enum2 <= Client.Enum197.const_19)
						{
							if (enum2 != Client.Enum197.const_0)
							{
								switch (enum2)
								{
								case Client.Enum197.const_16:
									for (int num6 = Client.smethod_50().method_44().Count - 1; num6 >= 0; num6 += -1)
									{
										Contact contact = Client.smethod_50().method_44()[num6];
										if (this.method_236(contact))
										{
											for (int num7 = Client.smethod_50().method_56().Count - 1; num7 >= 0; num7 += -1)
											{
												Unit unit = Client.smethod_50().method_56()[num7];
												string text = null;
												if (GameGeneral.smethod_45(Client.smethod_50(), unit, false, ref text, Client.smethod_52().method_59()))
												{
													if (unit.vmethod_7(false) == Client.smethod_50())
													{
														if (!unit.bool_2)
														{
															((ActiveUnit)unit).vmethod_86().vmethod_12(contact, true, false, ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualTargeted);
														}
														else
														{
															((ActiveUnit)unit).vmethod_86().vmethod_12(contact, true, true, ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualTargeted);
														}
													}
												}
												else if (unit.bool_0)
												{
													((ActiveUnit)unit).method_124(unit.Name + " cannot participate in attack (unable to issue orders to unit)", "Cannot order unit", LoggedMessage.MessageType.UnitAI, 0, false, new Geopoint_Struct(unit.vmethod_28(null), unit.vmethod_30(null)));
												}
											}
										}
										else if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && !Information.IsNothing(contact.activeUnit_0) && contact.activeUnit_0.method_120())
										{
											for (int num8 = this.list_53.Count - 1; num8 >= 0; num8 += -1)
											{
												Unit unit2 = this.list_53[num8];
												if (unit2.method_14() && this.method_236(unit2))
												{
													Contact_Base.ContactType contactType_ = ((Contact)unit2).contactType_0;
													if (contactType_ - Contact_Base.ContactType.Installation <= 3 && ((Contact)unit2).activeUnit_0.bool_1 && contact.activeUnit_0.vmethod_65(false) == ((Contact)unit2).activeUnit_0)
													{
														for (int num9 = Client.smethod_50().method_56().Count - 1; num9 >= 0; num9 += -1)
														{
															Unit unit3 = Client.smethod_50().method_56()[num9];
															Side side_ = Client.smethod_50();
															Unit unit_ = unit3;
															bool flag5 = false;
															string text2 = null;
															if (GameGeneral.smethod_45(side_, unit_, flag5, ref text2, Client.smethod_52().method_59()) && unit3.vmethod_7(false) == Client.smethod_50())
															{
																if (!unit3.bool_2)
																{
																	((ActiveUnit)unit3).vmethod_86().vmethod_12(contact, true, false, ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualTargeted);
																}
																else
																{
																	((ActiveUnit)unit3).vmethod_86().vmethod_12(contact, true, true, ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualTargeted);
																}
															}
														}
													}
												}
											}
										}
									}
									Client.smethod_62(Client.Enum197.const_0);
									break;
								case Client.Enum197.const_17:
									Client.smethod_27(new AttackTarget());
									for (int num10 = Client.smethod_50().method_56().Count - 1; num10 >= 0; num10 += -1)
									{
										Unit unit4 = Client.smethod_50().method_56()[num10];
										if (unit4.vmethod_7(false) == Client.smethod_50())
										{
											Side side_2 = Client.smethod_50();
											Unit unit_2 = unit4;
											bool flag6 = false;
											string text2 = null;
											if (GameGeneral.smethod_45(side_2, unit_2, flag6, ref text2, Client.smethod_52().method_59()) && !unit4.bool_2)
											{
												Client.smethod_26().list_1.Add((ActiveUnit)unit4);
											}
										}
									}
									for (int num11 = Client.smethod_50().method_44().Count - 1; num11 >= 0; num11 += -1)
									{
										Contact contact2 = Client.smethod_50().method_44()[num11];
										if (this.method_236(contact2))
										{
											Client.smethod_26().list_0.Add(contact2);
										}
										else if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && !Information.IsNothing(contact2.activeUnit_0) && contact2.activeUnit_0.method_120())
										{
											for (int num12 = this.list_53.Count - 1; num12 >= 0; num12 += -1)
											{
												Unit unit5 = this.list_53[num12];
												if (unit5.method_14() && this.method_236(unit5))
												{
													Contact_Base.ContactType contactType_2 = ((Contact)unit5).contactType_0;
													if (contactType_2 - Contact_Base.ContactType.Installation <= 3 && ((Contact)unit5).activeUnit_0.bool_1 && contact2.activeUnit_0.vmethod_65(false) == ((Contact)unit5).activeUnit_0)
													{
														Client.smethod_26().list_0.Add(contact2);
													}
												}
											}
										}
									}
									if (Client.smethod_26().list_1.Count == 0)
									{
										Client.smethod_62(Client.Enum197.const_0);
										this.rectangle_1 = default(Rectangle);
										this.method_157(false);
										Client.bool_1 = true;
										return;
									}
									if (Client.smethod_26().list_0.Count == 0)
									{
										Client.smethod_62(Client.Enum197.const_0);
										this.rectangle_1 = default(Rectangle);
										this.method_157(false);
										Client.bool_1 = true;
										return;
									}
									Client.smethod_26().Show();
									Client.smethod_62(Client.Enum197.const_0);
									break;
								case Client.Enum197.const_19:
								{
									if (Information.IsNothing(Client.smethod_50()))
									{
										this.rectangle_1 = default(Rectangle);
										this.method_157(false);
										Client.bool_1 = true;
										return;
									}
									System.Drawing.Point point = new System.Drawing.Point(this.rectangle_1.Left, this.rectangle_1.Top);
									System.Drawing.Point point2 = new System.Drawing.Point(this.rectangle_1.Right, this.rectangle_1.Top);
									System.Drawing.Point point3 = new System.Drawing.Point(this.rectangle_1.Right, this.rectangle_1.Bottom);
									System.Drawing.Point point4 = new System.Drawing.Point(this.rectangle_1.Left, this.rectangle_1.Bottom);
									ReferencePoint referencePoint = Class2572.smethod_1(this.vmethod_796(), point.X, point.Y).method_16();
									Client.smethod_46().UnitsAutoIncrement = Client.smethod_46().UnitsAutoIncrement + 1;
									referencePoint.Name = "RP-" + Conversions.ToString(Client.smethod_46().UnitsAutoIncrement);
									ReferencePoint referencePoint2 = Class2572.smethod_1(this.vmethod_796(), point2.X, point2.Y).method_16();
									Client.smethod_46().UnitsAutoIncrement = Client.smethod_46().UnitsAutoIncrement + 1;
									referencePoint2.Name = "RP-" + Conversions.ToString(Client.smethod_46().UnitsAutoIncrement);
									ReferencePoint referencePoint3 = Class2572.smethod_1(this.vmethod_796(), point3.X, point3.Y).method_16();
									Client.smethod_46().UnitsAutoIncrement = Client.smethod_46().UnitsAutoIncrement + 1;
									referencePoint3.Name = "RP-" + Conversions.ToString(Client.smethod_46().UnitsAutoIncrement);
									ReferencePoint referencePoint4 = Class2572.smethod_1(this.vmethod_796(), point4.X, point4.Y).method_16();
									Client.smethod_46().UnitsAutoIncrement = Client.smethod_46().UnitsAutoIncrement + 1;
									referencePoint4.Name = "RP-" + Conversions.ToString(Client.smethod_46().UnitsAutoIncrement);
									for (int num13 = Client.smethod_50().vmethod_12().Count - 1; num13 >= 0; num13 += -1)
									{
										Client.smethod_50().vmethod_12()[num13].method_20(false);
									}
									referencePoint.method_20(true);
									referencePoint2.method_20(true);
									referencePoint3.method_20(true);
									referencePoint4.method_20(true);
									Client.smethod_50().vmethod_12().method_4(referencePoint);
									Client.smethod_50().vmethod_12().method_4(referencePoint2);
									Client.smethod_50().vmethod_12().method_4(referencePoint3);
									Client.smethod_50().vmethod_12().method_4(referencePoint4);
									Client.smethod_62(Client.Enum197.const_0);
									break;
								}
								}
							}
							else
							{
								List<Unit> list = new List<Unit>();
								list.AddRange(this.list_54);
								for (int num14 = list.Count - 1; num14 >= 0; num14 += -1)
								{
									Unit unit6 = list[num14];
									if (this.method_236(unit6))
									{
										Class285.Enum87 enum87_ = Client.smethod_52().enum87_0;
										if (enum87_ != Class285.Enum87.const_0)
										{
											if (enum87_ == Class285.Enum87.const_1)
											{
												bool flag7;
												if (!flag7)
												{
													if (!unit6.bool_1 && (!unit6.method_14() || !((Contact)unit6).activeUnit_0.bool_1))
													{
														Client.smethod_56(unit6, true);
														flag7 = true;
													}
												}
												else if (!unit6.bool_1 && (!unit6.method_14() || !((Contact)unit6).activeUnit_0.bool_1))
												{
													Client.smethod_56(unit6, false);
												}
											}
										}
										else if (unit6.bool_0)
										{
											bool flag7;
											if (!flag7)
											{
												if (!((ActiveUnit)unit6).method_120())
												{
													Client.smethod_56(unit6, true);
													flag7 = true;
												}
											}
											else if (!((ActiveUnit)unit6).method_120())
											{
												Client.smethod_56(unit6, false);
											}
										}
										else if (unit6.method_14())
										{
											Contact_Base.ContactType contactType_3 = ((Contact)unit6).contactType_0;
											bool flag8;
											if (contactType_3 - Contact_Base.ContactType.Facility_Fixed <= 1)
											{
												if (!Information.IsNothing(((Contact)unit6).activeUnit_0))
												{
													flag8 = true;
												}
											}
											else
											{
												flag8 = true;
											}
											if (flag8)
											{
												bool flag7;
												if (!flag7)
												{
													Client.smethod_56(unit6, true);
													flag7 = true;
												}
												else
												{
													Client.smethod_56(unit6, false);
												}
											}
										}
									}
								}
							}
						}
						else if (enum2 != Client.Enum197.const_25)
						{
							if (enum2 == Client.Enum197.const_26)
							{
								List<ActiveUnit> list2 = new List<ActiveUnit>();
								List<string> list3 = new List<string>();
								for (int num15 = Client.smethod_50().method_56().Count - 1; num15 >= 0; num15 += -1)
								{
									Unit unit7 = Client.smethod_50().method_56()[num15];
									if (unit7.vmethod_7(false) == Client.smethod_50())
									{
										Side side_3 = Client.smethod_50();
										Unit unit_3 = unit7;
										bool flag9 = false;
										string text2 = null;
										if (GameGeneral.smethod_45(side_3, unit_3, flag9, ref text2, Client.smethod_52().method_59()) && !unit7.bool_2)
										{
											list2.Add((ActiveUnit)unit7);
										}
									}
								}
								foreach (ActiveUnit activeUnit in Client.smethod_50().activeUnit_0)
								{
									if (this.method_236(activeUnit))
									{
										list3.Add("ActiveUnit_" + activeUnit.string_0);
									}
								}
								for (int num17 = Client.smethod_50().method_44().Count - 1; num17 >= 0; num17 += -1)
								{
									Contact contact3 = Client.smethod_50().method_44()[num17];
									if (this.method_236(contact3))
									{
										list3.Add("Contact_" + contact3.activeUnit_0.string_0);
									}
									else if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && !Information.IsNothing(contact3.activeUnit_0) && contact3.activeUnit_0.method_120())
									{
										for (int num18 = this.list_53.Count - 1; num18 >= 0; num18 += -1)
										{
											Unit unit8 = this.list_53[num18];
											if (unit8.method_14() && this.method_236(unit8) && ((Contact)unit8).activeUnit_0.bool_1 && contact3.activeUnit_0.vmethod_65(false) == ((Contact)unit8).activeUnit_0)
											{
												list3.Add("Contact_" + contact3.activeUnit_0.string_0);
											}
										}
									}
								}
								try
								{
									foreach (ActiveUnit activeUnit2 in list2)
									{
										try
										{
											foreach (string text3 in list3)
											{
												activeUnit2.vmethod_86().method_16(text3);
											}
										}
										finally
										{
											List<string>.Enumerator enumerator12;
											((IDisposable)enumerator12).Dispose();
										}
									}
								}
								finally
								{
									List<ActiveUnit>.Enumerator enumerator11;
									((IDisposable)enumerator11).Dispose();
								}
								Client.smethod_62(Client.Enum197.const_0);
							}
						}
						else
						{
							if (Information.IsNothing(Client.smethod_50()))
							{
								this.rectangle_1 = default(Rectangle);
								this.method_157(false);
								Client.bool_1 = true;
								return;
							}
							for (int num19 = Client.smethod_50().vmethod_12().Count - 1; num19 >= 0; num19 += -1)
							{
								ReferencePoint referencePoint5 = Client.smethod_50().vmethod_12()[num19];
								referencePoint5.method_20(false);
							}
							Geopoint_Struct geopoint_Struct = Class2572.smethod_2(this.vmethod_796(), this.point_3.X, this.point_3.Y);
							Geopoint_Struct geopoint_Struct2 = Class2572.smethod_2(this.vmethod_796(), this.point_4.X, this.point_4.Y);
							float num20 = Math2.smethod_15(geopoint_Struct.double_1, geopoint_Struct.double_0, geopoint_Struct2.double_1, geopoint_Struct2.double_0);
							float num2 = num20;
							int num21;
							if (num2 < 10f)
							{
								num21 = 16;
							}
							else if (num2 < 50f)
							{
								num21 = 32;
							}
							else
							{
								num21 = 64;
							}
							Class432.Struct48[] array2 = new Class432.Struct48[num21 - 1 + 1];
							Class411.smethod_0(geopoint_Struct.double_1, geopoint_Struct.double_0, (double)num20, num21, ref array2);
							foreach (Class432.Struct48 @struct in array2)
							{
								ReferencePoint referencePoint5 = new ReferencePoint(@struct.double_0, @struct.double_1).method_16();
								Client.smethod_46().UnitsAutoIncrement = Client.smethod_46().UnitsAutoIncrement + 1;
								referencePoint5.Name = "RP-" + Conversions.ToString(Client.smethod_46().UnitsAutoIncrement);
								referencePoint5.method_20(true);
								Client.smethod_50().vmethod_12().method_4(referencePoint5);
							}
							Client.smethod_62(Client.Enum197.const_0);
						}
						if (!Information.IsNothing(Client.smethod_50()) && @enum != Client.Enum197.const_19 && @enum != Client.Enum197.const_25)
						{
							for (int num23 = Client.smethod_50().vmethod_12().Count - 1; num23 >= 0; num23 += -1)
							{
								ReferencePoint referencePoint6 = Client.smethod_50().vmethod_12()[num23];
								if (!Information.IsNothing(referencePoint6) && this.method_237(referencePoint6.imethod_2(), referencePoint6.imethod_0()))
								{
									referencePoint6.method_20(!referencePoint6.method_19());
								}
							}
						}
					}
					else
					{
						Client.Enum197 enum3 = Client.smethod_61();
						if (enum3 == Client.Enum197.const_2)
						{
							if (this.geopoint_Struct_0.double_1 < -90.0 || this.geopoint_Struct_0.double_1 > 90.0 || this.geopoint_Struct_0.double_0 < -180.0 || this.geopoint_Struct_0.double_0 > 180.0)
							{
								this.rectangle_1 = default(Rectangle);
								this.method_157(false);
								Client.bool_1 = true;
								return;
							}
							if (e.Button == MouseButtons.Left)
							{
								base.Enabled = false;
								Class2413.smethod_2().method_5().Show();
							}
						}
					}
				}
				this.method_157(false);
				this.point_3.X = 0;
				this.point_3.Y = 0;
				this.point_4.X = 0;
				this.point_4.Y = 0;
				this.rectangle_1 = default(Rectangle);
				Client.bool_1 = true;
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200353", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06005F80 RID: 24448 RVA: 0x00350058 File Offset: 0x0034E258
		private void method_114(object sender, MouseEventArgs e)
		{
			try
			{
				this.method_159(false);
				this.method_157(false);
				this.mouseEventArgs_0 = e;
				if (!this.rectangle_0.Contains(e.Location) || this.int_5 >= SystemInformation.DoubleClickTime)
				{
					this.vmethod_4().Stop();
					this.bool_3 = true;
					this.bool_4 = false;
					this.bool_5 = false;
					this.int_5 = 0;
				}
				if (this.bool_3)
				{
					Client.Enum197 @enum = Client.smethod_61();
					bool flag;
					if (@enum != Client.Enum197.const_1)
					{
						if (@enum == Client.Enum197.const_6)
						{
							flag = true;
						}
					}
					else
					{
						flag = true;
					}
					if (flag)
					{
						this.bool_3 = false;
						this.rectangle_0 = new Rectangle((int)Math.Round((double)e.X - (double)SystemInformation.DoubleClickSize.Width / 2.0), (int)Math.Round((double)e.Y - (double)SystemInformation.DoubleClickSize.Height / 2.0), SystemInformation.DoubleClickSize.Width, SystemInformation.DoubleClickSize.Height);
						this.vmethod_4().Start();
					}
					this.method_117(RuntimeHelpers.GetObjectValue(sender));
				}
				else if (this.rectangle_0.Contains(e.Location) && this.int_5 < SystemInformation.DoubleClickTime)
				{
					this.bool_4 = true;
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200354", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06005F81 RID: 24449 RVA: 0x003501F8 File Offset: 0x0034E3F8
		public void method_115(object sender, EventArgs e)
		{
			ref int ptr = ref this.int_5;
			this.int_5 = ptr + 100;
			if (this.int_5 >= SystemInformation.DoubleClickTime)
			{
				this.vmethod_4().Stop();
				return;
			}
			if (this.bool_4)
			{
				this.method_116();
				this.vmethod_4().Stop();
			}
		}

		// Token: 0x06005F82 RID: 24450 RVA: 0x00350248 File Offset: 0x0034E448
		private void method_116()
		{
			try
			{
				if (this.mouseEventArgs_0.Button == MouseButtons.Left)
				{
					Client.Enum197 @enum = Client.smethod_61();
					switch (@enum)
					{
					case Client.Enum197.const_0:
					case Client.Enum197.const_2:
					case Client.Enum197.const_3:
					case Client.Enum197.const_4:
					case Client.Enum197.const_5:
					case Client.Enum197.const_7:
					case Client.Enum197.const_8:
					case Client.Enum197.const_9:
					case Client.Enum197.const_10:
						goto IL_79;
					case Client.Enum197.const_1:
						Client.smethod_62(Client.Enum197.const_0);
						Client.bool_1 = true;
						goto IL_79;
					case Client.Enum197.const_6:
						break;
					default:
						if (@enum != Client.Enum197.const_23)
						{
							goto IL_79;
						}
						break;
					}
					Client.smethod_62(Client.Enum197.const_0);
					Client.bool_1 = true;
					Scenario scenario = Client.smethod_46();
					Client.smethod_83(ref scenario, false);
				}
				IL_79:;
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200599", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06005F83 RID: 24451 RVA: 0x00350318 File Offset: 0x0034E518
		private void method_117(object object_1)
		{
			try
			{
				this.point_2 = new System.Drawing.Point(this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
				this.point_0 = new System.Drawing.Point(this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
				this.geopoint_Struct_0 = Class2572.smethod_2(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
				Client.smethod_59(this.method_232());
				this.point_3 = this.point_2;
				this.referencePoint_1 = this.method_233();
				this.vmethod_796().Focus();
				if (this.mouseEventArgs_0.Button == MouseButtons.Left)
				{
					switch (Client.smethod_61())
					{
					case Client.Enum197.const_1:
						this.vmethod_796().Cursor = Cursors.Cross;
						this.geopoint_Struct_1 = Class2572.smethod_2(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						goto IL_179F;
					case Client.Enum197.const_2:
						goto IL_179F;
					case Client.Enum197.const_6:
					{
						GeoPoint geoPoint = Class2572.smethod_1(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						List<ActiveUnit> list = new List<ActiveUnit>();
						for (int i = Client.smethod_50().method_56().Count - 1; i >= 0; i += -1)
						{
							Unit unit = Client.smethod_50().method_56()[i];
							Side side_ = Client.smethod_50();
							Unit unit_ = unit;
							bool flag = false;
							string text = null;
							if (GameGeneral.smethod_45(side_, unit_, flag, ref text, Client.smethod_52().method_59()) && !unit.method_1() && !unit.method_5())
							{
								if (unit.bool_1)
								{
									switch (((Group)unit).method_143())
									{
									case Group.GroupType.Installation:
									case Group.GroupType.AirBase:
									case Group.GroupType.NavalBase:
										goto IL_227;
									}
								}
								list.Add((ActiveUnit)unit);
							}
							IL_227:;
						}
						if (list.Count == 0 && !Information.IsNothing(Client.smethod_54()))
						{
							Side side_2 = Client.smethod_50();
							Unit unit_2 = Client.smethod_54();
							bool flag2 = false;
							string text = null;
							if (GameGeneral.smethod_45(side_2, unit_2, flag2, ref text, Client.smethod_52().method_59()))
							{
								list.Add((ActiveUnit)Client.smethod_54());
							}
						}
						if (list.Count == 0)
						{
							return;
						}
						bool flag3 = true;
						string text2;
						for (int j = list.Count - 1; j >= 0; j += -1)
						{
							ActiveUnit activeUnit = list[j];
							Unit unit2 = activeUnit;
							double double_ = geoPoint.imethod_2();
							double double_2 = geoPoint.imethod_0();
							int num = 0;
							bool flag4 = true;
							bool flag5 = false;
							bool flag6 = false;
							bool flag7 = true;
							bool bool_ = true;
							bool flag8 = true;
							float? nullable_ = null;
							short? nullable_2 = null;
							float float_ = 0f;
							bool bool_2 = false;
							bool bool_3 = false;
							bool flag9 = false;
							List<ActiveUnit> list2;
							if (unit2.vmethod_47(double_, double_2, ref num, flag4, flag5, flag6, ref flag7, bool_, ref flag8, nullable_, nullable_2, ref list2, float_, bool_2, bool_3, ref text2, ref flag9))
							{
								activeUnit.vmethod_85().vmethod_24(geoPoint.imethod_2(), geoPoint.imethod_0(), geoPoint.imethod_4(), Waypoint.WaypointType.ManualPlottedCourseWaypoint, Waypoint.Enum80.const_2, Waypoint.Enum79.const_0);
							}
							else
							{
								flag3 = false;
							}
						}
						Client.bool_1 = true;
						if (!flag3)
						{
							if (!string.IsNullOrEmpty(text2))
							{
								text2 = " Reason: " + text2;
							}
							if (list.Count == 1)
							{
								Client.smethod_46().method_59("The selected unit cannot move to this location!" + text2, "Unable to move to location", LoggedMessage.MessageType.UI, 10, null, Client.smethod_50(), default(Geopoint_Struct));
							}
							else
							{
								Client.smethod_46().method_59("Some (or all) of the selected units cannot move to this location!" + text2, "Unable to move to location", LoggedMessage.MessageType.UI, 10, null, Client.smethod_50(), default(Geopoint_Struct));
							}
						}
						for (int k = list.Count - 1; k >= 0; k += -1)
						{
							ActiveUnit activeUnit = list[k];
							if (Enumerable.Count<Waypoint>(activeUnit.vmethod_85().method_4()) == 1)
							{
								activeUnit.vmethod_85().vmethod_2();
							}
						}
						goto IL_179F;
					}
					case Client.Enum197.const_7:
					{
						if (Information.IsNothing(Client.smethod_50()))
						{
							return;
						}
						Unit unit3 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						if (Information.IsNothing(unit3))
						{
							return;
						}
						for (int l = Client.smethod_50().method_56().Count - 1; l >= 0; l += -1)
						{
							Unit unit4 = Client.smethod_50().method_56()[l];
							if (unit4.bool_0 && unit3.bool_0 && unit4.vmethod_7(false) == Client.smethod_50())
							{
								((ActiveUnit)unit4).vmethod_138((ActiveUnit)unit3);
							}
						}
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					}
					case Client.Enum197.const_8:
					{
						ReferencePoint referencePoint = new ReferencePoint();
						referencePoint.imethod_1(this.geopoint_Struct_0.double_0);
						referencePoint.imethod_3(this.geopoint_Struct_0.double_1);
						Client.smethod_46().UnitsAutoIncrement = Client.smethod_46().UnitsAutoIncrement + 1;
						referencePoint.Name = "RP-" + Conversions.ToString(Client.smethod_46().UnitsAutoIncrement);
						Client.smethod_50().vmethod_12().method_4(referencePoint);
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					}
					case Client.Enum197.const_9:
					{
						GeoPoint geoPoint2 = Class2572.smethod_1(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						for (int m = Client.smethod_50().vmethod_12().Count - 1; m >= 0; m += -1)
						{
							ReferencePoint referencePoint2 = Client.smethod_50().vmethod_12()[m];
							if (referencePoint2.method_19())
							{
								referencePoint2.imethod_3(geoPoint2.imethod_2());
								referencePoint2.imethod_1(geoPoint2.imethod_0());
								referencePoint2.method_21();
							}
						}
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					}
					case Client.Enum197.const_10:
					{
						Keys modifierKeys = Control.ModifierKeys;
						if (modifierKeys != Keys.Shift)
						{
							Client.smethod_62(Client.Enum197.const_0);
						}
						Unit unit5 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						if (Information.IsNothing(unit5) || !unit5.method_14())
						{
							goto IL_179F;
						}
						if (Information.IsNothing(Client.smethod_50()))
						{
							return;
						}
						if (Client.smethod_50().method_56().Count == 0)
						{
							return;
						}
						for (int n = Client.smethod_50().method_56().Count - 1; n >= 0; n += -1)
						{
							Unit unit6 = Client.smethod_50().method_56()[n];
							if (unit6.bool_0 && unit6.vmethod_7(false) == Client.smethod_50() && !unit6.bool_2)
							{
								Contact contact = (Contact)unit5;
								if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && (contact.contactType_0 == Contact_Base.ContactType.AirBase || contact.contactType_0 == Contact_Base.ContactType.Installation || contact.contactType_0 == Contact_Base.ContactType.NavalBase || contact.contactType_0 == Contact_Base.ContactType.MobileGroup))
								{
									if (!Information.IsNothing(contact.activeUnit_0))
									{
										int num2 = Client.smethod_50().method_44().Count - 1;
										this.int_7 = num2;
										while (this.int_7 >= 0)
										{
											Contact contact2 = Client.smethod_50().method_44()[this.int_7];
											if (!Information.IsNothing(contact2.activeUnit_0) && !contact2.activeUnit_0.bool_1 && contact2.activeUnit_0.vmethod_65(false) == contact.activeUnit_0)
											{
												if (unit6.bool_1)
												{
													IEnumerable<Unit> enumerable = Enumerable.ToList<ActiveUnit>(((Group)unit6).vmethod_65(false).vmethod_141().Values);
													for (int num3 = Enumerable.Count<Unit>(enumerable) - 1; num3 >= 0; num3 += -1)
													{
														((ActiveUnit)Enumerable.ElementAtOrDefault<Unit>(enumerable, num3)).vmethod_86().vmethod_15(contact2, true);
													}
												}
												else
												{
													((ActiveUnit)unit6).vmethod_86().vmethod_15(contact2, true);
												}
											}
											this.int_7 += -1;
										}
									}
								}
								else if (unit6.bool_1)
								{
									IEnumerable<Unit> enumerable2 = Enumerable.ToList<ActiveUnit>(((Group)unit6).vmethod_65(false).vmethod_141().Values);
									for (int num4 = Enumerable.Count<Unit>(enumerable2) - 1; num4 >= 0; num4 += -1)
									{
										((ActiveUnit)Enumerable.ElementAtOrDefault<Unit>(enumerable2, num4)).vmethod_86().vmethod_15(contact, true);
									}
								}
								else
								{
									((ActiveUnit)unit6).vmethod_86().vmethod_15(contact, true);
								}
							}
						}
						Client.bool_1 = true;
						goto IL_179F;
					}
					case Client.Enum197.const_11:
						if (Information.IsNothing(Client.smethod_54()))
						{
							DarkMessageBox.smethod_2("Unable to move unit, it seems to be non-existent at the moment.", "Error while moving unit!", Enum11.const_0);
						}
						else
						{
							Unit unit7 = Client.smethod_54();
							Scenario scenario = Client.smethod_46();
							unit7.vmethod_42(ref scenario, this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1);
						}
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					case Client.Enum197.const_12:
						if (Information.IsNothing(Client.smethod_54()))
						{
							DarkMessageBox.smethod_2("Unable to copy unit, it seems to be non-existent at the moment.", "Error while copying unit!", Enum11.const_0);
						}
						else if (Client.smethod_54().bool_0)
						{
							try
							{
								switch (((ActiveUnit)Client.smethod_54()).vmethod_56())
								{
								case GlobalVariables.ActiveUnitType.Aircraft:
									Client.smethod_46().method_71(Client.smethod_50(), Client.smethod_54().Name, this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1, ((ActiveUnit)Client.smethod_54()).DBID, ((Aircraft)Client.smethod_54()).method_167().DBID, Client.smethod_54().vmethod_14(false), Unit.Enum122.const_0, null);
									break;
								case GlobalVariables.ActiveUnitType.Ship:
									Client.smethod_46().method_73(Client.smethod_50(), ((ActiveUnit)Client.smethod_54()).DBID, Client.smethod_54().Name, this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1, false, Unit.Enum122.const_0, null);
									break;
								case GlobalVariables.ActiveUnitType.Submarine:
									Client.smethod_46().method_75(Client.smethod_50(), ((ActiveUnit)Client.smethod_54()).DBID, Client.smethod_54().Name, this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1, false, Unit.Enum122.const_0, null);
									break;
								case GlobalVariables.ActiveUnitType.Facility:
									Client.smethod_46().method_76(Client.smethod_50(), ((ActiveUnit)Client.smethod_54()).DBID, Client.smethod_54().Name, this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1, false, Unit.Enum122.const_0, null);
									break;
								}
							}
							catch (Exception ex)
							{
								DarkMessageBox.smethod_2("Error: " + ex.Message, "Error", Enum11.const_0);
							}
						}
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					case Client.Enum197.const_13:
					{
						Unit unit8 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						if (Information.IsNothing(unit8) || unit8.vmethod_7(false) != Client.smethod_50() || unit8.GetType() == typeof(Weapon) || !Class2413.smethod_2().method_28().group_0.vmethod_141().ContainsKey(unit8.string_0))
						{
							goto IL_179F;
						}
						Class2413.smethod_2().method_28().group_0.method_153((ActiveUnit)unit8);
						Client.smethod_62(Client.Enum197.const_0);
						this.vmethod_808().Text = unit8.Name + " is now the lead unit for group: " + Class2413.smethod_2().method_28().group_0.Name;
						if (Class2413.smethod_2().method_28().Visible)
						{
							Class2413.smethod_2().method_28().method_3();
							goto IL_179F;
						}
						goto IL_179F;
					}
					case Client.Enum197.const_14:
					{
						if (Information.IsNothing(Client.smethod_54()))
						{
							Client.smethod_62(Client.Enum197.const_0);
							goto IL_179F;
						}
						if (!Client.smethod_54().bool_0)
						{
							Client.smethod_62(Client.Enum197.const_0);
							goto IL_179F;
						}
						GeoPoint geoPoint3 = Class2572.smethod_1(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						((ActiveUnit)Client.smethod_54()).vmethod_85().method_2().orientationType_0 = Client.orientationType_0;
						((ActiveUnit)Client.smethod_54()).vmethod_85().method_54(geoPoint3.imethod_0(), geoPoint3.imethod_2(), true);
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					}
					case Client.Enum197.const_15:
					{
						Unit unit9 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						bool flag10 = false;
						if (!Information.IsNothing(unit9))
						{
							for (int num5 = Client.smethod_50().vmethod_12().Count - 1; num5 >= 0; num5 += -1)
							{
								ReferencePoint referencePoint3 = Client.smethod_50().vmethod_12()[num5];
								if (referencePoint3.method_19())
								{
									if (referencePoint3.bool_12)
									{
										flag10 = true;
									}
									else
									{
										referencePoint3.unit_0 = unit9;
										referencePoint3.orientationType_0 = Client.orientationType_0;
										referencePoint3.method_21();
									}
								}
							}
						}
						if (flag10)
						{
							DarkMessageBox.smethod_2("Some of the highlighted reference points are locked and could not be set relative to the unit.", "Locked reference points!", Enum11.const_0);
						}
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					}
					case Client.Enum197.const_16:
					{
						if (this.method_156())
						{
							return;
						}
						Unit unit10 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						if (Information.IsNothing(unit10))
						{
							goto IL_179F;
						}
						if (unit10.GetType() == typeof(Contact))
						{
							Contact contact3 = (Contact)unit10;
							if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && (contact3.contactType_0 == Contact_Base.ContactType.AirBase || contact3.contactType_0 == Contact_Base.ContactType.Installation || contact3.contactType_0 == Contact_Base.ContactType.NavalBase || contact3.contactType_0 == Contact_Base.ContactType.MobileGroup))
							{
								if (!Information.IsNothing(contact3.activeUnit_0))
								{
									for (int num6 = Client.smethod_50().method_44().Count - 1; num6 >= 0; num6 += -1)
									{
										Contact contact4 = Client.smethod_50().method_44()[num6];
										if (!Information.IsNothing(contact4.activeUnit_0) && !contact4.activeUnit_0.bool_1 && contact4.activeUnit_0.vmethod_65(false) == contact3.activeUnit_0)
										{
											for (int num7 = Client.smethod_50().method_56().Count - 1; num7 >= 0; num7 += -1)
											{
												Unit unit11 = Client.smethod_50().method_56()[num7];
												Side side_3 = Client.smethod_50();
												Unit unit_3 = unit11;
												bool flag11 = false;
												string text = null;
												if (GameGeneral.smethod_45(side_3, unit_3, flag11, ref text, Client.smethod_52().method_59()))
												{
													((ActiveUnit)unit11).vmethod_86().vmethod_12(contact4, true, false, ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualTargeted);
												}
												else
												{
													((ActiveUnit)unit11).method_124(unit11.Name + " cannot participate in attack (unable to issue orders to unit)", "Cannot order unit", LoggedMessage.MessageType.UnitAI, 0, false, new Geopoint_Struct(unit11.vmethod_28(null), unit11.vmethod_30(null)));
												}
											}
										}
									}
								}
							}
							else
							{
								for (int num8 = Client.smethod_50().method_56().Count - 1; num8 >= 0; num8 += -1)
								{
									Unit unit12 = Client.smethod_50().method_56()[num8];
									Side side_4 = Client.smethod_50();
									Unit unit_4 = unit12;
									bool flag12 = false;
									string text = null;
									if (GameGeneral.smethod_45(side_4, unit_4, flag12, ref text, Client.smethod_52().method_59()))
									{
										((ActiveUnit)unit12).vmethod_86().vmethod_12(contact3, true, false, ActiveUnit_AI.TargetingEntry._TargetingBehavior.ManualTargeted);
									}
									else
									{
										((ActiveUnit)unit12).method_124(unit12.Name + " cannot participate in attack (unable to issue orders to unit)", "Cannot order unit", LoggedMessage.MessageType.UnitAI, 0, false, new Geopoint_Struct(unit12.vmethod_28(null), unit12.vmethod_30(null)));
									}
								}
							}
							Client.bool_1 = true;
						}
						Keys modifierKeys2 = Control.ModifierKeys;
						if (modifierKeys2 != Keys.Shift)
						{
							Client.smethod_62(Client.Enum197.const_0);
							goto IL_179F;
						}
						goto IL_179F;
					}
					case Client.Enum197.const_17:
					{
						Unit unit13 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						if (Information.IsNothing(unit13) || !unit13.method_14())
						{
							goto IL_179F;
						}
						Client.smethod_27(new AttackTarget());
						Contact contact5 = (Contact)unit13;
						if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && (contact5.contactType_0 == Contact_Base.ContactType.AirBase || contact5.contactType_0 == Contact_Base.ContactType.Installation || contact5.contactType_0 == Contact_Base.ContactType.NavalBase || contact5.contactType_0 == Contact_Base.ContactType.MobileGroup))
						{
							if (!Information.IsNothing(contact5.activeUnit_0))
							{
								for (int num9 = Client.smethod_50().method_44().Count - 1; num9 >= 0; num9 += -1)
								{
									Contact contact6 = Client.smethod_50().method_44()[num9];
									if (!Information.IsNothing(contact6.activeUnit_0) && !contact6.activeUnit_0.bool_1 && contact6.activeUnit_0.vmethod_65(false) == contact5.activeUnit_0)
									{
										Client.smethod_26().list_0.Add(contact6);
									}
								}
							}
						}
						else
						{
							Client.smethod_26().list_0.Add(contact5);
						}
						for (int num10 = Client.smethod_50().method_56().Count - 1; num10 >= 0; num10 += -1)
						{
							Unit unit14 = Client.smethod_50().method_56()[num10];
							Side side_5 = Client.smethod_50();
							Unit unit_5 = unit14;
							bool flag13 = false;
							string text = null;
							if (GameGeneral.smethod_45(side_5, unit_5, flag13, ref text, Client.smethod_52().method_59()) && !unit14.bool_2)
							{
								Client.smethod_26().list_1.Add((ActiveUnit)unit14);
							}
						}
						if (Client.smethod_26().list_1.Count == 0)
						{
							return;
						}
						if (Client.smethod_26().list_0.Count == 0)
						{
							return;
						}
						Client.smethod_62(Client.Enum197.const_0);
						Client.smethod_26().Show();
						goto IL_179F;
					}
					case Client.Enum197.const_18:
					{
						if (this.method_156())
						{
							return;
						}
						if (Information.IsNothing(Client.smethod_50()))
						{
							return;
						}
						Client.smethod_27(new AttackTarget());
						Class356 item = new Class356(this.geopoint_Struct_0.double_1, this.geopoint_Struct_0.double_0);
						Client.smethod_26().list_0.Add(item);
						for (int num11 = Client.smethod_50().method_56().Count - 1; num11 >= 0; num11 += -1)
						{
							Unit unit15 = Client.smethod_50().method_56()[num11];
							Side side_6 = Client.smethod_50();
							Unit unit_6 = unit15;
							bool flag14 = false;
							string text = null;
							if (GameGeneral.smethod_45(side_6, unit_6, flag14, ref text, Client.smethod_52().method_59()) && !unit15.bool_2)
							{
								Client.smethod_26().list_1.Add((ActiveUnit)unit15);
							}
						}
						if (Client.smethod_26().list_1.Count == 0)
						{
							return;
						}
						Client.smethod_62(Client.Enum197.const_0);
						Client.smethod_26().Show();
						goto IL_179F;
					}
					case Client.Enum197.const_20:
					{
						GeoPoint geoPoint4 = Class2572.smethod_1(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						Class2413.smethod_2().method_56().double_1 = geoPoint4.imethod_0();
						Class2413.smethod_2().method_56().double_0 = geoPoint4.imethod_2();
						Class2413.smethod_2().method_56().Show();
						Client.smethod_62(Client.Enum197.const_0);
						return;
					}
					case Client.Enum197.const_21:
						if (Information.IsNothing(Client.smethod_54()))
						{
							DarkMessageBox.smethod_2("Unable to clone unit, it seems to be non-existent at the moment.", "Error while copying unit!", Enum11.const_0);
						}
						else if (Client.smethod_54().bool_0)
						{
							Class559.smethod_1((ActiveUnit)Client.smethod_54(), this.geopoint_Struct_0.double_1, this.geopoint_Struct_0.double_0);
						}
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					case Client.Enum197.const_23:
					{
						if (Information.IsNothing(Client.class316_0))
						{
							return;
						}
						GeoPoint geoPoint5 = Class2572.smethod_1(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						if (Enumerable.Count<Waypoint>(Client.class316_0.waypoint_0) >= 10)
						{
							DarkMessageBox.smethod_1("You cannot add any more waypoints for this salvo.", "", Enum11.const_0);
							goto IL_179F;
						}
						ActiveUnit activeUnit2;
						try
						{
							activeUnit2 = Client.smethod_46().vmethod_0()[Client.class316_0.class273_0[0].string_0];
						}
						catch (Exception ex2)
						{
							ex2.Data.Add("Error at 200388", ex2.Message);
							GameGeneral.smethod_25(ref ex2);
							if (Debugger.IsAttached)
							{
								Debugger.Break();
							}
							goto IL_179F;
						}
						float num12;
						if (Enumerable.Any<Waypoint>(Client.class316_0.waypoint_0))
						{
							Waypoint waypoint = Client.class316_0.waypoint_0[0];
							num12 += activeUnit2.method_23(waypoint);
							if (Enumerable.Count<Waypoint>(Client.class316_0.waypoint_0) > 1)
							{
								int num = Enumerable.Count<Waypoint>(Client.class316_0.waypoint_0) - 1;
								for (int num13 = 0; num13 <= num; num13++)
								{
									if (num13 != Enumerable.Count<Waypoint>(Client.class316_0.waypoint_0) - 1)
									{
										num12 += Client.class316_0.waypoint_0[num13].method_12(Client.class316_0.waypoint_0[num13 + 1].imethod_0(), Client.class316_0.waypoint_0[num13 + 1].imethod_2());
									}
								}
							}
							num12 += Enumerable.Last<Waypoint>(Client.class316_0.waypoint_0).method_12(geoPoint5.imethod_0(), geoPoint5.imethod_2());
						}
						else
						{
							num12 += activeUnit2.method_23(geoPoint5);
						}
						num12 += geoPoint5.method_12(Client.class316_0.contact_0.vmethod_28(null), Client.class316_0.contact_0.vmethod_30(null));
						if (num12 > Client.class316_0.method_11(Client.smethod_46()).method_181(activeUnit2, Client.class316_0.contact_0, false, activeUnit2.doctrine_0, false))
						{
							DarkMessageBox.smethod_2("Cannot add selected waypoint, the course distance will exceed the weapon range.", "Error", Enum11.const_0);
							goto IL_179F;
						}
						Class429.smethod_36(ref Client.class316_0.waypoint_0, new Waypoint(geoPoint5.imethod_0(), geoPoint5.imethod_2(), geoPoint5.imethod_4(), Waypoint.WaypointType.TurningPoint, Waypoint.Enum80.const_0, Waypoint.Enum79.const_0));
						goto IL_179F;
					}
					case Client.Enum197.const_24:
					{
						Unit unit16 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						if (!Information.IsNothing(unit16) && unit16.bool_0 && (unit16.vmethod_7(false) == Client.smethod_50() || unit16.vmethod_7(false).method_67(Client.smethod_50())) && unit16.GetType() != typeof(Weapon))
						{
							Client.smethod_62(Client.Enum197.const_0);
							ActiveUnit activeUnit3 = (ActiveUnit)unit16;
							Mission mission = null;
							this.method_333(ref activeUnit3, ref mission);
							this.vmethod_808().Text = "The selected unit(s) will attempt to refuel from " + unit16.Name;
						}
						this.method_164();
						goto IL_179F;
					}
					case Client.Enum197.const_26:
					{
						if (this.method_156())
						{
							return;
						}
						Unit unit17 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						if (!Information.IsNothing(unit17) && unit17.bool_0)
						{
							try
							{
								foreach (Unit unit18 in Client.smethod_50().method_56())
								{
									if (unit18.bool_0)
									{
										((ActiveUnit)unit18).vmethod_86().method_16("ActiveUnit_" + unit17.string_0);
									}
								}
							}
							finally
							{
								IEnumerator<Unit> enumerator;
								if (enumerator != null)
								{
									enumerator.Dispose();
								}
							}
						}
						Client.smethod_62(Client.Enum197.const_0);
						goto IL_179F;
					}
					}
					if (Information.IsNothing(Client.smethod_58()))
					{
						this.referencePoint_0 = this.method_231();
					}
					else
					{
						this.referencePoint_0 = null;
						this.method_164();
					}
					if (!Information.IsNothing(this.referencePoint_1))
					{
						this.bool_12 = true;
						return;
					}
					if (Client.smethod_46().vmethod_0().Count > 0)
					{
						Client.smethod_54();
						bool flag15 = this.method_156() || Control.ModifierKeys == Keys.Shift;
						this.list_51 = this.method_122(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
						int count = this.list_51.Count;
						if (count != 0)
						{
							if (count != 1)
							{
								this.method_92(this.list_51);
								this.vmethod_964().Show(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
								return;
							}
							Client.smethod_56(this.list_51[0], !flag15);
						}
					}
				}
				IL_179F:
				if (this.mouseEventArgs_0.Button == MouseButtons.Right)
				{
					Geopoint_Struct geopoint_Struct = Class2572.smethod_2(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
					this.double_1 = Math2.smethod_14(this.method_160(true).imethod_2(), this.method_160(true).imethod_0(), geopoint_Struct.double_1, geopoint_Struct.double_0);
					this.float_0 = Math2.smethod_17(this.method_160(true).imethod_2(), this.method_160(true).imethod_0(), geopoint_Struct.double_1, geopoint_Struct.double_0);
					switch (Client.smethod_61())
					{
					case Client.Enum197.const_0:
					{
						Keys modifierKeys3 = Control.ModifierKeys;
						if (modifierKeys3 == Keys.Control && geopoint_Struct.double_1 >= -90.0 && geopoint_Struct.double_1 <= 90.0)
						{
							this.vmethod_14().Visible = (Client.smethod_0().method_1() == Class279.Enum67.const_2);
							this.vmethod_12().Show(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						}
						if (Client.smethod_46().vmethod_0().Count > 0)
						{
							Unit unit19 = this.method_123(RuntimeHelpers.GetObjectValue(object_1), Client.smethod_52().enum87_0, this.mouseEventArgs_0);
							if (!Information.IsNothing(unit19))
							{
								if (!Client.smethod_50().method_56().Contains(unit19) && !this.method_156() && Control.ModifierKeys != Keys.Shift)
								{
									Client.smethod_50().method_62();
								}
								if (Control.ModifierKeys == Keys.Shift)
								{
									Client.smethod_56(unit19, false);
								}
								else
								{
									Client.smethod_56(unit19, true);
								}
								if (unit19.bool_0)
								{
									this.method_94(unit19, this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
								}
								if (unit19.method_14())
								{
									this.method_91(unit19, this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
								}
							}
						}
						if (Client.smethod_46().vmethod_0().Count > 0 && !Information.IsNothing(Client.smethod_58()))
						{
							this.vmethod_380().Show(this.vmethod_796(), this.mouseEventArgs_0.X, this.mouseEventArgs_0.Y);
						}
						break;
					}
					}
				}
				checked
				{
					if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && !((ActiveUnit)Client.smethod_54()).vmethod_85().method_49())
					{
						Class2413.smethod_2().method_66().waypoint_0 = null;
						Class2413.smethod_2().method_66().flight_0 = null;
						Class2413.smethod_2().method_66().mission_0 = null;
						Class2413.smethod_2().method_66().activeUnit_0 = (ActiveUnit)Client.smethod_54();
						Class2413.smethod_2().method_66().method_3();
					}
					else if (!Information.IsNothing(Client.smethod_58()))
					{
						if (Client.smethod_58().enum79_0 == Waypoint.Enum79.const_1)
						{
							Class2413.smethod_2().method_66().waypoint_0 = Client.smethod_58();
							Class2413.smethod_2().method_66().flight_0 = null;
							Class2413.smethod_2().method_66().mission_0 = null;
							bool flag16 = false;
							foreach (Side side in Client.smethod_46().method_44())
							{
								try
								{
									foreach (Mission mission2 in side.method_35())
									{
										if (mission2.method_55())
										{
											try
											{
												List<Mission.Flight>.Enumerator enumerator3 = mission2.list_1.GetEnumerator();
												IL_1B9F:
												while (enumerator3.MoveNext())
												{
													Mission.Flight flight = enumerator3.Current;
													Waypoint[] array2 = flight.method_15();
													int num15 = 0;
													while (num15 < array2.Length)
													{
														if (array2[num15] == Client.smethod_58())
														{
															Class2413.smethod_2().method_66().flight_0 = flight;
															Class2413.smethod_2().method_66().mission_0 = mission2;
															flag16 = true;
															IL_1B9B:
															if (!flag16)
															{
																goto IL_1B9F;
															}
															goto IL_1BA8;
														}
														else
														{
															num15++;
														}
													}
													goto IL_1B9B;
												}
												IL_1BA8:;
											}
											finally
											{
												List<Mission.Flight>.Enumerator enumerator3;
												((IDisposable)enumerator3).Dispose();
											}
											if (flag16)
											{
												break;
											}
										}
									}
								}
								finally
								{
									IEnumerator<Mission> enumerator2;
									if (enumerator2 != null)
									{
										enumerator2.Dispose();
									}
								}
								if (flag16)
								{
									break;
								}
							}
							Class2413.smethod_2().method_66().activeUnit_0 = null;
							Class2413.smethod_2().method_66().method_3();
						}
						else
						{
							this.rightColumnWPF_0.vmethod_14().method_0();
						}
					}
					else
					{
						this.rightColumnWPF_0.vmethod_14().method_0();
					}
				}
			}
			catch (Exception ex3)
			{
				ex3.Data.Add("Error at 200350", ex3.Message);
				GameGeneral.smethod_25(ref ex3);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06005F84 RID: 24452 RVA: 0x0003D991 File Offset: 0x0003BB91
		private void method_118(object sender, MouseEventArgs e)
		{
			this.mouseEventArgs_1 = e;
			this.bool_6 = true;
		}

		// Token: 0x06005F85 RID: 24453 RVA: 0x00352024 File Offset: 0x00350224
		private void method_119(object sender, MouseEventArgs e)
		{
			try
			{
				if (Class570.class280_0.method_14())
				{
					WorldWindow worldWindow = this.vmethod_796();
					ref System.Drawing.Point ptr = ref this.point_0;
					int x = this.point_0.X;
					ref System.Drawing.Point ptr2 = ref this.point_0;
					int y = this.point_0.Y;
					double double_;
					double double_2;
					Class2572.smethod_3(worldWindow, ref x, ref y, ref double_, ref double_2);
					ptr2.Y = y;
					ptr.X = x;
					this.method_161(true, new GeoPoint(double_, double_2));
					Class2558.smethod_3(this.vmethod_796());
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200600", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06005F86 RID: 24454 RVA: 0x003520E4 File Offset: 0x003502E4
		private void method_120(bool bool_15)
		{
			try
			{
				if (Class570.class280_0.method_14())
				{
					if (!Information.IsNothing(this.vmethod_796()))
					{
						WorldWindow worldWindow = this.vmethod_796();
						ref System.Drawing.Point ptr = ref this.point_0;
						int x = this.point_0.X;
						ref System.Drawing.Point ptr2 = ref this.point_0;
						int y = this.point_0.Y;
						double double_;
						double double_2;
						Class2572.smethod_3(worldWindow, ref x, ref y, ref double_, ref double_2);
						ptr2.Y = y;
						ptr.X = x;
						this.method_161(false, new GeoPoint(double_, double_2));
					}
					else
					{
						string text = "WorldWindow1 object not found! Error 200595";
						GameGeneral.smethod_26(ref text);
					}
				}
				this.method_153((int)Math.Round((double)this.method_152() * 0.6666666666666666));
				if (bool_15 && Class570.class280_0.method_14())
				{
					Class2558.smethod_3(this.vmethod_796());
				}
				this.point_1.X = 0;
				this.point_1.Y = 0;
				this.method_106(5.0);
			}
			catch (Exception ex)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			finally
			{
				Client.bool_1 = true;
			}
		}

		// Token: 0x06005F87 RID: 24455 RVA: 0x00352204 File Offset: 0x00350404
		private void method_121()
		{
			this.method_153((int)Math.Round((double)this.method_152() * 1.3333333333333333));
			this.point_1.X = 0;
			this.point_1.Y = 0;
			this.method_106(5.0);
		}

		// Token: 0x06005F88 RID: 24456 RVA: 0x00352258 File Offset: 0x00350458
		private List<Unit> method_122(object object_1, Class285.Enum87 enum87_0, MouseEventArgs mouseEventArgs_2)
		{
			List<Unit> list = new List<Unit>();
			short num = (short)(this.point_2.Y - 12);
			short num2 = (short)(this.point_2.Y + 12);
			short num3 = (short)(this.point_2.X - 12);
			short num4 = (short)(this.point_2.X + 12);
			List<Contact> list2 = new List<Contact>();
			list2.AddRange(Client.smethod_50().method_11().Values);
			list2.AddRange(Client.smethod_50().method_12().Values);
			try
			{
				foreach (Unit unit in this.list_54)
				{
					System.Drawing.Point point;
					if (unit.bool_0 && !((ActiveUnit)unit).vmethod_90().vmethod_1() && !Client.smethod_52().method_1() && !Class2558.smethod_17((ActiveUnit)unit))
					{
						point = Class2572.smethod_0(this.vmethod_796(), ((ActiveUnit)unit).method_56().Value, ((ActiveUnit)unit).method_58().Value);
					}
					else
					{
						point = Class2572.smethod_0(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null));
					}
					if ((int)num < point.Y & point.Y < (int)num2 & ((int)num3 < point.X & point.X < (int)num4))
					{
						if (enum87_0 != Class285.Enum87.const_0)
						{
							if (enum87_0 == Class285.Enum87.const_1)
							{
								if (!unit.bool_1 && (!unit.method_14() || !((Contact)unit).activeUnit_0.bool_1))
								{
									list.Add(unit);
								}
							}
						}
						else if (unit.bool_0)
						{
							if (!((ActiveUnit)unit).method_120())
							{
								list.Add(unit);
							}
						}
						else if (unit.method_14())
						{
							Contact_Base.ContactType contactType_ = ((Contact)unit).contactType_0;
							if (contactType_ - Contact_Base.ContactType.Facility_Fixed <= 1)
							{
								if (!Information.IsNothing(((Contact)unit).activeUnit_0))
								{
									if (((Contact)unit).activeUnit_0.method_120())
									{
										if (!((Contact)unit).activeUnit_0.vmethod_65(false).method_140())
										{
											list.Add(unit);
										}
									}
									else
									{
										list.Add(unit);
									}
								}
								else
								{
									list.Add(unit);
								}
							}
							else
							{
								list.Add(unit);
							}
						}
					}
				}
			}
			finally
			{
				List<Unit>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
			return list;
		}

		// Token: 0x06005F89 RID: 24457 RVA: 0x003524F0 File Offset: 0x003506F0
		public Unit method_123(object object_1, Class285.Enum87 enum87_0, MouseEventArgs mouseEventArgs_2)
		{
			List<Unit> list = new List<Unit>();
			Unit result = null;
			short num = (short)(this.point_2.Y - 12);
			short num2 = (short)(this.point_2.Y + 12);
			short num3 = (short)(this.point_2.X - 12);
			short num4 = (short)(this.point_2.X + 12);
			int num5 = this.list_54.Count - 1;
			for (int i = 0; i <= num5; i++)
			{
				Unit unit = this.list_54[i];
				int item;
				int item2;
				if (unit.bool_0)
				{
					if (!((ActiveUnit)unit).vmethod_90().vmethod_1() && !Client.smethod_52().method_1() && !Class2558.smethod_17((ActiveUnit)unit))
					{
						Class2572.smethod_4(this.vmethod_796(), ((ActiveUnit)unit).method_56().Value, ((ActiveUnit)unit).method_58().Value, ref item, ref item2);
					}
					else
					{
						Tuple<int, int> tuple = null;
						this.dictionary_2.TryGetValue(unit, out tuple);
						if (!Information.IsNothing(tuple))
						{
							item = tuple.Item1;
							item2 = tuple.Item2;
						}
						else
						{
							Class2572.smethod_4(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null), ref item, ref item2);
						}
					}
				}
				else
				{
					Class2572.smethod_4(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null), ref item, ref item2);
				}
				System.Drawing.Point point = new System.Drawing.Point(item, item2);
				if ((int)num < point.Y && point.Y < (int)num2 && (int)num3 < point.X && point.X < (int)num4)
				{
					if (enum87_0 != Class285.Enum87.const_0)
					{
						if (enum87_0 == Class285.Enum87.const_1)
						{
							if (!unit.bool_1 && (!unit.method_14() || !((Contact)unit).activeUnit_0.bool_1))
							{
								list.Add(unit);
							}
						}
					}
					else if (unit.bool_0)
					{
						if (!((ActiveUnit)unit).method_120())
						{
							list.Add(unit);
						}
					}
					else if (unit.method_14())
					{
						Contact_Base.ContactType contactType_ = ((Contact)unit).contactType_0;
						if (contactType_ - Contact_Base.ContactType.Facility_Fixed <= 1)
						{
							if (!Information.IsNothing(((Contact)unit).activeUnit_0))
							{
								if (((Contact)unit).activeUnit_0.method_120())
								{
									if (!((Contact)unit).activeUnit_0.vmethod_65(false).method_140())
									{
										list.Add(unit);
									}
								}
								else
								{
									list.Add(unit);
								}
							}
							else
							{
								list.Add(unit);
							}
						}
						else
						{
							list.Add(unit);
						}
					}
				}
			}
			int count = list.Count;
			if (count != 0)
			{
				if (count != 1)
				{
					float num6 = float.PositiveInfinity;
					try
					{
						foreach (Unit unit2 in list)
						{
							float num7 = (float)unit2.method_29(this.geopoint_Struct_0);
							if (num7 < num6)
							{
								num6 = num7;
								result = unit2;
							}
						}
						return result;
					}
					finally
					{
						List<Unit>.Enumerator enumerator;
						((IDisposable)enumerator).Dispose();
					}
				}
				result = list[0];
			}
			else
			{
				result = null;
			}
			return result;
		}

		// Token: 0x06005F8A RID: 24458 RVA: 0x00352820 File Offset: 0x00350A20
		private void method_124()
		{
			this.messageLogControlViewModel_0 = new MessageLogControlViewModel();
			this.messageLogOuterControl_0.DataContext = this.messageLogControlViewModel_0;
			if (this.messageLogWPFWindow_0 != null && this.messageLogWPFWindow_0.DataContext == null)
			{
				this.messageLogWPFWindow_0.DataContext = this.messageLogControlViewModel_0;
			}
			this.timer_1.Tick += this.timer_1_Tick;
			this.timer_1.Interval = 1000;
			this.timer_1.Start();
			this.messageLogOuterControl_0.MessageLogExpandCollapseButton_OnClick(null, null);
			this.vmethod_800().Invalidate();
		}

		// Token: 0x06005F8B RID: 24459 RVA: 0x003528BC File Offset: 0x00350ABC
		private void timer_1_Tick(object sender, EventArgs e)
		{
			if (base.IsDisposed)
			{
				this.timer_1.Stop();
				return;
			}
			this.messageLogControlViewModel_0.method_0();
			this.vmethod_800().Invalidate();
			if (Class2413.smethod_2().method_44().Visible)
			{
				Class2413.smethod_2().method_44().method_3(true);
			}
		}

		// Token: 0x06005F8C RID: 24460 RVA: 0x00352914 File Offset: 0x00350B14
		public void method_125()
		{
			if (this.messageLogWPFWindow_0 == null)
			{
				this.messageLogWPFWindow_0 = new MessageLogWPFWindow();
				this.messageLogWPFWindow_0.DataContext = this.messageLogControlViewModel_0;
			}
			this.messageLogWPFWindow_0.Show();
			this.vmethod_800().Visible = false;
			this.messageLogOuterControl_0.DataContext = null;
		}

		// Token: 0x06005F8D RID: 24461 RVA: 0x00352968 File Offset: 0x00350B68
		public void method_126(int int_11, int int_12, int int_13, int int_14)
		{
			if (this.messageLogWPFWindow_0 == null)
			{
				this.messageLogWPFWindow_0 = new MessageLogWPFWindow();
				this.messageLogWPFWindow_0.DataContext = this.messageLogControlViewModel_0;
			}
			this.messageLogWPFWindow_0.Show();
			this.messageLogWPFWindow_0.Left = (double)int_11;
			this.messageLogWPFWindow_0.Top = (double)int_12;
			this.messageLogWPFWindow_0.Width = (double)int_13;
			this.messageLogWPFWindow_0.Height = (double)int_14;
			this.vmethod_800().Visible = false;
			this.messageLogOuterControl_0.DataContext = null;
		}

		// Token: 0x06005F8E RID: 24462 RVA: 0x0003D9A1 File Offset: 0x0003BBA1
		public void method_127(bool bool_15)
		{
			this.messageLogWPFWindow_0.Close();
			this.messageLogWPFWindow_0 = null;
			if (bool_15)
			{
				this.method_128();
			}
		}

		// Token: 0x06005F8F RID: 24463 RVA: 0x0003D9BE File Offset: 0x0003BBBE
		public void method_128()
		{
			this.messageLogOuterControl_0.DataContext = this.messageLogControlViewModel_0;
			this.vmethod_800().Visible = true;
			this.vmethod_800().Invalidate();
		}

		// Token: 0x06005F90 RID: 24464 RVA: 0x003529F4 File Offset: 0x00350BF4
		private void method_129()
		{
			Client.bool_1 = true;
			this.method_161(true, new GeoPoint(this.vmethod_796().method_7().method_1().vmethod_1().method_0(), this.vmethod_796().method_7().method_1().vmethod_0().method_0()));
		}

		// Token: 0x06005F91 RID: 24465 RVA: 0x0003D9E8 File Offset: 0x0003BBE8
		private void method_130(object sender, EventArgs e)
		{
			Client.smethod_52().method_12(!Client.smethod_52().method_11());
			this.method_307();
		}

		// Token: 0x06005F92 RID: 24466 RVA: 0x0003DA07 File Offset: 0x0003BC07
		private void method_131(object sender, EventArgs e)
		{
			Client.smethod_52().method_14(!Client.smethod_52().method_13());
			this.method_307();
		}

		// Token: 0x06005F93 RID: 24467 RVA: 0x0003DA26 File Offset: 0x0003BC26
		private void method_132(object sender, EventArgs e)
		{
			Client.smethod_52().method_8(!Client.smethod_52().method_7());
			this.method_307();
		}

		// Token: 0x06005F94 RID: 24468 RVA: 0x0003DA45 File Offset: 0x0003BC45
		private void method_133(object sender, EventArgs e)
		{
			Client.smethod_52().method_10(!Client.smethod_52().method_9());
			this.method_307();
		}

		// Token: 0x06005F95 RID: 24469 RVA: 0x0003DA64 File Offset: 0x0003BC64
		private void method_134(object sender, EventArgs e)
		{
			Client.smethod_52().method_16(!Client.smethod_52().method_15());
			this.method_307();
		}

		// Token: 0x06005F96 RID: 24470 RVA: 0x0003DA83 File Offset: 0x0003BC83
		private void method_135(object sender, EventArgs e)
		{
			Client.smethod_52().method_18(!Client.smethod_52().method_17());
			this.method_307();
		}

		// Token: 0x06005F97 RID: 24471 RVA: 0x0003DAA2 File Offset: 0x0003BCA2
		private void method_136(object sender, EventArgs e)
		{
			Client.smethod_52().method_20(!Client.smethod_52().method_19());
			this.method_307();
		}

		// Token: 0x06005F98 RID: 24472 RVA: 0x0003DAC1 File Offset: 0x0003BCC1
		private void method_137(object sender, EventArgs e)
		{
			Client.smethod_52().method_6(!Client.smethod_52().method_5());
			this.method_307();
		}

		// Token: 0x06005F99 RID: 24473 RVA: 0x00352A50 File Offset: 0x00350C50
		private void method_138()
		{
			Color[] transparentColors = new Color[]
			{
				Color.FromArgb(153, 179, 204)
			};
			this.class1871_0 = new Class1871("OSM_Background", this.vmethod_796(), "http://tile.stamen.com/terrain", "Stamen Terrain", transparentColors, 18, "png", false, false);
			this.class1871_0.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1871_0);
			this.class1871_0.vmethod_12(false);
		}

		// Token: 0x06005F9A RID: 24474 RVA: 0x00352AE8 File Offset: 0x00350CE8
		private void method_139()
		{
			Color[] transparentColors = new Color[0];
			this.class1872_0 = new Class1872("OSM_Labels", this.vmethod_796(), "http://tile.stamen.com/terrain-labels", "Stamen Terrain - Labels", transparentColors, 10, "png", true, true);
			this.class1872_0.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1872_0);
			this.class1872_0.vmethod_12(true);
		}

		// Token: 0x06005F9B RID: 24475 RVA: 0x00352B64 File Offset: 0x00350D64
		private void method_140()
		{
			Color[] transparentColors = new Color[]
			{
				Color.FromArgb(153, 179, 204)
			};
			this.class1871_1 = new Class1871("OSM_Roads", this.vmethod_796(), "http://tile.stamen.com/terrain-lines", "Stamen Terrain - Lines", transparentColors, 18, "png", false, false);
			this.class1871_1.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1871_1);
			this.class1871_1.vmethod_12(false);
		}

		// Token: 0x06005F9C RID: 24476 RVA: 0x0003DAE0 File Offset: 0x0003BCE0
		private void method_141()
		{
			this.method_142();
			this.method_143();
		}

		// Token: 0x06005F9D RID: 24477 RVA: 0x00352BFC File Offset: 0x00350DFC
		private void method_142()
		{
			try
			{
				if (Class570.class280_0.method_50())
				{
					string text = "Preparing BMNGv2.";
					GameGeneral.smethod_26(ref text);
				}
				if (!Directory.Exists(System.Windows.Forms.Application.StartupPath + "\\WW\\Cache\\BMNGv2\\"))
				{
					DarkMessageBox.smethod_2("Could not find any map files in " + System.Windows.Forms.Application.StartupPath + "\\WW\\Cache\\BMNGv2\\. Is the program installed correctly?", "Error", Enum11.const_0);
				}
				else
				{
					new Class1878("BMNGv2");
					Class1825[] array = new Class1825[1];
					Class1878 @class = new Class1878("BMNGv2");
					Class1878 class2 = new Class1878("BMNGv2");
					class2.method_0(false);
					Class1826 class3 = new Class1826("BMNGv2", null);
					class3.method_6(System.Windows.Forms.Application.StartupPath + "\\WW\\Cache\\BMNGv2\\");
					class3.method_1(22.5);
					class3.method_3(5);
					class3.method_4("png");
					class3.method_5(System.Windows.Forms.Application.StartupPath + "\\WW\\Cache\\BMNGv2\\");
					array[0] = class3;
					Class1877 class4 = new Class1877("BMNGv2", this.vmethod_796().method_4(), 0.0, 90.0, -90.0, -180.0, 180.0, true, array);
					class4.method_12(true);
					class4.vmethod_16(null);
					class4.method_16(3.5f);
					class4.method_14(2.9f);
					class4.method_5(new TimeSpan(999, 59, 59));
					Class1878 class5 = new Class1878("BMNGv2");
					class4.vmethod_1(this.vmethod_796().method_7());
					class4.vmethod_12(true);
					class5.vmethod_12(true);
					class5.vmethod_19(class4);
					class2.vmethod_19(class5);
					class2.bool_3 = true;
					class2.vmethod_12(true);
					@class.vmethod_19(class2);
					this.vmethod_796().method_4().method_5().vmethod_19(@class);
					@class.bool_3 = true;
					@class.vmethod_9(byte.MaxValue);
					@class.vmethod_2(this.vmethod_796().method_7());
					if (Class570.class280_0.method_50())
					{
						string text = "Preparing BMNGv2 done.";
						GameGeneral.smethod_26(ref text);
					}
				}
			}
			catch (Exception ex)
			{
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
				DarkMessageBox.smethod_2("Error while creating BMNGv2 layer: " + ex.Message, "Error", Enum11.const_0);
			}
		}

		// Token: 0x06005F9E RID: 24478 RVA: 0x00352E6C File Offset: 0x0035106C
		private void method_143()
		{
			Color[] transparentColors = new Color[0];
			this.class1871_2 = new Class1871("Relief_90", this.vmethod_796(), "http://warfaresims.slitherine.com/MapTiles/Relief_90", "Relief_90", transparentColors, 11, "png", false, false);
			this.class1871_2.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1871_2);
			Class1871.list_0.Add(this.class1871_2);
			this.class1871_2.vmethod_12(true);
		}

		// Token: 0x06005F9F RID: 24479 RVA: 0x00352EF8 File Offset: 0x003510F8
		private void method_144()
		{
			Color[] transparentColors = new Color[0];
			this.class1871_3 = new Class1871("S2Cloudless", this.vmethod_796(), "http://warfaresims.slitherine.com/MapTiles/S2Cloudless", "S2Cloudless", transparentColors, 13, "jpg", false, false);
			this.class1871_3.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1871_3);
			Class1871.list_0.Add(this.class1871_3);
			this.class1871_3.vmethod_12(true);
		}

		// Token: 0x06005FA0 RID: 24480 RVA: 0x00352F84 File Offset: 0x00351184
		private void method_145()
		{
			Color[] transparentColors = new Color[0];
			this.class1871_4 = new Class1871("Relief_SRTM3", this.vmethod_796(), "http://warfaresims.slitherine.com/MapTiles/Relief_SRTM3", "Relief_SRTM3", transparentColors, 11, "png", false, false);
			this.class1871_4.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1871_4);
			Class1871.list_0.Add(this.class1871_4);
			this.class1871_4.vmethod_12(false);
		}

		// Token: 0x06005FA1 RID: 24481 RVA: 0x00353010 File Offset: 0x00351210
		private void method_146()
		{
			Color[] transparentColors = new Color[0];
			this.class1871_5 = new Class1871("LandCover_300", this.vmethod_796(), "", "LandCover_300", transparentColors, 9, "png", false, false);
			this.class1871_5.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1871_5);
			Class1871.list_0.Add(this.class1871_5);
			this.class1871_5.vmethod_12(false);
		}

		// Token: 0x06005FA2 RID: 24482 RVA: 0x0035309C File Offset: 0x0035129C
		private void method_147()
		{
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing SHP_Ice_Arctic.";
				GameGeneral.smethod_26(ref text);
			}
			try
			{
				this.vmethod_796().method_4().method_5().vmethod_20("SeaIceArctic");
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200204", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			this.class1873_2 = new Class1873("SeaIceArctic", this.vmethod_796(), Class442.smethod_4(DateTime.Today), Color.LightGray);
			this.class1873_2.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1873_2);
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing SHP_Ice_Arctic done.";
				GameGeneral.smethod_26(ref text);
			}
		}

		// Token: 0x06005FA3 RID: 24483 RVA: 0x00353198 File Offset: 0x00351398
		private void method_148()
		{
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing SHP_ColdWar.";
				GameGeneral.smethod_26(ref text);
			}
			try
			{
				this.vmethod_796().method_4().method_5().vmethod_20("Borders_ColdWar");
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200205", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			this.class1873_0 = new Class1873("Borders_ColdWar", this.vmethod_796(), System.Windows.Forms.Application.StartupPath + "\\GIS\\MappingHacks\\world_borders_1976-1989.shp", Color.FromArgb(90, Color.Yellow));
			this.class1873_0.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1873_0);
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing SHP_ColdWar done.";
				GameGeneral.smethod_26(ref text);
			}
		}

		// Token: 0x06005FA4 RID: 24484 RVA: 0x003532A0 File Offset: 0x003514A0
		private void method_149()
		{
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing SHP_NewWorldOrder.";
				GameGeneral.smethod_26(ref text);
			}
			try
			{
				this.vmethod_796().method_4().method_5().vmethod_20("Borders_NewWorldOrder");
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200206", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			this.class1873_1 = new Class1873("Borders_NewWorldOrder", this.vmethod_796(), System.Windows.Forms.Application.StartupPath + "\\GIS\\MappingHacks\\world_borders.shp", Color.FromArgb(90, Color.Yellow));
			this.class1873_1.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1873_1);
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing SHP_NewWorldOrder done.";
				GameGeneral.smethod_26(ref text);
			}
		}

		// Token: 0x06005FA5 RID: 24485 RVA: 0x003533A8 File Offset: 0x003515A8
		private void method_150()
		{
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing MapScaleLayer.";
				GameGeneral.smethod_26(ref text);
			}
			this.class1880_0 = new Class2571.Class1880(this.vmethod_796().method_4(), this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.class1880_0);
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing MapScaleLayer done.";
				GameGeneral.smethod_26(ref text);
			}
		}

		// Token: 0x06005FA6 RID: 24486 RVA: 0x00353424 File Offset: 0x00351624
		private void method_151()
		{
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing CommandLayer.";
				GameGeneral.smethod_26(ref text);
			}
			try
			{
				this.vmethod_796().method_4().method_5().vmethod_20("CommandLayer");
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 20175432", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
			this.commandLayer_0 = new CommandLayer("CommandLayer", this.vmethod_796(), new CommandLayer.Delegate66(this.method_80));
			this.commandLayer_0.vmethod_0(this.vmethod_796().method_7());
			this.vmethod_796().method_4().method_5().vmethod_19(this.commandLayer_0);
			this.commandLayer_0.vmethod_7(Enum170.const_4);
			if (Class570.class280_0.method_50())
			{
				string text = "Preparing CommandLayer done.";
				GameGeneral.smethod_26(ref text);
			}
		}

		// Token: 0x06005FA9 RID: 24489 RVA: 0x0003DB0D File Offset: 0x0003BD0D
		[CompilerGenerated]
		internal Class119 vmethod_6()
		{
			return this.class119_0;
		}

		// Token: 0x06005FAA RID: 24490 RVA: 0x0003DB15 File Offset: 0x0003BD15
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_7(Class119 class119_1)
		{
			this.class119_0 = class119_1;
		}

		// Token: 0x06005FAB RID: 24491 RVA: 0x0003DB1E File Offset: 0x0003BD1E
		[CompilerGenerated]
		internal Class128 vmethod_8()
		{
			return this.class128_0;
		}

		// Token: 0x06005FAC RID: 24492 RVA: 0x00364584 File Offset: 0x00362784
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_9(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_552);
			Class128 @class = this.class128_0;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_0 = class128_379;
			@class = this.class128_0;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FAD RID: 24493 RVA: 0x0003DB26 File Offset: 0x0003BD26
		[CompilerGenerated]
		internal Class128 vmethod_10()
		{
			return this.class128_1;
		}

		// Token: 0x06005FAE RID: 24494 RVA: 0x0003DB2E File Offset: 0x0003BD2E
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_11(Class128 class128_379)
		{
			this.class128_1 = class128_379;
		}

		// Token: 0x06005FAF RID: 24495 RVA: 0x0003DB37 File Offset: 0x0003BD37
		[CompilerGenerated]
		internal Class113 vmethod_12()
		{
			return this.class113_0;
		}

		// Token: 0x06005FB0 RID: 24496 RVA: 0x0003DB3F File Offset: 0x0003BD3F
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_13(Class113 class113_9)
		{
			this.class113_0 = class113_9;
		}

		// Token: 0x06005FB1 RID: 24497 RVA: 0x0003DB48 File Offset: 0x0003BD48
		[CompilerGenerated]
		internal Class128 vmethod_14()
		{
			return this.class128_2;
		}

		// Token: 0x06005FB2 RID: 24498 RVA: 0x003645C8 File Offset: 0x003627C8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_15(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_216);
			Class128 @class = this.class128_2;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_2 = class128_379;
			@class = this.class128_2;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FB3 RID: 24499 RVA: 0x0003DB50 File Offset: 0x0003BD50
		[CompilerGenerated]
		internal Class128 vmethod_16()
		{
			return this.class128_3;
		}

		// Token: 0x06005FB4 RID: 24500 RVA: 0x0036460C File Offset: 0x0036280C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_17(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_213);
			Class128 @class = this.class128_3;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_3 = class128_379;
			@class = this.class128_3;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FB5 RID: 24501 RVA: 0x0003DB58 File Offset: 0x0003BD58
		[CompilerGenerated]
		internal Class128 vmethod_18()
		{
			return this.class128_4;
		}

		// Token: 0x06005FB6 RID: 24502 RVA: 0x00364650 File Offset: 0x00362850
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_19(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_220);
			Class128 @class = this.class128_4;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_4 = class128_379;
			@class = this.class128_4;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FB7 RID: 24503 RVA: 0x0003DB60 File Offset: 0x0003BD60
		[CompilerGenerated]
		internal Class128 vmethod_20()
		{
			return this.class128_5;
		}

		// Token: 0x06005FB8 RID: 24504 RVA: 0x00364694 File Offset: 0x00362894
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_21(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_441);
			Class128 @class = this.class128_5;
			if (@class != null)
			{
				@class.DropDownOpening -= value;
			}
			this.class128_5 = class128_379;
			@class = this.class128_5;
			if (@class != null)
			{
				@class.DropDownOpening += value;
			}
		}

		// Token: 0x06005FB9 RID: 24505 RVA: 0x0003DB68 File Offset: 0x0003BD68
		[CompilerGenerated]
		internal Class128 vmethod_22()
		{
			return this.class128_6;
		}

		// Token: 0x06005FBA RID: 24506 RVA: 0x003646D8 File Offset: 0x003628D8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_23(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_554);
			Class128 @class = this.class128_6;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_6 = class128_379;
			@class = this.class128_6;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FBB RID: 24507 RVA: 0x0003DB70 File Offset: 0x0003BD70
		[CompilerGenerated]
		internal ToolStripButton vmethod_24()
		{
			return this.toolStripButton_0;
		}

		// Token: 0x06005FBC RID: 24508 RVA: 0x0036471C File Offset: 0x0036291C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_25(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_214);
			ToolStripButton toolStripButton = this.toolStripButton_0;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_0 = toolStripButton_23;
			toolStripButton = this.toolStripButton_0;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x06005FBD RID: 24509 RVA: 0x0003DB78 File Offset: 0x0003BD78
		[CompilerGenerated]
		internal Class128 vmethod_26()
		{
			return this.class128_7;
		}

		// Token: 0x06005FBE RID: 24510 RVA: 0x00364760 File Offset: 0x00362960
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_27(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_215);
			Class128 @class = this.class128_7;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_7 = class128_379;
			@class = this.class128_7;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FBF RID: 24511 RVA: 0x0003DB80 File Offset: 0x0003BD80
		[CompilerGenerated]
		internal SaveFileDialog vmethod_28()
		{
			return this.saveFileDialog_0;
		}

		// Token: 0x06005FC0 RID: 24512 RVA: 0x003647A4 File Offset: 0x003629A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_29(SaveFileDialog saveFileDialog_3)
		{
			EventHandler value = new EventHandler(this.method_217);
			SaveFileDialog saveFileDialog = this.saveFileDialog_0;
			if (saveFileDialog != null)
			{
				saveFileDialog.Disposed -= value;
			}
			this.saveFileDialog_0 = saveFileDialog_3;
			saveFileDialog = this.saveFileDialog_0;
			if (saveFileDialog != null)
			{
				saveFileDialog.Disposed += value;
			}
		}

		// Token: 0x06005FC1 RID: 24513 RVA: 0x0003DB88 File Offset: 0x0003BD88
		[CompilerGenerated]
		internal Class128 vmethod_30()
		{
			return this.class128_8;
		}

		// Token: 0x06005FC2 RID: 24514 RVA: 0x003647E8 File Offset: 0x003629E8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_31(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_221);
			Class128 @class = this.class128_8;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_8 = class128_379;
			@class = this.class128_8;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FC3 RID: 24515 RVA: 0x0003DB90 File Offset: 0x0003BD90
		[CompilerGenerated]
		internal Timer vmethod_32()
		{
			return this.timer_2;
		}

		// Token: 0x06005FC4 RID: 24516 RVA: 0x0036482C File Offset: 0x00362A2C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_33(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_225);
			Timer timer = this.timer_2;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_2 = timer_10;
			timer = this.timer_2;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x06005FC5 RID: 24517 RVA: 0x0003DB98 File Offset: 0x0003BD98
		[CompilerGenerated]
		internal Class128 vmethod_34()
		{
			return this.class128_9;
		}

		// Token: 0x06005FC6 RID: 24518 RVA: 0x00364870 File Offset: 0x00362A70
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_35(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_229);
			Class128 @class = this.class128_9;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_9 = class128_379;
			@class = this.class128_9;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FC7 RID: 24519 RVA: 0x0003DBA0 File Offset: 0x0003BDA0
		[CompilerGenerated]
		internal Class128 vmethod_36()
		{
			return this.class128_10;
		}

		// Token: 0x06005FC8 RID: 24520 RVA: 0x003648B4 File Offset: 0x00362AB4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_37(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_228);
			Class128 @class = this.class128_10;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_10 = class128_379;
			@class = this.class128_10;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FC9 RID: 24521 RVA: 0x0003DBA8 File Offset: 0x0003BDA8
		[CompilerGenerated]
		internal Class128 vmethod_38()
		{
			return this.class128_11;
		}

		// Token: 0x06005FCA RID: 24522 RVA: 0x003648F8 File Offset: 0x00362AF8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_39(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_607);
			Class128 @class = this.class128_11;
			if (@class != null)
			{
				@class.MouseEnter -= value;
			}
			this.class128_11 = class128_379;
			@class = this.class128_11;
			if (@class != null)
			{
				@class.MouseEnter += value;
			}
		}

		// Token: 0x06005FCB RID: 24523 RVA: 0x0003DBB0 File Offset: 0x0003BDB0
		[CompilerGenerated]
		internal Class113 vmethod_40()
		{
			return this.class113_1;
		}

		// Token: 0x06005FCC RID: 24524 RVA: 0x0003DBB8 File Offset: 0x0003BDB8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_41(Class113 class113_9)
		{
			this.class113_1 = class113_9;
		}

		// Token: 0x06005FCD RID: 24525 RVA: 0x0003DBC1 File Offset: 0x0003BDC1
		[CompilerGenerated]
		internal Class128 vmethod_42()
		{
			return this.class128_12;
		}

		// Token: 0x06005FCE RID: 24526 RVA: 0x0003DBC9 File Offset: 0x0003BDC9
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_43(Class128 class128_379)
		{
			this.class128_12 = class128_379;
		}

		// Token: 0x06005FCF RID: 24527 RVA: 0x0003DBD2 File Offset: 0x0003BDD2
		[CompilerGenerated]
		internal Class128 vmethod_44()
		{
			return this.class128_13;
		}

		// Token: 0x06005FD0 RID: 24528 RVA: 0x0003DBDA File Offset: 0x0003BDDA
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_45(Class128 class128_379)
		{
			this.class128_13 = class128_379;
		}

		// Token: 0x06005FD1 RID: 24529 RVA: 0x0003DBE3 File Offset: 0x0003BDE3
		[CompilerGenerated]
		internal Class128 vmethod_46()
		{
			return this.class128_14;
		}

		// Token: 0x06005FD2 RID: 24530 RVA: 0x0036493C File Offset: 0x00362B3C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_47(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_241);
			Class128 @class = this.class128_14;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_14 = class128_379;
			@class = this.class128_14;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FD3 RID: 24531 RVA: 0x0003DBEB File Offset: 0x0003BDEB
		[CompilerGenerated]
		internal Class128 vmethod_48()
		{
			return this.class128_15;
		}

		// Token: 0x06005FD4 RID: 24532 RVA: 0x0003DBF3 File Offset: 0x0003BDF3
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_49(Class128 class128_379)
		{
			this.class128_15 = class128_379;
		}

		// Token: 0x06005FD5 RID: 24533 RVA: 0x0003DBFC File Offset: 0x0003BDFC
		[CompilerGenerated]
		internal Class128 vmethod_50()
		{
			return this.class128_16;
		}

		// Token: 0x06005FD6 RID: 24534 RVA: 0x0003DC04 File Offset: 0x0003BE04
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_51(Class128 class128_379)
		{
			this.class128_16 = class128_379;
		}

		// Token: 0x06005FD7 RID: 24535 RVA: 0x0003DC0D File Offset: 0x0003BE0D
		[CompilerGenerated]
		internal Class128 vmethod_52()
		{
			return this.class128_17;
		}

		// Token: 0x06005FD8 RID: 24536 RVA: 0x00364980 File Offset: 0x00362B80
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_53(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_240);
			Class128 @class = this.class128_17;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_17 = class128_379;
			@class = this.class128_17;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FD9 RID: 24537 RVA: 0x0003DC15 File Offset: 0x0003BE15
		[CompilerGenerated]
		internal Class128 vmethod_54()
		{
			return this.class128_18;
		}

		// Token: 0x06005FDA RID: 24538 RVA: 0x0003DC1D File Offset: 0x0003BE1D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_55(Class128 class128_379)
		{
			this.class128_18 = class128_379;
		}

		// Token: 0x06005FDB RID: 24539 RVA: 0x0003DC26 File Offset: 0x0003BE26
		[CompilerGenerated]
		internal Class128 vmethod_56()
		{
			return this.class128_19;
		}

		// Token: 0x06005FDC RID: 24540 RVA: 0x003649C4 File Offset: 0x00362BC4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_57(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_243);
			Class128 @class = this.class128_19;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_19 = class128_379;
			@class = this.class128_19;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FDD RID: 24541 RVA: 0x0003DC2E File Offset: 0x0003BE2E
		[CompilerGenerated]
		internal Class128 vmethod_58()
		{
			return this.class128_20;
		}

		// Token: 0x06005FDE RID: 24542 RVA: 0x00364A08 File Offset: 0x00362C08
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_59(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_244);
			Class128 @class = this.class128_20;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_20 = class128_379;
			@class = this.class128_20;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FDF RID: 24543 RVA: 0x0003DC36 File Offset: 0x0003BE36
		[CompilerGenerated]
		internal Class128 vmethod_60()
		{
			return this.class128_21;
		}

		// Token: 0x06005FE0 RID: 24544 RVA: 0x00364A4C File Offset: 0x00362C4C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_61(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_245);
			Class128 @class = this.class128_21;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_21 = class128_379;
			@class = this.class128_21;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FE1 RID: 24545 RVA: 0x0003DC3E File Offset: 0x0003BE3E
		[CompilerGenerated]
		internal Class128 vmethod_62()
		{
			return this.class128_22;
		}

		// Token: 0x06005FE2 RID: 24546 RVA: 0x00364A90 File Offset: 0x00362C90
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_63(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_246);
			Class128 @class = this.class128_22;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_22 = class128_379;
			@class = this.class128_22;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FE3 RID: 24547 RVA: 0x0003DC46 File Offset: 0x0003BE46
		[CompilerGenerated]
		internal Class128 vmethod_64()
		{
			return this.class128_23;
		}

		// Token: 0x06005FE4 RID: 24548 RVA: 0x0003DC4E File Offset: 0x0003BE4E
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_65(Class128 class128_379)
		{
			this.class128_23 = class128_379;
		}

		// Token: 0x06005FE5 RID: 24549 RVA: 0x0003DC57 File Offset: 0x0003BE57
		[CompilerGenerated]
		internal Timer vmethod_66()
		{
			return this.timer_3;
		}

		// Token: 0x06005FE6 RID: 24550 RVA: 0x00364AD4 File Offset: 0x00362CD4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_67(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_247);
			Timer timer = this.timer_3;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_3 = timer_10;
			timer = this.timer_3;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x06005FE7 RID: 24551 RVA: 0x0003DC5F File Offset: 0x0003BE5F
		[CompilerGenerated]
		internal BackgroundWorker vmethod_68()
		{
			return this.backgroundWorker_0;
		}

		// Token: 0x06005FE8 RID: 24552 RVA: 0x00364B18 File Offset: 0x00362D18
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_69(BackgroundWorker backgroundWorker_1)
		{
			DoWorkEventHandler doWorkEventHandler = new DoWorkEventHandler(this.method_248);
			BackgroundWorker backgroundWorker = this.backgroundWorker_0;
			if (backgroundWorker != null)
			{
				backgroundWorker.DoWork -= doWorkEventHandler;
			}
			this.backgroundWorker_0 = backgroundWorker_1;
			backgroundWorker = this.backgroundWorker_0;
			if (backgroundWorker != null)
			{
				backgroundWorker.DoWork += doWorkEventHandler;
			}
		}

		// Token: 0x06005FE9 RID: 24553 RVA: 0x0003DC67 File Offset: 0x0003BE67
		[CompilerGenerated]
		internal Timer vmethod_70()
		{
			return this.timer_4;
		}

		// Token: 0x06005FEA RID: 24554 RVA: 0x00364B5C File Offset: 0x00362D5C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_71(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_250);
			Timer timer = this.timer_4;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_4 = timer_10;
			timer = this.timer_4;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x06005FEB RID: 24555 RVA: 0x0003DC6F File Offset: 0x0003BE6F
		[CompilerGenerated]
		internal Class128 vmethod_72()
		{
			return this.class128_24;
		}

		// Token: 0x06005FEC RID: 24556 RVA: 0x00364BA0 File Offset: 0x00362DA0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_73(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_252);
			Class128 @class = this.class128_24;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_24 = class128_379;
			@class = this.class128_24;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FED RID: 24557 RVA: 0x0003DC77 File Offset: 0x0003BE77
		[CompilerGenerated]
		internal Class128 vmethod_74()
		{
			return this.class128_25;
		}

		// Token: 0x06005FEE RID: 24558 RVA: 0x0003DC7F File Offset: 0x0003BE7F
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_75(Class128 class128_379)
		{
			this.class128_25 = class128_379;
		}

		// Token: 0x06005FEF RID: 24559 RVA: 0x0003DC88 File Offset: 0x0003BE88
		[CompilerGenerated]
		internal Class128 vmethod_76()
		{
			return this.class128_26;
		}

		// Token: 0x06005FF0 RID: 24560 RVA: 0x00364BE4 File Offset: 0x00362DE4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_77(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_253);
			Class128 @class = this.class128_26;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_26 = class128_379;
			@class = this.class128_26;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FF1 RID: 24561 RVA: 0x0003DC90 File Offset: 0x0003BE90
		[CompilerGenerated]
		internal Class128 vmethod_78()
		{
			return this.class128_27;
		}

		// Token: 0x06005FF2 RID: 24562 RVA: 0x00364C28 File Offset: 0x00362E28
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_79(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_254);
			Class128 @class = this.class128_27;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_27 = class128_379;
			@class = this.class128_27;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FF3 RID: 24563 RVA: 0x0003DC98 File Offset: 0x0003BE98
		[CompilerGenerated]
		internal ImageList vmethod_80()
		{
			return this.imageList_0;
		}

		// Token: 0x06005FF4 RID: 24564 RVA: 0x0003DCA0 File Offset: 0x0003BEA0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_81(ImageList imageList_1)
		{
			this.imageList_0 = imageList_1;
		}

		// Token: 0x06005FF5 RID: 24565 RVA: 0x0003DCA9 File Offset: 0x0003BEA9
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_82()
		{
			return this.toolStripSeparator_0;
		}

		// Token: 0x06005FF6 RID: 24566 RVA: 0x0003DCB1 File Offset: 0x0003BEB1
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_83(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_0 = toolStripSeparator_40;
		}

		// Token: 0x06005FF7 RID: 24567 RVA: 0x0003DCBA File Offset: 0x0003BEBA
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_84()
		{
			return this.toolStripSeparator_1;
		}

		// Token: 0x06005FF8 RID: 24568 RVA: 0x0003DCC2 File Offset: 0x0003BEC2
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_85(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_1 = toolStripSeparator_40;
		}

		// Token: 0x06005FF9 RID: 24569 RVA: 0x0003DCCB File Offset: 0x0003BECB
		[CompilerGenerated]
		internal Class128 vmethod_86()
		{
			return this.class128_28;
		}

		// Token: 0x06005FFA RID: 24570 RVA: 0x00364C6C File Offset: 0x00362E6C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_87(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_255);
			Class128 @class = this.class128_28;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_28 = class128_379;
			@class = this.class128_28;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06005FFB RID: 24571 RVA: 0x0003DCD3 File Offset: 0x0003BED3
		[CompilerGenerated]
		internal Class128 vmethod_88()
		{
			return this.class128_29;
		}

		// Token: 0x06005FFC RID: 24572 RVA: 0x00364CB0 File Offset: 0x00362EB0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_89(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_442);
			Class128 @class = this.class128_29;
			if (@class != null)
			{
				@class.DropDownOpening -= value;
			}
			this.class128_29 = class128_379;
			@class = this.class128_29;
			if (@class != null)
			{
				@class.DropDownOpening += value;
			}
		}

		// Token: 0x06005FFD RID: 24573 RVA: 0x0003DCDB File Offset: 0x0003BEDB
		[CompilerGenerated]
		internal Class128 vmethod_90()
		{
			return this.class128_30;
		}

		// Token: 0x06005FFE RID: 24574 RVA: 0x00364CF4 File Offset: 0x00362EF4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_91(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_230);
			EventHandler value2 = new EventHandler(this.method_257);
			Class128 @class = this.class128_30;
			if (@class != null)
			{
				@class.Click -= value;
				@class.Click -= value2;
			}
			this.class128_30 = class128_379;
			@class = this.class128_30;
			if (@class != null)
			{
				@class.Click += value;
				@class.Click += value2;
			}
		}

		// Token: 0x06005FFF RID: 24575 RVA: 0x0003DCE3 File Offset: 0x0003BEE3
		[CompilerGenerated]
		internal Class128 vmethod_92()
		{
			return this.class128_31;
		}

		// Token: 0x06006000 RID: 24576 RVA: 0x00364D54 File Offset: 0x00362F54
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_93(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_256);
			Class128 @class = this.class128_31;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_31 = class128_379;
			@class = this.class128_31;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006001 RID: 24577 RVA: 0x0003DCEB File Offset: 0x0003BEEB
		[CompilerGenerated]
		internal Class128 vmethod_94()
		{
			return this.class128_32;
		}

		// Token: 0x06006002 RID: 24578 RVA: 0x00364D98 File Offset: 0x00362F98
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_95(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_258);
			Class128 @class = this.class128_32;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_32 = class128_379;
			@class = this.class128_32;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006003 RID: 24579 RVA: 0x0003DCF3 File Offset: 0x0003BEF3
		[CompilerGenerated]
		internal Class128 vmethod_96()
		{
			return this.class128_33;
		}

		// Token: 0x06006004 RID: 24580 RVA: 0x00364DDC File Offset: 0x00362FDC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_97(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_260);
			Class128 @class = this.class128_33;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_33 = class128_379;
			@class = this.class128_33;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006005 RID: 24581 RVA: 0x0003DCFB File Offset: 0x0003BEFB
		[CompilerGenerated]
		internal Class128 vmethod_98()
		{
			return this.class128_34;
		}

		// Token: 0x06006006 RID: 24582 RVA: 0x00364E20 File Offset: 0x00363020
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_99(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_262);
			Class128 @class = this.class128_34;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_34 = class128_379;
			@class = this.class128_34;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006007 RID: 24583 RVA: 0x0003DD03 File Offset: 0x0003BF03
		[CompilerGenerated]
		internal ToolStripButton vmethod_100()
		{
			return this.toolStripButton_1;
		}

		// Token: 0x06006008 RID: 24584 RVA: 0x00364E64 File Offset: 0x00363064
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_101(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_265);
			ToolStripButton toolStripButton = this.toolStripButton_1;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_1 = toolStripButton_23;
			toolStripButton = this.toolStripButton_1;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x06006009 RID: 24585 RVA: 0x0003DD0B File Offset: 0x0003BF0B
		[CompilerGenerated]
		internal OpenFileDialog vmethod_102()
		{
			return this.openFileDialog_0;
		}

		// Token: 0x0600600A RID: 24586 RVA: 0x0003DD13 File Offset: 0x0003BF13
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_103(OpenFileDialog openFileDialog_5)
		{
			this.openFileDialog_0 = openFileDialog_5;
		}

		// Token: 0x0600600B RID: 24587 RVA: 0x0003DD1C File Offset: 0x0003BF1C
		[CompilerGenerated]
		internal Class128 vmethod_104()
		{
			return this.class128_35;
		}

		// Token: 0x0600600C RID: 24588 RVA: 0x00364EA8 File Offset: 0x003630A8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_105(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_266);
			Class128 @class = this.class128_35;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_35 = class128_379;
			@class = this.class128_35;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600600D RID: 24589 RVA: 0x0003DD24 File Offset: 0x0003BF24
		[CompilerGenerated]
		internal Class128 vmethod_106()
		{
			return this.class128_36;
		}

		// Token: 0x0600600E RID: 24590 RVA: 0x00364EEC File Offset: 0x003630EC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_107(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_439);
			Class128 @class = this.class128_36;
			if (@class != null)
			{
				@class.DropDownOpening -= value;
			}
			this.class128_36 = class128_379;
			@class = this.class128_36;
			if (@class != null)
			{
				@class.DropDownOpening += value;
			}
		}

		// Token: 0x0600600F RID: 24591 RVA: 0x0003DD2C File Offset: 0x0003BF2C
		[CompilerGenerated]
		internal Class128 vmethod_108()
		{
			return this.class128_37;
		}

		// Token: 0x06006010 RID: 24592 RVA: 0x00364F30 File Offset: 0x00363130
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_109(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_267);
			Class128 @class = this.class128_37;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_37 = class128_379;
			@class = this.class128_37;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006011 RID: 24593 RVA: 0x0003DD34 File Offset: 0x0003BF34
		[CompilerGenerated]
		internal Class128 vmethod_110()
		{
			return this.class128_38;
		}

		// Token: 0x06006012 RID: 24594 RVA: 0x00364F74 File Offset: 0x00363174
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_111(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_268);
			Class128 @class = this.class128_38;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_38 = class128_379;
			@class = this.class128_38;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006013 RID: 24595 RVA: 0x0003DD3C File Offset: 0x0003BF3C
		[CompilerGenerated]
		internal Class128 vmethod_112()
		{
			return this.class128_39;
		}

		// Token: 0x06006014 RID: 24596 RVA: 0x00364FB8 File Offset: 0x003631B8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_113(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_269);
			Class128 @class = this.class128_39;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_39 = class128_379;
			@class = this.class128_39;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006015 RID: 24597 RVA: 0x0003DD44 File Offset: 0x0003BF44
		[CompilerGenerated]
		internal Class128 vmethod_114()
		{
			return this.class128_40;
		}

		// Token: 0x06006016 RID: 24598 RVA: 0x00364FFC File Offset: 0x003631FC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_115(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_270);
			Class128 @class = this.class128_40;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_40 = class128_379;
			@class = this.class128_40;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006017 RID: 24599 RVA: 0x0003DD4C File Offset: 0x0003BF4C
		[CompilerGenerated]
		internal Class128 vmethod_116()
		{
			return this.class128_41;
		}

		// Token: 0x06006018 RID: 24600 RVA: 0x00365040 File Offset: 0x00363240
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_117(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_271);
			Class128 @class = this.class128_41;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_41 = class128_379;
			@class = this.class128_41;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006019 RID: 24601 RVA: 0x0003DD54 File Offset: 0x0003BF54
		[CompilerGenerated]
		internal Class128 vmethod_118()
		{
			return this.class128_42;
		}

		// Token: 0x0600601A RID: 24602 RVA: 0x00365084 File Offset: 0x00363284
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_119(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_273);
			Class128 @class = this.class128_42;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_42 = class128_379;
			@class = this.class128_42;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600601B RID: 24603 RVA: 0x0003DD5C File Offset: 0x0003BF5C
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_120()
		{
			return this.toolStripSeparator_2;
		}

		// Token: 0x0600601C RID: 24604 RVA: 0x0003DD64 File Offset: 0x0003BF64
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_121(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_2 = toolStripSeparator_40;
		}

		// Token: 0x0600601D RID: 24605 RVA: 0x0003DD6D File Offset: 0x0003BF6D
		[CompilerGenerated]
		internal Class128 vmethod_122()
		{
			return this.class128_43;
		}

		// Token: 0x0600601E RID: 24606 RVA: 0x0003DD75 File Offset: 0x0003BF75
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_123(Class128 class128_379)
		{
			this.class128_43 = class128_379;
		}

		// Token: 0x0600601F RID: 24607 RVA: 0x0003DD7E File Offset: 0x0003BF7E
		[CompilerGenerated]
		internal Class128 vmethod_124()
		{
			return this.class128_44;
		}

		// Token: 0x06006020 RID: 24608 RVA: 0x003650C8 File Offset: 0x003632C8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_125(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_274);
			Class128 @class = this.class128_44;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_44 = class128_379;
			@class = this.class128_44;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006021 RID: 24609 RVA: 0x0003DD86 File Offset: 0x0003BF86
		[CompilerGenerated]
		internal Class128 vmethod_126()
		{
			return this.class128_45;
		}

		// Token: 0x06006022 RID: 24610 RVA: 0x0036510C File Offset: 0x0036330C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_127(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_275);
			Class128 @class = this.class128_45;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_45 = class128_379;
			@class = this.class128_45;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006023 RID: 24611 RVA: 0x0003DD8E File Offset: 0x0003BF8E
		[CompilerGenerated]
		internal Class128 vmethod_128()
		{
			return this.class128_46;
		}

		// Token: 0x06006024 RID: 24612 RVA: 0x00365150 File Offset: 0x00363350
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_129(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_276);
			Class128 @class = this.class128_46;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_46 = class128_379;
			@class = this.class128_46;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006025 RID: 24613 RVA: 0x0003DD96 File Offset: 0x0003BF96
		[CompilerGenerated]
		internal Class128 vmethod_130()
		{
			return this.class128_47;
		}

		// Token: 0x06006026 RID: 24614 RVA: 0x0003DD9E File Offset: 0x0003BF9E
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_131(Class128 class128_379)
		{
			this.class128_47 = class128_379;
		}

		// Token: 0x06006027 RID: 24615 RVA: 0x0003DDA7 File Offset: 0x0003BFA7
		[CompilerGenerated]
		internal Class128 vmethod_132()
		{
			return this.class128_48;
		}

		// Token: 0x06006028 RID: 24616 RVA: 0x00365194 File Offset: 0x00363394
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_133(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_277);
			Class128 @class = this.class128_48;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_48 = class128_379;
			@class = this.class128_48;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006029 RID: 24617 RVA: 0x0003DDAF File Offset: 0x0003BFAF
		[CompilerGenerated]
		internal Class128 vmethod_134()
		{
			return this.class128_49;
		}

		// Token: 0x0600602A RID: 24618 RVA: 0x003651D8 File Offset: 0x003633D8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_135(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_278);
			Class128 @class = this.class128_49;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_49 = class128_379;
			@class = this.class128_49;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600602B RID: 24619 RVA: 0x0003DDB7 File Offset: 0x0003BFB7
		[CompilerGenerated]
		internal Class128 vmethod_136()
		{
			return this.class128_50;
		}

		// Token: 0x0600602C RID: 24620 RVA: 0x0036521C File Offset: 0x0036341C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_137(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_279);
			Class128 @class = this.class128_50;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_50 = class128_379;
			@class = this.class128_50;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600602D RID: 24621 RVA: 0x0003DDBF File Offset: 0x0003BFBF
		[CompilerGenerated]
		internal Class128 vmethod_138()
		{
			return this.class128_51;
		}

		// Token: 0x0600602E RID: 24622 RVA: 0x0003DDC7 File Offset: 0x0003BFC7
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_139(Class128 class128_379)
		{
			this.class128_51 = class128_379;
		}

		// Token: 0x0600602F RID: 24623 RVA: 0x0003DDD0 File Offset: 0x0003BFD0
		[CompilerGenerated]
		internal Class128 vmethod_140()
		{
			return this.class128_52;
		}

		// Token: 0x06006030 RID: 24624 RVA: 0x0003DDD8 File Offset: 0x0003BFD8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_141(Class128 class128_379)
		{
			this.class128_52 = class128_379;
		}

		// Token: 0x06006031 RID: 24625 RVA: 0x0003DDE1 File Offset: 0x0003BFE1
		[CompilerGenerated]
		internal Class128 vmethod_142()
		{
			return this.class128_53;
		}

		// Token: 0x06006032 RID: 24626 RVA: 0x00365260 File Offset: 0x00363460
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_143(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_280);
			Class128 @class = this.class128_53;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_53 = class128_379;
			@class = this.class128_53;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006033 RID: 24627 RVA: 0x0003DDE9 File Offset: 0x0003BFE9
		[CompilerGenerated]
		internal Class128 vmethod_144()
		{
			return this.class128_54;
		}

		// Token: 0x06006034 RID: 24628 RVA: 0x003652A4 File Offset: 0x003634A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_145(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_281);
			Class128 @class = this.class128_54;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_54 = class128_379;
			@class = this.class128_54;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006035 RID: 24629 RVA: 0x0003DDF1 File Offset: 0x0003BFF1
		[CompilerGenerated]
		internal Class128 vmethod_146()
		{
			return this.class128_55;
		}

		// Token: 0x06006036 RID: 24630 RVA: 0x003652E8 File Offset: 0x003634E8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_147(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_282);
			Class128 @class = this.class128_55;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_55 = class128_379;
			@class = this.class128_55;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006037 RID: 24631 RVA: 0x0003DDF9 File Offset: 0x0003BFF9
		[CompilerGenerated]
		internal Class128 vmethod_148()
		{
			return this.class128_56;
		}

		// Token: 0x06006038 RID: 24632 RVA: 0x0036532C File Offset: 0x0036352C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_149(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_283);
			Class128 @class = this.class128_56;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_56 = class128_379;
			@class = this.class128_56;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006039 RID: 24633 RVA: 0x0003DE01 File Offset: 0x0003C001
		[CompilerGenerated]
		internal Class128 vmethod_150()
		{
			return this.class128_57;
		}

		// Token: 0x0600603A RID: 24634 RVA: 0x00365370 File Offset: 0x00363570
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_151(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_284);
			Class128 @class = this.class128_57;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_57 = class128_379;
			@class = this.class128_57;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600603B RID: 24635 RVA: 0x0003DE09 File Offset: 0x0003C009
		[CompilerGenerated]
		internal Class128 vmethod_152()
		{
			return this.class128_58;
		}

		// Token: 0x0600603C RID: 24636 RVA: 0x003653B4 File Offset: 0x003635B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_153(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_285);
			Class128 @class = this.class128_58;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_58 = class128_379;
			@class = this.class128_58;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600603D RID: 24637 RVA: 0x0003DE11 File Offset: 0x0003C011
		[CompilerGenerated]
		internal Class128 vmethod_154()
		{
			return this.class128_59;
		}

		// Token: 0x0600603E RID: 24638 RVA: 0x003653F8 File Offset: 0x003635F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_155(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_320);
			Class128 @class = this.class128_59;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_59 = class128_379;
			@class = this.class128_59;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600603F RID: 24639 RVA: 0x0003DE19 File Offset: 0x0003C019
		[CompilerGenerated]
		internal Class128 vmethod_156()
		{
			return this.class128_60;
		}

		// Token: 0x06006040 RID: 24640 RVA: 0x0003DE21 File Offset: 0x0003C021
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_157(Class128 class128_379)
		{
			this.class128_60 = class128_379;
		}

		// Token: 0x06006041 RID: 24641 RVA: 0x0003DE2A File Offset: 0x0003C02A
		[CompilerGenerated]
		internal Class128 vmethod_158()
		{
			return this.class128_61;
		}

		// Token: 0x06006042 RID: 24642 RVA: 0x0036543C File Offset: 0x0036363C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_159(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_287);
			Class128 @class = this.class128_61;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_61 = class128_379;
			@class = this.class128_61;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006043 RID: 24643 RVA: 0x0003DE32 File Offset: 0x0003C032
		[CompilerGenerated]
		internal Class128 vmethod_160()
		{
			return this.class128_62;
		}

		// Token: 0x06006044 RID: 24644 RVA: 0x00365480 File Offset: 0x00363680
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_161(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_288);
			Class128 @class = this.class128_62;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_62 = class128_379;
			@class = this.class128_62;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006045 RID: 24645 RVA: 0x0003DE3A File Offset: 0x0003C03A
		[CompilerGenerated]
		internal Class128 vmethod_162()
		{
			return this.class128_63;
		}

		// Token: 0x06006046 RID: 24646 RVA: 0x003654C4 File Offset: 0x003636C4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_163(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_289);
			Class128 @class = this.class128_63;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_63 = class128_379;
			@class = this.class128_63;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006047 RID: 24647 RVA: 0x0003DE42 File Offset: 0x0003C042
		[CompilerGenerated]
		internal Class128 vmethod_164()
		{
			return this.class128_64;
		}

		// Token: 0x06006048 RID: 24648 RVA: 0x00365508 File Offset: 0x00363708
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_165(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_290);
			Class128 @class = this.class128_64;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_64 = class128_379;
			@class = this.class128_64;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006049 RID: 24649 RVA: 0x0003DE4A File Offset: 0x0003C04A
		[CompilerGenerated]
		internal OpenFileDialog vmethod_166()
		{
			return this.openFileDialog_1;
		}

		// Token: 0x0600604A RID: 24650 RVA: 0x0003DE52 File Offset: 0x0003C052
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_167(OpenFileDialog openFileDialog_5)
		{
			this.openFileDialog_1 = openFileDialog_5;
		}

		// Token: 0x0600604B RID: 24651 RVA: 0x0003DE5B File Offset: 0x0003C05B
		[CompilerGenerated]
		internal SaveFileDialog vmethod_168()
		{
			return this.saveFileDialog_1;
		}

		// Token: 0x0600604C RID: 24652 RVA: 0x0003DE63 File Offset: 0x0003C063
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_169(SaveFileDialog saveFileDialog_3)
		{
			this.saveFileDialog_1 = saveFileDialog_3;
		}

		// Token: 0x0600604D RID: 24653 RVA: 0x0003DE6C File Offset: 0x0003C06C
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_170()
		{
			return this.toolStripSeparator_3;
		}

		// Token: 0x0600604E RID: 24654 RVA: 0x0003DE74 File Offset: 0x0003C074
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_171(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_3 = toolStripSeparator_40;
		}

		// Token: 0x0600604F RID: 24655 RVA: 0x0003DE7D File Offset: 0x0003C07D
		[CompilerGenerated]
		internal Class128 vmethod_172()
		{
			return this.class128_65;
		}

		// Token: 0x06006050 RID: 24656 RVA: 0x0036554C File Offset: 0x0036374C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_173(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_305);
			EventHandler value2 = new EventHandler(this.method_445);
			Class128 @class = this.class128_65;
			if (@class != null)
			{
				@class.MouseEnter -= value;
				@class.DropDownOpening -= value2;
			}
			this.class128_65 = class128_379;
			@class = this.class128_65;
			if (@class != null)
			{
				@class.MouseEnter += value;
				@class.DropDownOpening += value2;
			}
		}

		// Token: 0x06006051 RID: 24657 RVA: 0x0003DE85 File Offset: 0x0003C085
		[CompilerGenerated]
		internal Class128 vmethod_174()
		{
			return this.class128_66;
		}

		// Token: 0x06006052 RID: 24658 RVA: 0x003655AC File Offset: 0x003637AC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_175(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_294);
			Class128 @class = this.class128_66;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_66 = class128_379;
			@class = this.class128_66;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006053 RID: 24659 RVA: 0x0003DE8D File Offset: 0x0003C08D
		[CompilerGenerated]
		internal Class128 vmethod_176()
		{
			return this.class128_67;
		}

		// Token: 0x06006054 RID: 24660 RVA: 0x003655F0 File Offset: 0x003637F0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_177(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_291);
			Class128 @class = this.class128_67;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_67 = class128_379;
			@class = this.class128_67;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006055 RID: 24661 RVA: 0x0003DE95 File Offset: 0x0003C095
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_178()
		{
			return this.toolStripSeparator_4;
		}

		// Token: 0x06006056 RID: 24662 RVA: 0x0003DE9D File Offset: 0x0003C09D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_179(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_4 = toolStripSeparator_40;
		}

		// Token: 0x06006057 RID: 24663 RVA: 0x0003DEA6 File Offset: 0x0003C0A6
		[CompilerGenerated]
		internal Class128 vmethod_180()
		{
			return this.class128_68;
		}

		// Token: 0x06006058 RID: 24664 RVA: 0x00365634 File Offset: 0x00363834
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_181(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_293);
			Class128 @class = this.class128_68;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_68 = class128_379;
			@class = this.class128_68;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006059 RID: 24665 RVA: 0x0003DEAE File Offset: 0x0003C0AE
		[CompilerGenerated]
		internal Class128 vmethod_182()
		{
			return this.class128_69;
		}

		// Token: 0x0600605A RID: 24666 RVA: 0x00365678 File Offset: 0x00363878
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_183(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_381);
			Class128 @class = this.class128_69;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_69 = class128_379;
			@class = this.class128_69;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600605B RID: 24667 RVA: 0x0003DEB6 File Offset: 0x0003C0B6
		[CompilerGenerated]
		internal Class128 vmethod_184()
		{
			return this.class128_70;
		}

		// Token: 0x0600605C RID: 24668 RVA: 0x003656BC File Offset: 0x003638BC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_185(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_295);
			Class128 @class = this.class128_70;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_70 = class128_379;
			@class = this.class128_70;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600605D RID: 24669 RVA: 0x0003DEBE File Offset: 0x0003C0BE
		[CompilerGenerated]
		internal Class128 vmethod_186()
		{
			return this.class128_71;
		}

		// Token: 0x0600605E RID: 24670 RVA: 0x00365700 File Offset: 0x00363900
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_187(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_296);
			Class128 @class = this.class128_71;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_71 = class128_379;
			@class = this.class128_71;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600605F RID: 24671 RVA: 0x0003DEC6 File Offset: 0x0003C0C6
		[CompilerGenerated]
		internal Class128 vmethod_188()
		{
			return this.class128_72;
		}

		// Token: 0x06006060 RID: 24672 RVA: 0x00365744 File Offset: 0x00363944
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_189(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_297);
			Class128 @class = this.class128_72;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_72 = class128_379;
			@class = this.class128_72;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006061 RID: 24673 RVA: 0x0003DECE File Offset: 0x0003C0CE
		[CompilerGenerated]
		internal Class128 vmethod_190()
		{
			return this.class128_73;
		}

		// Token: 0x06006062 RID: 24674 RVA: 0x00365788 File Offset: 0x00363988
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_191(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_298);
			Class128 @class = this.class128_73;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_73 = class128_379;
			@class = this.class128_73;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006063 RID: 24675 RVA: 0x0003DED6 File Offset: 0x0003C0D6
		[CompilerGenerated]
		internal Class128 vmethod_192()
		{
			return this.class128_74;
		}

		// Token: 0x06006064 RID: 24676 RVA: 0x0003DEDE File Offset: 0x0003C0DE
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_193(Class128 class128_379)
		{
			this.class128_74 = class128_379;
		}

		// Token: 0x06006065 RID: 24677 RVA: 0x0003DEE7 File Offset: 0x0003C0E7
		[CompilerGenerated]
		internal Class128 vmethod_194()
		{
			return this.class128_75;
		}

		// Token: 0x06006066 RID: 24678 RVA: 0x003657CC File Offset: 0x003639CC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_195(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_300);
			Class128 @class = this.class128_75;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_75 = class128_379;
			@class = this.class128_75;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006067 RID: 24679 RVA: 0x0003DEEF File Offset: 0x0003C0EF
		[CompilerGenerated]
		internal Class128 vmethod_196()
		{
			return this.class128_76;
		}

		// Token: 0x06006068 RID: 24680 RVA: 0x00365810 File Offset: 0x00363A10
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_197(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_301);
			Class128 @class = this.class128_76;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_76 = class128_379;
			@class = this.class128_76;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006069 RID: 24681 RVA: 0x0003DEF7 File Offset: 0x0003C0F7
		[CompilerGenerated]
		internal Class128 vmethod_198()
		{
			return this.class128_77;
		}

		// Token: 0x0600606A RID: 24682 RVA: 0x00365854 File Offset: 0x00363A54
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_199(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_302);
			Class128 @class = this.class128_77;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_77 = class128_379;
			@class = this.class128_77;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600606B RID: 24683 RVA: 0x0003DEFF File Offset: 0x0003C0FF
		[CompilerGenerated]
		internal Class113 vmethod_200()
		{
			return this.class113_2;
		}

		// Token: 0x0600606C RID: 24684 RVA: 0x0003DF07 File Offset: 0x0003C107
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_201(Class113 class113_9)
		{
			this.class113_2 = class113_9;
		}

		// Token: 0x0600606D RID: 24685 RVA: 0x0003DF10 File Offset: 0x0003C110
		[CompilerGenerated]
		internal Class128 vmethod_202()
		{
			return this.class128_78;
		}

		// Token: 0x0600606E RID: 24686 RVA: 0x00365898 File Offset: 0x00363A98
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_203(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_303);
			Class128 @class = this.class128_78;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_78 = class128_379;
			@class = this.class128_78;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600606F RID: 24687 RVA: 0x0003DF18 File Offset: 0x0003C118
		[CompilerGenerated]
		internal Class128 vmethod_204()
		{
			return this.class128_79;
		}

		// Token: 0x06006070 RID: 24688 RVA: 0x0003DF20 File Offset: 0x0003C120
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_205(Class128 class128_379)
		{
			this.class128_79 = class128_379;
		}

		// Token: 0x06006071 RID: 24689 RVA: 0x0003DF29 File Offset: 0x0003C129
		[CompilerGenerated]
		internal Class128 vmethod_206()
		{
			return this.class128_80;
		}

		// Token: 0x06006072 RID: 24690 RVA: 0x003658DC File Offset: 0x00363ADC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_207(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_304);
			Class128 @class = this.class128_80;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_80 = class128_379;
			@class = this.class128_80;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006073 RID: 24691 RVA: 0x0003DF31 File Offset: 0x0003C131
		[CompilerGenerated]
		internal Class128 vmethod_208()
		{
			return this.class128_81;
		}

		// Token: 0x06006074 RID: 24692 RVA: 0x00365920 File Offset: 0x00363B20
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_209(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_306);
			Class128 @class = this.class128_81;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_81 = class128_379;
			@class = this.class128_81;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006075 RID: 24693 RVA: 0x0003DF39 File Offset: 0x0003C139
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_210()
		{
			return this.toolStripSeparator_5;
		}

		// Token: 0x06006076 RID: 24694 RVA: 0x0003DF41 File Offset: 0x0003C141
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_211(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_5 = toolStripSeparator_40;
		}

		// Token: 0x06006077 RID: 24695 RVA: 0x0003DF4A File Offset: 0x0003C14A
		[CompilerGenerated]
		internal Class128 vmethod_212()
		{
			return this.class128_82;
		}

		// Token: 0x06006078 RID: 24696 RVA: 0x00365964 File Offset: 0x00363B64
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_213(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_309);
			Class128 @class = this.class128_82;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_82 = class128_379;
			@class = this.class128_82;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006079 RID: 24697 RVA: 0x0003DF52 File Offset: 0x0003C152
		[CompilerGenerated]
		internal Class128 vmethod_214()
		{
			return this.class128_83;
		}

		// Token: 0x0600607A RID: 24698 RVA: 0x003659A8 File Offset: 0x00363BA8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_215(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_310);
			Class128 @class = this.class128_83;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_83 = class128_379;
			@class = this.class128_83;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600607B RID: 24699 RVA: 0x0003DF5A File Offset: 0x0003C15A
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_216()
		{
			return this.toolStripSeparator_6;
		}

		// Token: 0x0600607C RID: 24700 RVA: 0x0003DF62 File Offset: 0x0003C162
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_217(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_6 = toolStripSeparator_40;
		}

		// Token: 0x0600607D RID: 24701 RVA: 0x0003DF6B File Offset: 0x0003C16B
		[CompilerGenerated]
		internal Class128 vmethod_218()
		{
			return this.class128_84;
		}

		// Token: 0x0600607E RID: 24702 RVA: 0x003659EC File Offset: 0x00363BEC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_219(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_317);
			Class128 @class = this.class128_84;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_84 = class128_379;
			@class = this.class128_84;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600607F RID: 24703 RVA: 0x0003DF73 File Offset: 0x0003C173
		[CompilerGenerated]
		internal Class128 vmethod_220()
		{
			return this.class128_85;
		}

		// Token: 0x06006080 RID: 24704 RVA: 0x00365A30 File Offset: 0x00363C30
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_221(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_318);
			Class128 @class = this.class128_85;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_85 = class128_379;
			@class = this.class128_85;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006081 RID: 24705 RVA: 0x0003DF7B File Offset: 0x0003C17B
		[CompilerGenerated]
		internal Class128 vmethod_222()
		{
			return this.class128_86;
		}

		// Token: 0x06006082 RID: 24706 RVA: 0x00365A74 File Offset: 0x00363C74
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_223(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_319);
			Class128 @class = this.class128_86;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_86 = class128_379;
			@class = this.class128_86;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006083 RID: 24707 RVA: 0x0003DF83 File Offset: 0x0003C183
		[CompilerGenerated]
		internal ToolStripButton vmethod_224()
		{
			return this.toolStripButton_2;
		}

		// Token: 0x06006084 RID: 24708 RVA: 0x00365AB8 File Offset: 0x00363CB8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_225(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_321);
			ToolStripButton toolStripButton = this.toolStripButton_2;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_2 = toolStripButton_23;
			toolStripButton = this.toolStripButton_2;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x06006085 RID: 24709 RVA: 0x0003DF8B File Offset: 0x0003C18B
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_226()
		{
			return this.toolStripSeparator_7;
		}

		// Token: 0x06006086 RID: 24710 RVA: 0x0003DF93 File Offset: 0x0003C193
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_227(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_7 = toolStripSeparator_40;
		}

		// Token: 0x06006087 RID: 24711 RVA: 0x0003DF9C File Offset: 0x0003C19C
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_228()
		{
			return this.toolStripSeparator_8;
		}

		// Token: 0x06006088 RID: 24712 RVA: 0x0003DFA4 File Offset: 0x0003C1A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_229(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_8 = toolStripSeparator_40;
		}

		// Token: 0x06006089 RID: 24713 RVA: 0x0003DFAD File Offset: 0x0003C1AD
		[CompilerGenerated]
		internal Class128 vmethod_230()
		{
			return this.class128_87;
		}

		// Token: 0x0600608A RID: 24714 RVA: 0x0003DFB5 File Offset: 0x0003C1B5
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_231(Class128 class128_379)
		{
			this.class128_87 = class128_379;
		}

		// Token: 0x0600608B RID: 24715 RVA: 0x0003DFBE File Offset: 0x0003C1BE
		[CompilerGenerated]
		internal Class128 vmethod_232()
		{
			return this.class128_88;
		}

		// Token: 0x0600608C RID: 24716 RVA: 0x00365AFC File Offset: 0x00363CFC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_233(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_322);
			Class128 @class = this.class128_88;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_88 = class128_379;
			@class = this.class128_88;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600608D RID: 24717 RVA: 0x0003DFC6 File Offset: 0x0003C1C6
		[CompilerGenerated]
		internal SaveFileDialog vmethod_234()
		{
			return this.saveFileDialog_2;
		}

		// Token: 0x0600608E RID: 24718 RVA: 0x0003DFCE File Offset: 0x0003C1CE
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_235(SaveFileDialog saveFileDialog_3)
		{
			this.saveFileDialog_2 = saveFileDialog_3;
		}

		// Token: 0x0600608F RID: 24719 RVA: 0x0003DFD7 File Offset: 0x0003C1D7
		[CompilerGenerated]
		internal Class128 vmethod_236()
		{
			return this.class128_89;
		}

		// Token: 0x06006090 RID: 24720 RVA: 0x00365B40 File Offset: 0x00363D40
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_237(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_323);
			Class128 @class = this.class128_89;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_89 = class128_379;
			@class = this.class128_89;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006091 RID: 24721 RVA: 0x0003DFDF File Offset: 0x0003C1DF
		[CompilerGenerated]
		internal OpenFileDialog vmethod_238()
		{
			return this.openFileDialog_2;
		}

		// Token: 0x06006092 RID: 24722 RVA: 0x0003DFE7 File Offset: 0x0003C1E7
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_239(OpenFileDialog openFileDialog_5)
		{
			this.openFileDialog_2 = openFileDialog_5;
		}

		// Token: 0x06006093 RID: 24723 RVA: 0x0003DFF0 File Offset: 0x0003C1F0
		[CompilerGenerated]
		internal Class128 vmethod_240()
		{
			return this.class128_90;
		}

		// Token: 0x06006094 RID: 24724 RVA: 0x0003DFF8 File Offset: 0x0003C1F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_241(Class128 class128_379)
		{
			this.class128_90 = class128_379;
		}

		// Token: 0x06006095 RID: 24725 RVA: 0x0003E001 File Offset: 0x0003C201
		[CompilerGenerated]
		internal Class128 vmethod_242()
		{
			return this.class128_91;
		}

		// Token: 0x06006096 RID: 24726 RVA: 0x00365B84 File Offset: 0x00363D84
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_243(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_324);
			Class128 @class = this.class128_91;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_91 = class128_379;
			@class = this.class128_91;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006097 RID: 24727 RVA: 0x0003E009 File Offset: 0x0003C209
		[CompilerGenerated]
		internal Class128 vmethod_244()
		{
			return this.class128_92;
		}

		// Token: 0x06006098 RID: 24728 RVA: 0x00365BC8 File Offset: 0x00363DC8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_245(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_325);
			Class128 @class = this.class128_92;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_92 = class128_379;
			@class = this.class128_92;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006099 RID: 24729 RVA: 0x0003E011 File Offset: 0x0003C211
		[CompilerGenerated]
		internal Control9 vmethod_246()
		{
			return this.control9_0;
		}

		// Token: 0x0600609A RID: 24730 RVA: 0x00365C0C File Offset: 0x00363E0C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_247(Control9 control9_1)
		{
			EventHandler value = new EventHandler(this.method_332);
			Control9 control = this.control9_0;
			if (control != null)
			{
				control.Click -= value;
			}
			this.control9_0 = control9_1;
			control = this.control9_0;
			if (control != null)
			{
				control.Click += value;
			}
		}

		// Token: 0x0600609B RID: 24731 RVA: 0x0003E019 File Offset: 0x0003C219
		[CompilerGenerated]
		internal Class128 vmethod_248()
		{
			return this.class128_93;
		}

		// Token: 0x0600609C RID: 24732 RVA: 0x0003E021 File Offset: 0x0003C221
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_249(Class128 class128_379)
		{
			this.class128_93 = class128_379;
		}

		// Token: 0x0600609D RID: 24733 RVA: 0x0003E02A File Offset: 0x0003C22A
		[CompilerGenerated]
		internal Class128 vmethod_250()
		{
			return this.class128_94;
		}

		// Token: 0x0600609E RID: 24734 RVA: 0x00365C50 File Offset: 0x00363E50
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_251(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_440);
			Class128 @class = this.class128_94;
			if (@class != null)
			{
				@class.DropDownOpening -= value;
			}
			this.class128_94 = class128_379;
			@class = this.class128_94;
			if (@class != null)
			{
				@class.DropDownOpening += value;
			}
		}

		// Token: 0x0600609F RID: 24735 RVA: 0x0003E032 File Offset: 0x0003C232
		[CompilerGenerated]
		internal Class128 vmethod_252()
		{
			return this.class128_95;
		}

		// Token: 0x060060A0 RID: 24736 RVA: 0x00365C94 File Offset: 0x00363E94
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_253(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_334);
			Class128 @class = this.class128_95;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_95 = class128_379;
			@class = this.class128_95;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060A1 RID: 24737 RVA: 0x0003E03A File Offset: 0x0003C23A
		[CompilerGenerated]
		internal Class128 vmethod_254()
		{
			return this.class128_96;
		}

		// Token: 0x060060A2 RID: 24738 RVA: 0x00365CD8 File Offset: 0x00363ED8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_255(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_335);
			Class128 @class = this.class128_96;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_96 = class128_379;
			@class = this.class128_96;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060A3 RID: 24739 RVA: 0x0003E042 File Offset: 0x0003C242
		[CompilerGenerated]
		internal Class128 vmethod_256()
		{
			return this.class128_97;
		}

		// Token: 0x060060A4 RID: 24740 RVA: 0x00365D1C File Offset: 0x00363F1C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_257(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_347);
			Class128 @class = this.class128_97;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_97 = class128_379;
			@class = this.class128_97;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060A5 RID: 24741 RVA: 0x0003E04A File Offset: 0x0003C24A
		[CompilerGenerated]
		internal Class128 vmethod_258()
		{
			return this.class128_98;
		}

		// Token: 0x060060A6 RID: 24742 RVA: 0x00365D60 File Offset: 0x00363F60
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_259(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_338);
			Class128 @class = this.class128_98;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_98 = class128_379;
			@class = this.class128_98;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060A7 RID: 24743 RVA: 0x0003E052 File Offset: 0x0003C252
		[CompilerGenerated]
		internal Class128 vmethod_260()
		{
			return this.class128_99;
		}

		// Token: 0x060060A8 RID: 24744 RVA: 0x00365DA4 File Offset: 0x00363FA4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_261(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_348);
			Class128 @class = this.class128_99;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_99 = class128_379;
			@class = this.class128_99;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060A9 RID: 24745 RVA: 0x0003E05A File Offset: 0x0003C25A
		[CompilerGenerated]
		internal Class128 vmethod_262()
		{
			return this.class128_100;
		}

		// Token: 0x060060AA RID: 24746 RVA: 0x00365DE8 File Offset: 0x00363FE8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_263(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_337);
			Class128 @class = this.class128_100;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_100 = class128_379;
			@class = this.class128_100;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060AB RID: 24747 RVA: 0x0003E062 File Offset: 0x0003C262
		[CompilerGenerated]
		internal Class128 vmethod_264()
		{
			return this.class128_101;
		}

		// Token: 0x060060AC RID: 24748 RVA: 0x00365E2C File Offset: 0x0036402C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_265(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_336);
			Class128 @class = this.class128_101;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_101 = class128_379;
			@class = this.class128_101;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060AD RID: 24749 RVA: 0x0003E06A File Offset: 0x0003C26A
		[CompilerGenerated]
		internal Class128 vmethod_266()
		{
			return this.class128_102;
		}

		// Token: 0x060060AE RID: 24750 RVA: 0x00365E70 File Offset: 0x00364070
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_267(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_339);
			Class128 @class = this.class128_102;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_102 = class128_379;
			@class = this.class128_102;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060AF RID: 24751 RVA: 0x0003E072 File Offset: 0x0003C272
		[CompilerGenerated]
		internal Class128 vmethod_268()
		{
			return this.class128_103;
		}

		// Token: 0x060060B0 RID: 24752 RVA: 0x0003E07A File Offset: 0x0003C27A
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_269(Class128 class128_379)
		{
			this.class128_103 = class128_379;
		}

		// Token: 0x060060B1 RID: 24753 RVA: 0x0003E083 File Offset: 0x0003C283
		[CompilerGenerated]
		internal Class128 vmethod_270()
		{
			return this.class128_104;
		}

		// Token: 0x060060B2 RID: 24754 RVA: 0x00365EB4 File Offset: 0x003640B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_271(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_341);
			Class128 @class = this.class128_104;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_104 = class128_379;
			@class = this.class128_104;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060B3 RID: 24755 RVA: 0x0003E08B File Offset: 0x0003C28B
		[CompilerGenerated]
		internal Class128 vmethod_272()
		{
			return this.class128_105;
		}

		// Token: 0x060060B4 RID: 24756 RVA: 0x00365EF8 File Offset: 0x003640F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_273(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_340);
			Class128 @class = this.class128_105;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_105 = class128_379;
			@class = this.class128_105;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060B5 RID: 24757 RVA: 0x0003E093 File Offset: 0x0003C293
		[CompilerGenerated]
		internal Class128 vmethod_274()
		{
			return this.class128_106;
		}

		// Token: 0x060060B6 RID: 24758 RVA: 0x00365F3C File Offset: 0x0036413C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_275(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_342);
			Class128 @class = this.class128_106;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_106 = class128_379;
			@class = this.class128_106;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060B7 RID: 24759 RVA: 0x0003E09B File Offset: 0x0003C29B
		[CompilerGenerated]
		internal Class128 vmethod_276()
		{
			return this.class128_107;
		}

		// Token: 0x060060B8 RID: 24760 RVA: 0x00365F80 File Offset: 0x00364180
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_277(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_395);
			Class128 @class = this.class128_107;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_107 = class128_379;
			@class = this.class128_107;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060B9 RID: 24761 RVA: 0x0003E0A3 File Offset: 0x0003C2A3
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_278()
		{
			return this.toolStripSeparator_9;
		}

		// Token: 0x060060BA RID: 24762 RVA: 0x0003E0AB File Offset: 0x0003C2AB
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_279(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_9 = toolStripSeparator_40;
		}

		// Token: 0x060060BB RID: 24763 RVA: 0x0003E0B4 File Offset: 0x0003C2B4
		[CompilerGenerated]
		internal Class128 vmethod_280()
		{
			return this.class128_108;
		}

		// Token: 0x060060BC RID: 24764 RVA: 0x00365FC4 File Offset: 0x003641C4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_281(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_343);
			Class128 @class = this.class128_108;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_108 = class128_379;
			@class = this.class128_108;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060BD RID: 24765 RVA: 0x0003E0BC File Offset: 0x0003C2BC
		[CompilerGenerated]
		internal Class128 vmethod_282()
		{
			return this.class128_109;
		}

		// Token: 0x060060BE RID: 24766 RVA: 0x00366008 File Offset: 0x00364208
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_283(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_344);
			Class128 @class = this.class128_109;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_109 = class128_379;
			@class = this.class128_109;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060BF RID: 24767 RVA: 0x0003E0C4 File Offset: 0x0003C2C4
		[CompilerGenerated]
		internal Class128 vmethod_284()
		{
			return this.class128_110;
		}

		// Token: 0x060060C0 RID: 24768 RVA: 0x0036604C File Offset: 0x0036424C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_285(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_346);
			Class128 @class = this.class128_110;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_110 = class128_379;
			@class = this.class128_110;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060C1 RID: 24769 RVA: 0x0003E0CC File Offset: 0x0003C2CC
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_286()
		{
			return this.toolStripSeparator_10;
		}

		// Token: 0x060060C2 RID: 24770 RVA: 0x0003E0D4 File Offset: 0x0003C2D4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_287(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_10 = toolStripSeparator_40;
		}

		// Token: 0x060060C3 RID: 24771 RVA: 0x0003E0DD File Offset: 0x0003C2DD
		[CompilerGenerated]
		internal Class128 vmethod_288()
		{
			return this.class128_111;
		}

		// Token: 0x060060C4 RID: 24772 RVA: 0x00366090 File Offset: 0x00364290
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_289(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_349);
			Class128 @class = this.class128_111;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_111 = class128_379;
			@class = this.class128_111;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060C5 RID: 24773 RVA: 0x0003E0E5 File Offset: 0x0003C2E5
		[CompilerGenerated]
		internal Class128 vmethod_290()
		{
			return this.class128_112;
		}

		// Token: 0x060060C6 RID: 24774 RVA: 0x003660D4 File Offset: 0x003642D4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_291(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_350);
			Class128 @class = this.class128_112;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_112 = class128_379;
			@class = this.class128_112;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060C7 RID: 24775 RVA: 0x0003E0ED File Offset: 0x0003C2ED
		[CompilerGenerated]
		internal Class128 vmethod_292()
		{
			return this.class128_113;
		}

		// Token: 0x060060C8 RID: 24776 RVA: 0x0003E0F5 File Offset: 0x0003C2F5
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_293(Class128 class128_379)
		{
			this.class128_113 = class128_379;
		}

		// Token: 0x060060C9 RID: 24777 RVA: 0x0003E0FE File Offset: 0x0003C2FE
		[CompilerGenerated]
		internal Class128 vmethod_294()
		{
			return this.class128_114;
		}

		// Token: 0x060060CA RID: 24778 RVA: 0x00366118 File Offset: 0x00364318
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_295(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_351);
			Class128 @class = this.class128_114;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_114 = class128_379;
			@class = this.class128_114;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060CB RID: 24779 RVA: 0x0003E106 File Offset: 0x0003C306
		[CompilerGenerated]
		internal Class128 vmethod_296()
		{
			return this.class128_115;
		}

		// Token: 0x060060CC RID: 24780 RVA: 0x0036615C File Offset: 0x0036435C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_297(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_352);
			Class128 @class = this.class128_115;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_115 = class128_379;
			@class = this.class128_115;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060CD RID: 24781 RVA: 0x0003E10E File Offset: 0x0003C30E
		[CompilerGenerated]
		internal Class128 vmethod_298()
		{
			return this.class128_116;
		}

		// Token: 0x060060CE RID: 24782 RVA: 0x0003E116 File Offset: 0x0003C316
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_299(Class128 class128_379)
		{
			this.class128_116 = class128_379;
		}

		// Token: 0x060060CF RID: 24783 RVA: 0x0003E11F File Offset: 0x0003C31F
		[CompilerGenerated]
		internal Class128 vmethod_300()
		{
			return this.class128_117;
		}

		// Token: 0x060060D0 RID: 24784 RVA: 0x003661A0 File Offset: 0x003643A0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_301(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_365);
			Class128 @class = this.class128_117;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_117 = class128_379;
			@class = this.class128_117;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060D1 RID: 24785 RVA: 0x0003E127 File Offset: 0x0003C327
		[CompilerGenerated]
		internal Class128 vmethod_302()
		{
			return this.class128_118;
		}

		// Token: 0x060060D2 RID: 24786 RVA: 0x003661E4 File Offset: 0x003643E4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_303(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_366);
			Class128 @class = this.class128_118;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_118 = class128_379;
			@class = this.class128_118;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060D3 RID: 24787 RVA: 0x0003E12F File Offset: 0x0003C32F
		[CompilerGenerated]
		internal Class128 vmethod_304()
		{
			return this.class128_119;
		}

		// Token: 0x060060D4 RID: 24788 RVA: 0x00366228 File Offset: 0x00364428
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_305(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_367);
			Class128 @class = this.class128_119;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_119 = class128_379;
			@class = this.class128_119;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060D5 RID: 24789 RVA: 0x0003E137 File Offset: 0x0003C337
		[CompilerGenerated]
		internal Class128 vmethod_306()
		{
			return this.class128_120;
		}

		// Token: 0x060060D6 RID: 24790 RVA: 0x0036626C File Offset: 0x0036446C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_307(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_95);
			Class128 @class = this.class128_120;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_120 = class128_379;
			@class = this.class128_120;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060D7 RID: 24791 RVA: 0x0003E13F File Offset: 0x0003C33F
		[CompilerGenerated]
		internal Class128 vmethod_308()
		{
			return this.class128_121;
		}

		// Token: 0x060060D8 RID: 24792 RVA: 0x003662B0 File Offset: 0x003644B0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_309(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_368);
			Class128 @class = this.class128_121;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_121 = class128_379;
			@class = this.class128_121;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060D9 RID: 24793 RVA: 0x0003E147 File Offset: 0x0003C347
		[CompilerGenerated]
		internal Class128 vmethod_310()
		{
			return this.class128_122;
		}

		// Token: 0x060060DA RID: 24794 RVA: 0x003662F4 File Offset: 0x003644F4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_311(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_370);
			Class128 @class = this.class128_122;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_122 = class128_379;
			@class = this.class128_122;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060DB RID: 24795 RVA: 0x0003E14F File Offset: 0x0003C34F
		[CompilerGenerated]
		internal Class128 vmethod_312()
		{
			return this.class128_123;
		}

		// Token: 0x060060DC RID: 24796 RVA: 0x00366338 File Offset: 0x00364538
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_313(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_371);
			Class128 @class = this.class128_123;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_123 = class128_379;
			@class = this.class128_123;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060DD RID: 24797 RVA: 0x0003E157 File Offset: 0x0003C357
		[CompilerGenerated]
		internal Class128 vmethod_314()
		{
			return this.class128_124;
		}

		// Token: 0x060060DE RID: 24798 RVA: 0x0036637C File Offset: 0x0036457C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_315(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_362);
			Class128 @class = this.class128_124;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_124 = class128_379;
			@class = this.class128_124;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060DF RID: 24799 RVA: 0x0003E15F File Offset: 0x0003C35F
		[CompilerGenerated]
		internal Class128 vmethod_316()
		{
			return this.class128_125;
		}

		// Token: 0x060060E0 RID: 24800 RVA: 0x003663C0 File Offset: 0x003645C0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_317(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_363);
			Class128 @class = this.class128_125;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_125 = class128_379;
			@class = this.class128_125;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060E1 RID: 24801 RVA: 0x0003E167 File Offset: 0x0003C367
		[CompilerGenerated]
		internal Class128 vmethod_318()
		{
			return this.class128_126;
		}

		// Token: 0x060060E2 RID: 24802 RVA: 0x00366404 File Offset: 0x00364604
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_319(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_364);
			Class128 @class = this.class128_126;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_126 = class128_379;
			@class = this.class128_126;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060E3 RID: 24803 RVA: 0x0003E16F File Offset: 0x0003C36F
		[CompilerGenerated]
		internal Class128 vmethod_320()
		{
			return this.class128_127;
		}

		// Token: 0x060060E4 RID: 24804 RVA: 0x00366448 File Offset: 0x00364648
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_321(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_369);
			Class128 @class = this.class128_127;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_127 = class128_379;
			@class = this.class128_127;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060E5 RID: 24805 RVA: 0x0003E177 File Offset: 0x0003C377
		[CompilerGenerated]
		internal Class128 vmethod_322()
		{
			return this.class128_128;
		}

		// Token: 0x060060E6 RID: 24806 RVA: 0x0036648C File Offset: 0x0036468C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_323(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_357);
			Class128 @class = this.class128_128;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_128 = class128_379;
			@class = this.class128_128;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060E7 RID: 24807 RVA: 0x0003E17F File Offset: 0x0003C37F
		[CompilerGenerated]
		internal Class128 vmethod_324()
		{
			return this.class128_129;
		}

		// Token: 0x060060E8 RID: 24808 RVA: 0x003664D0 File Offset: 0x003646D0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_325(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_355);
			Class128 @class = this.class128_129;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_129 = class128_379;
			@class = this.class128_129;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060E9 RID: 24809 RVA: 0x0003E187 File Offset: 0x0003C387
		[CompilerGenerated]
		internal Class128 vmethod_326()
		{
			return this.class128_130;
		}

		// Token: 0x060060EA RID: 24810 RVA: 0x00366514 File Offset: 0x00364714
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_327(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_372);
			Class128 @class = this.class128_130;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_130 = class128_379;
			@class = this.class128_130;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060EB RID: 24811 RVA: 0x0003E18F File Offset: 0x0003C38F
		[CompilerGenerated]
		internal Class128 vmethod_328()
		{
			return this.class128_131;
		}

		// Token: 0x060060EC RID: 24812 RVA: 0x0003E197 File Offset: 0x0003C397
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_329(Class128 class128_379)
		{
			this.class128_131 = class128_379;
		}

		// Token: 0x060060ED RID: 24813 RVA: 0x0003E1A0 File Offset: 0x0003C3A0
		[CompilerGenerated]
		internal Class128 vmethod_330()
		{
			return this.class128_132;
		}

		// Token: 0x060060EE RID: 24814 RVA: 0x00366558 File Offset: 0x00364758
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_331(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_358);
			Class128 @class = this.class128_132;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_132 = class128_379;
			@class = this.class128_132;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060EF RID: 24815 RVA: 0x0003E1A8 File Offset: 0x0003C3A8
		[CompilerGenerated]
		internal Class128 vmethod_332()
		{
			return this.class128_133;
		}

		// Token: 0x060060F0 RID: 24816 RVA: 0x0036659C File Offset: 0x0036479C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_333(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_373);
			Class128 @class = this.class128_133;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_133 = class128_379;
			@class = this.class128_133;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060F1 RID: 24817 RVA: 0x0003E1B0 File Offset: 0x0003C3B0
		[CompilerGenerated]
		internal Class128 vmethod_334()
		{
			return this.class128_134;
		}

		// Token: 0x060060F2 RID: 24818 RVA: 0x003665E0 File Offset: 0x003647E0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_335(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_374);
			Class128 @class = this.class128_134;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_134 = class128_379;
			@class = this.class128_134;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060F3 RID: 24819 RVA: 0x0003E1B8 File Offset: 0x0003C3B8
		[CompilerGenerated]
		internal Class128 vmethod_336()
		{
			return this.class128_135;
		}

		// Token: 0x060060F4 RID: 24820 RVA: 0x00366624 File Offset: 0x00364824
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_337(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_375);
			Class128 @class = this.class128_135;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_135 = class128_379;
			@class = this.class128_135;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060F5 RID: 24821 RVA: 0x0003E1C0 File Offset: 0x0003C3C0
		[CompilerGenerated]
		internal Class128 vmethod_338()
		{
			return this.class128_136;
		}

		// Token: 0x060060F6 RID: 24822 RVA: 0x00366668 File Offset: 0x00364868
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_339(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_376);
			Class128 @class = this.class128_136;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_136 = class128_379;
			@class = this.class128_136;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060F7 RID: 24823 RVA: 0x0003E1C8 File Offset: 0x0003C3C8
		[CompilerGenerated]
		internal Class128 vmethod_340()
		{
			return this.class128_137;
		}

		// Token: 0x060060F8 RID: 24824 RVA: 0x003666AC File Offset: 0x003648AC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_341(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_377);
			Class128 @class = this.class128_137;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_137 = class128_379;
			@class = this.class128_137;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060F9 RID: 24825 RVA: 0x0003E1D0 File Offset: 0x0003C3D0
		[CompilerGenerated]
		internal Class128 vmethod_342()
		{
			return this.class128_138;
		}

		// Token: 0x060060FA RID: 24826 RVA: 0x003666F0 File Offset: 0x003648F0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_343(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_378);
			Class128 @class = this.class128_138;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_138 = class128_379;
			@class = this.class128_138;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060FB RID: 24827 RVA: 0x0003E1D8 File Offset: 0x0003C3D8
		[CompilerGenerated]
		internal Class128 vmethod_344()
		{
			return this.class128_139;
		}

		// Token: 0x060060FC RID: 24828 RVA: 0x00366734 File Offset: 0x00364934
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_345(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_379);
			Class128 @class = this.class128_139;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_139 = class128_379;
			@class = this.class128_139;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060FD RID: 24829 RVA: 0x0003E1E0 File Offset: 0x0003C3E0
		[CompilerGenerated]
		internal Class128 vmethod_346()
		{
			return this.class128_140;
		}

		// Token: 0x060060FE RID: 24830 RVA: 0x00366778 File Offset: 0x00364978
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_347(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_380);
			Class128 @class = this.class128_140;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_140 = class128_379;
			@class = this.class128_140;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060060FF RID: 24831 RVA: 0x0003E1E8 File Offset: 0x0003C3E8
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_348()
		{
			return this.toolStripSeparator_11;
		}

		// Token: 0x06006100 RID: 24832 RVA: 0x0003E1F0 File Offset: 0x0003C3F0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_349(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_11 = toolStripSeparator_40;
		}

		// Token: 0x06006101 RID: 24833 RVA: 0x0003E1F9 File Offset: 0x0003C3F9
		[CompilerGenerated]
		internal Class128 vmethod_350()
		{
			return this.class128_141;
		}

		// Token: 0x06006102 RID: 24834 RVA: 0x003667BC File Offset: 0x003649BC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_351(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_382);
			Class128 @class = this.class128_141;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_141 = class128_379;
			@class = this.class128_141;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006103 RID: 24835 RVA: 0x0003E201 File Offset: 0x0003C401
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_352()
		{
			return this.toolStripSeparator_12;
		}

		// Token: 0x06006104 RID: 24836 RVA: 0x0003E209 File Offset: 0x0003C409
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_353(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_12 = toolStripSeparator_40;
		}

		// Token: 0x06006105 RID: 24837 RVA: 0x0003E212 File Offset: 0x0003C412
		[CompilerGenerated]
		internal Class128 vmethod_354()
		{
			return this.class128_142;
		}

		// Token: 0x06006106 RID: 24838 RVA: 0x00366800 File Offset: 0x00364A00
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_355(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_383);
			Class128 @class = this.class128_142;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_142 = class128_379;
			@class = this.class128_142;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006107 RID: 24839 RVA: 0x0003E21A File Offset: 0x0003C41A
		[CompilerGenerated]
		internal Class128 vmethod_356()
		{
			return this.class128_143;
		}

		// Token: 0x06006108 RID: 24840 RVA: 0x00366844 File Offset: 0x00364A44
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_357(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_384);
			Class128 @class = this.class128_143;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_143 = class128_379;
			@class = this.class128_143;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006109 RID: 24841 RVA: 0x0003E222 File Offset: 0x0003C422
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_358()
		{
			return this.toolStripSeparator_13;
		}

		// Token: 0x0600610A RID: 24842 RVA: 0x0003E22A File Offset: 0x0003C42A
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_359(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_13 = toolStripSeparator_40;
		}

		// Token: 0x0600610B RID: 24843 RVA: 0x0003E233 File Offset: 0x0003C433
		[CompilerGenerated]
		internal Class128 vmethod_360()
		{
			return this.class128_144;
		}

		// Token: 0x0600610C RID: 24844 RVA: 0x00366888 File Offset: 0x00364A88
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_361(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_387);
			Class128 @class = this.class128_144;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_144 = class128_379;
			@class = this.class128_144;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600610D RID: 24845 RVA: 0x0003E23B File Offset: 0x0003C43B
		[CompilerGenerated]
		internal Class128 vmethod_362()
		{
			return this.class128_145;
		}

		// Token: 0x0600610E RID: 24846 RVA: 0x003668CC File Offset: 0x00364ACC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_363(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_388);
			Class128 @class = this.class128_145;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_145 = class128_379;
			@class = this.class128_145;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600610F RID: 24847 RVA: 0x0003E243 File Offset: 0x0003C443
		[CompilerGenerated]
		internal Class128 vmethod_364()
		{
			return this.class128_146;
		}

		// Token: 0x06006110 RID: 24848 RVA: 0x00366910 File Offset: 0x00364B10
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_365(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_389);
			Class128 @class = this.class128_146;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_146 = class128_379;
			@class = this.class128_146;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006111 RID: 24849 RVA: 0x0003E24B File Offset: 0x0003C44B
		[CompilerGenerated]
		internal Class128 vmethod_366()
		{
			return this.class128_147;
		}

		// Token: 0x06006112 RID: 24850 RVA: 0x0003E253 File Offset: 0x0003C453
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_367(Class128 class128_379)
		{
			this.class128_147 = class128_379;
		}

		// Token: 0x06006113 RID: 24851 RVA: 0x0003E25C File Offset: 0x0003C45C
		[CompilerGenerated]
		internal Class128 vmethod_368()
		{
			return this.class128_148;
		}

		// Token: 0x06006114 RID: 24852 RVA: 0x00366954 File Offset: 0x00364B54
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_369(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_390);
			Class128 @class = this.class128_148;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_148 = class128_379;
			@class = this.class128_148;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006115 RID: 24853 RVA: 0x0003E264 File Offset: 0x0003C464
		[CompilerGenerated]
		internal Class128 vmethod_370()
		{
			return this.class128_149;
		}

		// Token: 0x06006116 RID: 24854 RVA: 0x00366998 File Offset: 0x00364B98
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_371(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_391);
			Class128 @class = this.class128_149;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_149 = class128_379;
			@class = this.class128_149;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006117 RID: 24855 RVA: 0x0003E26C File Offset: 0x0003C46C
		[CompilerGenerated]
		internal Class128 vmethod_372()
		{
			return this.class128_150;
		}

		// Token: 0x06006118 RID: 24856 RVA: 0x003669DC File Offset: 0x00364BDC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_373(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_392);
			Class128 @class = this.class128_150;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_150 = class128_379;
			@class = this.class128_150;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006119 RID: 24857 RVA: 0x0003E274 File Offset: 0x0003C474
		[CompilerGenerated]
		internal Class128 vmethod_374()
		{
			return this.class128_151;
		}

		// Token: 0x0600611A RID: 24858 RVA: 0x0003E27C File Offset: 0x0003C47C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_375(Class128 class128_379)
		{
			this.class128_151 = class128_379;
		}

		// Token: 0x0600611B RID: 24859 RVA: 0x0003E285 File Offset: 0x0003C485
		[CompilerGenerated]
		internal Class128 vmethod_376()
		{
			return this.class128_152;
		}

		// Token: 0x0600611C RID: 24860 RVA: 0x00366A20 File Offset: 0x00364C20
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_377(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_394);
			Class128 @class = this.class128_152;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_152 = class128_379;
			@class = this.class128_152;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600611D RID: 24861 RVA: 0x0003E28D File Offset: 0x0003C48D
		[CompilerGenerated]
		internal Class128 vmethod_378()
		{
			return this.class128_153;
		}

		// Token: 0x0600611E RID: 24862 RVA: 0x00366A64 File Offset: 0x00364C64
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_379(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_396);
			Class128 @class = this.class128_153;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_153 = class128_379;
			@class = this.class128_153;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600611F RID: 24863 RVA: 0x0003E295 File Offset: 0x0003C495
		[CompilerGenerated]
		internal Class113 vmethod_380()
		{
			return this.class113_3;
		}

		// Token: 0x06006120 RID: 24864 RVA: 0x0003E29D File Offset: 0x0003C49D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_381(Class113 class113_9)
		{
			this.class113_3 = class113_9;
		}

		// Token: 0x06006121 RID: 24865 RVA: 0x0003E2A6 File Offset: 0x0003C4A6
		[CompilerGenerated]
		internal Class128 vmethod_382()
		{
			return this.class128_154;
		}

		// Token: 0x06006122 RID: 24866 RVA: 0x00366AA8 File Offset: 0x00364CA8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_383(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_400);
			Class128 @class = this.class128_154;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_154 = class128_379;
			@class = this.class128_154;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006123 RID: 24867 RVA: 0x0003E2AE File Offset: 0x0003C4AE
		[CompilerGenerated]
		internal Class128 vmethod_384()
		{
			return this.class128_155;
		}

		// Token: 0x06006124 RID: 24868 RVA: 0x00366AEC File Offset: 0x00364CEC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_385(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_356);
			Class128 @class = this.class128_155;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_155 = class128_379;
			@class = this.class128_155;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006125 RID: 24869 RVA: 0x0003E2B6 File Offset: 0x0003C4B6
		[CompilerGenerated]
		internal Class128 vmethod_386()
		{
			return this.class128_156;
		}

		// Token: 0x06006126 RID: 24870 RVA: 0x00366B30 File Offset: 0x00364D30
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_387(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_312);
			Class128 @class = this.class128_156;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_156 = class128_379;
			@class = this.class128_156;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006127 RID: 24871 RVA: 0x0003E2BE File Offset: 0x0003C4BE
		[CompilerGenerated]
		internal Class128 vmethod_388()
		{
			return this.class128_157;
		}

		// Token: 0x06006128 RID: 24872 RVA: 0x00366B74 File Offset: 0x00364D74
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_389(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_402);
			Class128 @class = this.class128_157;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_157 = class128_379;
			@class = this.class128_157;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006129 RID: 24873 RVA: 0x0003E2C6 File Offset: 0x0003C4C6
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_390()
		{
			return this.toolStripSeparator_14;
		}

		// Token: 0x0600612A RID: 24874 RVA: 0x0003E2CE File Offset: 0x0003C4CE
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_391(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_14 = toolStripSeparator_40;
		}

		// Token: 0x0600612B RID: 24875 RVA: 0x0003E2D7 File Offset: 0x0003C4D7
		[CompilerGenerated]
		internal Class128 vmethod_392()
		{
			return this.class128_158;
		}

		// Token: 0x0600612C RID: 24876 RVA: 0x00366BB8 File Offset: 0x00364DB8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_393(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_406);
			Class128 @class = this.class128_158;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_158 = class128_379;
			@class = this.class128_158;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600612D RID: 24877 RVA: 0x0003E2DF File Offset: 0x0003C4DF
		[CompilerGenerated]
		internal Class128 vmethod_394()
		{
			return this.class128_159;
		}

		// Token: 0x0600612E RID: 24878 RVA: 0x0003E2E7 File Offset: 0x0003C4E7
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_395(Class128 class128_379)
		{
			this.class128_159 = class128_379;
		}

		// Token: 0x0600612F RID: 24879 RVA: 0x0003E2F0 File Offset: 0x0003C4F0
		[CompilerGenerated]
		internal Class128 vmethod_396()
		{
			return this.class128_160;
		}

		// Token: 0x06006130 RID: 24880 RVA: 0x00366BFC File Offset: 0x00364DFC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_397(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_407);
			Class128 @class = this.class128_160;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_160 = class128_379;
			@class = this.class128_160;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006131 RID: 24881 RVA: 0x0003E2F8 File Offset: 0x0003C4F8
		[CompilerGenerated]
		internal Class128 vmethod_398()
		{
			return this.class128_161;
		}

		// Token: 0x06006132 RID: 24882 RVA: 0x00366C40 File Offset: 0x00364E40
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_399(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_408);
			Class128 @class = this.class128_161;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_161 = class128_379;
			@class = this.class128_161;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006133 RID: 24883 RVA: 0x0003E300 File Offset: 0x0003C500
		[CompilerGenerated]
		internal Class128 vmethod_400()
		{
			return this.class128_162;
		}

		// Token: 0x06006134 RID: 24884 RVA: 0x00366C84 File Offset: 0x00364E84
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_401(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_409);
			Class128 @class = this.class128_162;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_162 = class128_379;
			@class = this.class128_162;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006135 RID: 24885 RVA: 0x0003E308 File Offset: 0x0003C508
		[CompilerGenerated]
		internal Class128 vmethod_402()
		{
			return this.class128_163;
		}

		// Token: 0x06006136 RID: 24886 RVA: 0x00366CC8 File Offset: 0x00364EC8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_403(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_410);
			Class128 @class = this.class128_163;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_163 = class128_379;
			@class = this.class128_163;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006137 RID: 24887 RVA: 0x0003E310 File Offset: 0x0003C510
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_404()
		{
			return this.toolStripSeparator_15;
		}

		// Token: 0x06006138 RID: 24888 RVA: 0x0003E318 File Offset: 0x0003C518
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_405(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_15 = toolStripSeparator_40;
		}

		// Token: 0x06006139 RID: 24889 RVA: 0x0003E321 File Offset: 0x0003C521
		[CompilerGenerated]
		internal Class128 vmethod_406()
		{
			return this.class128_164;
		}

		// Token: 0x0600613A RID: 24890 RVA: 0x00366D0C File Offset: 0x00364F0C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_407(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_443);
			Class128 @class = this.class128_164;
			if (@class != null)
			{
				@class.DropDownOpening -= value;
			}
			this.class128_164 = class128_379;
			@class = this.class128_164;
			if (@class != null)
			{
				@class.DropDownOpening += value;
			}
		}

		// Token: 0x0600613B RID: 24891 RVA: 0x0003E329 File Offset: 0x0003C529
		[CompilerGenerated]
		internal Class128 vmethod_408()
		{
			return this.class128_165;
		}

		// Token: 0x0600613C RID: 24892 RVA: 0x00366D50 File Offset: 0x00364F50
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_409(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_286);
			Class128 @class = this.class128_165;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_165 = class128_379;
			@class = this.class128_165;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600613D RID: 24893 RVA: 0x0003E331 File Offset: 0x0003C531
		[CompilerGenerated]
		internal Class128 vmethod_410()
		{
			return this.class128_166;
		}

		// Token: 0x0600613E RID: 24894 RVA: 0x00366D94 File Offset: 0x00364F94
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_411(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_132);
			Class128 @class = this.class128_166;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_166 = class128_379;
			@class = this.class128_166;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600613F RID: 24895 RVA: 0x0003E339 File Offset: 0x0003C539
		[CompilerGenerated]
		internal Class128 vmethod_412()
		{
			return this.class128_167;
		}

		// Token: 0x06006140 RID: 24896 RVA: 0x00366DD8 File Offset: 0x00364FD8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_413(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_133);
			Class128 @class = this.class128_167;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_167 = class128_379;
			@class = this.class128_167;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006141 RID: 24897 RVA: 0x0003E341 File Offset: 0x0003C541
		[CompilerGenerated]
		internal Class128 vmethod_414()
		{
			return this.class128_168;
		}

		// Token: 0x06006142 RID: 24898 RVA: 0x00366E1C File Offset: 0x0036501C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_415(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_134);
			Class128 @class = this.class128_168;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_168 = class128_379;
			@class = this.class128_168;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006143 RID: 24899 RVA: 0x0003E349 File Offset: 0x0003C549
		[CompilerGenerated]
		internal Class128 vmethod_416()
		{
			return this.class128_169;
		}

		// Token: 0x06006144 RID: 24900 RVA: 0x00366E60 File Offset: 0x00365060
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_417(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_393);
			Class128 @class = this.class128_169;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_169 = class128_379;
			@class = this.class128_169;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006145 RID: 24901 RVA: 0x0003E351 File Offset: 0x0003C551
		[CompilerGenerated]
		internal Class128 vmethod_418()
		{
			return this.class128_170;
		}

		// Token: 0x06006146 RID: 24902 RVA: 0x00366EA4 File Offset: 0x003650A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_419(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_411);
			Class128 @class = this.class128_170;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_170 = class128_379;
			@class = this.class128_170;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006147 RID: 24903 RVA: 0x0003E359 File Offset: 0x0003C559
		[CompilerGenerated]
		internal Class128 vmethod_420()
		{
			return this.class128_171;
		}

		// Token: 0x06006148 RID: 24904 RVA: 0x00366EE8 File Offset: 0x003650E8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_421(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_446);
			Class128 @class = this.class128_171;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_171 = class128_379;
			@class = this.class128_171;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006149 RID: 24905 RVA: 0x0003E361 File Offset: 0x0003C561
		[CompilerGenerated]
		internal Class128 vmethod_422()
		{
			return this.class128_172;
		}

		// Token: 0x0600614A RID: 24906 RVA: 0x00366F2C File Offset: 0x0036512C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_423(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_447);
			Class128 @class = this.class128_172;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_172 = class128_379;
			@class = this.class128_172;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600614B RID: 24907 RVA: 0x0003E369 File Offset: 0x0003C569
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_424()
		{
			return this.toolStripSeparator_16;
		}

		// Token: 0x0600614C RID: 24908 RVA: 0x0003E371 File Offset: 0x0003C571
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_425(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_16 = toolStripSeparator_40;
		}

		// Token: 0x0600614D RID: 24909 RVA: 0x0003E37A File Offset: 0x0003C57A
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_426()
		{
			return this.toolStripSeparator_17;
		}

		// Token: 0x0600614E RID: 24910 RVA: 0x0003E382 File Offset: 0x0003C582
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_427(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_17 = toolStripSeparator_40;
		}

		// Token: 0x0600614F RID: 24911 RVA: 0x0003E38B File Offset: 0x0003C58B
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_428()
		{
			return this.toolStripSeparator_18;
		}

		// Token: 0x06006150 RID: 24912 RVA: 0x0003E393 File Offset: 0x0003C593
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_429(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_18 = toolStripSeparator_40;
		}

		// Token: 0x06006151 RID: 24913 RVA: 0x0003E39C File Offset: 0x0003C59C
		[CompilerGenerated]
		internal Class128 vmethod_430()
		{
			return this.class128_173;
		}

		// Token: 0x06006152 RID: 24914 RVA: 0x00366F70 File Offset: 0x00365170
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_431(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_412);
			Class128 @class = this.class128_173;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_173 = class128_379;
			@class = this.class128_173;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006153 RID: 24915 RVA: 0x0003E3A4 File Offset: 0x0003C5A4
		[CompilerGenerated]
		internal Class128 vmethod_432()
		{
			return this.class128_174;
		}

		// Token: 0x06006154 RID: 24916 RVA: 0x00366FB4 File Offset: 0x003651B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_433(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_413);
			Class128 @class = this.class128_174;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_174 = class128_379;
			@class = this.class128_174;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006155 RID: 24917 RVA: 0x0003E3AC File Offset: 0x0003C5AC
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_434()
		{
			return this.toolStripSeparator_19;
		}

		// Token: 0x06006156 RID: 24918 RVA: 0x0003E3B4 File Offset: 0x0003C5B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_435(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_19 = toolStripSeparator_40;
		}

		// Token: 0x06006157 RID: 24919 RVA: 0x0003E3BD File Offset: 0x0003C5BD
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_436()
		{
			return this.toolStripSeparator_20;
		}

		// Token: 0x06006158 RID: 24920 RVA: 0x0003E3C5 File Offset: 0x0003C5C5
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_437(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_20 = toolStripSeparator_40;
		}

		// Token: 0x06006159 RID: 24921 RVA: 0x0003E3CE File Offset: 0x0003C5CE
		[CompilerGenerated]
		internal Class128 vmethod_438()
		{
			return this.class128_175;
		}

		// Token: 0x0600615A RID: 24922 RVA: 0x00366FF8 File Offset: 0x003651F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_439(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_414);
			Class128 @class = this.class128_175;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_175 = class128_379;
			@class = this.class128_175;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600615B RID: 24923 RVA: 0x0003E3D6 File Offset: 0x0003C5D6
		[CompilerGenerated]
		internal Class128 vmethod_440()
		{
			return this.class128_176;
		}

		// Token: 0x0600615C RID: 24924 RVA: 0x0036703C File Offset: 0x0036523C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_441(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_444);
			Class128 @class = this.class128_176;
			if (@class != null)
			{
				@class.DropDownOpening -= value;
			}
			this.class128_176 = class128_379;
			@class = this.class128_176;
			if (@class != null)
			{
				@class.DropDownOpening += value;
			}
		}

		// Token: 0x0600615D RID: 24925 RVA: 0x0003E3DE File Offset: 0x0003C5DE
		[CompilerGenerated]
		internal Class128 vmethod_442()
		{
			return this.class128_177;
		}

		// Token: 0x0600615E RID: 24926 RVA: 0x00367080 File Offset: 0x00365280
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_443(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_415);
			Class128 @class = this.class128_177;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_177 = class128_379;
			@class = this.class128_177;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600615F RID: 24927 RVA: 0x0003E3E6 File Offset: 0x0003C5E6
		[CompilerGenerated]
		internal Class128 vmethod_444()
		{
			return this.class128_178;
		}

		// Token: 0x06006160 RID: 24928 RVA: 0x0003E3EE File Offset: 0x0003C5EE
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_445(Class128 class128_379)
		{
			this.class128_178 = class128_379;
		}

		// Token: 0x06006161 RID: 24929 RVA: 0x0003E3F7 File Offset: 0x0003C5F7
		[CompilerGenerated]
		internal Class128 vmethod_446()
		{
			return this.class128_179;
		}

		// Token: 0x06006162 RID: 24930 RVA: 0x0003E3FF File Offset: 0x0003C5FF
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_447(Class128 class128_379)
		{
			this.class128_179 = class128_379;
		}

		// Token: 0x06006163 RID: 24931 RVA: 0x0003E408 File Offset: 0x0003C608
		[CompilerGenerated]
		internal Class128 vmethod_448()
		{
			return this.class128_180;
		}

		// Token: 0x06006164 RID: 24932 RVA: 0x003670C4 File Offset: 0x003652C4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_449(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_416);
			Class128 @class = this.class128_180;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_180 = class128_379;
			@class = this.class128_180;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006165 RID: 24933 RVA: 0x0003E410 File Offset: 0x0003C610
		[CompilerGenerated]
		internal Class128 vmethod_450()
		{
			return this.class128_181;
		}

		// Token: 0x06006166 RID: 24934 RVA: 0x00367108 File Offset: 0x00365308
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_451(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_417);
			Class128 @class = this.class128_181;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_181 = class128_379;
			@class = this.class128_181;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006167 RID: 24935 RVA: 0x0003E418 File Offset: 0x0003C618
		[CompilerGenerated]
		internal Class128 vmethod_452()
		{
			return this.class128_182;
		}

		// Token: 0x06006168 RID: 24936 RVA: 0x0036714C File Offset: 0x0036534C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_453(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_418);
			Class128 @class = this.class128_182;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_182 = class128_379;
			@class = this.class128_182;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006169 RID: 24937 RVA: 0x0003E420 File Offset: 0x0003C620
		[CompilerGenerated]
		internal Class128 vmethod_454()
		{
			return this.class128_183;
		}

		// Token: 0x0600616A RID: 24938 RVA: 0x00367190 File Offset: 0x00365390
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_455(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_419);
			Class128 @class = this.class128_183;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_183 = class128_379;
			@class = this.class128_183;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600616B RID: 24939 RVA: 0x0003E428 File Offset: 0x0003C628
		[CompilerGenerated]
		internal Class128 vmethod_456()
		{
			return this.class128_184;
		}

		// Token: 0x0600616C RID: 24940 RVA: 0x003671D4 File Offset: 0x003653D4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_457(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_420);
			Class128 @class = this.class128_184;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_184 = class128_379;
			@class = this.class128_184;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600616D RID: 24941 RVA: 0x0003E430 File Offset: 0x0003C630
		[CompilerGenerated]
		internal Class128 vmethod_458()
		{
			return this.class128_185;
		}

		// Token: 0x0600616E RID: 24942 RVA: 0x00367218 File Offset: 0x00365418
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_459(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_421);
			Class128 @class = this.class128_185;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_185 = class128_379;
			@class = this.class128_185;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600616F RID: 24943 RVA: 0x0003E438 File Offset: 0x0003C638
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_460()
		{
			return this.toolStripSeparator_21;
		}

		// Token: 0x06006170 RID: 24944 RVA: 0x0003E440 File Offset: 0x0003C640
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_461(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_21 = toolStripSeparator_40;
		}

		// Token: 0x06006171 RID: 24945 RVA: 0x0003E449 File Offset: 0x0003C649
		[CompilerGenerated]
		internal Class128 vmethod_462()
		{
			return this.class128_186;
		}

		// Token: 0x06006172 RID: 24946 RVA: 0x0003E451 File Offset: 0x0003C651
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_463(Class128 class128_379)
		{
			this.class128_186 = class128_379;
		}

		// Token: 0x06006173 RID: 24947 RVA: 0x0003E45A File Offset: 0x0003C65A
		[CompilerGenerated]
		internal Class128 vmethod_464()
		{
			return this.class128_187;
		}

		// Token: 0x06006174 RID: 24948 RVA: 0x0036725C File Offset: 0x0036545C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_465(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_422);
			Class128 @class = this.class128_187;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_187 = class128_379;
			@class = this.class128_187;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006175 RID: 24949 RVA: 0x0003E462 File Offset: 0x0003C662
		[CompilerGenerated]
		internal Class128 vmethod_466()
		{
			return this.class128_188;
		}

		// Token: 0x06006176 RID: 24950 RVA: 0x003672A0 File Offset: 0x003654A0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_467(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_423);
			Class128 @class = this.class128_188;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_188 = class128_379;
			@class = this.class128_188;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006177 RID: 24951 RVA: 0x0003E46A File Offset: 0x0003C66A
		[CompilerGenerated]
		internal Class128 vmethod_468()
		{
			return this.class128_189;
		}

		// Token: 0x06006178 RID: 24952 RVA: 0x003672E4 File Offset: 0x003654E4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_469(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_424);
			Class128 @class = this.class128_189;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_189 = class128_379;
			@class = this.class128_189;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006179 RID: 24953 RVA: 0x0003E472 File Offset: 0x0003C672
		[CompilerGenerated]
		internal Class128 vmethod_470()
		{
			return this.class128_190;
		}

		// Token: 0x0600617A RID: 24954 RVA: 0x00367328 File Offset: 0x00365528
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_471(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_425);
			Class128 @class = this.class128_190;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_190 = class128_379;
			@class = this.class128_190;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600617B RID: 24955 RVA: 0x0003E47A File Offset: 0x0003C67A
		[CompilerGenerated]
		internal Class128 vmethod_472()
		{
			return this.class128_191;
		}

		// Token: 0x0600617C RID: 24956 RVA: 0x0036736C File Offset: 0x0036556C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_473(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_426);
			Class128 @class = this.class128_191;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_191 = class128_379;
			@class = this.class128_191;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600617D RID: 24957 RVA: 0x0003E482 File Offset: 0x0003C682
		[CompilerGenerated]
		internal Class128 vmethod_474()
		{
			return this.class128_192;
		}

		// Token: 0x0600617E RID: 24958 RVA: 0x003673B0 File Offset: 0x003655B0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_475(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_427);
			Class128 @class = this.class128_192;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_192 = class128_379;
			@class = this.class128_192;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600617F RID: 24959 RVA: 0x0003E48A File Offset: 0x0003C68A
		[CompilerGenerated]
		internal Class128 vmethod_476()
		{
			return this.class128_193;
		}

		// Token: 0x06006180 RID: 24960 RVA: 0x003673F4 File Offset: 0x003655F4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_477(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_428);
			Class128 @class = this.class128_193;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_193 = class128_379;
			@class = this.class128_193;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006181 RID: 24961 RVA: 0x0003E492 File Offset: 0x0003C692
		[CompilerGenerated]
		internal Class128 vmethod_478()
		{
			return this.class128_194;
		}

		// Token: 0x06006182 RID: 24962 RVA: 0x00367438 File Offset: 0x00365638
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_479(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_429);
			Class128 @class = this.class128_194;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_194 = class128_379;
			@class = this.class128_194;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006183 RID: 24963 RVA: 0x0003E49A File Offset: 0x0003C69A
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_480()
		{
			return this.toolStripSeparator_22;
		}

		// Token: 0x06006184 RID: 24964 RVA: 0x0003E4A2 File Offset: 0x0003C6A2
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_481(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_22 = toolStripSeparator_40;
		}

		// Token: 0x06006185 RID: 24965 RVA: 0x0003E4AB File Offset: 0x0003C6AB
		[CompilerGenerated]
		internal Class128 vmethod_482()
		{
			return this.class128_195;
		}

		// Token: 0x06006186 RID: 24966 RVA: 0x0036747C File Offset: 0x0036567C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_483(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_448);
			Class128 @class = this.class128_195;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_195 = class128_379;
			@class = this.class128_195;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006187 RID: 24967 RVA: 0x0003E4B3 File Offset: 0x0003C6B3
		[CompilerGenerated]
		internal Class128 vmethod_484()
		{
			return this.class128_196;
		}

		// Token: 0x06006188 RID: 24968 RVA: 0x003674C0 File Offset: 0x003656C0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_485(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_449);
			Class128 @class = this.class128_196;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_196 = class128_379;
			@class = this.class128_196;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006189 RID: 24969 RVA: 0x0003E4BB File Offset: 0x0003C6BB
		[CompilerGenerated]
		internal Class128 vmethod_486()
		{
			return this.class128_197;
		}

		// Token: 0x0600618A RID: 24970 RVA: 0x00367504 File Offset: 0x00365704
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_487(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_430);
			Class128 @class = this.class128_197;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_197 = class128_379;
			@class = this.class128_197;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600618B RID: 24971 RVA: 0x0003E4C3 File Offset: 0x0003C6C3
		[CompilerGenerated]
		internal Class128 vmethod_488()
		{
			return this.class128_198;
		}

		// Token: 0x0600618C RID: 24972 RVA: 0x00367548 File Offset: 0x00365748
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_489(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_437);
			Class128 @class = this.class128_198;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_198 = class128_379;
			@class = this.class128_198;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600618D RID: 24973 RVA: 0x0003E4CB File Offset: 0x0003C6CB
		[CompilerGenerated]
		internal Class128 vmethod_490()
		{
			return this.class128_199;
		}

		// Token: 0x0600618E RID: 24974 RVA: 0x0036758C File Offset: 0x0036578C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_491(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_436);
			Class128 @class = this.class128_199;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_199 = class128_379;
			@class = this.class128_199;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600618F RID: 24975 RVA: 0x0003E4D3 File Offset: 0x0003C6D3
		[CompilerGenerated]
		internal Class128 vmethod_492()
		{
			return this.class128_200;
		}

		// Token: 0x06006190 RID: 24976 RVA: 0x003675D0 File Offset: 0x003657D0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_493(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_431);
			Class128 @class = this.class128_200;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_200 = class128_379;
			@class = this.class128_200;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006191 RID: 24977 RVA: 0x0003E4DB File Offset: 0x0003C6DB
		[CompilerGenerated]
		internal Class128 vmethod_494()
		{
			return this.class128_201;
		}

		// Token: 0x06006192 RID: 24978 RVA: 0x00367614 File Offset: 0x00365814
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_495(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_432);
			Class128 @class = this.class128_201;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_201 = class128_379;
			@class = this.class128_201;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006193 RID: 24979 RVA: 0x0003E4E3 File Offset: 0x0003C6E3
		[CompilerGenerated]
		internal Class128 vmethod_496()
		{
			return this.class128_202;
		}

		// Token: 0x06006194 RID: 24980 RVA: 0x00367658 File Offset: 0x00365858
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_497(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_433);
			Class128 @class = this.class128_202;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_202 = class128_379;
			@class = this.class128_202;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006195 RID: 24981 RVA: 0x0003E4EB File Offset: 0x0003C6EB
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_498()
		{
			return this.toolStripSeparator_23;
		}

		// Token: 0x06006196 RID: 24982 RVA: 0x0003E4F3 File Offset: 0x0003C6F3
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_499(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_23 = toolStripSeparator_40;
		}

		// Token: 0x06006197 RID: 24983 RVA: 0x0003E4FC File Offset: 0x0003C6FC
		[CompilerGenerated]
		internal Class128 vmethod_500()
		{
			return this.class128_203;
		}

		// Token: 0x06006198 RID: 24984 RVA: 0x0036769C File Offset: 0x0036589C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_501(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_434);
			Class128 @class = this.class128_203;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_203 = class128_379;
			@class = this.class128_203;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006199 RID: 24985 RVA: 0x0003E504 File Offset: 0x0003C704
		[CompilerGenerated]
		internal Class128 vmethod_502()
		{
			return this.class128_204;
		}

		// Token: 0x0600619A RID: 24986 RVA: 0x003676E0 File Offset: 0x003658E0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_503(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_435);
			Class128 @class = this.class128_204;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_204 = class128_379;
			@class = this.class128_204;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600619B RID: 24987 RVA: 0x0003E50C File Offset: 0x0003C70C
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_504()
		{
			return this.toolStripSeparator_24;
		}

		// Token: 0x0600619C RID: 24988 RVA: 0x0003E514 File Offset: 0x0003C714
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_505(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_24 = toolStripSeparator_40;
		}

		// Token: 0x0600619D RID: 24989 RVA: 0x0003E51D File Offset: 0x0003C71D
		[CompilerGenerated]
		internal Class128 vmethod_506()
		{
			return this.class128_205;
		}

		// Token: 0x0600619E RID: 24990 RVA: 0x00367724 File Offset: 0x00365924
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_507(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_438);
			Class128 @class = this.class128_205;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_205 = class128_379;
			@class = this.class128_205;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600619F RID: 24991 RVA: 0x0003E525 File Offset: 0x0003C725
		[CompilerGenerated]
		internal Class128 vmethod_508()
		{
			return this.class128_206;
		}

		// Token: 0x060061A0 RID: 24992 RVA: 0x0003E52D File Offset: 0x0003C72D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_509(Class128 class128_379)
		{
			this.class128_206 = class128_379;
		}

		// Token: 0x060061A1 RID: 24993 RVA: 0x0003E536 File Offset: 0x0003C736
		[CompilerGenerated]
		internal Class128 vmethod_510()
		{
			return this.class128_207;
		}

		// Token: 0x060061A2 RID: 24994 RVA: 0x0003E53E File Offset: 0x0003C73E
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_511(Class128 class128_379)
		{
			this.class128_207 = class128_379;
		}

		// Token: 0x060061A3 RID: 24995 RVA: 0x0003E547 File Offset: 0x0003C747
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_512()
		{
			return this.toolStripSeparator_25;
		}

		// Token: 0x060061A4 RID: 24996 RVA: 0x0003E54F File Offset: 0x0003C74F
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_513(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_25 = toolStripSeparator_40;
		}

		// Token: 0x060061A5 RID: 24997 RVA: 0x0003E558 File Offset: 0x0003C758
		[CompilerGenerated]
		internal Class128 vmethod_514()
		{
			return this.class128_208;
		}

		// Token: 0x060061A6 RID: 24998 RVA: 0x00367768 File Offset: 0x00365968
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_515(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_450);
			Class128 @class = this.class128_208;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_208 = class128_379;
			@class = this.class128_208;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061A7 RID: 24999 RVA: 0x0003E560 File Offset: 0x0003C760
		[CompilerGenerated]
		internal Class128 vmethod_516()
		{
			return this.class128_209;
		}

		// Token: 0x060061A8 RID: 25000 RVA: 0x003677AC File Offset: 0x003659AC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_517(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_451);
			Class128 @class = this.class128_209;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_209 = class128_379;
			@class = this.class128_209;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061A9 RID: 25001 RVA: 0x0003E568 File Offset: 0x0003C768
		[CompilerGenerated]
		internal Class128 vmethod_518()
		{
			return this.class128_210;
		}

		// Token: 0x060061AA RID: 25002 RVA: 0x003677F0 File Offset: 0x003659F0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_519(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_452);
			Class128 @class = this.class128_210;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_210 = class128_379;
			@class = this.class128_210;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061AB RID: 25003 RVA: 0x0003E570 File Offset: 0x0003C770
		[CompilerGenerated]
		internal Class128 vmethod_520()
		{
			return this.class128_211;
		}

		// Token: 0x060061AC RID: 25004 RVA: 0x00367834 File Offset: 0x00365A34
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_521(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_453);
			Class128 @class = this.class128_211;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_211 = class128_379;
			@class = this.class128_211;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061AD RID: 25005 RVA: 0x0003E578 File Offset: 0x0003C778
		[CompilerGenerated]
		internal Class128 vmethod_522()
		{
			return this.class128_212;
		}

		// Token: 0x060061AE RID: 25006 RVA: 0x00367878 File Offset: 0x00365A78
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_523(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_454);
			Class128 @class = this.class128_212;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_212 = class128_379;
			@class = this.class128_212;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061AF RID: 25007 RVA: 0x0003E580 File Offset: 0x0003C780
		[CompilerGenerated]
		internal Class128 vmethod_524()
		{
			return this.class128_213;
		}

		// Token: 0x060061B0 RID: 25008 RVA: 0x003678BC File Offset: 0x00365ABC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_525(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_455);
			Class128 @class = this.class128_213;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_213 = class128_379;
			@class = this.class128_213;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061B1 RID: 25009 RVA: 0x0003E588 File Offset: 0x0003C788
		[CompilerGenerated]
		internal Class128 vmethod_526()
		{
			return this.class128_214;
		}

		// Token: 0x060061B2 RID: 25010 RVA: 0x0003E590 File Offset: 0x0003C790
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_527(Class128 class128_379)
		{
			this.class128_214 = class128_379;
		}

		// Token: 0x060061B3 RID: 25011 RVA: 0x0003E599 File Offset: 0x0003C799
		[CompilerGenerated]
		internal Class128 vmethod_528()
		{
			return this.class128_215;
		}

		// Token: 0x060061B4 RID: 25012 RVA: 0x00367900 File Offset: 0x00365B00
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_529(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_456);
			Class128 @class = this.class128_215;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_215 = class128_379;
			@class = this.class128_215;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061B5 RID: 25013 RVA: 0x0003E5A1 File Offset: 0x0003C7A1
		[CompilerGenerated]
		internal Class128 vmethod_530()
		{
			return this.class128_216;
		}

		// Token: 0x060061B6 RID: 25014 RVA: 0x00367944 File Offset: 0x00365B44
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_531(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_457);
			Class128 @class = this.class128_216;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_216 = class128_379;
			@class = this.class128_216;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061B7 RID: 25015 RVA: 0x0003E5A9 File Offset: 0x0003C7A9
		[CompilerGenerated]
		internal Class128 vmethod_532()
		{
			return this.class128_217;
		}

		// Token: 0x060061B8 RID: 25016 RVA: 0x00367988 File Offset: 0x00365B88
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_533(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_458);
			Class128 @class = this.class128_217;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_217 = class128_379;
			@class = this.class128_217;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061B9 RID: 25017 RVA: 0x0003E5B1 File Offset: 0x0003C7B1
		[CompilerGenerated]
		internal Class128 vmethod_534()
		{
			return this.class128_218;
		}

		// Token: 0x060061BA RID: 25018 RVA: 0x003679CC File Offset: 0x00365BCC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_535(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_460);
			Class128 @class = this.class128_218;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_218 = class128_379;
			@class = this.class128_218;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061BB RID: 25019 RVA: 0x0003E5B9 File Offset: 0x0003C7B9
		[CompilerGenerated]
		internal Class128 vmethod_536()
		{
			return this.class128_219;
		}

		// Token: 0x060061BC RID: 25020 RVA: 0x00367A10 File Offset: 0x00365C10
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_537(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_459);
			Class128 @class = this.class128_219;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_219 = class128_379;
			@class = this.class128_219;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061BD RID: 25021 RVA: 0x0003E5C1 File Offset: 0x0003C7C1
		[CompilerGenerated]
		internal Class128 vmethod_538()
		{
			return this.class128_220;
		}

		// Token: 0x060061BE RID: 25022 RVA: 0x0003E5C9 File Offset: 0x0003C7C9
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_539(Class128 class128_379)
		{
			this.class128_220 = class128_379;
		}

		// Token: 0x060061BF RID: 25023 RVA: 0x0003E5D2 File Offset: 0x0003C7D2
		[CompilerGenerated]
		internal Class128 vmethod_540()
		{
			return this.class128_221;
		}

		// Token: 0x060061C0 RID: 25024 RVA: 0x00367A54 File Offset: 0x00365C54
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_541(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_461);
			Class128 @class = this.class128_221;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_221 = class128_379;
			@class = this.class128_221;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061C1 RID: 25025 RVA: 0x0003E5DA File Offset: 0x0003C7DA
		[CompilerGenerated]
		internal Class128 vmethod_542()
		{
			return this.class128_222;
		}

		// Token: 0x060061C2 RID: 25026 RVA: 0x00367A98 File Offset: 0x00365C98
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_543(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_462);
			Class128 @class = this.class128_222;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_222 = class128_379;
			@class = this.class128_222;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061C3 RID: 25027 RVA: 0x0003E5E2 File Offset: 0x0003C7E2
		[CompilerGenerated]
		internal Class128 vmethod_544()
		{
			return this.class128_223;
		}

		// Token: 0x060061C4 RID: 25028 RVA: 0x00367ADC File Offset: 0x00365CDC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_545(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_463);
			Class128 @class = this.class128_223;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_223 = class128_379;
			@class = this.class128_223;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061C5 RID: 25029 RVA: 0x0003E5EA File Offset: 0x0003C7EA
		[CompilerGenerated]
		internal Class128 vmethod_546()
		{
			return this.class128_224;
		}

		// Token: 0x060061C6 RID: 25030 RVA: 0x00367B20 File Offset: 0x00365D20
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_547(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_464);
			Class128 @class = this.class128_224;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_224 = class128_379;
			@class = this.class128_224;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061C7 RID: 25031 RVA: 0x0003E5F2 File Offset: 0x0003C7F2
		[CompilerGenerated]
		internal Class128 vmethod_548()
		{
			return this.class128_225;
		}

		// Token: 0x060061C8 RID: 25032 RVA: 0x00367B64 File Offset: 0x00365D64
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_549(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_465);
			Class128 @class = this.class128_225;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_225 = class128_379;
			@class = this.class128_225;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061C9 RID: 25033 RVA: 0x0003E5FA File Offset: 0x0003C7FA
		[CompilerGenerated]
		internal Class128 vmethod_550()
		{
			return this.class128_226;
		}

		// Token: 0x060061CA RID: 25034 RVA: 0x0003E602 File Offset: 0x0003C802
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_551(Class128 class128_379)
		{
			this.class128_226 = class128_379;
		}

		// Token: 0x060061CB RID: 25035 RVA: 0x0003E60B File Offset: 0x0003C80B
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_552()
		{
			return this.toolStripSeparator_26;
		}

		// Token: 0x060061CC RID: 25036 RVA: 0x0003E613 File Offset: 0x0003C813
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_553(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_26 = toolStripSeparator_40;
		}

		// Token: 0x060061CD RID: 25037 RVA: 0x0003E61C File Offset: 0x0003C81C
		[CompilerGenerated]
		internal Class128 vmethod_554()
		{
			return this.class128_227;
		}

		// Token: 0x060061CE RID: 25038 RVA: 0x0003E624 File Offset: 0x0003C824
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_555(Class128 class128_379)
		{
			this.class128_227 = class128_379;
		}

		// Token: 0x060061CF RID: 25039 RVA: 0x0003E62D File Offset: 0x0003C82D
		[CompilerGenerated]
		internal Class128 vmethod_556()
		{
			return this.class128_228;
		}

		// Token: 0x060061D0 RID: 25040 RVA: 0x00367BA8 File Offset: 0x00365DA8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_557(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_466);
			Class128 @class = this.class128_228;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_228 = class128_379;
			@class = this.class128_228;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061D1 RID: 25041 RVA: 0x0003E635 File Offset: 0x0003C835
		[CompilerGenerated]
		internal Class128 vmethod_558()
		{
			return this.class128_229;
		}

		// Token: 0x060061D2 RID: 25042 RVA: 0x00367BEC File Offset: 0x00365DEC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_559(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_467);
			Class128 @class = this.class128_229;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_229 = class128_379;
			@class = this.class128_229;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061D3 RID: 25043 RVA: 0x0003E63D File Offset: 0x0003C83D
		[CompilerGenerated]
		internal Class128 vmethod_560()
		{
			return this.class128_230;
		}

		// Token: 0x060061D4 RID: 25044 RVA: 0x0003E645 File Offset: 0x0003C845
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_561(Class128 class128_379)
		{
			this.class128_230 = class128_379;
		}

		// Token: 0x060061D5 RID: 25045 RVA: 0x0003E64E File Offset: 0x0003C84E
		[CompilerGenerated]
		internal Class128 vmethod_562()
		{
			return this.class128_231;
		}

		// Token: 0x060061D6 RID: 25046 RVA: 0x00367C30 File Offset: 0x00365E30
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_563(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_468);
			Class128 @class = this.class128_231;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_231 = class128_379;
			@class = this.class128_231;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061D7 RID: 25047 RVA: 0x0003E656 File Offset: 0x0003C856
		[CompilerGenerated]
		internal Class128 vmethod_564()
		{
			return this.class128_232;
		}

		// Token: 0x060061D8 RID: 25048 RVA: 0x00367C74 File Offset: 0x00365E74
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_565(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_469);
			Class128 @class = this.class128_232;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_232 = class128_379;
			@class = this.class128_232;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061D9 RID: 25049 RVA: 0x0003E65E File Offset: 0x0003C85E
		[CompilerGenerated]
		internal Class128 vmethod_566()
		{
			return this.class128_233;
		}

		// Token: 0x060061DA RID: 25050 RVA: 0x00367CB8 File Offset: 0x00365EB8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_567(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_470);
			Class128 @class = this.class128_233;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_233 = class128_379;
			@class = this.class128_233;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061DB RID: 25051 RVA: 0x0003E666 File Offset: 0x0003C866
		[CompilerGenerated]
		internal Class128 vmethod_568()
		{
			return this.class128_234;
		}

		// Token: 0x060061DC RID: 25052 RVA: 0x00367CFC File Offset: 0x00365EFC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_569(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_471);
			Class128 @class = this.class128_234;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_234 = class128_379;
			@class = this.class128_234;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061DD RID: 25053 RVA: 0x0003E66E File Offset: 0x0003C86E
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_570()
		{
			return this.toolStripSeparator_27;
		}

		// Token: 0x060061DE RID: 25054 RVA: 0x0003E676 File Offset: 0x0003C876
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_571(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_27 = toolStripSeparator_40;
		}

		// Token: 0x060061DF RID: 25055 RVA: 0x0003E67F File Offset: 0x0003C87F
		[CompilerGenerated]
		internal Class128 vmethod_572()
		{
			return this.class128_235;
		}

		// Token: 0x060061E0 RID: 25056 RVA: 0x00367D40 File Offset: 0x00365F40
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_573(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_472);
			Class128 @class = this.class128_235;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_235 = class128_379;
			@class = this.class128_235;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061E1 RID: 25057 RVA: 0x0003E687 File Offset: 0x0003C887
		[CompilerGenerated]
		internal Class128 vmethod_574()
		{
			return this.class128_236;
		}

		// Token: 0x060061E2 RID: 25058 RVA: 0x00367D84 File Offset: 0x00365F84
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_575(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_473);
			Class128 @class = this.class128_236;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_236 = class128_379;
			@class = this.class128_236;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061E3 RID: 25059 RVA: 0x0003E68F File Offset: 0x0003C88F
		[CompilerGenerated]
		internal Class128 vmethod_576()
		{
			return this.class128_237;
		}

		// Token: 0x060061E4 RID: 25060 RVA: 0x0003E697 File Offset: 0x0003C897
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_577(Class128 class128_379)
		{
			this.class128_237 = class128_379;
		}

		// Token: 0x060061E5 RID: 25061 RVA: 0x0003E6A0 File Offset: 0x0003C8A0
		[CompilerGenerated]
		internal Class128 vmethod_578()
		{
			return this.class128_238;
		}

		// Token: 0x060061E6 RID: 25062 RVA: 0x0003E6A8 File Offset: 0x0003C8A8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_579(Class128 class128_379)
		{
			this.class128_238 = class128_379;
		}

		// Token: 0x060061E7 RID: 25063 RVA: 0x0003E6B1 File Offset: 0x0003C8B1
		[CompilerGenerated]
		internal Class128 vmethod_580()
		{
			return this.class128_239;
		}

		// Token: 0x060061E8 RID: 25064 RVA: 0x00367DC8 File Offset: 0x00365FC8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_581(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_486);
			Class128 @class = this.class128_239;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_239 = class128_379;
			@class = this.class128_239;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061E9 RID: 25065 RVA: 0x0003E6B9 File Offset: 0x0003C8B9
		[CompilerGenerated]
		internal Class128 vmethod_582()
		{
			return this.class128_240;
		}

		// Token: 0x060061EA RID: 25066 RVA: 0x0003E6C1 File Offset: 0x0003C8C1
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_583(Class128 class128_379)
		{
			this.class128_240 = class128_379;
		}

		// Token: 0x060061EB RID: 25067 RVA: 0x0003E6CA File Offset: 0x0003C8CA
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_584()
		{
			return this.toolStripSeparator_28;
		}

		// Token: 0x060061EC RID: 25068 RVA: 0x0003E6D2 File Offset: 0x0003C8D2
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_585(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_28 = toolStripSeparator_40;
		}

		// Token: 0x060061ED RID: 25069 RVA: 0x0003E6DB File Offset: 0x0003C8DB
		[CompilerGenerated]
		internal Class128 vmethod_586()
		{
			return this.class128_241;
		}

		// Token: 0x060061EE RID: 25070 RVA: 0x00367E0C File Offset: 0x0036600C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_587(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_478);
			Class128 @class = this.class128_241;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_241 = class128_379;
			@class = this.class128_241;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061EF RID: 25071 RVA: 0x0003E6E3 File Offset: 0x0003C8E3
		[CompilerGenerated]
		internal Class128 vmethod_588()
		{
			return this.class128_242;
		}

		// Token: 0x060061F0 RID: 25072 RVA: 0x00367E50 File Offset: 0x00366050
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_589(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_474);
			Class128 @class = this.class128_242;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_242 = class128_379;
			@class = this.class128_242;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061F1 RID: 25073 RVA: 0x0003E6EB File Offset: 0x0003C8EB
		[CompilerGenerated]
		internal Class128 vmethod_590()
		{
			return this.class128_243;
		}

		// Token: 0x060061F2 RID: 25074 RVA: 0x0003E6F3 File Offset: 0x0003C8F3
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_591(Class128 class128_379)
		{
			this.class128_243 = class128_379;
		}

		// Token: 0x060061F3 RID: 25075 RVA: 0x0003E6FC File Offset: 0x0003C8FC
		[CompilerGenerated]
		internal Class128 vmethod_592()
		{
			return this.class128_244;
		}

		// Token: 0x060061F4 RID: 25076 RVA: 0x00367E94 File Offset: 0x00366094
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_593(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_475);
			Class128 @class = this.class128_244;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_244 = class128_379;
			@class = this.class128_244;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061F5 RID: 25077 RVA: 0x0003E704 File Offset: 0x0003C904
		[CompilerGenerated]
		internal Class128 vmethod_594()
		{
			return this.class128_245;
		}

		// Token: 0x060061F6 RID: 25078 RVA: 0x00367ED8 File Offset: 0x003660D8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_595(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_476);
			Class128 @class = this.class128_245;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_245 = class128_379;
			@class = this.class128_245;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061F7 RID: 25079 RVA: 0x0003E70C File Offset: 0x0003C90C
		[CompilerGenerated]
		internal Class128 vmethod_596()
		{
			return this.class128_246;
		}

		// Token: 0x060061F8 RID: 25080 RVA: 0x00367F1C File Offset: 0x0036611C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_597(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_477);
			Class128 @class = this.class128_246;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_246 = class128_379;
			@class = this.class128_246;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061F9 RID: 25081 RVA: 0x0003E714 File Offset: 0x0003C914
		[CompilerGenerated]
		internal Class128 vmethod_598()
		{
			return this.class128_247;
		}

		// Token: 0x060061FA RID: 25082 RVA: 0x00367F60 File Offset: 0x00366160
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_599(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_479);
			Class128 @class = this.class128_247;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_247 = class128_379;
			@class = this.class128_247;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061FB RID: 25083 RVA: 0x0003E71C File Offset: 0x0003C91C
		[CompilerGenerated]
		internal Class128 vmethod_600()
		{
			return this.class128_248;
		}

		// Token: 0x060061FC RID: 25084 RVA: 0x00367FA4 File Offset: 0x003661A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_601(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_482);
			Class128 @class = this.class128_248;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_248 = class128_379;
			@class = this.class128_248;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061FD RID: 25085 RVA: 0x0003E724 File Offset: 0x0003C924
		[CompilerGenerated]
		internal Class128 vmethod_602()
		{
			return this.class128_249;
		}

		// Token: 0x060061FE RID: 25086 RVA: 0x00367FE8 File Offset: 0x003661E8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_603(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_483);
			Class128 @class = this.class128_249;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_249 = class128_379;
			@class = this.class128_249;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060061FF RID: 25087 RVA: 0x0003E72C File Offset: 0x0003C92C
		[CompilerGenerated]
		internal Class128 vmethod_604()
		{
			return this.class128_250;
		}

		// Token: 0x06006200 RID: 25088 RVA: 0x0036802C File Offset: 0x0036622C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_605(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_484);
			Class128 @class = this.class128_250;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_250 = class128_379;
			@class = this.class128_250;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006201 RID: 25089 RVA: 0x0003E734 File Offset: 0x0003C934
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_606()
		{
			return this.toolStripSeparator_29;
		}

		// Token: 0x06006202 RID: 25090 RVA: 0x0003E73C File Offset: 0x0003C93C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_607(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_29 = toolStripSeparator_40;
		}

		// Token: 0x06006203 RID: 25091 RVA: 0x0003E745 File Offset: 0x0003C945
		[CompilerGenerated]
		internal Class128 vmethod_608()
		{
			return this.class128_251;
		}

		// Token: 0x06006204 RID: 25092 RVA: 0x00368070 File Offset: 0x00366270
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_609(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_487);
			Class128 @class = this.class128_251;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_251 = class128_379;
			@class = this.class128_251;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006205 RID: 25093 RVA: 0x0003E74D File Offset: 0x0003C94D
		[CompilerGenerated]
		internal Class128 vmethod_610()
		{
			return this.class128_252;
		}

		// Token: 0x06006206 RID: 25094 RVA: 0x0003E755 File Offset: 0x0003C955
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_611(Class128 class128_379)
		{
			this.class128_252 = class128_379;
		}

		// Token: 0x06006207 RID: 25095 RVA: 0x0003E75E File Offset: 0x0003C95E
		[CompilerGenerated]
		internal Class128 vmethod_612()
		{
			return this.class128_253;
		}

		// Token: 0x06006208 RID: 25096 RVA: 0x003680B4 File Offset: 0x003662B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_613(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_488);
			Class128 @class = this.class128_253;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_253 = class128_379;
			@class = this.class128_253;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006209 RID: 25097 RVA: 0x0003E766 File Offset: 0x0003C966
		[CompilerGenerated]
		internal Class128 vmethod_614()
		{
			return this.class128_254;
		}

		// Token: 0x0600620A RID: 25098 RVA: 0x003680F8 File Offset: 0x003662F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_615(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_489);
			Class128 @class = this.class128_254;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_254 = class128_379;
			@class = this.class128_254;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600620B RID: 25099 RVA: 0x0003E76E File Offset: 0x0003C96E
		[CompilerGenerated]
		internal Class128 vmethod_616()
		{
			return this.class128_255;
		}

		// Token: 0x0600620C RID: 25100 RVA: 0x0036813C File Offset: 0x0036633C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_617(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_490);
			Class128 @class = this.class128_255;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_255 = class128_379;
			@class = this.class128_255;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600620D RID: 25101 RVA: 0x0003E776 File Offset: 0x0003C976
		[CompilerGenerated]
		internal Class128 vmethod_618()
		{
			return this.class128_256;
		}

		// Token: 0x0600620E RID: 25102 RVA: 0x00368180 File Offset: 0x00366380
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_619(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_385);
			Class128 @class = this.class128_256;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_256 = class128_379;
			@class = this.class128_256;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600620F RID: 25103 RVA: 0x0003E77E File Offset: 0x0003C97E
		[CompilerGenerated]
		internal Class128 vmethod_620()
		{
			return this.class128_257;
		}

		// Token: 0x06006210 RID: 25104 RVA: 0x0003E786 File Offset: 0x0003C986
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_621(Class128 class128_379)
		{
			this.class128_257 = class128_379;
		}

		// Token: 0x06006211 RID: 25105 RVA: 0x0003E78F File Offset: 0x0003C98F
		[CompilerGenerated]
		internal Class128 vmethod_622()
		{
			return this.class128_258;
		}

		// Token: 0x06006212 RID: 25106 RVA: 0x0003E797 File Offset: 0x0003C997
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_623(Class128 class128_379)
		{
			this.class128_258 = class128_379;
		}

		// Token: 0x06006213 RID: 25107 RVA: 0x0003E7A0 File Offset: 0x0003C9A0
		[CompilerGenerated]
		internal Class128 vmethod_624()
		{
			return this.class128_259;
		}

		// Token: 0x06006214 RID: 25108 RVA: 0x0003E7A8 File Offset: 0x0003C9A8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_625(Class128 class128_379)
		{
			this.class128_259 = class128_379;
		}

		// Token: 0x06006215 RID: 25109 RVA: 0x0003E7B1 File Offset: 0x0003C9B1
		[CompilerGenerated]
		internal Class128 vmethod_626()
		{
			return this.class128_260;
		}

		// Token: 0x06006216 RID: 25110 RVA: 0x0003E7B9 File Offset: 0x0003C9B9
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_627(Class128 class128_379)
		{
			this.class128_260 = class128_379;
		}

		// Token: 0x06006217 RID: 25111 RVA: 0x0003E7C2 File Offset: 0x0003C9C2
		[CompilerGenerated]
		internal Class128 vmethod_628()
		{
			return this.class128_261;
		}

		// Token: 0x06006218 RID: 25112 RVA: 0x003681C4 File Offset: 0x003663C4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_629(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_496);
			Class128 @class = this.class128_261;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_261 = class128_379;
			@class = this.class128_261;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006219 RID: 25113 RVA: 0x0003E7CA File Offset: 0x0003C9CA
		[CompilerGenerated]
		internal Class128 vmethod_630()
		{
			return this.class128_262;
		}

		// Token: 0x0600621A RID: 25114 RVA: 0x0003E7D2 File Offset: 0x0003C9D2
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_631(Class128 class128_379)
		{
			this.class128_262 = class128_379;
		}

		// Token: 0x0600621B RID: 25115 RVA: 0x0003E7DB File Offset: 0x0003C9DB
		[CompilerGenerated]
		internal Class128 vmethod_632()
		{
			return this.class128_263;
		}

		// Token: 0x0600621C RID: 25116 RVA: 0x00368208 File Offset: 0x00366408
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_633(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_498);
			Class128 @class = this.class128_263;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_263 = class128_379;
			@class = this.class128_263;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600621D RID: 25117 RVA: 0x0003E7E3 File Offset: 0x0003C9E3
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_634()
		{
			return this.toolStripSeparator_30;
		}

		// Token: 0x0600621E RID: 25118 RVA: 0x0003E7EB File Offset: 0x0003C9EB
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_635(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_30 = toolStripSeparator_40;
		}

		// Token: 0x0600621F RID: 25119 RVA: 0x0003E7F4 File Offset: 0x0003C9F4
		[CompilerGenerated]
		internal Class128 vmethod_636()
		{
			return this.class128_264;
		}

		// Token: 0x06006220 RID: 25120 RVA: 0x0036824C File Offset: 0x0036644C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_637(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_485);
			Class128 @class = this.class128_264;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_264 = class128_379;
			@class = this.class128_264;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006221 RID: 25121 RVA: 0x0003E7FC File Offset: 0x0003C9FC
		[CompilerGenerated]
		internal Class128 vmethod_638()
		{
			return this.class128_265;
		}

		// Token: 0x06006222 RID: 25122 RVA: 0x00368290 File Offset: 0x00366490
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_639(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_403);
			Class128 @class = this.class128_265;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_265 = class128_379;
			@class = this.class128_265;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006223 RID: 25123 RVA: 0x0003E804 File Offset: 0x0003CA04
		[CompilerGenerated]
		internal Class128 vmethod_640()
		{
			return this.class128_266;
		}

		// Token: 0x06006224 RID: 25124 RVA: 0x003682D4 File Offset: 0x003664D4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_641(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_499);
			Class128 @class = this.class128_266;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_266 = class128_379;
			@class = this.class128_266;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006225 RID: 25125 RVA: 0x0003E80C File Offset: 0x0003CA0C
		[CompilerGenerated]
		internal Class128 vmethod_642()
		{
			return this.class128_267;
		}

		// Token: 0x06006226 RID: 25126 RVA: 0x0003E814 File Offset: 0x0003CA14
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_643(Class128 class128_379)
		{
			this.class128_267 = class128_379;
		}

		// Token: 0x06006227 RID: 25127 RVA: 0x0003E81D File Offset: 0x0003CA1D
		[CompilerGenerated]
		internal Class128 vmethod_644()
		{
			return this.class128_268;
		}

		// Token: 0x06006228 RID: 25128 RVA: 0x00368318 File Offset: 0x00366518
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_645(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_500);
			Class128 @class = this.class128_268;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_268 = class128_379;
			@class = this.class128_268;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006229 RID: 25129 RVA: 0x0003E825 File Offset: 0x0003CA25
		[CompilerGenerated]
		internal Class128 vmethod_646()
		{
			return this.class128_269;
		}

		// Token: 0x0600622A RID: 25130 RVA: 0x0036835C File Offset: 0x0036655C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_647(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_501);
			Class128 @class = this.class128_269;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_269 = class128_379;
			@class = this.class128_269;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600622B RID: 25131 RVA: 0x0003E82D File Offset: 0x0003CA2D
		[CompilerGenerated]
		internal Class128 vmethod_648()
		{
			return this.class128_270;
		}

		// Token: 0x0600622C RID: 25132 RVA: 0x003683A0 File Offset: 0x003665A0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_649(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_502);
			Class128 @class = this.class128_270;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_270 = class128_379;
			@class = this.class128_270;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600622D RID: 25133 RVA: 0x0003E835 File Offset: 0x0003CA35
		[CompilerGenerated]
		internal Class128 vmethod_650()
		{
			return this.class128_271;
		}

		// Token: 0x0600622E RID: 25134 RVA: 0x003683E4 File Offset: 0x003665E4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_651(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_503);
			Class128 @class = this.class128_271;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_271 = class128_379;
			@class = this.class128_271;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600622F RID: 25135 RVA: 0x0003E83D File Offset: 0x0003CA3D
		[CompilerGenerated]
		internal Class128 vmethod_652()
		{
			return this.class128_272;
		}

		// Token: 0x06006230 RID: 25136 RVA: 0x00368428 File Offset: 0x00366628
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_653(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_504);
			Class128 @class = this.class128_272;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_272 = class128_379;
			@class = this.class128_272;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006231 RID: 25137 RVA: 0x0003E845 File Offset: 0x0003CA45
		[CompilerGenerated]
		internal Class128 vmethod_654()
		{
			return this.class128_273;
		}

		// Token: 0x06006232 RID: 25138 RVA: 0x0036846C File Offset: 0x0036666C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_655(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_505);
			Class128 @class = this.class128_273;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_273 = class128_379;
			@class = this.class128_273;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006233 RID: 25139 RVA: 0x0003E84D File Offset: 0x0003CA4D
		[CompilerGenerated]
		internal Class128 vmethod_656()
		{
			return this.class128_274;
		}

		// Token: 0x06006234 RID: 25140 RVA: 0x003684B0 File Offset: 0x003666B0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_657(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_509);
			Class128 @class = this.class128_274;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_274 = class128_379;
			@class = this.class128_274;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006235 RID: 25141 RVA: 0x0003E855 File Offset: 0x0003CA55
		[CompilerGenerated]
		internal Class128 vmethod_658()
		{
			return this.class128_275;
		}

		// Token: 0x06006236 RID: 25142 RVA: 0x003684F4 File Offset: 0x003666F4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_659(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_272);
			Class128 @class = this.class128_275;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_275 = class128_379;
			@class = this.class128_275;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006237 RID: 25143 RVA: 0x0003E85D File Offset: 0x0003CA5D
		[CompilerGenerated]
		internal Class128 vmethod_660()
		{
			return this.class128_276;
		}

		// Token: 0x06006238 RID: 25144 RVA: 0x00368538 File Offset: 0x00366738
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_661(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_506);
			Class128 @class = this.class128_276;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_276 = class128_379;
			@class = this.class128_276;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006239 RID: 25145 RVA: 0x0003E865 File Offset: 0x0003CA65
		[CompilerGenerated]
		internal Class128 vmethod_662()
		{
			return this.class128_277;
		}

		// Token: 0x0600623A RID: 25146 RVA: 0x0036857C File Offset: 0x0036677C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_663(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_507);
			Class128 @class = this.class128_277;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_277 = class128_379;
			@class = this.class128_277;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600623B RID: 25147 RVA: 0x0003E86D File Offset: 0x0003CA6D
		[CompilerGenerated]
		internal Class128 vmethod_664()
		{
			return this.class128_278;
		}

		// Token: 0x0600623C RID: 25148 RVA: 0x003685C0 File Offset: 0x003667C0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_665(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_508);
			Class128 @class = this.class128_278;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_278 = class128_379;
			@class = this.class128_278;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600623D RID: 25149 RVA: 0x0003E875 File Offset: 0x0003CA75
		[CompilerGenerated]
		internal Class128 vmethod_666()
		{
			return this.class128_279;
		}

		// Token: 0x0600623E RID: 25150 RVA: 0x00368604 File Offset: 0x00366804
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_667(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_510);
			Class128 @class = this.class128_279;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_279 = class128_379;
			@class = this.class128_279;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600623F RID: 25151 RVA: 0x0003E87D File Offset: 0x0003CA7D
		[CompilerGenerated]
		internal Class128 vmethod_668()
		{
			return this.class128_280;
		}

		// Token: 0x06006240 RID: 25152 RVA: 0x00368648 File Offset: 0x00366848
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_669(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_511);
			Class128 @class = this.class128_280;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_280 = class128_379;
			@class = this.class128_280;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006241 RID: 25153 RVA: 0x0003E885 File Offset: 0x0003CA85
		[CompilerGenerated]
		internal Class128 vmethod_670()
		{
			return this.class128_281;
		}

		// Token: 0x06006242 RID: 25154 RVA: 0x0036868C File Offset: 0x0036688C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_671(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_512);
			Class128 @class = this.class128_281;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_281 = class128_379;
			@class = this.class128_281;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006243 RID: 25155 RVA: 0x0003E88D File Offset: 0x0003CA8D
		[CompilerGenerated]
		internal Class128 vmethod_672()
		{
			return this.class128_282;
		}

		// Token: 0x06006244 RID: 25156 RVA: 0x003686D0 File Offset: 0x003668D0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_673(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_513);
			Class128 @class = this.class128_282;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_282 = class128_379;
			@class = this.class128_282;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006245 RID: 25157 RVA: 0x0003E895 File Offset: 0x0003CA95
		[CompilerGenerated]
		internal Class128 vmethod_674()
		{
			return this.class128_283;
		}

		// Token: 0x06006246 RID: 25158 RVA: 0x00368714 File Offset: 0x00366914
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_675(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_514);
			Class128 @class = this.class128_283;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_283 = class128_379;
			@class = this.class128_283;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006247 RID: 25159 RVA: 0x0003E89D File Offset: 0x0003CA9D
		[CompilerGenerated]
		internal Class128 vmethod_676()
		{
			return this.class128_284;
		}

		// Token: 0x06006248 RID: 25160 RVA: 0x00368758 File Offset: 0x00366958
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_677(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_515);
			Class128 @class = this.class128_284;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_284 = class128_379;
			@class = this.class128_284;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006249 RID: 25161 RVA: 0x0003E8A5 File Offset: 0x0003CAA5
		[CompilerGenerated]
		internal Class128 vmethod_678()
		{
			return this.class128_285;
		}

		// Token: 0x0600624A RID: 25162 RVA: 0x0036879C File Offset: 0x0036699C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_679(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_516);
			Class128 @class = this.class128_285;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_285 = class128_379;
			@class = this.class128_285;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600624B RID: 25163 RVA: 0x0003E8AD File Offset: 0x0003CAAD
		[CompilerGenerated]
		internal Class128 vmethod_680()
		{
			return this.class128_286;
		}

		// Token: 0x0600624C RID: 25164 RVA: 0x003687E0 File Offset: 0x003669E0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_681(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_517);
			Class128 @class = this.class128_286;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_286 = class128_379;
			@class = this.class128_286;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600624D RID: 25165 RVA: 0x0003E8B5 File Offset: 0x0003CAB5
		[CompilerGenerated]
		internal Class128 vmethod_682()
		{
			return this.class128_287;
		}

		// Token: 0x0600624E RID: 25166 RVA: 0x00368824 File Offset: 0x00366A24
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_683(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_518);
			Class128 @class = this.class128_287;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_287 = class128_379;
			@class = this.class128_287;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600624F RID: 25167 RVA: 0x0003E8BD File Offset: 0x0003CABD
		[CompilerGenerated]
		internal Class128 vmethod_684()
		{
			return this.class128_288;
		}

		// Token: 0x06006250 RID: 25168 RVA: 0x00368868 File Offset: 0x00366A68
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_685(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_519);
			Class128 @class = this.class128_288;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_288 = class128_379;
			@class = this.class128_288;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006251 RID: 25169 RVA: 0x0003E8C5 File Offset: 0x0003CAC5
		[CompilerGenerated]
		internal Class128 vmethod_686()
		{
			return this.class128_289;
		}

		// Token: 0x06006252 RID: 25170 RVA: 0x003688AC File Offset: 0x00366AAC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_687(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_520);
			Class128 @class = this.class128_289;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_289 = class128_379;
			@class = this.class128_289;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006253 RID: 25171 RVA: 0x0003E8CD File Offset: 0x0003CACD
		[CompilerGenerated]
		internal Class128 vmethod_688()
		{
			return this.class128_290;
		}

		// Token: 0x06006254 RID: 25172 RVA: 0x003688F0 File Offset: 0x00366AF0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_689(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_521);
			Class128 @class = this.class128_290;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_290 = class128_379;
			@class = this.class128_290;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006255 RID: 25173 RVA: 0x0003E8D5 File Offset: 0x0003CAD5
		[CompilerGenerated]
		internal Class128 vmethod_690()
		{
			return this.class128_291;
		}

		// Token: 0x06006256 RID: 25174 RVA: 0x00368934 File Offset: 0x00366B34
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_691(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_522);
			Class128 @class = this.class128_291;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_291 = class128_379;
			@class = this.class128_291;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006257 RID: 25175 RVA: 0x0003E8DD File Offset: 0x0003CADD
		[CompilerGenerated]
		internal Class128 vmethod_692()
		{
			return this.class128_292;
		}

		// Token: 0x06006258 RID: 25176 RVA: 0x00368978 File Offset: 0x00366B78
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_693(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_523);
			Class128 @class = this.class128_292;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_292 = class128_379;
			@class = this.class128_292;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006259 RID: 25177 RVA: 0x0003E8E5 File Offset: 0x0003CAE5
		[CompilerGenerated]
		internal Class128 vmethod_694()
		{
			return this.class128_293;
		}

		// Token: 0x0600625A RID: 25178 RVA: 0x003689BC File Offset: 0x00366BBC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_695(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_524);
			Class128 @class = this.class128_293;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_293 = class128_379;
			@class = this.class128_293;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600625B RID: 25179 RVA: 0x0003E8ED File Offset: 0x0003CAED
		[CompilerGenerated]
		internal Class128 vmethod_696()
		{
			return this.class128_294;
		}

		// Token: 0x0600625C RID: 25180 RVA: 0x00368A00 File Offset: 0x00366C00
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_697(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_525);
			Class128 @class = this.class128_294;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_294 = class128_379;
			@class = this.class128_294;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600625D RID: 25181 RVA: 0x0003E8F5 File Offset: 0x0003CAF5
		[CompilerGenerated]
		internal Class128 vmethod_698()
		{
			return this.class128_295;
		}

		// Token: 0x0600625E RID: 25182 RVA: 0x00368A44 File Offset: 0x00366C44
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_699(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_526);
			Class128 @class = this.class128_295;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_295 = class128_379;
			@class = this.class128_295;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600625F RID: 25183 RVA: 0x0003E8FD File Offset: 0x0003CAFD
		[CompilerGenerated]
		internal Class128 vmethod_700()
		{
			return this.class128_296;
		}

		// Token: 0x06006260 RID: 25184 RVA: 0x00368A88 File Offset: 0x00366C88
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_701(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_527);
			Class128 @class = this.class128_296;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_296 = class128_379;
			@class = this.class128_296;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006261 RID: 25185 RVA: 0x0003E905 File Offset: 0x0003CB05
		[CompilerGenerated]
		internal Class128 vmethod_702()
		{
			return this.class128_297;
		}

		// Token: 0x06006262 RID: 25186 RVA: 0x00368ACC File Offset: 0x00366CCC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_703(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_528);
			Class128 @class = this.class128_297;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_297 = class128_379;
			@class = this.class128_297;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006263 RID: 25187 RVA: 0x0003E90D File Offset: 0x0003CB0D
		[CompilerGenerated]
		internal Class128 vmethod_704()
		{
			return this.class128_298;
		}

		// Token: 0x06006264 RID: 25188 RVA: 0x00368B10 File Offset: 0x00366D10
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_705(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_529);
			Class128 @class = this.class128_298;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_298 = class128_379;
			@class = this.class128_298;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006265 RID: 25189 RVA: 0x0003E915 File Offset: 0x0003CB15
		[CompilerGenerated]
		internal Class128 vmethod_706()
		{
			return this.class128_299;
		}

		// Token: 0x06006266 RID: 25190 RVA: 0x00368B54 File Offset: 0x00366D54
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_707(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_530);
			Class128 @class = this.class128_299;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_299 = class128_379;
			@class = this.class128_299;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006267 RID: 25191 RVA: 0x0003E91D File Offset: 0x0003CB1D
		[CompilerGenerated]
		internal Class128 vmethod_708()
		{
			return this.class128_300;
		}

		// Token: 0x06006268 RID: 25192 RVA: 0x00368B98 File Offset: 0x00366D98
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_709(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_531);
			Class128 @class = this.class128_300;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_300 = class128_379;
			@class = this.class128_300;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006269 RID: 25193 RVA: 0x0003E925 File Offset: 0x0003CB25
		[CompilerGenerated]
		internal Class128 vmethod_710()
		{
			return this.class128_301;
		}

		// Token: 0x0600626A RID: 25194 RVA: 0x00368BDC File Offset: 0x00366DDC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_711(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_532);
			Class128 @class = this.class128_301;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_301 = class128_379;
			@class = this.class128_301;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600626B RID: 25195 RVA: 0x0003E92D File Offset: 0x0003CB2D
		[CompilerGenerated]
		internal Class128 vmethod_712()
		{
			return this.class128_302;
		}

		// Token: 0x0600626C RID: 25196 RVA: 0x00368C20 File Offset: 0x00366E20
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_713(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_533);
			Class128 @class = this.class128_302;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_302 = class128_379;
			@class = this.class128_302;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600626D RID: 25197 RVA: 0x0003E935 File Offset: 0x0003CB35
		[CompilerGenerated]
		internal Class128 vmethod_714()
		{
			return this.class128_303;
		}

		// Token: 0x0600626E RID: 25198 RVA: 0x00368C64 File Offset: 0x00366E64
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_715(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_534);
			Class128 @class = this.class128_303;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_303 = class128_379;
			@class = this.class128_303;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600626F RID: 25199 RVA: 0x0003E93D File Offset: 0x0003CB3D
		[CompilerGenerated]
		internal Class128 vmethod_716()
		{
			return this.class128_304;
		}

		// Token: 0x06006270 RID: 25200 RVA: 0x00368CA8 File Offset: 0x00366EA8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_717(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_535);
			Class128 @class = this.class128_304;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_304 = class128_379;
			@class = this.class128_304;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006271 RID: 25201 RVA: 0x0003E945 File Offset: 0x0003CB45
		[CompilerGenerated]
		internal Class128 vmethod_718()
		{
			return this.class128_305;
		}

		// Token: 0x06006272 RID: 25202 RVA: 0x00368CEC File Offset: 0x00366EEC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_719(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_536);
			Class128 @class = this.class128_305;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_305 = class128_379;
			@class = this.class128_305;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006273 RID: 25203 RVA: 0x0003E94D File Offset: 0x0003CB4D
		[CompilerGenerated]
		internal Class128 vmethod_720()
		{
			return this.class128_306;
		}

		// Token: 0x06006274 RID: 25204 RVA: 0x00368D30 File Offset: 0x00366F30
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_721(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_537);
			Class128 @class = this.class128_306;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_306 = class128_379;
			@class = this.class128_306;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006275 RID: 25205 RVA: 0x0003E955 File Offset: 0x0003CB55
		[CompilerGenerated]
		internal Class128 vmethod_722()
		{
			return this.class128_307;
		}

		// Token: 0x06006276 RID: 25206 RVA: 0x00368D74 File Offset: 0x00366F74
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_723(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_538);
			Class128 @class = this.class128_307;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_307 = class128_379;
			@class = this.class128_307;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006277 RID: 25207 RVA: 0x0003E95D File Offset: 0x0003CB5D
		[CompilerGenerated]
		internal Class128 vmethod_724()
		{
			return this.class128_308;
		}

		// Token: 0x06006278 RID: 25208 RVA: 0x00368DB8 File Offset: 0x00366FB8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_725(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_539);
			Class128 @class = this.class128_308;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_308 = class128_379;
			@class = this.class128_308;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006279 RID: 25209 RVA: 0x0003E965 File Offset: 0x0003CB65
		[CompilerGenerated]
		internal Class128 vmethod_726()
		{
			return this.class128_309;
		}

		// Token: 0x0600627A RID: 25210 RVA: 0x0003E96D File Offset: 0x0003CB6D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_727(Class128 class128_379)
		{
			this.class128_309 = class128_379;
		}

		// Token: 0x0600627B RID: 25211 RVA: 0x0003E976 File Offset: 0x0003CB76
		[CompilerGenerated]
		internal Class113 vmethod_728()
		{
			return this.class113_4;
		}

		// Token: 0x0600627C RID: 25212 RVA: 0x0003E97E File Offset: 0x0003CB7E
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_729(Class113 class113_9)
		{
			this.class113_4 = class113_9;
		}

		// Token: 0x0600627D RID: 25213 RVA: 0x0003E987 File Offset: 0x0003CB87
		[CompilerGenerated]
		internal Class128 vmethod_730()
		{
			return this.class128_310;
		}

		// Token: 0x0600627E RID: 25214 RVA: 0x00368DFC File Offset: 0x00366FFC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_731(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_544);
			Class128 @class = this.class128_310;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_310 = class128_379;
			@class = this.class128_310;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600627F RID: 25215 RVA: 0x0003E98F File Offset: 0x0003CB8F
		[CompilerGenerated]
		internal Timer vmethod_732()
		{
			return this.timer_5;
		}

		// Token: 0x06006280 RID: 25216 RVA: 0x00368E40 File Offset: 0x00367040
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_733(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_545);
			Timer timer = this.timer_5;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_5 = timer_10;
			timer = this.timer_5;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x06006281 RID: 25217 RVA: 0x0003E997 File Offset: 0x0003CB97
		[CompilerGenerated]
		internal Class128 vmethod_734()
		{
			return this.class128_311;
		}

		// Token: 0x06006282 RID: 25218 RVA: 0x00368E84 File Offset: 0x00367084
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_735(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_546);
			Class128 @class = this.class128_311;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_311 = class128_379;
			@class = this.class128_311;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006283 RID: 25219 RVA: 0x0003E99F File Offset: 0x0003CB9F
		[CompilerGenerated]
		internal Class128 vmethod_736()
		{
			return this.class128_312;
		}

		// Token: 0x06006284 RID: 25220 RVA: 0x00368EC8 File Offset: 0x003670C8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_737(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_547);
			Class128 @class = this.class128_312;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_312 = class128_379;
			@class = this.class128_312;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006285 RID: 25221 RVA: 0x0003E9A7 File Offset: 0x0003CBA7
		[CompilerGenerated]
		internal Class128 vmethod_738()
		{
			return this.class128_313;
		}

		// Token: 0x06006286 RID: 25222 RVA: 0x0003E9AF File Offset: 0x0003CBAF
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_739(Class128 class128_379)
		{
			this.class128_313 = class128_379;
		}

		// Token: 0x06006287 RID: 25223 RVA: 0x0003E9B8 File Offset: 0x0003CBB8
		[CompilerGenerated]
		internal Class128 vmethod_740()
		{
			return this.class128_314;
		}

		// Token: 0x06006288 RID: 25224 RVA: 0x00368F0C File Offset: 0x0036710C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_741(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_549);
			Class128 @class = this.class128_314;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_314 = class128_379;
			@class = this.class128_314;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006289 RID: 25225 RVA: 0x0003E9C0 File Offset: 0x0003CBC0
		[CompilerGenerated]
		internal Class128 vmethod_742()
		{
			return this.class128_315;
		}

		// Token: 0x0600628A RID: 25226 RVA: 0x00368F50 File Offset: 0x00367150
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_743(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_548);
			Class128 @class = this.class128_315;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_315 = class128_379;
			@class = this.class128_315;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600628B RID: 25227 RVA: 0x0003E9C8 File Offset: 0x0003CBC8
		[CompilerGenerated]
		internal Class128 vmethod_744()
		{
			return this.class128_316;
		}

		// Token: 0x0600628C RID: 25228 RVA: 0x0003E9D0 File Offset: 0x0003CBD0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_745(Class128 class128_379)
		{
			this.class128_316 = class128_379;
		}

		// Token: 0x0600628D RID: 25229 RVA: 0x0003E9D9 File Offset: 0x0003CBD9
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_746()
		{
			return this.toolStripSeparator_31;
		}

		// Token: 0x0600628E RID: 25230 RVA: 0x0003E9E1 File Offset: 0x0003CBE1
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_747(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_31 = toolStripSeparator_40;
		}

		// Token: 0x0600628F RID: 25231 RVA: 0x0003E9EA File Offset: 0x0003CBEA
		[CompilerGenerated]
		internal Class128 vmethod_748()
		{
			return this.class128_317;
		}

		// Token: 0x06006290 RID: 25232 RVA: 0x00368F94 File Offset: 0x00367194
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_749(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_550);
			Class128 @class = this.class128_317;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_317 = class128_379;
			@class = this.class128_317;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006291 RID: 25233 RVA: 0x0003E9F2 File Offset: 0x0003CBF2
		[CompilerGenerated]
		internal OpenFileDialog vmethod_750()
		{
			return this.openFileDialog_3;
		}

		// Token: 0x06006292 RID: 25234 RVA: 0x0003E9FA File Offset: 0x0003CBFA
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_751(OpenFileDialog openFileDialog_5)
		{
			this.openFileDialog_3 = openFileDialog_5;
		}

		// Token: 0x06006293 RID: 25235 RVA: 0x0003EA03 File Offset: 0x0003CC03
		[CompilerGenerated]
		internal Class128 vmethod_752()
		{
			return this.class128_318;
		}

		// Token: 0x06006294 RID: 25236 RVA: 0x00368FD8 File Offset: 0x003671D8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_753(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_551);
			Class128 @class = this.class128_318;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_318 = class128_379;
			@class = this.class128_318;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006295 RID: 25237 RVA: 0x0003EA0B File Offset: 0x0003CC0B
		[CompilerGenerated]
		internal Class128 vmethod_754()
		{
			return this.class128_319;
		}

		// Token: 0x06006296 RID: 25238 RVA: 0x0036901C File Offset: 0x0036721C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_755(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_563);
			Class128 @class = this.class128_319;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_319 = class128_379;
			@class = this.class128_319;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006297 RID: 25239 RVA: 0x0003EA13 File Offset: 0x0003CC13
		[CompilerGenerated]
		internal Class128 vmethod_756()
		{
			return this.class128_320;
		}

		// Token: 0x06006298 RID: 25240 RVA: 0x00369060 File Offset: 0x00367260
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_757(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_564);
			Class128 @class = this.class128_320;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_320 = class128_379;
			@class = this.class128_320;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006299 RID: 25241 RVA: 0x0003EA1B File Offset: 0x0003CC1B
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_758()
		{
			return this.toolStripSeparator_32;
		}

		// Token: 0x0600629A RID: 25242 RVA: 0x0003EA23 File Offset: 0x0003CC23
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_759(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_32 = toolStripSeparator_40;
		}

		// Token: 0x0600629B RID: 25243 RVA: 0x0003EA2C File Offset: 0x0003CC2C
		[CompilerGenerated]
		internal Class128 vmethod_760()
		{
			return this.class128_321;
		}

		// Token: 0x0600629C RID: 25244 RVA: 0x003690A4 File Offset: 0x003672A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_761(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_565);
			Class128 @class = this.class128_321;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_321 = class128_379;
			@class = this.class128_321;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600629D RID: 25245 RVA: 0x0003EA34 File Offset: 0x0003CC34
		[CompilerGenerated]
		internal Class128 vmethod_762()
		{
			return this.class128_322;
		}

		// Token: 0x0600629E RID: 25246 RVA: 0x003690E8 File Offset: 0x003672E8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_763(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_566);
			Class128 @class = this.class128_322;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_322 = class128_379;
			@class = this.class128_322;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600629F RID: 25247 RVA: 0x0003EA3C File Offset: 0x0003CC3C
		[CompilerGenerated]
		internal Class128 vmethod_764()
		{
			return this.class128_323;
		}

		// Token: 0x060062A0 RID: 25248 RVA: 0x0036912C File Offset: 0x0036732C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_765(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_135);
			Class128 @class = this.class128_323;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_323 = class128_379;
			@class = this.class128_323;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062A1 RID: 25249 RVA: 0x0003EA44 File Offset: 0x0003CC44
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_766()
		{
			return this.toolStripSeparator_33;
		}

		// Token: 0x060062A2 RID: 25250 RVA: 0x0003EA4C File Offset: 0x0003CC4C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_767(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_33 = toolStripSeparator_40;
		}

		// Token: 0x060062A3 RID: 25251 RVA: 0x0003EA55 File Offset: 0x0003CC55
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_768()
		{
			return this.toolStripSeparator_34;
		}

		// Token: 0x060062A4 RID: 25252 RVA: 0x0003EA5D File Offset: 0x0003CC5D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_769(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_34 = toolStripSeparator_40;
		}

		// Token: 0x060062A5 RID: 25253 RVA: 0x0003EA66 File Offset: 0x0003CC66
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_770()
		{
			return this.toolStripSeparator_35;
		}

		// Token: 0x060062A6 RID: 25254 RVA: 0x0003EA6E File Offset: 0x0003CC6E
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_771(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_35 = toolStripSeparator_40;
		}

		// Token: 0x060062A7 RID: 25255 RVA: 0x0003EA77 File Offset: 0x0003CC77
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_772()
		{
			return this.toolStripSeparator_36;
		}

		// Token: 0x060062A8 RID: 25256 RVA: 0x0003EA7F File Offset: 0x0003CC7F
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_773(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_36 = toolStripSeparator_40;
		}

		// Token: 0x060062A9 RID: 25257 RVA: 0x0003EA88 File Offset: 0x0003CC88
		[CompilerGenerated]
		internal ToolStripButton vmethod_774()
		{
			return this.toolStripButton_3;
		}

		// Token: 0x060062AA RID: 25258 RVA: 0x00369170 File Offset: 0x00367370
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_775(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_586);
			ToolStripButton toolStripButton = this.toolStripButton_3;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_3 = toolStripButton_23;
			toolStripButton = this.toolStripButton_3;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062AB RID: 25259 RVA: 0x0003EA90 File Offset: 0x0003CC90
		[CompilerGenerated]
		internal Class128 vmethod_776()
		{
			return this.class128_324;
		}

		// Token: 0x060062AC RID: 25260 RVA: 0x003691B4 File Offset: 0x003673B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_777(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_589);
			Class128 @class = this.class128_324;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_324 = class128_379;
			@class = this.class128_324;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062AD RID: 25261 RVA: 0x0003EA98 File Offset: 0x0003CC98
		[CompilerGenerated]
		internal ElementHost vmethod_778()
		{
			return this.elementHost_0;
		}

		// Token: 0x060062AE RID: 25262 RVA: 0x0003EAA0 File Offset: 0x0003CCA0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_779(ElementHost elementHost_4)
		{
			this.elementHost_0 = elementHost_4;
		}

		// Token: 0x060062AF RID: 25263 RVA: 0x0003EAA9 File Offset: 0x0003CCA9
		[CompilerGenerated]
		public Class125 vmethod_780()
		{
			return this.class125_0;
		}

		// Token: 0x060062B0 RID: 25264 RVA: 0x0003EAB1 File Offset: 0x0003CCB1
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		public void vmethod_781(Class125 class125_3)
		{
			this.class125_0 = class125_3;
		}

		// Token: 0x060062B1 RID: 25265 RVA: 0x0003EABA File Offset: 0x0003CCBA
		[CompilerGenerated]
		internal Class128 vmethod_782()
		{
			return this.class128_325;
		}

		// Token: 0x060062B2 RID: 25266 RVA: 0x0003EAC2 File Offset: 0x0003CCC2
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_783(Class128 class128_379)
		{
			this.class128_325 = class128_379;
		}

		// Token: 0x060062B3 RID: 25267 RVA: 0x0003EACB File Offset: 0x0003CCCB
		[CompilerGenerated]
		internal Class128 vmethod_784()
		{
			return this.class128_326;
		}

		// Token: 0x060062B4 RID: 25268 RVA: 0x003691F8 File Offset: 0x003673F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_785(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_590);
			Class128 @class = this.class128_326;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_326 = class128_379;
			@class = this.class128_326;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062B5 RID: 25269 RVA: 0x0003EAD3 File Offset: 0x0003CCD3
		[CompilerGenerated]
		internal Class128 vmethod_786()
		{
			return this.class128_327;
		}

		// Token: 0x060062B6 RID: 25270 RVA: 0x0036923C File Offset: 0x0036743C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_787(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_604);
			Class128 @class = this.class128_327;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_327 = class128_379;
			@class = this.class128_327;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062B7 RID: 25271 RVA: 0x0003EADB File Offset: 0x0003CCDB
		[CompilerGenerated]
		internal Class128 vmethod_788()
		{
			return this.class128_328;
		}

		// Token: 0x060062B8 RID: 25272 RVA: 0x00369280 File Offset: 0x00367480
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_789(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_606);
			Class128 @class = this.class128_328;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_328 = class128_379;
			@class = this.class128_328;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062B9 RID: 25273 RVA: 0x0003EAE3 File Offset: 0x0003CCE3
		[CompilerGenerated]
		public Timer vmethod_790()
		{
			return this.timer_6;
		}

		// Token: 0x060062BA RID: 25274 RVA: 0x003692C4 File Offset: 0x003674C4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		public void vmethod_791(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_574);
			Timer timer = this.timer_6;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_6 = timer_10;
			timer = this.timer_6;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x060062BB RID: 25275 RVA: 0x0003EAEB File Offset: 0x0003CCEB
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_792()
		{
			return this.toolStripSeparator_37;
		}

		// Token: 0x060062BC RID: 25276 RVA: 0x0003EAF3 File Offset: 0x0003CCF3
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_793(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_37 = toolStripSeparator_40;
		}

		// Token: 0x060062BD RID: 25277 RVA: 0x0003EAFC File Offset: 0x0003CCFC
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_794()
		{
			return this.toolStripSeparator_38;
		}

		// Token: 0x060062BE RID: 25278 RVA: 0x0003EB04 File Offset: 0x0003CD04
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_795(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_38 = toolStripSeparator_40;
		}

		// Token: 0x060062BF RID: 25279 RVA: 0x0003EB0D File Offset: 0x0003CD0D
		[CompilerGenerated]
		public WorldWindow vmethod_796()
		{
			return this.worldWindow_0;
		}

		// Token: 0x060062C0 RID: 25280 RVA: 0x00369308 File Offset: 0x00367508
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		public void vmethod_797(WorldWindow worldWindow_1)
		{
			EventHandler value = new EventHandler(this.method_112);
			MouseEventHandler value2 = new MouseEventHandler(this.method_113);
			MouseEventHandler value3 = new MouseEventHandler(this.method_114);
			MouseEventHandler value4 = new MouseEventHandler(this.method_118);
			MouseEventHandler value5 = new MouseEventHandler(this.method_119);
			WorldWindow worldWindow = this.worldWindow_0;
			if (worldWindow != null)
			{
				worldWindow.MouseEnter -= value;
				worldWindow.MouseUp -= value2;
				worldWindow.MouseDown -= value3;
				worldWindow.MouseMove -= value4;
				worldWindow.MouseWheel -= value5;
			}
			this.worldWindow_0 = worldWindow_1;
			worldWindow = this.worldWindow_0;
			if (worldWindow != null)
			{
				worldWindow.MouseEnter += value;
				worldWindow.MouseUp += value2;
				worldWindow.MouseDown += value3;
				worldWindow.MouseMove += value4;
				worldWindow.MouseWheel += value5;
			}
		}

		// Token: 0x060062C1 RID: 25281 RVA: 0x0003EB15 File Offset: 0x0003CD15
		[CompilerGenerated]
		internal Panel vmethod_798()
		{
			return this.panel_0;
		}

		// Token: 0x060062C2 RID: 25282 RVA: 0x0003EB1D File Offset: 0x0003CD1D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_799(Panel panel_1)
		{
			this.panel_0 = panel_1;
		}

		// Token: 0x060062C3 RID: 25283 RVA: 0x0003EB26 File Offset: 0x0003CD26
		[CompilerGenerated]
		internal ElementHost vmethod_800()
		{
			return this.elementHost_1;
		}

		// Token: 0x060062C4 RID: 25284 RVA: 0x0003EB2E File Offset: 0x0003CD2E
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_801(ElementHost elementHost_4)
		{
			this.elementHost_1 = elementHost_4;
		}

		// Token: 0x060062C5 RID: 25285 RVA: 0x0003EB37 File Offset: 0x0003CD37
		[CompilerGenerated]
		internal Timer vmethod_802()
		{
			return this.timer_7;
		}

		// Token: 0x060062C6 RID: 25286 RVA: 0x003693C8 File Offset: 0x003675C8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_803(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_637);
			Timer timer = this.timer_7;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_7 = timer_10;
			timer = this.timer_7;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x060062C7 RID: 25287 RVA: 0x0003EB3F File Offset: 0x0003CD3F
		[CompilerGenerated]
		internal Timer vmethod_804()
		{
			return this.timer_8;
		}

		// Token: 0x060062C8 RID: 25288 RVA: 0x0036940C File Offset: 0x0036760C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_805(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_632);
			Timer timer = this.timer_8;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_8 = timer_10;
			timer = this.timer_8;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x060062C9 RID: 25289 RVA: 0x0003EB47 File Offset: 0x0003CD47
		[CompilerGenerated]
		internal Class125 vmethod_806()
		{
			return this.class125_1;
		}

		// Token: 0x060062CA RID: 25290 RVA: 0x0003EB4F File Offset: 0x0003CD4F
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_807(Class125 class125_3)
		{
			this.class125_1 = class125_3;
		}

		// Token: 0x060062CB RID: 25291 RVA: 0x0003EB58 File Offset: 0x0003CD58
		[CompilerGenerated]
		internal ToolStripLabel vmethod_808()
		{
			return this.toolStripLabel_0;
		}

		// Token: 0x060062CC RID: 25292 RVA: 0x0003EB60 File Offset: 0x0003CD60
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_809(ToolStripLabel toolStripLabel_2)
		{
			this.toolStripLabel_0 = toolStripLabel_2;
		}

		// Token: 0x060062CD RID: 25293 RVA: 0x0003EB69 File Offset: 0x0003CD69
		[CompilerGenerated]
		internal ToolStripButton vmethod_810()
		{
			return this.toolStripButton_4;
		}

		// Token: 0x060062CE RID: 25294 RVA: 0x00369450 File Offset: 0x00367650
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_811(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_591);
			ToolStripButton toolStripButton = this.toolStripButton_4;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_4 = toolStripButton_23;
			toolStripButton = this.toolStripButton_4;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062CF RID: 25295 RVA: 0x0003EB71 File Offset: 0x0003CD71
		[CompilerGenerated]
		internal ToolStripButton vmethod_812()
		{
			return this.toolStripButton_5;
		}

		// Token: 0x060062D0 RID: 25296 RVA: 0x00369494 File Offset: 0x00367694
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_813(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_592);
			ToolStripButton toolStripButton = this.toolStripButton_5;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_5 = toolStripButton_23;
			toolStripButton = this.toolStripButton_5;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062D1 RID: 25297 RVA: 0x0003EB79 File Offset: 0x0003CD79
		[CompilerGenerated]
		internal ToolStripButton vmethod_814()
		{
			return this.toolStripButton_6;
		}

		// Token: 0x060062D2 RID: 25298 RVA: 0x003694D8 File Offset: 0x003676D8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_815(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_593);
			ToolStripButton toolStripButton = this.toolStripButton_6;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_6 = toolStripButton_23;
			toolStripButton = this.toolStripButton_6;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062D3 RID: 25299 RVA: 0x0003EB81 File Offset: 0x0003CD81
		[CompilerGenerated]
		internal ToolStripButton vmethod_816()
		{
			return this.toolStripButton_7;
		}

		// Token: 0x060062D4 RID: 25300 RVA: 0x0036951C File Offset: 0x0036771C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_817(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_594);
			ToolStripButton toolStripButton = this.toolStripButton_7;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_7 = toolStripButton_23;
			toolStripButton = this.toolStripButton_7;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062D5 RID: 25301 RVA: 0x0003EB89 File Offset: 0x0003CD89
		[CompilerGenerated]
		internal ToolStripButton vmethod_818()
		{
			return this.toolStripButton_8;
		}

		// Token: 0x060062D6 RID: 25302 RVA: 0x00369560 File Offset: 0x00367760
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_819(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_595);
			ToolStripButton toolStripButton = this.toolStripButton_8;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_8 = toolStripButton_23;
			toolStripButton = this.toolStripButton_8;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062D7 RID: 25303 RVA: 0x0003EB91 File Offset: 0x0003CD91
		[CompilerGenerated]
		internal ToolStripButton vmethod_820()
		{
			return this.toolStripButton_9;
		}

		// Token: 0x060062D8 RID: 25304 RVA: 0x003695A4 File Offset: 0x003677A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_821(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_596);
			ToolStripButton toolStripButton = this.toolStripButton_9;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_9 = toolStripButton_23;
			toolStripButton = this.toolStripButton_9;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062D9 RID: 25305 RVA: 0x0003EB99 File Offset: 0x0003CD99
		[CompilerGenerated]
		internal ToolStripButton vmethod_822()
		{
			return this.toolStripButton_10;
		}

		// Token: 0x060062DA RID: 25306 RVA: 0x003695E8 File Offset: 0x003677E8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_823(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_597);
			ToolStripButton toolStripButton = this.toolStripButton_10;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_10 = toolStripButton_23;
			toolStripButton = this.toolStripButton_10;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062DB RID: 25307 RVA: 0x0003EBA1 File Offset: 0x0003CDA1
		[CompilerGenerated]
		internal ToolStripButton vmethod_824()
		{
			return this.toolStripButton_11;
		}

		// Token: 0x060062DC RID: 25308 RVA: 0x0036962C File Offset: 0x0036782C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_825(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_598);
			ToolStripButton toolStripButton = this.toolStripButton_11;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_11 = toolStripButton_23;
			toolStripButton = this.toolStripButton_11;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062DD RID: 25309 RVA: 0x0003EBA9 File Offset: 0x0003CDA9
		[CompilerGenerated]
		internal ToolStripButton vmethod_826()
		{
			return this.toolStripButton_12;
		}

		// Token: 0x060062DE RID: 25310 RVA: 0x00369670 File Offset: 0x00367870
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_827(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_599);
			ToolStripButton toolStripButton = this.toolStripButton_12;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_12 = toolStripButton_23;
			toolStripButton = this.toolStripButton_12;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062DF RID: 25311 RVA: 0x0003EBB1 File Offset: 0x0003CDB1
		[CompilerGenerated]
		internal ToolStripButton vmethod_828()
		{
			return this.toolStripButton_13;
		}

		// Token: 0x060062E0 RID: 25312 RVA: 0x003696B4 File Offset: 0x003678B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_829(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_600);
			ToolStripButton toolStripButton = this.toolStripButton_13;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_13 = toolStripButton_23;
			toolStripButton = this.toolStripButton_13;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062E1 RID: 25313 RVA: 0x0003EBB9 File Offset: 0x0003CDB9
		[CompilerGenerated]
		internal ToolStripButton vmethod_830()
		{
			return this.toolStripButton_14;
		}

		// Token: 0x060062E2 RID: 25314 RVA: 0x003696F8 File Offset: 0x003678F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_831(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_601);
			ToolStripButton toolStripButton = this.toolStripButton_14;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_14 = toolStripButton_23;
			toolStripButton = this.toolStripButton_14;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062E3 RID: 25315 RVA: 0x0003EBC1 File Offset: 0x0003CDC1
		[CompilerGenerated]
		internal ToolStripButton vmethod_832()
		{
			return this.toolStripButton_15;
		}

		// Token: 0x060062E4 RID: 25316 RVA: 0x0036973C File Offset: 0x0036793C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_833(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_602);
			ToolStripButton toolStripButton = this.toolStripButton_15;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_15 = toolStripButton_23;
			toolStripButton = this.toolStripButton_15;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062E5 RID: 25317 RVA: 0x0003EBC9 File Offset: 0x0003CDC9
		[CompilerGenerated]
		internal ToolStripButton vmethod_834()
		{
			return this.toolStripButton_16;
		}

		// Token: 0x060062E6 RID: 25318 RVA: 0x00369780 File Offset: 0x00367980
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_835(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_603);
			ToolStripButton toolStripButton = this.toolStripButton_16;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_16 = toolStripButton_23;
			toolStripButton = this.toolStripButton_16;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x060062E7 RID: 25319 RVA: 0x0003EBD1 File Offset: 0x0003CDD1
		[CompilerGenerated]
		internal Class125 vmethod_836()
		{
			return this.class125_2;
		}

		// Token: 0x060062E8 RID: 25320 RVA: 0x0003EBD9 File Offset: 0x0003CDD9
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_837(Class125 class125_3)
		{
			this.class125_2 = class125_3;
		}

		// Token: 0x060062E9 RID: 25321 RVA: 0x0003EBE2 File Offset: 0x0003CDE2
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_838()
		{
			return this.toolStripMenuItem_0;
		}

		// Token: 0x060062EA RID: 25322 RVA: 0x0003EBEA File Offset: 0x0003CDEA
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_839(ToolStripMenuItem toolStripMenuItem_25)
		{
			this.toolStripMenuItem_0 = toolStripMenuItem_25;
		}

		// Token: 0x060062EB RID: 25323 RVA: 0x0003EBF3 File Offset: 0x0003CDF3
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_840()
		{
			return this.toolStripMenuItem_1;
		}

		// Token: 0x060062EC RID: 25324 RVA: 0x003697C4 File Offset: 0x003679C4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_841(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_88);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_1;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_1 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_1;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x060062ED RID: 25325 RVA: 0x0003EBFB File Offset: 0x0003CDFB
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_842()
		{
			return this.toolStripMenuItem_2;
		}

		// Token: 0x060062EE RID: 25326 RVA: 0x00369808 File Offset: 0x00367A08
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_843(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_87);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_2;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_2 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_2;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x060062EF RID: 25327 RVA: 0x0003EC03 File Offset: 0x0003CE03
		[CompilerGenerated]
		internal Class128 vmethod_844()
		{
			return this.class128_329;
		}

		// Token: 0x060062F0 RID: 25328 RVA: 0x0036984C File Offset: 0x00367A4C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_845(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_553);
			Class128 @class = this.class128_329;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_329 = class128_379;
			@class = this.class128_329;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062F1 RID: 25329 RVA: 0x0003EC0B File Offset: 0x0003CE0B
		[CompilerGenerated]
		internal Class128 vmethod_846()
		{
			return this.class128_330;
		}

		// Token: 0x060062F2 RID: 25330 RVA: 0x00369890 File Offset: 0x00367A90
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_847(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_567);
			Class128 @class = this.class128_330;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_330 = class128_379;
			@class = this.class128_330;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062F3 RID: 25331 RVA: 0x0003EC13 File Offset: 0x0003CE13
		[CompilerGenerated]
		internal Class128 vmethod_848()
		{
			return this.class128_331;
		}

		// Token: 0x060062F4 RID: 25332 RVA: 0x003698D4 File Offset: 0x00367AD4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_849(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_555);
			Class128 @class = this.class128_331;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_331 = class128_379;
			@class = this.class128_331;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062F5 RID: 25333 RVA: 0x0003EC1B File Offset: 0x0003CE1B
		[CompilerGenerated]
		internal Class128 vmethod_850()
		{
			return this.class128_332;
		}

		// Token: 0x060062F6 RID: 25334 RVA: 0x00369918 File Offset: 0x00367B18
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_851(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_556);
			Class128 @class = this.class128_332;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_332 = class128_379;
			@class = this.class128_332;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062F7 RID: 25335 RVA: 0x0003EC23 File Offset: 0x0003CE23
		[CompilerGenerated]
		internal Class128 vmethod_852()
		{
			return this.class128_333;
		}

		// Token: 0x060062F8 RID: 25336 RVA: 0x0036995C File Offset: 0x00367B5C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_853(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_568);
			Class128 @class = this.class128_333;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_333 = class128_379;
			@class = this.class128_333;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062F9 RID: 25337 RVA: 0x0003EC2B File Offset: 0x0003CE2B
		[CompilerGenerated]
		internal Class128 vmethod_854()
		{
			return this.class128_334;
		}

		// Token: 0x060062FA RID: 25338 RVA: 0x003699A0 File Offset: 0x00367BA0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_855(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_572);
			Class128 @class = this.class128_334;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_334 = class128_379;
			@class = this.class128_334;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062FB RID: 25339 RVA: 0x0003EC33 File Offset: 0x0003CE33
		[CompilerGenerated]
		internal Class128 vmethod_856()
		{
			return this.class128_335;
		}

		// Token: 0x060062FC RID: 25340 RVA: 0x0003EC3B File Offset: 0x0003CE3B
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_857(Class128 class128_379)
		{
			this.class128_335 = class128_379;
		}

		// Token: 0x060062FD RID: 25341 RVA: 0x0003EC44 File Offset: 0x0003CE44
		[CompilerGenerated]
		internal Class128 vmethod_858()
		{
			return this.class128_336;
		}

		// Token: 0x060062FE RID: 25342 RVA: 0x003699E4 File Offset: 0x00367BE4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_859(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_577);
			Class128 @class = this.class128_336;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_336 = class128_379;
			@class = this.class128_336;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x060062FF RID: 25343 RVA: 0x0003EC4C File Offset: 0x0003CE4C
		[CompilerGenerated]
		internal Class128 vmethod_860()
		{
			return this.class128_337;
		}

		// Token: 0x06006300 RID: 25344 RVA: 0x00369A28 File Offset: 0x00367C28
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_861(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_578);
			Class128 @class = this.class128_337;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_337 = class128_379;
			@class = this.class128_337;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006301 RID: 25345 RVA: 0x0003EC54 File Offset: 0x0003CE54
		[CompilerGenerated]
		internal Class128 vmethod_862()
		{
			return this.class128_338;
		}

		// Token: 0x06006302 RID: 25346 RVA: 0x0003EC5C File Offset: 0x0003CE5C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_863(Class128 class128_379)
		{
			this.class128_338 = class128_379;
		}

		// Token: 0x06006303 RID: 25347 RVA: 0x0003EC65 File Offset: 0x0003CE65
		[CompilerGenerated]
		internal Class128 vmethod_864()
		{
			return this.class128_339;
		}

		// Token: 0x06006304 RID: 25348 RVA: 0x0003EC6D File Offset: 0x0003CE6D
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_865(Class128 class128_379)
		{
			this.class128_339 = class128_379;
		}

		// Token: 0x06006305 RID: 25349 RVA: 0x0003EC76 File Offset: 0x0003CE76
		[CompilerGenerated]
		internal Class128 vmethod_866()
		{
			return this.class128_340;
		}

		// Token: 0x06006306 RID: 25350 RVA: 0x00369A6C File Offset: 0x00367C6C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_867(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_557);
			Class128 @class = this.class128_340;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_340 = class128_379;
			@class = this.class128_340;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006307 RID: 25351 RVA: 0x0003EC7E File Offset: 0x0003CE7E
		[CompilerGenerated]
		internal Class128 vmethod_868()
		{
			return this.class128_341;
		}

		// Token: 0x06006308 RID: 25352 RVA: 0x00369AB0 File Offset: 0x00367CB0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_869(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_558);
			Class128 @class = this.class128_341;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_341 = class128_379;
			@class = this.class128_341;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006309 RID: 25353 RVA: 0x0003EC86 File Offset: 0x0003CE86
		[CompilerGenerated]
		internal Class128 vmethod_870()
		{
			return this.class128_342;
		}

		// Token: 0x0600630A RID: 25354 RVA: 0x00369AF4 File Offset: 0x00367CF4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_871(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_559);
			Class128 @class = this.class128_342;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_342 = class128_379;
			@class = this.class128_342;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600630B RID: 25355 RVA: 0x0003EC8E File Offset: 0x0003CE8E
		[CompilerGenerated]
		internal Class128 vmethod_872()
		{
			return this.class128_343;
		}

		// Token: 0x0600630C RID: 25356 RVA: 0x0003EC96 File Offset: 0x0003CE96
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_873(Class128 class128_379)
		{
			this.class128_343 = class128_379;
		}

		// Token: 0x0600630D RID: 25357 RVA: 0x0003EC9F File Offset: 0x0003CE9F
		[CompilerGenerated]
		internal Class128 vmethod_874()
		{
			return this.class128_344;
		}

		// Token: 0x0600630E RID: 25358 RVA: 0x0003ECA7 File Offset: 0x0003CEA7
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_875(Class128 class128_379)
		{
			this.class128_344 = class128_379;
		}

		// Token: 0x0600630F RID: 25359 RVA: 0x0003ECB0 File Offset: 0x0003CEB0
		[CompilerGenerated]
		internal Class128 vmethod_876()
		{
			return this.class128_345;
		}

		// Token: 0x06006310 RID: 25360 RVA: 0x0003ECB8 File Offset: 0x0003CEB8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_877(Class128 class128_379)
		{
			this.class128_345 = class128_379;
		}

		// Token: 0x06006311 RID: 25361 RVA: 0x0003ECC1 File Offset: 0x0003CEC1
		[CompilerGenerated]
		internal Class128 vmethod_878()
		{
			return this.class128_346;
		}

		// Token: 0x06006312 RID: 25362 RVA: 0x0003ECC9 File Offset: 0x0003CEC9
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_879(Class128 class128_379)
		{
			this.class128_346 = class128_379;
		}

		// Token: 0x06006313 RID: 25363 RVA: 0x0003ECD2 File Offset: 0x0003CED2
		[CompilerGenerated]
		internal Class128 vmethod_880()
		{
			return this.class128_347;
		}

		// Token: 0x06006314 RID: 25364 RVA: 0x0003ECDA File Offset: 0x0003CEDA
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_881(Class128 class128_379)
		{
			this.class128_347 = class128_379;
		}

		// Token: 0x06006315 RID: 25365 RVA: 0x0003ECE3 File Offset: 0x0003CEE3
		[CompilerGenerated]
		internal Class128 vmethod_882()
		{
			return this.class128_348;
		}

		// Token: 0x06006316 RID: 25366 RVA: 0x00369B38 File Offset: 0x00367D38
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_883(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_560);
			Class128 @class = this.class128_348;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_348 = class128_379;
			@class = this.class128_348;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006317 RID: 25367 RVA: 0x0003ECEB File Offset: 0x0003CEEB
		[CompilerGenerated]
		internal Class128 vmethod_884()
		{
			return this.class128_349;
		}

		// Token: 0x06006318 RID: 25368 RVA: 0x00369B7C File Offset: 0x00367D7C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_885(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_569);
			Class128 @class = this.class128_349;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_349 = class128_379;
			@class = this.class128_349;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006319 RID: 25369 RVA: 0x0003ECF3 File Offset: 0x0003CEF3
		[CompilerGenerated]
		internal Class128 vmethod_886()
		{
			return this.class128_350;
		}

		// Token: 0x0600631A RID: 25370 RVA: 0x00369BC0 File Offset: 0x00367DC0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_887(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_543);
			Class128 @class = this.class128_350;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_350 = class128_379;
			@class = this.class128_350;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600631B RID: 25371 RVA: 0x0003ECFB File Offset: 0x0003CEFB
		[CompilerGenerated]
		internal Class128 vmethod_888()
		{
			return this.class128_351;
		}

		// Token: 0x0600631C RID: 25372 RVA: 0x00369C04 File Offset: 0x00367E04
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_889(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_542);
			Class128 @class = this.class128_351;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_351 = class128_379;
			@class = this.class128_351;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600631D RID: 25373 RVA: 0x0003ED03 File Offset: 0x0003CF03
		[CompilerGenerated]
		internal Class128 vmethod_890()
		{
			return this.class128_352;
		}

		// Token: 0x0600631E RID: 25374 RVA: 0x00369C48 File Offset: 0x00367E48
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_891(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_541);
			Class128 @class = this.class128_352;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_352 = class128_379;
			@class = this.class128_352;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600631F RID: 25375 RVA: 0x0003ED0B File Offset: 0x0003CF0B
		[CompilerGenerated]
		internal Class128 vmethod_892()
		{
			return this.class128_353;
		}

		// Token: 0x06006320 RID: 25376 RVA: 0x00369C8C File Offset: 0x00367E8C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_893(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_540);
			Class128 @class = this.class128_353;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_353 = class128_379;
			@class = this.class128_353;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006321 RID: 25377 RVA: 0x0003ED13 File Offset: 0x0003CF13
		[CompilerGenerated]
		internal Class128 vmethod_894()
		{
			return this.class128_354;
		}

		// Token: 0x06006322 RID: 25378 RVA: 0x00369CD0 File Offset: 0x00367ED0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_895(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_571);
			Class128 @class = this.class128_354;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_354 = class128_379;
			@class = this.class128_354;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006323 RID: 25379 RVA: 0x0003ED1B File Offset: 0x0003CF1B
		[CompilerGenerated]
		internal Class128 vmethod_896()
		{
			return this.class128_355;
		}

		// Token: 0x06006324 RID: 25380 RVA: 0x00369D14 File Offset: 0x00367F14
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_897(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_570);
			Class128 @class = this.class128_355;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_355 = class128_379;
			@class = this.class128_355;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006325 RID: 25381 RVA: 0x0003ED23 File Offset: 0x0003CF23
		[CompilerGenerated]
		internal Class128 vmethod_898()
		{
			return this.class128_356;
		}

		// Token: 0x06006326 RID: 25382 RVA: 0x0003ED2B File Offset: 0x0003CF2B
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_899(Class128 class128_379)
		{
			this.class128_356 = class128_379;
		}

		// Token: 0x06006327 RID: 25383 RVA: 0x0003ED34 File Offset: 0x0003CF34
		[CompilerGenerated]
		internal Class128 vmethod_900()
		{
			return this.class128_357;
		}

		// Token: 0x06006328 RID: 25384 RVA: 0x00369D58 File Offset: 0x00367F58
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_901(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_90);
			Class128 @class = this.class128_357;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_357 = class128_379;
			@class = this.class128_357;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006329 RID: 25385 RVA: 0x0003ED3C File Offset: 0x0003CF3C
		[CompilerGenerated]
		internal Class128 vmethod_902()
		{
			return this.class128_358;
		}

		// Token: 0x0600632A RID: 25386 RVA: 0x00369D9C File Offset: 0x00367F9C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_903(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_89);
			Class128 @class = this.class128_358;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_358 = class128_379;
			@class = this.class128_358;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600632B RID: 25387 RVA: 0x0003ED44 File Offset: 0x0003CF44
		[CompilerGenerated]
		internal Class128 vmethod_904()
		{
			return this.class128_359;
		}

		// Token: 0x0600632C RID: 25388 RVA: 0x00369DE0 File Offset: 0x00367FE0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_905(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_561);
			Class128 @class = this.class128_359;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_359 = class128_379;
			@class = this.class128_359;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600632D RID: 25389 RVA: 0x0003ED4C File Offset: 0x0003CF4C
		[CompilerGenerated]
		internal Class128 vmethod_906()
		{
			return this.class128_360;
		}

		// Token: 0x0600632E RID: 25390 RVA: 0x00369E24 File Offset: 0x00368024
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_907(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_576);
			Class128 @class = this.class128_360;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_360 = class128_379;
			@class = this.class128_360;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600632F RID: 25391 RVA: 0x0003ED54 File Offset: 0x0003CF54
		[CompilerGenerated]
		internal Class128 vmethod_908()
		{
			return this.class128_361;
		}

		// Token: 0x06006330 RID: 25392 RVA: 0x00369E68 File Offset: 0x00368068
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_909(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_573);
			Class128 @class = this.class128_361;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_361 = class128_379;
			@class = this.class128_361;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006331 RID: 25393 RVA: 0x0003ED5C File Offset: 0x0003CF5C
		[CompilerGenerated]
		internal Class128 vmethod_910()
		{
			return this.class128_362;
		}

		// Token: 0x06006332 RID: 25394 RVA: 0x0003ED64 File Offset: 0x0003CF64
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_911(Class128 class128_379)
		{
			this.class128_362 = class128_379;
		}

		// Token: 0x06006333 RID: 25395 RVA: 0x0003ED6D File Offset: 0x0003CF6D
		[CompilerGenerated]
		internal Class128 vmethod_912()
		{
			return this.class128_363;
		}

		// Token: 0x06006334 RID: 25396 RVA: 0x0003ED75 File Offset: 0x0003CF75
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_913(Class128 class128_379)
		{
			this.class128_363 = class128_379;
		}

		// Token: 0x06006335 RID: 25397 RVA: 0x0003ED7E File Offset: 0x0003CF7E
		[CompilerGenerated]
		internal Class128 vmethod_914()
		{
			return this.class128_364;
		}

		// Token: 0x06006336 RID: 25398 RVA: 0x0003ED86 File Offset: 0x0003CF86
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_915(Class128 class128_379)
		{
			this.class128_364 = class128_379;
		}

		// Token: 0x06006337 RID: 25399 RVA: 0x0003ED8F File Offset: 0x0003CF8F
		[CompilerGenerated]
		internal Class128 vmethod_916()
		{
			return this.class128_365;
		}

		// Token: 0x06006338 RID: 25400 RVA: 0x0003ED97 File Offset: 0x0003CF97
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_917(Class128 class128_379)
		{
			this.class128_365 = class128_379;
		}

		// Token: 0x06006339 RID: 25401 RVA: 0x0003EDA0 File Offset: 0x0003CFA0
		[CompilerGenerated]
		internal Class128 vmethod_918()
		{
			return this.class128_366;
		}

		// Token: 0x0600633A RID: 25402 RVA: 0x00369EAC File Offset: 0x003680AC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_919(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_130);
			Class128 @class = this.class128_366;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_366 = class128_379;
			@class = this.class128_366;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600633B RID: 25403 RVA: 0x0003EDA8 File Offset: 0x0003CFA8
		[CompilerGenerated]
		internal Class128 vmethod_920()
		{
			return this.class128_367;
		}

		// Token: 0x0600633C RID: 25404 RVA: 0x00369EF0 File Offset: 0x003680F0
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_921(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_579);
			Class128 @class = this.class128_367;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_367 = class128_379;
			@class = this.class128_367;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600633D RID: 25405 RVA: 0x0003EDB0 File Offset: 0x0003CFB0
		[CompilerGenerated]
		internal Class128 vmethod_922()
		{
			return this.class128_368;
		}

		// Token: 0x0600633E RID: 25406 RVA: 0x00369F34 File Offset: 0x00368134
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_923(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_580);
			Class128 @class = this.class128_368;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_368 = class128_379;
			@class = this.class128_368;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600633F RID: 25407 RVA: 0x0003EDB8 File Offset: 0x0003CFB8
		[CompilerGenerated]
		internal Class128 vmethod_924()
		{
			return this.class128_369;
		}

		// Token: 0x06006340 RID: 25408 RVA: 0x00369F78 File Offset: 0x00368178
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_925(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_581);
			Class128 @class = this.class128_369;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_369 = class128_379;
			@class = this.class128_369;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006341 RID: 25409 RVA: 0x0003EDC0 File Offset: 0x0003CFC0
		[CompilerGenerated]
		internal Class128 vmethod_926()
		{
			return this.class128_370;
		}

		// Token: 0x06006342 RID: 25410 RVA: 0x00369FBC File Offset: 0x003681BC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_927(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_582);
			Class128 @class = this.class128_370;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_370 = class128_379;
			@class = this.class128_370;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006343 RID: 25411 RVA: 0x0003EDC8 File Offset: 0x0003CFC8
		[CompilerGenerated]
		internal Class128 vmethod_928()
		{
			return this.class128_371;
		}

		// Token: 0x06006344 RID: 25412 RVA: 0x0036A000 File Offset: 0x00368200
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_929(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_583);
			Class128 @class = this.class128_371;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_371 = class128_379;
			@class = this.class128_371;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006345 RID: 25413 RVA: 0x0003EDD0 File Offset: 0x0003CFD0
		[CompilerGenerated]
		internal Class128 vmethod_930()
		{
			return this.class128_372;
		}

		// Token: 0x06006346 RID: 25414 RVA: 0x0036A044 File Offset: 0x00368244
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_931(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_584);
			Class128 @class = this.class128_372;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_372 = class128_379;
			@class = this.class128_372;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006347 RID: 25415 RVA: 0x0003EDD8 File Offset: 0x0003CFD8
		[CompilerGenerated]
		internal Class128 vmethod_932()
		{
			return this.class128_373;
		}

		// Token: 0x06006348 RID: 25416 RVA: 0x0036A088 File Offset: 0x00368288
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_933(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_585);
			Class128 @class = this.class128_373;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_373 = class128_379;
			@class = this.class128_373;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006349 RID: 25417 RVA: 0x0003EDE0 File Offset: 0x0003CFE0
		[CompilerGenerated]
		internal Class128 vmethod_934()
		{
			return this.class128_374;
		}

		// Token: 0x0600634A RID: 25418 RVA: 0x0036A0CC File Offset: 0x003682CC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_935(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_587);
			Class128 @class = this.class128_374;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_374 = class128_379;
			@class = this.class128_374;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600634B RID: 25419 RVA: 0x0003EDE8 File Offset: 0x0003CFE8
		[CompilerGenerated]
		internal Class128 vmethod_936()
		{
			return this.class128_375;
		}

		// Token: 0x0600634C RID: 25420 RVA: 0x0036A110 File Offset: 0x00368310
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_937(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_292);
			Class128 @class = this.class128_375;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_375 = class128_379;
			@class = this.class128_375;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600634D RID: 25421 RVA: 0x0003EDF0 File Offset: 0x0003CFF0
		[CompilerGenerated]
		internal Class128 vmethod_938()
		{
			return this.class128_376;
		}

		// Token: 0x0600634E RID: 25422 RVA: 0x0036A154 File Offset: 0x00368354
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_939(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_131);
			Class128 @class = this.class128_376;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_376 = class128_379;
			@class = this.class128_376;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x0600634F RID: 25423 RVA: 0x0003EDF8 File Offset: 0x0003CFF8
		[CompilerGenerated]
		internal Class128 vmethod_940()
		{
			return this.class128_377;
		}

		// Token: 0x06006350 RID: 25424 RVA: 0x0036A198 File Offset: 0x00368398
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_941(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_588);
			Class128 @class = this.class128_377;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_377 = class128_379;
			@class = this.class128_377;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006351 RID: 25425 RVA: 0x0003EE00 File Offset: 0x0003D000
		[CompilerGenerated]
		internal ToolStripButton vmethod_942()
		{
			return this.toolStripButton_17;
		}

		// Token: 0x06006352 RID: 25426 RVA: 0x0036A1DC File Offset: 0x003683DC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_943(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_605);
			ToolStripButton toolStripButton = this.toolStripButton_17;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_17 = toolStripButton_23;
			toolStripButton = this.toolStripButton_17;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x06006353 RID: 25427 RVA: 0x0003EE08 File Offset: 0x0003D008
		[CompilerGenerated]
		internal Class111 vmethod_944()
		{
			return this.class111_0;
		}

		// Token: 0x06006354 RID: 25428 RVA: 0x0036A220 File Offset: 0x00368420
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_945(Class111 class111_1)
		{
			EventHandler value = new EventHandler(this.method_100);
			Class111 @class = this.class111_0;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class111_0 = class111_1;
			@class = this.class111_0;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006355 RID: 25429 RVA: 0x0003EE10 File Offset: 0x0003D010
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_946()
		{
			return this.toolStripMenuItem_3;
		}

		// Token: 0x06006356 RID: 25430 RVA: 0x0003EE18 File Offset: 0x0003D018
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_947(ToolStripMenuItem toolStripMenuItem_25)
		{
			this.toolStripMenuItem_3 = toolStripMenuItem_25;
		}

		// Token: 0x06006357 RID: 25431 RVA: 0x0003EE21 File Offset: 0x0003D021
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_948()
		{
			return this.toolStripMenuItem_4;
		}

		// Token: 0x06006358 RID: 25432 RVA: 0x0036A264 File Offset: 0x00368464
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_949(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_633);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_4;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_4 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_4;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006359 RID: 25433 RVA: 0x0003EE29 File Offset: 0x0003D029
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_950()
		{
			return this.toolStripMenuItem_5;
		}

		// Token: 0x0600635A RID: 25434 RVA: 0x0036A2A8 File Offset: 0x003684A8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_951(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_634);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_5;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_5 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_5;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x0600635B RID: 25435 RVA: 0x0003EE31 File Offset: 0x0003D031
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_952()
		{
			return this.toolStripMenuItem_6;
		}

		// Token: 0x0600635C RID: 25436 RVA: 0x0036A2EC File Offset: 0x003684EC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_953(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_608);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_6;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_6 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_6;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x0600635D RID: 25437 RVA: 0x0003EE39 File Offset: 0x0003D039
		[CompilerGenerated]
		internal OpenFileDialog vmethod_954()
		{
			return this.openFileDialog_4;
		}

		// Token: 0x0600635E RID: 25438 RVA: 0x0003EE41 File Offset: 0x0003D041
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_955(OpenFileDialog openFileDialog_5)
		{
			this.openFileDialog_4 = openFileDialog_5;
		}

		// Token: 0x0600635F RID: 25439 RVA: 0x0003EE4A File Offset: 0x0003D04A
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_956()
		{
			return this.toolStripMenuItem_7;
		}

		// Token: 0x06006360 RID: 25440 RVA: 0x0036A330 File Offset: 0x00368530
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_957(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_136);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_7;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_7 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_7;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006361 RID: 25441 RVA: 0x0003EE52 File Offset: 0x0003D052
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_958()
		{
			return this.toolStripMenuItem_8;
		}

		// Token: 0x06006362 RID: 25442 RVA: 0x0036A374 File Offset: 0x00368574
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_959(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_609);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_8;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_8 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_8;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006363 RID: 25443 RVA: 0x0003EE5A File Offset: 0x0003D05A
		[CompilerGenerated]
		internal ToolStripSeparator vmethod_960()
		{
			return this.toolStripSeparator_39;
		}

		// Token: 0x06006364 RID: 25444 RVA: 0x0003EE62 File Offset: 0x0003D062
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_961(ToolStripSeparator toolStripSeparator_40)
		{
			this.toolStripSeparator_39 = toolStripSeparator_40;
		}

		// Token: 0x06006365 RID: 25445 RVA: 0x0003EE6B File Offset: 0x0003D06B
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_962()
		{
			return this.toolStripMenuItem_9;
		}

		// Token: 0x06006366 RID: 25446 RVA: 0x0036A3B8 File Offset: 0x003685B8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_963(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_610);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_9;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_9 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_9;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006367 RID: 25447 RVA: 0x0003EE73 File Offset: 0x0003D073
		[CompilerGenerated]
		internal Class113 vmethod_964()
		{
			return this.class113_5;
		}

		// Token: 0x06006368 RID: 25448 RVA: 0x0003EE7B File Offset: 0x0003D07B
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_965(Class113 class113_9)
		{
			this.class113_5 = class113_9;
		}

		// Token: 0x06006369 RID: 25449 RVA: 0x0003EE84 File Offset: 0x0003D084
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_966()
		{
			return this.toolStripMenuItem_10;
		}

		// Token: 0x0600636A RID: 25450 RVA: 0x0003EE8C File Offset: 0x0003D08C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_967(ToolStripMenuItem toolStripMenuItem_25)
		{
			this.toolStripMenuItem_10 = toolStripMenuItem_25;
		}

		// Token: 0x0600636B RID: 25451 RVA: 0x0003EE95 File Offset: 0x0003D095
		[CompilerGenerated]
		internal ToolStripButton vmethod_968()
		{
			return this.toolStripButton_18;
		}

		// Token: 0x0600636C RID: 25452 RVA: 0x0036A3FC File Offset: 0x003685FC
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_969(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_611);
			ToolStripButton toolStripButton = this.toolStripButton_18;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_18 = toolStripButton_23;
			toolStripButton = this.toolStripButton_18;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x0600636D RID: 25453 RVA: 0x0003EE9D File Offset: 0x0003D09D
		[CompilerGenerated]
		internal ToolStripButton vmethod_970()
		{
			return this.toolStripButton_19;
		}

		// Token: 0x0600636E RID: 25454 RVA: 0x0036A440 File Offset: 0x00368640
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_971(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_613);
			ToolStripButton toolStripButton = this.toolStripButton_19;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_19 = toolStripButton_23;
			toolStripButton = this.toolStripButton_19;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x0600636F RID: 25455 RVA: 0x0003EEA5 File Offset: 0x0003D0A5
		[CompilerGenerated]
		internal ToolStripButton vmethod_972()
		{
			return this.toolStripButton_20;
		}

		// Token: 0x06006370 RID: 25456 RVA: 0x0036A484 File Offset: 0x00368684
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_973(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_615);
			ToolStripButton toolStripButton = this.toolStripButton_20;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_20 = toolStripButton_23;
			toolStripButton = this.toolStripButton_20;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x06006371 RID: 25457 RVA: 0x0003EEAD File Offset: 0x0003D0AD
		[CompilerGenerated]
		internal ToolStripButton vmethod_974()
		{
			return this.toolStripButton_21;
		}

		// Token: 0x06006372 RID: 25458 RVA: 0x0036A4C8 File Offset: 0x003686C8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_975(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_617);
			ToolStripButton toolStripButton = this.toolStripButton_21;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_21 = toolStripButton_23;
			toolStripButton = this.toolStripButton_21;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x06006373 RID: 25459 RVA: 0x0003EEB5 File Offset: 0x0003D0B5
		[CompilerGenerated]
		internal ToolStripDropDownButton vmethod_976()
		{
			return this.toolStripDropDownButton_0;
		}

		// Token: 0x06006374 RID: 25460 RVA: 0x0003EEBD File Offset: 0x0003D0BD
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_977(ToolStripDropDownButton toolStripDropDownButton_1)
		{
			this.toolStripDropDownButton_0 = toolStripDropDownButton_1;
		}

		// Token: 0x06006375 RID: 25461 RVA: 0x0003EEC6 File Offset: 0x0003D0C6
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_978()
		{
			return this.toolStripMenuItem_11;
		}

		// Token: 0x06006376 RID: 25462 RVA: 0x0036A50C File Offset: 0x0036870C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_979(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_619);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_11;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_11 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_11;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006377 RID: 25463 RVA: 0x0003EECE File Offset: 0x0003D0CE
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_980()
		{
			return this.toolStripMenuItem_12;
		}

		// Token: 0x06006378 RID: 25464 RVA: 0x0036A550 File Offset: 0x00368750
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_981(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_620);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_12;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_12 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_12;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006379 RID: 25465 RVA: 0x0003EED6 File Offset: 0x0003D0D6
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_982()
		{
			return this.toolStripMenuItem_13;
		}

		// Token: 0x0600637A RID: 25466 RVA: 0x0036A594 File Offset: 0x00368794
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_983(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_621);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_13;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_13 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_13;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x0600637B RID: 25467 RVA: 0x0003EEDE File Offset: 0x0003D0DE
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_984()
		{
			return this.toolStripMenuItem_14;
		}

		// Token: 0x0600637C RID: 25468 RVA: 0x0036A5D8 File Offset: 0x003687D8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_985(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_622);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_14;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_14 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_14;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x0600637D RID: 25469 RVA: 0x0003EEE6 File Offset: 0x0003D0E6
		[CompilerGenerated]
		internal ToolStripLabel vmethod_986()
		{
			return this.toolStripLabel_1;
		}

		// Token: 0x0600637E RID: 25470 RVA: 0x0003EEEE File Offset: 0x0003D0EE
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_987(ToolStripLabel toolStripLabel_2)
		{
			this.toolStripLabel_1 = toolStripLabel_2;
		}

		// Token: 0x0600637F RID: 25471 RVA: 0x0003EEF7 File Offset: 0x0003D0F7
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_988()
		{
			return this.toolStripMenuItem_15;
		}

		// Token: 0x06006380 RID: 25472 RVA: 0x0003EEFF File Offset: 0x0003D0FF
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_989(ToolStripMenuItem toolStripMenuItem_25)
		{
			this.toolStripMenuItem_15 = toolStripMenuItem_25;
		}

		// Token: 0x06006381 RID: 25473 RVA: 0x0003EF08 File Offset: 0x0003D108
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_990()
		{
			return this.toolStripMenuItem_16;
		}

		// Token: 0x06006382 RID: 25474 RVA: 0x0036A61C File Offset: 0x0036881C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_991(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_109);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_16;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_16 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_16;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006383 RID: 25475 RVA: 0x0003EF10 File Offset: 0x0003D110
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_992()
		{
			return this.toolStripMenuItem_17;
		}

		// Token: 0x06006384 RID: 25476 RVA: 0x0036A660 File Offset: 0x00368860
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_993(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_110);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_17;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_17 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_17;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006385 RID: 25477 RVA: 0x0003EF18 File Offset: 0x0003D118
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_994()
		{
			return this.toolStripMenuItem_18;
		}

		// Token: 0x06006386 RID: 25478 RVA: 0x0036A6A4 File Offset: 0x003688A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_995(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_635);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_18;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.MouseEnter -= value;
			}
			this.toolStripMenuItem_18 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_18;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.MouseEnter += value;
			}
		}

		// Token: 0x06006387 RID: 25479 RVA: 0x0003EF20 File Offset: 0x0003D120
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_996()
		{
			return this.toolStripMenuItem_19;
		}

		// Token: 0x06006388 RID: 25480 RVA: 0x0036A6E8 File Offset: 0x003688E8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_997(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_623);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_19;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_19 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_19;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006389 RID: 25481 RVA: 0x0003EF28 File Offset: 0x0003D128
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_998()
		{
			return this.toolStripMenuItem_20;
		}

		// Token: 0x0600638A RID: 25482 RVA: 0x0036A72C File Offset: 0x0036892C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_999(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_624);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_20;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_20 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_20;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x0600638B RID: 25483 RVA: 0x0003EF30 File Offset: 0x0003D130
		[CompilerGenerated]
		internal ElementHost vmethod_1000()
		{
			return this.elementHost_2;
		}

		// Token: 0x0600638C RID: 25484 RVA: 0x0003EF38 File Offset: 0x0003D138
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1001(ElementHost elementHost_4)
		{
			this.elementHost_2 = elementHost_4;
		}

		// Token: 0x0600638D RID: 25485 RVA: 0x0003EF41 File Offset: 0x0003D141
		[CompilerGenerated]
		internal ToolStripButton vmethod_1002()
		{
			return this.toolStripButton_22;
		}

		// Token: 0x0600638E RID: 25486 RVA: 0x0036A770 File Offset: 0x00368970
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1003(ToolStripButton toolStripButton_23)
		{
			EventHandler value = new EventHandler(this.method_626);
			ToolStripButton toolStripButton = this.toolStripButton_22;
			if (toolStripButton != null)
			{
				toolStripButton.Click -= value;
			}
			this.toolStripButton_22 = toolStripButton_23;
			toolStripButton = this.toolStripButton_22;
			if (toolStripButton != null)
			{
				toolStripButton.Click += value;
			}
		}

		// Token: 0x0600638F RID: 25487 RVA: 0x0003EF49 File Offset: 0x0003D149
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_1004()
		{
			return this.toolStripMenuItem_21;
		}

		// Token: 0x06006390 RID: 25488 RVA: 0x0036A7B4 File Offset: 0x003689B4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1005(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_108);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_21;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_21 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_21;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006391 RID: 25489 RVA: 0x0003EF51 File Offset: 0x0003D151
		[CompilerGenerated]
		internal Timer vmethod_1006()
		{
			return this.timer_9;
		}

		// Token: 0x06006392 RID: 25490 RVA: 0x0036A7F8 File Offset: 0x003689F8
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1007(Timer timer_10)
		{
			EventHandler value = new EventHandler(this.method_111);
			Timer timer = this.timer_9;
			if (timer != null)
			{
				timer.Tick -= value;
			}
			this.timer_9 = timer_10;
			timer = this.timer_9;
			if (timer != null)
			{
				timer.Tick += value;
			}
		}

		// Token: 0x06006393 RID: 25491 RVA: 0x0003EF59 File Offset: 0x0003D159
		[CompilerGenerated]
		internal Class128 vmethod_1008()
		{
			return this.class128_378;
		}

		// Token: 0x06006394 RID: 25492 RVA: 0x0036A83C File Offset: 0x00368A3C
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1009(Class128 class128_379)
		{
			EventHandler value = new EventHandler(this.method_628);
			Class128 @class = this.class128_378;
			if (@class != null)
			{
				@class.Click -= value;
			}
			this.class128_378 = class128_379;
			@class = this.class128_378;
			if (@class != null)
			{
				@class.Click += value;
			}
		}

		// Token: 0x06006395 RID: 25493 RVA: 0x0003EF61 File Offset: 0x0003D161
		[CompilerGenerated]
		internal ElementHost vmethod_1010()
		{
			return this.elementHost_3;
		}

		// Token: 0x06006396 RID: 25494 RVA: 0x0003EF69 File Offset: 0x0003D169
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1011(ElementHost elementHost_4)
		{
			this.elementHost_3 = elementHost_4;
		}

		// Token: 0x06006397 RID: 25495 RVA: 0x0003EF72 File Offset: 0x0003D172
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_1012()
		{
			return this.toolStripMenuItem_22;
		}

		// Token: 0x06006398 RID: 25496 RVA: 0x0036A880 File Offset: 0x00368A80
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1013(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_629);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_22;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_22 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_22;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x06006399 RID: 25497 RVA: 0x0003EF7A File Offset: 0x0003D17A
		[CompilerGenerated]
		internal Class113 vmethod_1014()
		{
			return this.class113_6;
		}

		// Token: 0x0600639A RID: 25498 RVA: 0x0003EF82 File Offset: 0x0003D182
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1015(Class113 class113_9)
		{
			this.class113_6 = class113_9;
		}

		// Token: 0x0600639B RID: 25499 RVA: 0x0003EF8B File Offset: 0x0003D18B
		[CompilerGenerated]
		internal Class113 vmethod_1016()
		{
			return this.class113_7;
		}

		// Token: 0x0600639C RID: 25500 RVA: 0x0003EF93 File Offset: 0x0003D193
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1017(Class113 class113_9)
		{
			this.class113_7 = class113_9;
		}

		// Token: 0x0600639D RID: 25501 RVA: 0x0003EF9C File Offset: 0x0003D19C
		[CompilerGenerated]
		internal Class113 vmethod_1018()
		{
			return this.class113_8;
		}

		// Token: 0x0600639E RID: 25502 RVA: 0x0003EFA4 File Offset: 0x0003D1A4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1019(Class113 class113_9)
		{
			this.class113_8 = class113_9;
		}

		// Token: 0x0600639F RID: 25503 RVA: 0x0003EFAD File Offset: 0x0003D1AD
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_1020()
		{
			return this.toolStripMenuItem_23;
		}

		// Token: 0x060063A0 RID: 25504 RVA: 0x0036A8C4 File Offset: 0x00368AC4
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1021(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_137);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_23;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_23 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_23;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x060063A1 RID: 25505 RVA: 0x0003EFB5 File Offset: 0x0003D1B5
		[CompilerGenerated]
		internal ToolStripMenuItem vmethod_1022()
		{
			return this.toolStripMenuItem_24;
		}

		// Token: 0x060063A2 RID: 25506 RVA: 0x0036A908 File Offset: 0x00368B08
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		internal void vmethod_1023(ToolStripMenuItem toolStripMenuItem_25)
		{
			EventHandler value = new EventHandler(this.method_630);
			ToolStripMenuItem toolStripMenuItem = this.toolStripMenuItem_24;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click -= value;
			}
			this.toolStripMenuItem_24 = toolStripMenuItem_25;
			toolStripMenuItem = this.toolStripMenuItem_24;
			if (toolStripMenuItem != null)
			{
				toolStripMenuItem.Click += value;
			}
		}

		// Token: 0x060063A3 RID: 25507 RVA: 0x0036A94C File Offset: 0x00368B4C
		public int method_152()
		{
			int result;
			if (Information.IsNothing(Class1821.cameraBase_1))
			{
				result = 0;
			}
			else
			{
				result = (int)Math.Round(Class1821.cameraBase_1.vmethod_7());
			}
			return result;
		}

		// Token: 0x060063A4 RID: 25508 RVA: 0x0036A97C File Offset: 0x00368B7C
		public void method_153(int int_11)
		{
			if (!Information.IsNothing(Class1821.cameraBase_1) && (double)int_11 != Class1821.cameraBase_1.vmethod_7())
			{
				try
				{
					this.bool_9 = true;
					if (int_11 == 0)
					{
						int_11 = 1700000;
					}
					Class1821.cameraBase_1.vmethod_8((double)int_11);
					if (!Information.IsNothing(Client.smethod_50()))
					{
						Client.smethod_50().double_0 = (double)int_11;
					}
					this.method_219();
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200123", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				finally
				{
					this.bool_9 = false;
				}
			}
		}

		// Token: 0x060063A5 RID: 25509 RVA: 0x0003EFBD File Offset: 0x0003D1BD
		public void method_154()
		{
			GameGeneral.smethod_10();
			this.float_1 = 3600f;
		}

		// Token: 0x060063A6 RID: 25510 RVA: 0x0036AA44 File Offset: 0x00368C44
		public void method_155()
		{
			Class279.Enum67 @enum = Client.smethod_0().method_1();
			if (@enum == Class279.Enum67.const_2)
			{
				this.vmethod_20().Visible = true;
				this.vmethod_744().Visible = true;
				this.vmethod_338().Visible = true;
				this.vmethod_340().Visible = true;
				return;
			}
			this.vmethod_20().Visible = false;
			this.vmethod_744().Visible = false;
			this.vmethod_338().Visible = false;
			this.vmethod_340().Visible = false;
		}

		// Token: 0x060063A7 RID: 25511 RVA: 0x0003EFCF File Offset: 0x0003D1CF
		private bool method_156()
		{
			return this.bool_7;
		}

		// Token: 0x060063A8 RID: 25512 RVA: 0x0003EFD7 File Offset: 0x0003D1D7
		private void method_157(bool bool_15)
		{
			this.method_156();
			this.bool_7 = bool_15;
		}

		// Token: 0x060063A9 RID: 25513 RVA: 0x0003EFE7 File Offset: 0x0003D1E7
		private bool method_158()
		{
			return this.bool_8;
		}

		// Token: 0x060063AA RID: 25514 RVA: 0x0003EFEF File Offset: 0x0003D1EF
		private void method_159(bool bool_15)
		{
			this.bool_8 = bool_15;
		}

		// Token: 0x060063AB RID: 25515 RVA: 0x0036AAC4 File Offset: 0x00368CC4
		public GeoPoint method_160(bool MustRender = true)
		{
			if (Information.IsNothing(this.geoPoint_0))
			{
				if (!Information.IsNothing(Client.smethod_50()))
				{
					this.geoPoint_0 = Client.smethod_50().method_26();
				}
				else
				{
					this.geoPoint_0 = new GeoPoint(0.0, 0.0);
				}
			}
			return this.geoPoint_0;
		}

		// Token: 0x060063AC RID: 25516 RVA: 0x0036AB20 File Offset: 0x00368D20
		public void method_161(bool MustRender = true, GeoPoint value)
		{
			bool flag = Information.IsNothing(this.geoPoint_0) || value.imethod_0() != this.geoPoint_0.imethod_0() || value.imethod_2() != this.geoPoint_0.imethod_2();
			if (flag)
			{
				try
				{
					this.bool_9 = true;
					this.geoPoint_0 = value;
					if (!Information.IsNothing(Client.smethod_50()))
					{
						Client.smethod_50().method_27(value);
					}
					if (!Information.IsNothing(this.geoPoint_0))
					{
						this.vmethod_796().method_12(this.geoPoint_0.imethod_2(), this.geoPoint_0.imethod_0());
						if (this.geoPoint_0.imethod_2() == 0.0 && this.method_160(true).imethod_0() == 0.0)
						{
							this.method_153(10000000);
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200124", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
				finally
				{
					this.bool_9 = false;
				}
			}
		}

		// Token: 0x060063AD RID: 25517 RVA: 0x0036AC5C File Offset: 0x00368E5C
		public bool method_162()
		{
			return !Client.smethod_52().method_9() && !Client.smethod_52().method_7() && !Client.smethod_52().method_5();
		}

		// Token: 0x060063AE RID: 25518 RVA: 0x0036AC94 File Offset: 0x00368E94
		public void method_163()
		{
			switch (Client.smethod_61())
			{
			case Client.Enum197.const_0:
				this.method_178();
				this.vmethod_796().Cursor = Cursors.Default;
				Client.bool_1 = true;
				return;
			case Client.Enum197.const_1:
				this.geopoint_Struct_1 = default(Geopoint_Struct);
				this.vmethod_796().Cursor = Cursors.Hand;
				this.vmethod_808().Text = "Click on the map to perform a distance measurement from the selected point. Press Ctrl + D or double-click to end.";
				return;
			case Client.Enum197.const_2:
				if (Enumerable.Count<Side>(Client.smethod_46().method_44()) == 0)
				{
					DarkMessageBox.smethod_2("You must have at least one side in order to add a unit.", "No sides present!", Enum11.const_0);
					Client.smethod_62(Client.Enum197.const_0);
					return;
				}
				this.vmethod_796().Cursor = Cursors.Hand;
				this.vmethod_808().Text = "Click anywhere on the map to add a unit";
				return;
			case Client.Enum197.const_3:
			case Client.Enum197.const_10:
			case Client.Enum197.const_13:
				break;
			case Client.Enum197.const_4:
				Class2413.smethod_2().method_59().Text = "Edit scenario title & description";
				Class2413.smethod_2().method_59().Show();
				return;
			case Client.Enum197.const_5:
			case Client.Enum197.const_22:
				Class2413.smethod_2().method_59().Show();
				return;
			case Client.Enum197.const_6:
			{
				this.vmethod_808().Text = "Click anywhere on the map to set a new waypoint; Click on 'Plot Course' or press F3 to finish, or double-click to set the last waypoint.";
				this.vmethod_796().Cursor = Cursors.Hand;
				Scenario scenario = Client.smethod_46();
				Client.smethod_83(ref scenario, true);
				return;
			}
			case Client.Enum197.const_7:
				this.vmethod_808().Text = "Click on a unit to set it as a base for this unit";
				this.vmethod_796().Cursor = Cursors.Hand;
				return;
			case Client.Enum197.const_8:
				if (Information.IsNothing(Client.smethod_50()))
				{
					DarkMessageBox.smethod_2("You must have at least one side before adding reference points.", "No side present!", Enum11.const_0);
					Client.smethod_62(Client.Enum197.const_0);
					return;
				}
				this.vmethod_796().Cursor = Cursors.Hand;
				this.vmethod_808().Text = "Click anywhere on the map to add a reference point";
				return;
			case Client.Enum197.const_9:
				this.vmethod_796().Cursor = Cursors.Hand;
				this.vmethod_808().Text = "Click on the map to move the selected reference point.";
				return;
			case Client.Enum197.const_11:
				this.vmethod_796().Cursor = Cursors.Hand;
				this.vmethod_808().Text = "Click on the map to move the selected unit.";
				return;
			case Client.Enum197.const_12:
				this.vmethod_808().Text = "Click anywhere on the map to place a copy of this unit - ESC to cancel";
				this.vmethod_796().Cursor = Cursors.Hand;
				return;
			case Client.Enum197.const_14:
				this.vmethod_796().Cursor = Cursors.Hand;
				this.vmethod_808().Text = "Click on the map to set the formation station:";
				return;
			case Client.Enum197.const_15:
				this.vmethod_796().Cursor = Cursors.Hand;
				this.vmethod_808().Text = "Click on the unit/group that the selected Ref Point(s) should be relative to:";
				return;
			case Client.Enum197.const_16:
				this.vmethod_796().Cursor = Cursors.Cross;
				this.vmethod_808().Text = "Select target to intercept - Hold down SHIFT to add multiple targets";
				return;
			case Client.Enum197.const_17:
				this.vmethod_796().Cursor = Cursors.Cross;
				this.vmethod_808().Text = "Select target to attack - Hold down SHIFT to add multiple targets";
				return;
			case Client.Enum197.const_18:
				this.vmethod_796().Cursor = Cursors.Cross;
				this.vmethod_808().Text = "Select aimpoint for bearing-only attack";
				return;
			case Client.Enum197.const_19:
				this.vmethod_808().Text = "Drag mouse and release to define the desired rectangle area - ESC to cancel";
				this.vmethod_796().Cursor = Cursors.Hand;
				return;
			case Client.Enum197.const_20:
				this.vmethod_808().Text = "Click anywhere on the map to get predictions on near-future satellite passes for that location.";
				this.vmethod_796().Cursor = Cursors.Hand;
				return;
			case Client.Enum197.const_21:
				this.vmethod_808().Text = "Click anywhere on the map to place an exact clone of this unit (all customizations preserved) - ESC to cancel";
				this.vmethod_796().Cursor = Cursors.Hand;
				return;
			case Client.Enum197.const_23:
				this.vmethod_808().Text = "Click anywhere on the map to set a new weapon waypoint; Press F3 to finish.";
				this.vmethod_796().Cursor = Cursors.Cross;
				return;
			case Client.Enum197.const_24:
				this.vmethod_796().Cursor = Cursors.Cross;
				this.vmethod_808().Text = "Select tanker to refuel from";
				return;
			case Client.Enum197.const_25:
				this.vmethod_808().Text = "Drag mouse and release to define the desired circle area - ESC to cancel";
				this.vmethod_796().Cursor = Cursors.Hand;
				return;
			case Client.Enum197.const_26:
				this.vmethod_796().Cursor = Cursors.Cross;
				this.vmethod_808().Text = "Select unit to pickup";
				break;
			default:
				return;
			}
		}

		// Token: 0x060063AF RID: 25519 RVA: 0x0003A6AD File Offset: 0x000388AD
		public void method_164()
		{
			Client.bool_1 = true;
		}

		// Token: 0x060063B0 RID: 25520 RVA: 0x0036B068 File Offset: 0x00369268
		private void method_165()
		{
			if (!Information.IsNothing(Client.smethod_54()) && (!Client.smethod_54().bool_2 || !Information.IsNothing(((Weapon)Client.smethod_54()).method_179())) && (Information.IsNothing(Client.unitSensors_0) || !Client.unitSensors_0.Visible))
			{
				Client.unitSensors_0 = new UnitSensors();
				Client.unitSensors_0.Show();
			}
		}

		// Token: 0x060063B1 RID: 25521 RVA: 0x0036B0D0 File Offset: 0x003692D0
		private void method_166()
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
			{
				Side side_ = Client.smethod_50();
				Unit unit_ = Client.smethod_54();
				bool flag = false;
				string text = null;
				if (GameGeneral.smethod_45(side_, unit_, flag, ref text, Client.smethod_52().method_59()))
				{
					if (!Information.IsNothing(Client.smethod_58()))
					{
						Class2413.smethod_2().method_46().Show();
						return;
					}
					if ((!Client.smethod_54().bool_2 || !Information.IsNothing(((Weapon)Client.smethod_54()).method_179())) && Client.smethod_54().vmethod_7(false) == Client.smethod_50())
					{
						if (Client.smethod_50().method_56().Count > 1)
						{
							Class2413.smethod_2().method_46().list_0 = Enumerable.ToList<Unit>(Client.smethod_50().method_56());
							Class2413.smethod_2().method_46().Show();
							return;
						}
						if (Client.smethod_54().bool_1)
						{
							Class2413.smethod_2().method_46().list_0 = ((Group)Client.smethod_54()).method_152();
							Class2413.smethod_2().method_46().Show();
							return;
						}
						this.method_165();
					}
				}
			}
		}

		// Token: 0x060063B2 RID: 25522 RVA: 0x0036B1F4 File Offset: 0x003693F4
		private void method_167()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				if (Client.smethod_52().method_1())
				{
					DarkMessageBox.smethod_2("You cannot order an attack while using God's Eye mode!", "", Enum11.const_0);
					return;
				}
				try
				{
					if (Client.smethod_50().method_56().Count != 0)
					{
						try
						{
							foreach (Unit unit in Client.smethod_50().method_56())
							{
								string str = null;
								if (GameGeneral.smethod_45(Client.smethod_50(), unit, false, ref str, Client.smethod_52().method_59()))
								{
									Client.smethod_62(Client.Enum197.const_16);
									break;
								}
								if (unit.bool_0)
								{
									((ActiveUnit)unit).method_124(unit.Name + " cannot participate in attack (" + str + ")", unit.Name + " cannot join attack", LoggedMessage.MessageType.UnitAI, 0, false, new Geopoint_Struct(unit.vmethod_28(null), unit.vmethod_30(null)));
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 101140", "");
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x060063B3 RID: 25523 RVA: 0x0036B354 File Offset: 0x00369554
		private void method_168()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				if (Client.smethod_52().method_1())
				{
					DarkMessageBox.smethod_2("You cannot order an attack While Using God's Eye mode!", "", Enum11.const_0);
					return;
				}
				try
				{
					if (Client.smethod_50().method_56().Count != 0)
					{
						try
						{
							foreach (Unit unit in Client.smethod_50().method_56())
							{
								string text = null;
								if (GameGeneral.smethod_45(Client.smethod_50(), unit, false, ref text, Client.smethod_52().method_59()))
								{
									if (!unit.bool_2)
									{
										Client.smethod_62(Client.Enum197.const_17);
										break;
									}
								}
								else if (unit.bool_0 && !string.IsNullOrEmpty(text))
								{
									((ActiveUnit)unit).method_124(unit.Name + " cannot participate in attack (" + text + ")", unit.Name + " cannot join attack", LoggedMessage.MessageType.UnitAI, 0, false, new Geopoint_Struct(unit.vmethod_28(null), unit.vmethod_30(null)));
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 101141", "");
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x060063B4 RID: 25524 RVA: 0x0036B4C4 File Offset: 0x003696C4
		private void method_169()
		{
			if (Client.smethod_54() != null && Client.smethod_54().vmethod_7(false) == Client.smethod_50())
			{
				Side side_ = Client.smethod_50();
				Unit unit_ = Client.smethod_54();
				bool flag = false;
				string text = null;
				if (GameGeneral.smethod_45(side_, unit_, flag, ref text, Client.smethod_52().method_59()) && Client.smethod_54().bool_1)
				{
					this.method_153(20000);
					this.method_161(true, new GeoPoint(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
					Client.smethod_52().enum87_0 = Class285.Enum87.const_1;
					Class2413.smethod_2().method_28().group_0 = (Group)Client.smethod_54();
					Class2413.smethod_2().method_28().Show();
				}
			}
		}

		// Token: 0x060063B5 RID: 25525 RVA: 0x0036B58C File Offset: 0x0036978C
		private void method_170()
		{
			if (Client.smethod_50() != null)
			{
				if (Client.smethod_52().method_1())
				{
					DarkMessageBox.smethod_2("You cannot order an attack while using God's Eye mode!", "Error", Enum11.const_0);
					return;
				}
				try
				{
					if (Client.smethod_50().method_56().Count != 0)
					{
						try
						{
							foreach (Unit unit in Client.smethod_50().method_56())
							{
								Side side_ = Client.smethod_50();
								Unit unit_ = unit;
								bool flag = false;
								string text = null;
								if (GameGeneral.smethod_45(side_, unit_, flag, ref text, Client.smethod_52().method_59()) && !unit.bool_2)
								{
									Client.smethod_62(Client.Enum197.const_18);
									break;
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 101142", "");
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x060063B6 RID: 25526 RVA: 0x0036B684 File Offset: 0x00369884
		private void method_171()
		{
			if (Client.smethod_58() != null && Client.smethod_58().enum79_0 == Waypoint.Enum79.const_1)
			{
				bool flag = false;
				foreach (Side side in Client.smethod_46().method_44())
				{
					try
					{
						foreach (Mission mission in side.method_35())
						{
							try
							{
								foreach (Mission.Flight flight in mission.list_1)
								{
									int num = Enumerable.Count<Waypoint>(flight.method_15()) - 1;
									this.int_6 = num;
									while (this.int_6 >= 0)
									{
										Waypoint waypoint = flight.method_15()[this.int_6];
										if (waypoint == Client.smethod_58())
										{
											flag = true;
										}
										if (!Information.IsNothing(waypoint.waypoint_0) && waypoint.waypoint_0 == Client.smethod_58())
										{
											flag = true;
										}
										if (!Information.IsNothing(waypoint.waypoint_1) && waypoint.waypoint_1 == Client.smethod_58())
										{
											flag = true;
										}
										if (!Information.IsNothing(waypoint.waypoint_2) && waypoint.waypoint_2 == Client.smethod_58())
										{
											flag = true;
										}
										if (!Information.IsNothing(waypoint.waypoint_3) && waypoint.waypoint_3 == Client.smethod_58())
										{
											flag = true;
										}
										if (!Information.IsNothing(waypoint.waypoint_4) && waypoint.waypoint_4 == Client.smethod_58())
										{
											flag = true;
										}
										if (flag)
										{
											Class2413.smethod_2().method_66().activeUnit_0 = null;
											Class2413.smethod_2().method_66().waypoint_0 = Client.smethod_58();
											Class2413.smethod_2().method_66().flight_0 = flight;
											Class2413.smethod_2().method_66().mission_0 = mission;
											Class2413.smethod_2().method_66().Show();
											return;
										}
										this.int_6 += -1;
									}
								}
							}
							finally
							{
								List<Mission.Flight>.Enumerator enumerator2;
								((IDisposable)enumerator2).Dispose();
							}
						}
					}
					finally
					{
						IEnumerator<Mission> enumerator;
						if (enumerator != null)
						{
							enumerator.Dispose();
						}
					}
				}
			}
			if (Client.smethod_54() != null && Client.smethod_54().bool_0 && !Client.smethod_54().method_1() && (!Client.smethod_54().bool_2 || !Information.IsNothing(((Weapon)Client.smethod_54()).method_179())) && Class2413.smethod_2().method_66().waypoint_0 == null && Client.smethod_54() != null)
			{
				Side side_ = Client.smethod_50();
				Unit unit_ = Client.smethod_54();
				bool flag2 = false;
				string text = null;
				if (GameGeneral.smethod_45(side_, unit_, flag2, ref text, Client.smethod_52().method_59()) && Client.smethod_54().vmethod_7(false) == Client.smethod_50())
				{
					if (Client.smethod_54().bool_1)
					{
						Class2413.smethod_2().method_66().activeUnit_0 = (ActiveUnit)Client.smethod_54();
						Class2413.smethod_2().method_66().waypoint_0 = null;
						Class2413.smethod_2().method_66().flight_0 = null;
						Class2413.smethod_2().method_66().mission_0 = null;
						Class2413.smethod_2().method_66().Show();
						return;
					}
					if (!((ActiveUnit)Client.smethod_54()).method_5())
					{
						Class2413.smethod_2().method_66().activeUnit_0 = (ActiveUnit)Client.smethod_54();
						Class2413.smethod_2().method_66().waypoint_0 = null;
						Class2413.smethod_2().method_66().flight_0 = null;
						Class2413.smethod_2().method_66().mission_0 = null;
						if (!Client.smethod_54().bool_2 || ((Weapon)Client.smethod_54()).method_167() != Weapon._WeaponType.Sonobuoy)
						{
							Class2413.smethod_2().method_66().Show();
						}
					}
				}
			}
		}

		// Token: 0x060063B7 RID: 25527 RVA: 0x0036BA4C File Offset: 0x00369C4C
		private void method_172()
		{
			if (Client.smethod_54() != null)
			{
				try
				{
					bool flag2;
					if (!Information.IsNothing(Client.smethod_54()))
					{
						Side side_ = Client.smethod_50();
						Unit unit_ = Client.smethod_54();
						bool flag = false;
						string text = null;
						if (GameGeneral.smethod_45(side_, unit_, flag, ref text, Client.smethod_52().method_59()))
						{
							flag2 = true;
						}
					}
					if (!flag2)
					{
						try
						{
							foreach (Unit unit in Client.smethod_50().method_56())
							{
								string text2 = null;
								if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50())
								{
									if (GameGeneral.smethod_45(Client.smethod_50(), unit, false, ref text2, Client.smethod_52().method_59()))
									{
										flag2 = true;
									}
									else if (!string.IsNullOrEmpty(text2))
									{
										((ActiveUnit)unit).method_124(unit.Name + " cannot be instructed to change course (" + text2 + ")", unit.Name + " cannot be ordered", LoggedMessage.MessageType.UnitAI, 0, false, new Geopoint_Struct(unit.vmethod_28(null), unit.vmethod_30(null)));
									}
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
					}
					if (flag2)
					{
						if (!Client.smethod_54().method_1())
						{
							if (!Information.IsNothing(Client.smethod_54()) && !Information.IsNothing(Client.smethod_58()))
							{
								if (Client.smethod_54().vmethod_7(false) == Client.smethod_50())
								{
									int num = Array.IndexOf<Waypoint>(((ActiveUnit)Client.smethod_54()).vmethod_85().method_4(), Client.smethod_58());
									int num2 = Enumerable.Count<Waypoint>(((ActiveUnit)Client.smethod_54()).vmethod_85().method_4());
									int num3 = num2 - 1;
									int num4 = num + 1;
									this.int_6 = num3;
									while (this.int_6 >= num4)
									{
										((ActiveUnit)Client.smethod_54()).vmethod_85().method_53(((ActiveUnit)Client.smethod_54()).vmethod_85().method_4()[this.int_6], true);
										this.int_6 += -1;
									}
									Client.smethod_62(Client.Enum197.const_6);
									Scenario scenario = Client.smethod_46();
									Client.smethod_83(ref scenario, true);
									Client.bool_1 = true;
								}
							}
							else
							{
								if (Client.smethod_61() != Client.Enum197.const_6)
								{
									if (Client.smethod_61() != Client.Enum197.const_23)
									{
										List<ActiveUnit> list = new List<ActiveUnit>();
										try
										{
											foreach (Unit unit2 in Client.smethod_50().method_56())
											{
												Side side_2 = Client.smethod_50();
												Unit unit_2 = unit2;
												bool flag3 = false;
												string text = null;
												if (GameGeneral.smethod_45(side_2, unit_2, flag3, ref text, Client.smethod_52().method_59()) && !unit2.method_1() && !unit2.method_5())
												{
													if (unit2.bool_1)
													{
														switch (((Group)unit2).method_143())
														{
														case Group.GroupType.Installation:
														case Group.GroupType.AirBase:
														case Group.GroupType.NavalBase:
															continue;
														}
													}
													((ActiveUnit)unit2).vmethod_85().vmethod_9();
													list.Add((ActiveUnit)unit2);
												}
											}
										}
										finally
										{
											IEnumerator<Unit> enumerator2;
											if (enumerator2 != null)
											{
												enumerator2.Dispose();
											}
										}
										if (list.Count == 0)
										{
											return;
										}
										Client.smethod_62(Client.Enum197.const_6);
										return;
									}
								}
								if (Client.smethod_61() == Client.Enum197.const_6)
								{
									Scenario scenario = Client.smethod_46();
									Client.smethod_83(ref scenario, false);
								}
								Client.smethod_62(Client.Enum197.const_0);
								Client.bool_1 = true;
							}
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 101143", "");
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x060063B8 RID: 25528 RVA: 0x0036BE0C File Offset: 0x0036A00C
		public void method_173()
		{
			Class2413.smethod_2().method_7().hashSet_0.Clear();
			if (Client.smethod_50() != null)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (!Information.IsNothing(unit) && unit.bool_0)
						{
							if (unit.bool_1 && ((Group)unit).method_143() == Group.GroupType.SurfaceGroup)
							{
								try
								{
									foreach (ActiveUnit activeUnit in ((Group)unit).vmethod_141().Values)
									{
										if (activeUnit.vmethod_99().Length > 0)
										{
											Class2413.smethod_2().method_7().hashSet_0.Add(activeUnit.string_0);
										}
									}
									continue;
								}
								finally
								{
									IEnumerator<ActiveUnit> enumerator2;
									if (enumerator2 != null)
									{
										enumerator2.Dispose();
									}
								}
							}
							if (((ActiveUnit)unit).vmethod_99().Length > 0)
							{
								Class2413.smethod_2().method_7().hashSet_0.Add(unit.string_0);
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				if (Class2413.smethod_2().method_7().hashSet_0.Count <= 0 && !Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
				{
					if (Client.smethod_54().bool_1 && ((Group)Client.smethod_54()).method_143() == Group.GroupType.SurfaceGroup)
					{
						try
						{
							foreach (ActiveUnit activeUnit2 in ((Group)Client.smethod_54()).vmethod_141().Values)
							{
								if (activeUnit2.vmethod_99().Length > 0)
								{
									Class2413.smethod_2().method_7().hashSet_0.Add(activeUnit2.string_0);
								}
							}
							goto IL_1F0;
						}
						finally
						{
							IEnumerator<ActiveUnit> enumerator3;
							if (enumerator3 != null)
							{
								enumerator3.Dispose();
							}
						}
					}
					if (((ActiveUnit)Client.smethod_54()).vmethod_99().Length > 0)
					{
						Class2413.smethod_2().method_7().hashSet_0.Add(Client.smethod_54().string_0);
					}
				}
				IL_1F0:
				if (Class2413.smethod_2().method_7().hashSet_0.Count > 0)
				{
					Class2413.smethod_2().method_7().Show();
				}
			}
		}

		// Token: 0x060063B9 RID: 25529 RVA: 0x0036C058 File Offset: 0x0036A258
		public void method_174()
		{
			Class2413.smethod_2().method_18().list_0.Clear();
			if (Client.smethod_50() != null)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (!Information.IsNothing(unit) && unit.bool_0)
						{
							if (unit.bool_1 && (((Group)unit).method_143() == Group.GroupType.SurfaceGroup || ((Group)unit).method_143() == Group.GroupType.SubGroup))
							{
								try
								{
									foreach (ActiveUnit activeUnit in ((Group)unit).vmethod_141().Values)
									{
										if (activeUnit.vmethod_100().Length > 0)
										{
											Class2413.smethod_2().method_18().list_0.Add(activeUnit);
										}
									}
									continue;
								}
								finally
								{
									IEnumerator<ActiveUnit> enumerator2;
									if (enumerator2 != null)
									{
										enumerator2.Dispose();
									}
								}
							}
							if (((ActiveUnit)unit).vmethod_100().Length > 0)
							{
								Class2413.smethod_2().method_18().list_0.Add((ActiveUnit)unit);
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				if (Class2413.smethod_2().method_18().list_0.Count <= 0 && !Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
				{
					if (Client.smethod_54().bool_1 && (((Group)Client.smethod_54()).method_143() == Group.GroupType.SurfaceGroup || ((Group)Client.smethod_54()).method_143() == Group.GroupType.SubGroup))
					{
						try
						{
							foreach (ActiveUnit activeUnit2 in ((Group)Client.smethod_54()).vmethod_141().Values)
							{
								if (activeUnit2.vmethod_100().Length > 0)
								{
									Class2413.smethod_2().method_18().list_0.Add(activeUnit2);
								}
							}
							goto IL_207;
						}
						finally
						{
							IEnumerator<ActiveUnit> enumerator3;
							if (enumerator3 != null)
							{
								enumerator3.Dispose();
							}
						}
					}
					if (((ActiveUnit)Client.smethod_54()).vmethod_100().Length > 0)
					{
						Class2413.smethod_2().method_18().list_0.Add((ActiveUnit)Client.smethod_54());
					}
				}
				IL_207:
				if (Class2413.smethod_2().method_18().list_0.Count > 0)
				{
					Class2413.smethod_2().method_18().Show();
				}
			}
		}

		// Token: 0x060063BA RID: 25530 RVA: 0x0036C2BC File Offset: 0x0036A4BC
		private void MainForm_FormClosing(object sender, FormClosingEventArgs e)
		{
			if (!Client.bool_6)
			{
				if (DarkMessageBox.smethod_1("Are you sure?", "Exit Command", Enum11.const_2) == DialogResult.OK)
				{
					Client.bool_6 = true;
					List<Form> list = new List<Form>();
					foreach (Form item in base.OwnedForms)
					{
						list.Add(item);
					}
					try
					{
						foreach (Form form in list)
						{
							form.Owner = null;
							form.Close();
						}
					}
					finally
					{
						List<Form>.Enumerator enumerator;
						((IDisposable)enumerator).Dispose();
					}
					this.vmethod_796().Dispose();
					this.vmethod_797(null);
					Class2474.smethod_0();
					base.Close();
					return;
				}
				e.Cancel = true;
			}
		}

		// Token: 0x060063BB RID: 25531 RVA: 0x0003EFF8 File Offset: 0x0003D1F8
		private void MainForm_GotFocus(object sender, EventArgs e)
		{
			this.vmethod_796().Focus();
		}

		// Token: 0x060063BC RID: 25532 RVA: 0x0003F006 File Offset: 0x0003D206
		public void method_175()
		{
			Class279.Class280 class280_ = Class570.class280_0;
			class280_.method_7(!class280_.method_6());
			if (class280_.method_6())
			{
				this.method_125();
				return;
			}
			this.method_127(true);
		}

		// Token: 0x060063BD RID: 25533 RVA: 0x0036C384 File Offset: 0x0036A584
		public void MainForm_KeyDown(object sender, KeyEventArgs e)
		{
			try
			{
				int keyValue = e.KeyValue;
				switch (keyValue)
				{
				case 8:
					this.method_189();
					break;
				case 9:
				case 10:
				case 11:
				case 12:
				case 14:
				case 15:
				case 16:
				case 17:
				case 18:
				case 19:
				case 20:
				case 21:
				case 22:
				case 23:
				case 24:
				case 25:
				case 26:
				case 28:
				case 29:
				case 30:
				case 31:
				case 37:
				case 38:
				case 39:
				case 40:
				case 41:
				case 42:
				case 43:
				case 44:
				case 47:
				case 48:
				case 59:
				case 60:
				case 61:
				case 62:
				case 63:
				case 64:
				case 74:
				case 75:
				case 81:
				case 87:
				case 89:
				case 91:
				case 92:
				case 94:
				case 95:
				case 99:
				case 101:
				case 108:
					break;
				case 13:
				{
					Keys modifiers = e.Modifiers;
					if (modifiers != Keys.Control)
					{
						if (modifiers != Keys.Alt)
						{
							Client.smethod_46().method_52(Scenario.enumTimeCompression.OneSec);
							this.method_316();
						}
						else
						{
							this.method_625();
						}
					}
					else
					{
						Class279.Enum68 @enum = Client.smethod_0().method_0();
						if (@enum != Class279.Enum68.const_0)
						{
							if (@enum == Class279.Enum68.const_1)
							{
								Client.smethod_0().method_4();
							}
						}
						else
						{
							Client.smethod_0().method_3();
						}
					}
					break;
				}
				case 27:
					if (Client.smethod_61() != Client.Enum197.const_0)
					{
						Client.smethod_62(Client.Enum197.const_0);
						Scenario scenario = Client.smethod_46();
						Client.smethod_83(ref scenario, false);
					}
					break;
				case 32:
				{
					Class279.Enum68 enum2 = Client.smethod_0().method_0();
					if (enum2 != Class279.Enum68.const_0)
					{
						if (enum2 == Class279.Enum68.const_1)
						{
							Client.smethod_0().method_4();
						}
					}
					else
					{
						Client.smethod_0().method_3();
					}
					e.Handled = true;
					break;
				}
				case 33:
				case 86:
				case 105:
					if (e.Modifiers == Keys.Control)
					{
						if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
						{
							this.method_261();
						}
					}
					else
					{
						this.method_177();
					}
					break;
				case 34:
				case 80:
					this.method_180();
					break;
				case 35:
				case 97:
					if (e.Modifiers == Keys.Control)
					{
						Client.smethod_50().vmethod_12();
						try
						{
							foreach (ReferencePoint referencePoint in Client.smethod_60())
							{
								referencePoint.method_20(false);
							}
						}
						finally
						{
							List<ReferencePoint>.Enumerator enumerator;
							((IDisposable)enumerator).Dispose();
						}
						Client.bool_1 = true;
					}
					else
					{
						Client.smethod_52().method_52(Client.smethod_52().method_51() + 1);
						this.method_307();
					}
					break;
				case 36:
				case 103:
					Client.smethod_52().method_50(Client.smethod_52().method_49() + 1);
					this.method_307();
					break;
				case 45:
				case 96:
					if (e.Modifiers == Keys.Control)
					{
						Client.smethod_62(Client.Enum197.const_8);
						this.referencePoint_0 = null;
					}
					else if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
					{
						Client.smethod_62(Client.Enum197.const_2);
					}
					break;
				case 46:
				case 110:
					checked
					{
						if (!Information.IsNothing(Client.smethod_50()))
						{
							if (e.Modifiers == Keys.Control)
							{
								this.method_198();
							}
							else if (!Information.IsNothing(Client.smethod_58()))
							{
								if (Client.smethod_58().method_39())
								{
									DarkMessageBox.smethod_1("Cannot delete a Station waypoint! Change the waypoint type in the Flightplan Editor, and try again.", string.Empty, Enum11.const_0);
								}
								else if (Client.smethod_58().method_44())
								{
									DarkMessageBox.smethod_1("Cannot delete a Hold waypoint! Change the waypoint type in the Flightplan Editor, and try again.", string.Empty, Enum11.const_0);
								}
								else if (Client.smethod_58().waypointType_0 == Waypoint.WaypointType.TakeOff)
								{
									DarkMessageBox.smethod_1("Cannot delete a Take-Off waypoint! Remove the waypoint in the Flightplan Editor.", string.Empty, Enum11.const_0);
								}
								else if (Client.smethod_58().waypointType_0 == Waypoint.WaypointType.LandingMarshal)
								{
									DarkMessageBox.smethod_1("Cannot delete a Landing Marshal waypoint! Remove the waypoint in the Flightplan Editor.", string.Empty, Enum11.const_0);
								}
								else if (Client.smethod_58().waypointType_0 == Waypoint.WaypointType.Land)
								{
									DarkMessageBox.smethod_1("Cannot delete a Landing waypoint! Remove the waypoint in the Flightplan Editor.", string.Empty, Enum11.const_0);
								}
								else if (Client.smethod_58().method_22())
								{
									DarkMessageBox.smethod_1("Cannot delete waypoints with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
								}
								else
								{
									bool flag = false;
									foreach (ActiveUnit activeUnit in Client.smethod_50().activeUnit_0)
									{
										if (Enumerable.Contains<Waypoint>(activeUnit.vmethod_85().method_4(), Client.smethod_58()))
										{
											activeUnit.vmethod_85().method_53(Client.smethod_58(), true);
										}
									}
									if (!flag)
									{
										try
										{
											foreach (Mission mission in Client.smethod_50().method_35())
											{
												if (mission.method_55())
												{
													try
													{
														List<Mission.Flight>.Enumerator enumerator3 = mission.list_1.GetEnumerator();
														IL_14AB:
														while (enumerator3.MoveNext())
														{
															Mission.Flight flight = enumerator3.Current;
															Waypoint[] array = flight.method_15();
															int j = 0;
															while (j < array.Length)
															{
																Waypoint waypoint = array[j];
																if (waypoint == Client.smethod_58())
																{
																	if (waypoint.method_22())
																	{
																		DarkMessageBox.smethod_1("Cannot delete waypoints with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	}
																	else
																	{
																		ActiveUnit_Navigator.smethod_2(Client.smethod_46(), mission, flight, Client.smethod_58());
																		this.method_235();
																		if (Client.smethod_32().Visible)
																		{
																			Client.smethod_32().method_12();
																		}
																		if (Client.smethod_31().Visible)
																		{
																			Client.smethod_31().method_5();
																		}
																		if (Client.flightPlanTime_0.Visible)
																		{
																			Client.flightPlanTime_0.Visible = false;
																		}
																	}
																	flag = true;
																}
																else if (!Information.IsNothing(waypoint.waypoint_0) && waypoint.waypoint_0 == Client.smethod_58())
																{
																	DarkMessageBox.smethod_1("Cannot delete waypoints with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	flag = true;
																}
																else if (!Information.IsNothing(waypoint.waypoint_1) && waypoint.waypoint_1 == Client.smethod_58())
																{
																	DarkMessageBox.smethod_1("Cannot delete waypoints with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	flag = true;
																}
																else if (!Information.IsNothing(waypoint.waypoint_2) && waypoint.waypoint_2 == Client.smethod_58())
																{
																	DarkMessageBox.smethod_1("Cannot delete waypoints with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	flag = true;
																}
																else if (!Information.IsNothing(waypoint.waypoint_3) && waypoint.waypoint_3 == Client.smethod_58())
																{
																	DarkMessageBox.smethod_1("Cannot delete waypoints with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	flag = true;
																}
																else
																{
																	if (Information.IsNothing(waypoint.waypoint_4) || waypoint.waypoint_4 != Client.smethod_58())
																	{
																		j++;
																		continue;
																	}
																	DarkMessageBox.smethod_1("Cannot delete waypoints with Split formation. Change the formation in the Flightplan Editor and try again.", string.Empty, Enum11.const_0);
																	flag = true;
																}
																IL_14A7:
																if (!flag)
																{
																	goto IL_14AB;
																}
																goto IL_14B7;
															}
															goto IL_14A7;
														}
														IL_14B7:;
													}
													finally
													{
														List<Mission.Flight>.Enumerator enumerator3;
														((IDisposable)enumerator3).Dispose();
													}
												}
												if (flag)
												{
													break;
												}
											}
										}
										finally
										{
											IEnumerator<Mission> enumerator2;
											if (enumerator2 != null)
											{
												enumerator2.Dispose();
											}
										}
									}
									Client.smethod_59(null);
									Client.bool_1 = true;
								}
							}
							else
							{
								this.method_197();
							}
						}
						break;
					}
				case 49:
				case 50:
				case 51:
				case 52:
				case 53:
				case 54:
				case 55:
				case 56:
				case 57:
				case 58:
					if (!Information.IsNothing(Client.smethod_50()))
					{
						byte b = (byte)(e.KeyValue - 48);
						if (e.Modifiers == Keys.Control)
						{
							if (!Information.IsNothing(Client.smethod_54()))
							{
								QuickJumpSlot quickJumpSlot = new QuickJumpSlot();
								quickJumpSlot.byte_0 = b;
								if (Client.smethod_54().bool_0)
								{
									quickJumpSlot.string_0 = "AU_" + Client.smethod_54().string_0;
								}
								else
								{
									quickJumpSlot.string_0 = "Con_" + ((Contact)Client.smethod_54()).activeUnit_0.string_0;
								}
								quickJumpSlot.int_0 = this.method_152();
								quickJumpSlot.bool_0 = this.bool_11;
								if (Client.smethod_50().dictionary_3.ContainsKey(quickJumpSlot.byte_0))
								{
									Client.smethod_50().dictionary_3[quickJumpSlot.byte_0] = quickJumpSlot;
								}
								else
								{
									Client.smethod_50().dictionary_3.Add(quickJumpSlot.byte_0, quickJumpSlot);
								}
								this.vmethod_808().Text = "Stored as quick-jump slot #" + Conversions.ToString(b);
								this.method_314();
							}
						}
						else if (e.Modifiers == Keys.Alt)
						{
							switch (e.KeyValue)
							{
							case 49:
								this.method_612();
								break;
							case 50:
								this.method_614();
								break;
							case 51:
								this.method_616();
								break;
							case 52:
								this.method_618();
								break;
							}
						}
						else
						{
							this.method_497(b);
						}
					}
					break;
				case 65:
					if (!Information.IsNothing(Client.smethod_50()))
					{
						if (e.Modifiers == Keys.Control)
						{
							bool flag2 = true;
							foreach (ActiveUnit unit in Client.smethod_50().activeUnit_0)
							{
								if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
								{
									Doctrine.Enum52? enum3 = ((ActiveUnit)unit).doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
									byte? b2 = (enum3 != null) ? new byte?((byte)enum3.GetValueOrDefault()) : null;
									bool? flag3 = (b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null;
									if (((flag3 != null) ? new bool?(!flag3.GetValueOrDefault()) : flag3).GetValueOrDefault())
									{
										flag2 = false;
										IL_6BF:
										if (flag2)
										{
											enum3 = null;
											this.method_492(ref enum3);
											goto IL_172E;
										}
										enum3 = new Doctrine.Enum52?(Doctrine.Enum52.const_2);
										this.method_492(ref enum3);
										goto IL_172E;
									}
								}
							}
							goto IL_6BF;
						}
						bool flag4 = true;
						try
						{
							foreach (Unit unit2 in Client.smethod_50().method_56())
							{
								if (unit2.bool_0 && unit2.vmethod_7(false) == Client.smethod_50() && !unit2.bool_2)
								{
									Doctrine.Enum52? enum3 = ((ActiveUnit)unit2).doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
									byte? b2 = (enum3 != null) ? new byte?((byte)enum3.GetValueOrDefault()) : null;
									bool? flag3 = (b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null;
									if (((flag3 != null) ? new bool?(!flag3.GetValueOrDefault()) : flag3).GetValueOrDefault())
									{
										flag4 = false;
										break;
									}
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator4;
							if (enumerator4 != null)
							{
								enumerator4.Dispose();
							}
						}
						if (flag4)
						{
							Doctrine.Enum52? enum3 = null;
							this.method_493(ref enum3);
						}
						else
						{
							Doctrine.Enum52? enum3 = new Doctrine.Enum52?(Doctrine.Enum52.const_2);
							this.method_493(ref enum3);
						}
					}
					break;
				case 66:
					if (!Information.IsNothing(Client.smethod_50()))
					{
						this.method_239();
					}
					break;
				case 67:
					if (Client.smethod_0().method_1() == Class279.Enum67.const_2 && e.Modifiers == (Keys.Shift | Keys.Control))
					{
						Class2413.smethod_2().method_14().Show();
					}
					else if (e.Modifiers == Keys.Shift)
					{
						this.method_192();
					}
					else if (e.Modifiers == Keys.Control)
					{
						this.method_194();
					}
					else
					{
						this.method_193();
					}
					break;
				case 68:
					if (e.Modifiers == Keys.Control)
					{
						this.method_359();
					}
					else if (e.Modifiers == Keys.Shift)
					{
						this.method_181();
					}
					else
					{
						this.method_187();
					}
					break;
				case 69:
					if (e.Modifiers == Keys.Control)
					{
						this.method_361();
					}
					else
					{
						this.method_360();
					}
					break;
				case 70:
					this.method_202();
					break;
				case 71:
					this.method_186();
					break;
				case 72:
					if (e.Modifiers == Keys.Control)
					{
						this.method_200();
					}
					else
					{
						this.method_199();
					}
					break;
				case 73:
					if (!Information.IsNothing(Client.smethod_50()))
					{
						if (e.Control && e.Shift)
						{
							this.method_562();
						}
						else
						{
							if (e.Modifiers == Keys.Control)
							{
								bool flag5 = true;
								foreach (ActiveUnit unit3 in Client.smethod_50().activeUnit_0)
								{
									if (unit3.bool_0 && unit3.vmethod_7(false) == Client.smethod_50() && !unit3.bool_2)
									{
										Doctrine.Enum64? enum4 = ((ActiveUnit)unit3).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
										byte? b2 = (enum4 != null) ? new byte?((byte)enum4.GetValueOrDefault()) : null;
										bool? flag3 = (b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null;
										if (((flag3 != null) ? new bool?(!flag3.GetValueOrDefault()) : flag3).GetValueOrDefault())
										{
											flag5 = false;
											IL_A66:
											if (flag5)
											{
												enum4 = null;
												this.method_495(ref enum4);
												goto IL_172E;
											}
											enum4 = new Doctrine.Enum64?(Doctrine.Enum64.const_1);
											this.method_495(ref enum4);
											goto IL_172E;
										}
									}
								}
								goto IL_A66;
							}
							bool flag6 = true;
							try
							{
								foreach (Unit unit4 in Client.smethod_50().method_56())
								{
									if (unit4.bool_0 && unit4.vmethod_7(false) == Client.smethod_50() && !unit4.bool_2)
									{
										Doctrine.Enum64? enum4 = ((ActiveUnit)unit4).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
										byte? b2 = (enum4 != null) ? new byte?((byte)enum4.GetValueOrDefault()) : null;
										bool? flag3 = (b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null;
										if (((flag3 != null) ? new bool?(!flag3.GetValueOrDefault()) : flag3).GetValueOrDefault())
										{
											flag6 = false;
											break;
										}
									}
								}
							}
							finally
							{
								IEnumerator<Unit> enumerator5;
								if (enumerator5 != null)
								{
									enumerator5.Dispose();
								}
							}
							if (flag6)
							{
								Doctrine.Enum64? enum4 = null;
								this.method_494(ref enum4);
							}
							else
							{
								Doctrine.Enum64? enum4 = new Doctrine.Enum64?(Doctrine.Enum64.const_1);
								this.method_494(ref enum4);
							}
						}
					}
					break;
				case 76:
					if (!Information.IsNothing(Client.smethod_50()))
					{
						if (e.Modifiers == Keys.Control)
						{
							bool flag7 = true;
							foreach (ActiveUnit unit5 in Client.smethod_50().activeUnit_0)
							{
								if (unit5.bool_0 && unit5.vmethod_7(false) == Client.smethod_50() && unit5.bool_8 && !unit5.method_5() && !((Facility)unit5).method_148().bool_4)
								{
									flag7 = false;
									IL_C4B:
									this.method_405(ref flag7);
									goto IL_172E;
								}
							}
							goto IL_C4B;
						}
						bool flag8 = true;
						try
						{
							foreach (Unit unit6 in Client.smethod_50().method_56())
							{
								if (unit6.bool_0 && unit6.vmethod_7(false) == Client.smethod_50() && unit6.bool_8 && !unit6.method_5() && !((Facility)unit6).method_148().bool_4)
								{
									flag8 = false;
									break;
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator6;
							if (enumerator6 != null)
							{
								enumerator6.Dispose();
							}
						}
						this.method_404(ref flag8);
					}
					break;
				case 77:
					if (e.Control && e.Shift)
					{
						this.method_175();
						Client.bool_1 = true;
						base.BringToFront();
					}
					else if (e.Modifiers == Keys.Control)
					{
						this.method_299();
					}
					else
					{
						this.method_196();
					}
					break;
				case 78:
					this.method_201();
					break;
				case 79:
					if (!Information.IsNothing(Client.smethod_50()))
					{
						Class2413.smethod_2().method_48().Show();
					}
					break;
				case 82:
					if (e.Modifiers == Keys.Control)
					{
						this.method_191();
					}
					else
					{
						this.method_190();
					}
					break;
				case 83:
					if (Control.ModifierKeys == Keys.Alt && Client.smethod_0().method_1() == Class279.Enum67.const_2 && Enumerable.Count<Side>(Client.smethod_46().method_44()) > 1)
					{
						this.method_491(true);
						int num = Array.IndexOf<Side>(Client.smethod_46().method_44(), Client.smethod_50());
						int num2;
						if (num == Enumerable.Count<Side>(Client.smethod_46().method_44()) - 1)
						{
							num2 = 0;
						}
						else
						{
							num2 = num + 1;
						}
						Client.smethod_46().method_53(Client.smethod_46().method_44()[num2]);
					}
					break;
				case 84:
					this.method_179();
					break;
				case 85:
					this.method_397();
					this.method_97().method_2(Client.smethod_46(), Client.smethod_50(), Client.smethod_54(), false);
					break;
				case 88:
					if (e.Modifiers == Keys.Control)
					{
						if (Information.IsNothing(this.vmethod_796()))
						{
							string text = "WorldWindow1 object not found! Error 200594";
							GameGeneral.smethod_26(ref text);
						}
						else
						{
							WorldWindow worldWindow = this.vmethod_796();
							ref System.Drawing.Point ptr = ref this.point_0;
							int l = this.point_0.X;
							ref System.Drawing.Point ptr2 = ref this.point_0;
							int k = this.point_0.Y;
							double value;
							double value2;
							Class2572.smethod_3(worldWindow, ref l, ref k, ref value, ref value2);
							ptr2.Y = k;
							ptr.X = l;
							System.Windows.Forms.Clipboard.SetText(string.Concat(new string[]
							{
								"latitude='",
								Conversions.ToString(value2),
								"', longitude='",
								Conversions.ToString(value),
								"'"
							}));
						}
					}
					else
					{
						this.method_121();
					}
					break;
				case 90:
					if (e.Modifiers == Keys.Control)
					{
						this.method_195();
					}
					else
					{
						this.method_120(false);
					}
					break;
				case 93:
					if (!Information.IsNothing(Client.smethod_54()))
					{
						System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), Client.smethod_54().vmethod_30(null), Client.smethod_54().vmethod_28(null));
						if (Client.smethod_54().bool_0)
						{
							this.method_94(Client.smethod_54(), point.X, point.Y);
						}
						if (Client.smethod_54().method_14())
						{
							this.method_91((Contact)Client.smethod_54(), point.X, point.Y);
						}
					}
					break;
				case 98:
					this.method_185();
					break;
				case 100:
					this.method_182();
					break;
				case 102:
					this.method_184();
					break;
				case 104:
					this.method_183();
					break;
				case 106:
					Client.smethod_52().method_48(Client.smethod_52().method_47() + 1);
					this.method_307();
					break;
				case 107:
					Client.smethod_46().method_50();
					break;
				case 109:
					Client.smethod_46().method_51();
					break;
				case 111:
					Client.smethod_52().method_46(Client.smethod_52().method_45() + 1);
					this.method_307();
					break;
				case 112:
					if (e.Modifiers == Keys.Shift)
					{
						this.method_168();
					}
					else if (e.Modifiers == Keys.Control)
					{
						this.method_170();
					}
					else
					{
						this.method_167();
					}
					break;
				case 113:
					this.method_171();
					break;
				case 114:
					this.method_172();
					break;
				case 115:
					this.method_169();
					break;
				case 116:
					this.method_242();
					break;
				case 117:
					if (e.Modifiers == Keys.Control)
					{
						if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
						{
							this.method_259();
						}
					}
					else
					{
						this.method_173();
					}
					break;
				case 118:
					if (e.Modifiers == Keys.Control)
					{
						if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
						{
							this.method_345();
						}
					}
					else
					{
						this.method_174();
					}
					break;
				case 119:
					this.method_227();
					break;
				case 120:
					if (!Information.IsNothing(Client.smethod_50()))
					{
						if (e.Control && e.Shift)
						{
							Class310 class310_ = Client.smethod_50();
							ReadOnlyCollection<Unit> readOnlyCollection = null;
							List<ActiveUnit> list = null;
							this.method_308(class310_, ref readOnlyCollection, ref list, true);
						}
						else if (e.Modifiers == Keys.Control)
						{
							if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_50().method_56().Count != 0)
							{
								Class310 class310_2 = Client.smethod_54();
								ReadOnlyCollection<Unit> readOnlyCollection = Client.smethod_50().method_56();
								List<ActiveUnit> list = null;
								this.method_308(class310_2, ref readOnlyCollection, ref list, true);
							}
							else if (!Information.IsNothing(Client.smethod_58()))
							{
								Class310 class310_3 = Client.smethod_58();
								ReadOnlyCollection<Unit> readOnlyCollection = null;
								List<ActiveUnit> list = null;
								this.method_308(class310_3, ref readOnlyCollection, ref list, true);
							}
						}
						else
						{
							this.method_166();
						}
					}
					break;
				case 121:
					this.method_238();
					break;
				case 122:
					if (!e.Control || !e.Shift)
					{
						if (e.Modifiers == Keys.Control)
						{
							if (Information.IsNothing(Client.smethod_50()))
							{
								DarkMessageBox.smethod_2("You must have a side selected.", "No side selected!", Enum11.const_0);
							}
							else
							{
								Client.newMission_0.Show();
							}
						}
						else if (Information.IsNothing(Client.smethod_50()))
						{
							DarkMessageBox.smethod_2("You must have a side selected.", "No side selected!", Enum11.const_0);
						}
						else
						{
							Client.smethod_30().Show();
						}
					}
					break;
				default:
					switch (keyValue)
					{
					case 219:
					{
						string text2 = "";
						if (e.Modifiers == Keys.Shift)
						{
							ActiveUnit_Weaponry.smethod_2(Client.smethod_54(), true, true, ref text2);
						}
						else
						{
							ActiveUnit_Weaponry.smethod_2(Client.smethod_54(), false, true, ref text2);
						}
						if (!string.IsNullOrEmpty(text2))
						{
							Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text2, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
						}
						break;
					}
					case 220:
						this.method_188();
						break;
					case 221:
					{
						string text3 = "";
						if (e.Modifiers == Keys.Shift)
						{
							ActiveUnit_Weaponry.smethod_3(Client.smethod_54(), true, true, ref text3);
						}
						else
						{
							ActiveUnit_Weaponry.smethod_3(Client.smethod_54(), false, true, ref text3);
						}
						if (!string.IsNullOrEmpty(text3))
						{
							Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text3, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
						}
						break;
					}
					}
					break;
				}
				IL_172E:;
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200570", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x060063BE RID: 25534 RVA: 0x0036DBA8 File Offset: 0x0036BDA8
		private void method_176()
		{
			if (Client.smethod_0().method_0() == Class279.Enum68.const_1)
			{
				List<NewMessageForm> list = new List<NewMessageForm>();
				list.AddRange(Client.dictionary_5.Values);
				try
				{
					foreach (NewMessageForm newMessageForm in list)
					{
						newMessageForm.Close();
					}
				}
				finally
				{
					List<NewMessageForm>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
			Class279.Enum68 @enum = Client.smethod_0().method_0();
			if (@enum != Class279.Enum68.const_0)
			{
				if (@enum == Class279.Enum68.const_1)
				{
					this.gameControlBar_0.Dispatcher.Invoke(new VB$AnonymousDelegate_0(this.method_638), new object[0]);
				}
			}
			else
			{
				this.gameControlBar_0.Dispatcher.Invoke(new VB$AnonymousDelegate_0(this.method_639), new object[0]);
			}
			Client.bool_1 = true;
		}

		// Token: 0x060063BF RID: 25535 RVA: 0x0036DC78 File Offset: 0x0036BE78
		public void method_177()
		{
			if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0)
			{
				Client.smethod_52().enum87_0 = Class285.Enum87.const_1;
				this.vmethod_808().Text = "Switched to UNIT VIEW";
			}
			else
			{
				Client.smethod_52().enum87_0 = Class285.Enum87.const_0;
				this.vmethod_808().Text = "Switched to GROUP VIEW";
			}
			Client.bool_1 = true;
		}

		// Token: 0x060063C0 RID: 25536 RVA: 0x0003F031 File Offset: 0x0003D231
		private void method_178()
		{
			if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0)
			{
				this.vmethod_808().Text = "Group View";
				return;
			}
			this.vmethod_808().Text = "Unit View";
		}

		// Token: 0x060063C1 RID: 25537 RVA: 0x0036DCD0 File Offset: 0x0036BED0
		private void method_179()
		{
			if (!Information.IsNothing(Client.smethod_54()))
			{
				this.bool_11 = !this.bool_11;
				if (this.bool_11)
				{
					this.method_161(true, new GeoPoint(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
				}
			}
		}

		// Token: 0x060063C2 RID: 25538 RVA: 0x0036DD34 File Offset: 0x0036BF34
		private void method_180()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.method_14())
						{
							Contact contact = (Contact)unit;
							Side side = Client.smethod_50();
							Contact contact_ = contact;
							Scenario scenario = Client.smethod_46();
							side.method_15(contact_, ref scenario, true);
							foreach (Side side2 in Client.smethod_46().method_44())
							{
								if (side2.method_68(Client.smethod_50()) == Misc.PostureStance.Friendly && side2 != Client.smethod_50() && side2.method_44().Contains(contact))
								{
									Side side3 = side2;
									Contact contact_2 = contact;
									scenario = Client.smethod_46();
									side3.method_15(contact_2, ref scenario, false);
								}
							}
							Side side4 = Client.smethod_50();
							Contact theC = contact;
							scenario = Client.smethod_46();
							side4.method_17(theC, ref scenario, true);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.smethod_50().method_20(Client.smethod_46());
				Client.smethod_50().method_21(Client.smethod_46());
			}
		}

		// Token: 0x060063C3 RID: 25539 RVA: 0x0036DE4C File Offset: 0x0036C04C
		private void method_181()
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
			{
				ActiveUnit activeUnit = (ActiveUnit)Client.smethod_54();
				if (activeUnit.bool_3 && ((Aircraft)activeUnit).method_169() && activeUnit.vmethod_88().method_46() && ((Aircraft_AirOps)activeUnit.vmethod_92()).method_36() != Aircraft_AirOps._AirOpsCondition.DeployingDippingSonar)
				{
					((Aircraft_AirOps)activeUnit.vmethod_92()).method_77();
				}
			}
		}

		// Token: 0x060063C4 RID: 25540 RVA: 0x0036DEC4 File Offset: 0x0036C0C4
		private void method_182()
		{
			System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), this.method_160(true).imethod_2(), this.method_160(true).imethod_0());
			System.Drawing.Point point2;
			point2.X = point.X - 50;
			point2.Y = point.Y;
			this.method_161(true, Class2572.smethod_1(this.vmethod_796(), point2.X, point2.Y));
		}

		// Token: 0x060063C5 RID: 25541 RVA: 0x0036DF34 File Offset: 0x0036C134
		private void method_183()
		{
			System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), this.method_160(true).imethod_2(), this.method_160(true).imethod_0());
			System.Drawing.Point point2;
			point2.X = point.X;
			point2.Y = point.Y - 50;
			this.method_161(true, Class2572.smethod_1(this.vmethod_796(), point2.X, point2.Y));
		}

		// Token: 0x060063C6 RID: 25542 RVA: 0x0036DFA4 File Offset: 0x0036C1A4
		private void method_184()
		{
			System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), this.method_160(true).imethod_2(), this.method_160(true).imethod_0());
			System.Drawing.Point point2;
			point2.X = point.X + 50;
			point2.Y = point.Y;
			this.method_161(true, Class2572.smethod_1(this.vmethod_796(), point2.X, point2.Y));
		}

		// Token: 0x060063C7 RID: 25543 RVA: 0x0036E014 File Offset: 0x0036C214
		private void method_185()
		{
			System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), this.method_160(true).imethod_2(), this.method_160(true).imethod_0());
			System.Drawing.Point point2;
			point2.X = point.X;
			point2.Y = point.Y + 50;
			this.method_161(true, Class2572.smethod_1(this.vmethod_796(), point2.X, point2.Y));
		}

		// Token: 0x060063C8 RID: 25544 RVA: 0x0036E084 File Offset: 0x0036C284
		private void method_186()
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_50().method_56().Count > 1)
			{
				List<ActiveUnit> list = new List<ActiveUnit>();
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (!Information.IsNothing(unit.vmethod_7(false)) && unit.vmethod_7(false) == Client.smethod_50())
						{
							try
							{
								ActiveUnit activeUnit = (ActiveUnit)unit;
								if (!activeUnit.method_120() && (unit.vmethod_43() || unit.bool_1))
								{
									list.Add(activeUnit);
									activeUnit.doctrine_0.method_4();
									activeUnit.vmethod_88().vmethod_5(activeUnit.method_78());
								}
							}
							catch (Exception ex)
							{
								ex.Data.Add("Error at 200125", ex.Message);
								GameGeneral.smethod_25(ref ex);
								if (Debugger.IsAttached)
								{
									Debugger.Break();
								}
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				if (list.Count > 1)
				{
					IEnumerable<ActiveUnit> enumerable = Enumerable.Where<ActiveUnit>(list, (MainForm._Closure$__.$I2464-0 == null) ? (MainForm._Closure$__.$I2464-0 = new Func<ActiveUnit, bool>(MainForm._Closure$__.$I.method_32)) : MainForm._Closure$__.$I2464-0);
					int num = Enumerable.Count<ActiveUnit>(enumerable);
					if (num != 0)
					{
						if (num != 1)
						{
							DarkMessageBox.smethod_2("Joining multiple groups is not supported at this time.\r\nSuggested temporary workaround: dissolve all selected groups except one, and add all units to the remaining group.", "Sorry!", Enum11.const_0);
						}
						else
						{
							IEnumerable<ActiveUnit> enumerable2 = Enumerable.Where<ActiveUnit>(list, (MainForm._Closure$__.$I2464-1 == null) ? (MainForm._Closure$__.$I2464-1 = new Func<ActiveUnit, bool>(MainForm._Closure$__.$I.method_33)) : MainForm._Closure$__.$I2464-1);
							Group group = (Group)Enumerable.ElementAtOrDefault<ActiveUnit>(enumerable, 0);
							int num2 = 0;
							try
							{
								foreach (ActiveUnit activeUnit2 in enumerable2)
								{
									if (group.method_143() == Group.GroupType.AirGroup)
									{
										if (!activeUnit2.bool_3)
										{
											continue;
										}
										if (!Information.IsNothing(group.method_147()) && Operators.CompareString(group.method_147().string_2, activeUnit2.string_2, false) != 0)
										{
											continue;
										}
									}
									else if (group.method_143() == Group.GroupType.SurfaceGroup)
									{
										if (!activeUnit2.bool_6)
										{
											continue;
										}
									}
									else if (group.method_143() == Group.GroupType.SubGroup)
									{
										if (!activeUnit2.bool_5)
										{
											continue;
										}
									}
									else if ((group.method_143() == Group.GroupType.AirBase || group.method_143() == Group.GroupType.Installation || group.method_143() == Group.GroupType.MobileGroup || group.method_143() == Group.GroupType.NavalBase) && !activeUnit2.bool_8)
									{
										continue;
									}
									activeUnit2.vmethod_66(false, group);
									num2 = 1;
								}
							}
							finally
							{
								IEnumerator<ActiveUnit> enumerator2;
								if (enumerator2 != null)
								{
									enumerator2.Dispose();
								}
							}
							if (num2 > 0)
							{
								Client.smethod_56(Enumerable.ElementAtOrDefault<ActiveUnit>(enumerable, 0), true);
								Client.smethod_52().enum87_0 = Class285.Enum87.const_0;
								this.vmethod_808().Text = "Selected units added to selected group";
							}
						}
					}
					else
					{
						Misc.smethod_58(list, Client.smethod_46(), Client.smethod_50(), null);
						Client.smethod_52().enum87_0 = Class285.Enum87.const_0;
						this.vmethod_808().Text = "Selected units grouped together - Switched to GROUP VIEW";
					}
					list = null;
					Client.bool_1 = true;
				}
			}
		}

		// Token: 0x060063C9 RID: 25545 RVA: 0x0036E394 File Offset: 0x0036C594
		private void method_187()
		{
			if (Enumerable.Count<Side>(Client.smethod_46().method_44()) > 0 && Client.smethod_50().method_56().Count > 0)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
						{
							((ActiveUnit)unit).method_129(true, true, false);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
				this.vmethod_808().Text = "Selected unit(s) detached from group.";
			}
		}

		// Token: 0x060063CA RID: 25546 RVA: 0x0036E43C File Offset: 0x0036C63C
		private void method_188()
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_61() == Client.Enum197.const_0)
			{
				List<Unit> list = Enumerable.ToList<Unit>(this.list_53);
				if (list.Count > 0)
				{
					Unit unit_;
					if (!Information.IsNothing(Client.smethod_54()) && list.Contains(Client.smethod_54()))
					{
						if (list.IndexOf(Client.smethod_54()) == list.Count - 1)
						{
							unit_ = list[0];
						}
						else
						{
							unit_ = list[list.IndexOf(Client.smethod_54()) + 1];
						}
					}
					else
					{
						unit_ = list[0];
					}
					Client.smethod_50().method_62();
					list.Clear();
					Client.smethod_56(unit_, true);
				}
			}
		}

		// Token: 0x060063CB RID: 25547 RVA: 0x0036E4E8 File Offset: 0x0036C6E8
		private void method_189()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				List<Unit> list = Enumerable.ToList<Unit>(this.list_53);
				if (list.Count > 0)
				{
					Unit unit_;
					if (!Information.IsNothing(Client.smethod_54()) && list.Contains(Client.smethod_54()))
					{
						if (list.IndexOf(Client.smethod_54()) == 0)
						{
							unit_ = list[list.Count - 1];
						}
						else
						{
							unit_ = list[list.IndexOf(Client.smethod_54()) - 1];
						}
					}
					else
					{
						unit_ = list[list.Count - 1];
					}
					Client.smethod_50().method_62();
					list.Clear();
					Client.smethod_56(unit_, true);
				}
			}
		}

		// Token: 0x060063CC RID: 25548 RVA: 0x0036E590 File Offset: 0x0036C790
		private void method_190()
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_61() == Client.Enum197.const_0)
			{
				if (Client.smethod_50().method_56().Count == 1)
				{
					if (!Information.IsNothing(Client.smethod_54()))
					{
						Class2413.smethod_2().method_54().string_0 = Client.smethod_54().Name;
						if (Class2413.smethod_2().method_54().ShowDialog() == DialogResult.OK)
						{
							Client.smethod_54().Name = Class2413.smethod_2().method_54().string_0;
							Client.bool_1 = true;
							return;
						}
					}
				}
				else
				{
					if (Client.smethod_50().method_56().Count > 1)
					{
						Client.smethod_46().method_59("Can only rename one unit, group or contact at a time.", null, LoggedMessage.MessageType.SpecialMessage, 1, null, Client.smethod_50(), default(Geopoint_Struct));
						return;
					}
					Client.smethod_46().method_59("Select a unit, group or contact to rename.", null, LoggedMessage.MessageType.SpecialMessage, 1, null, Client.smethod_50(), default(Geopoint_Struct));
				}
			}
		}

		// Token: 0x060063CD RID: 25549 RVA: 0x0036E67C File Offset: 0x0036C87C
		private void method_191()
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_61() == Client.Enum197.const_0)
			{
				if (Client.smethod_60().Count == 1)
				{
					Class2413.smethod_2().method_54().string_0 = Client.smethod_60()[0].Name;
					if (Class2413.smethod_2().method_54().ShowDialog() == DialogResult.OK)
					{
						Client.smethod_60()[0].Name = Class2413.smethod_2().method_54().string_0;
						return;
					}
				}
				else
				{
					if (Client.smethod_60().Count > 1)
					{
						Client.smethod_46().method_59("Can only rename one reference point at a time. Deselect all reference points but one.", null, LoggedMessage.MessageType.SpecialMessage, 1, null, Client.smethod_50(), default(Geopoint_Struct));
						return;
					}
					Client.smethod_46().method_59("Select a reference point to rename.", null, LoggedMessage.MessageType.SpecialMessage, 1, null, Client.smethod_50(), default(Geopoint_Struct));
				}
			}
		}

		// Token: 0x060063CE RID: 25550 RVA: 0x0036E754 File Offset: 0x0036C954
		private void method_192()
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_0().method_1() == Class279.Enum67.const_2)
			{
				this.referencePoint_0 = null;
				if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && ((ActiveUnit)Client.smethod_54()).vmethod_7(false) == Client.smethod_50())
				{
					Client.smethod_62(Client.Enum197.const_21);
				}
			}
		}

		// Token: 0x060063CF RID: 25551 RVA: 0x0036E7B8 File Offset: 0x0036C9B8
		private void method_193()
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_0().method_1() == Class279.Enum67.const_2)
			{
				this.referencePoint_0 = null;
				if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
				{
					Client.smethod_62(Client.Enum197.const_12);
				}
			}
		}

		// Token: 0x060063D0 RID: 25552 RVA: 0x0036E804 File Offset: 0x0036CA04
		private void method_194()
		{
			StringBuilder stringBuilder = new StringBuilder();
			bool flag = false;
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_50().method_56().Count > 0)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (!Information.IsNothing(unit))
						{
							if (flag)
							{
								stringBuilder.Append(" , ");
							}
							stringBuilder.Append(string.Concat(new string[]
							{
								"{name='",
								unit.Name.ToString(),
								"', guid='",
								unit.string_0,
								"'}"
							}));
							flag = true;
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				System.Windows.Forms.Clipboard.SetText(stringBuilder.ToString());
			}
		}

		// Token: 0x060063D1 RID: 25553 RVA: 0x0036E8E0 File Offset: 0x0036CAE0
		private void method_195()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				StringBuilder stringBuilder = new StringBuilder();
				bool flag = false;
				Client.smethod_50().vmethod_12();
				try
				{
					foreach (ReferencePoint referencePoint in Client.smethod_60())
					{
						if (!Information.IsNothing(referencePoint))
						{
							if (flag)
							{
								stringBuilder.Append(" , ");
							}
							stringBuilder.Append(string.Concat(new string[]
							{
								"{name='",
								referencePoint.Name.ToString(),
								"', guid='",
								referencePoint.string_0,
								"', latitude='",
								Conversions.ToString(referencePoint.imethod_2()),
								"', longitude='",
								Conversions.ToString(referencePoint.imethod_0()),
								"'}"
							}));
							flag = true;
						}
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				System.Windows.Forms.Clipboard.SetText(stringBuilder.ToString());
			}
		}

		// Token: 0x060063D2 RID: 25554 RVA: 0x0003F060 File Offset: 0x0003D260
		private void method_196()
		{
			if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
			{
				this.referencePoint_0 = null;
				if (Client.smethod_61() == Client.Enum197.const_0 && !Information.IsNothing(Client.smethod_54()))
				{
					Client.smethod_62(Client.Enum197.const_11);
				}
			}
		}

		// Token: 0x060063D3 RID: 25555 RVA: 0x0036E9E8 File Offset: 0x0036CBE8
		private void method_197()
		{
			try
			{
				if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
				{
					if (Client.smethod_50().method_56().Count > 1)
					{
						if (DarkMessageBox.smethod_1("Delete " + Conversions.ToString(Client.smethod_50().method_56().Count) + " units?", "Multiple unit delete", Enum11.const_2) == DialogResult.OK)
						{
							Collection<ActiveUnit> collection = new Collection<ActiveUnit>();
							try
							{
								foreach (Unit unit in Client.smethod_50().method_56())
								{
									if (unit.bool_0)
									{
										collection.Add((ActiveUnit)unit);
									}
									else if (unit.method_14())
									{
										Client.smethod_50().method_11().Remove(unit.string_0);
										Client.smethod_50().method_12().Remove(unit.string_0);
									}
								}
							}
							finally
							{
								IEnumerator<Unit> enumerator;
								if (enumerator != null)
								{
									enumerator.Dispose();
								}
							}
							try
							{
								foreach (ActiveUnit activeUnit in collection)
								{
									Client.smethod_46().method_66(activeUnit.string_0, true);
								}
							}
							finally
							{
								IEnumerator<ActiveUnit> enumerator2;
								if (enumerator2 != null)
								{
									enumerator2.Dispose();
								}
							}
							List<ActiveUnit> list = new List<ActiveUnit>();
							try
							{
								foreach (ActiveUnit activeUnit2 in Client.smethod_46().method_46())
								{
									if (activeUnit2.bool_1)
									{
										list.Add(activeUnit2);
									}
								}
							}
							finally
							{
								List<ActiveUnit>.Enumerator enumerator3;
								((IDisposable)enumerator3).Dispose();
							}
							try
							{
								foreach (ActiveUnit activeUnit3 in list)
								{
									Client.smethod_46().method_66(activeUnit3.string_0, true);
								}
							}
							finally
							{
								List<ActiveUnit>.Enumerator enumerator4;
								((IDisposable)enumerator4).Dispose();
							}
							Client.smethod_56(null, true);
							Client.bool_1 = true;
						}
					}
					else if (!Information.IsNothing(Client.smethod_54()))
					{
						if (Client.smethod_54().method_14())
						{
							Client.smethod_50().method_11().Remove(Client.smethod_54().string_0);
							Client.smethod_50().method_12().Remove(Client.smethod_54().string_0);
						}
						else
						{
							Client.smethod_46().method_66(Client.smethod_54().string_0, true);
						}
						Client.smethod_56(null, true);
						Client.bool_1 = true;
					}
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 101144", "");
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x060063D4 RID: 25556 RVA: 0x0036ECC8 File Offset: 0x0036CEC8
		private void method_198()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				ObservableList<ReferencePoint> observableList = Client.smethod_50().vmethod_12();
				try
				{
					foreach (ReferencePoint gparam_ in Client.smethod_60())
					{
						observableList.method_6(gparam_);
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				this.referencePoint_0 = null;
				Client.bool_1 = true;
			}
		}

		// Token: 0x060063D5 RID: 25557 RVA: 0x0036ED40 File Offset: 0x0036CF40
		private void method_199()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.method_14())
						{
							Contact contact = (Contact)unit;
							if (contact.method_130(Client.smethod_50()) != Misc.PostureStance.Hostile)
							{
								contact.method_131(Client.smethod_50(), true, Misc.PostureStance.Hostile);
								Client.smethod_46().method_59("Contact: " + contact.Name + " has been manually marked as hostile!", "Contact marked hostile", LoggedMessage.MessageType.ContactChange, 1, null, Client.smethod_50(), new Geopoint_Struct(contact.vmethod_28(null), contact.vmethod_30(null)));
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x060063D6 RID: 25558 RVA: 0x0036EE20 File Offset: 0x0036D020
		private void method_200()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.method_14())
						{
							Contact contact = (Contact)unit;
							if (contact.method_130(Client.smethod_50()) != Misc.PostureStance.Unfriendly)
							{
								contact.method_131(Client.smethod_50(), true, Misc.PostureStance.Unfriendly);
								Client.smethod_46().method_59("Contact: " + contact.Name + " has been manually marked as unfriendly.", "Contact marked unfriendly", LoggedMessage.MessageType.ContactChange, 1, null, Client.smethod_50(), new Geopoint_Struct(contact.vmethod_28(null), contact.vmethod_30(null)));
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x060063D7 RID: 25559 RVA: 0x0036EF00 File Offset: 0x0036D100
		private void method_201()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.method_14())
						{
							Contact contact = (Contact)unit;
							if (contact.method_130(Client.smethod_50()) != Misc.PostureStance.Neutral)
							{
								contact.method_131(Client.smethod_50(), true, Misc.PostureStance.Neutral);
								Client.smethod_46().method_59("Contact: " + contact.Name + " has been manually marked as neutral.", "Contact marked neutral", LoggedMessage.MessageType.ContactChange, 1, null, Client.smethod_50(), new Geopoint_Struct(contact.vmethod_28(null), contact.vmethod_30(null)));
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x060063D8 RID: 25560 RVA: 0x0036EFDC File Offset: 0x0036D1DC
		private void method_202()
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.method_14())
						{
							Contact contact = (Contact)unit;
							if (contact.method_130(Client.smethod_50()) != Misc.PostureStance.Friendly)
							{
								contact.method_131(Client.smethod_50(), true, Misc.PostureStance.Friendly);
								Client.smethod_46().method_59("Contact: " + contact.Name + " has been manually marked as friendly.", "Contact marked friendly", LoggedMessage.MessageType.ContactChange, 1, null, Client.smethod_50(), new Geopoint_Struct(contact.vmethod_28(null), contact.vmethod_30(null)));
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x060063D9 RID: 25561 RVA: 0x0036F0BC File Offset: 0x0036D2BC
		private void MainForm_Load(object sender, EventArgs e)
		{
			try
			{
				if (Information.IsNothing(Class570.class280_0))
				{
					Class570.smethod_0(ref Class2566.dictionary_0, ref Client.list_1);
					if (Class570.class280_0.method_50())
					{
						string text = "Successfully loaded Sim Configuration.";
						GameGeneral.smethod_26(ref text);
					}
				}
				if (Class570.class280_0.method_18() == Class279.Class280.Enum70.const_1)
				{
					if (Class570.class280_0.method_50())
					{
						string text = "Desired DPI scaling method: Font";
						GameGeneral.smethod_26(ref text);
					}
				}
				else if (Class570.class280_0.method_50())
				{
					string text = "Desired DPI scaling method: Application";
					GameGeneral.smethod_26(ref text);
				}
				if (Client.float_1 == 1f)
				{
					if (Class570.class280_0.method_50())
					{
						string text = "DPI scaling is 100%. Setting scaling mode on Mainform to None for performance reasons and disabling AutoSize so that the Mainform window can be resized.";
						GameGeneral.smethod_26(ref text);
					}
					base.AutoScaleMode = AutoScaleMode.None;
					this.AutoSize = false;
				}
				else if (Class570.class280_0.method_50())
				{
					string text = "DPI scaling is greater than 100%. Setting scaling mode on Mainform to font and enabling AutoSize so that RightColumn resizes correctly. This will, however, disable the ability to resize the Mainform window.";
					GameGeneral.smethod_26(ref text);
				}
				if (Class570.class280_0.method_50())
				{
					string text = "Starting loading MainForm.";
					GameGeneral.smethod_26(ref text);
				}
				this.rectangle_1 = default(Rectangle);
				this.list_55 = new List<System.Drawing.Point>();
				this.vmethod_5(new Timer());
				this.rectangle_0 = default(Rectangle);
				this.bool_3 = true;
				this.list_53 = new List<Unit>();
				this.dictionary_2 = new Dictionary<Unit, Tuple<int, int>>();
				this.list_54 = new List<Unit>();
				this.float_1 = 3600f;
				this.object_0 = RuntimeHelpers.GetObjectValue(new object());
				this.list_52 = new List<Class1879>();
				this.dictionary_1 = new Dictionary<string, Bitmap>();
				this.class1848_0 = null;
				this.bool_10 = false;
				this.rectangle_1 = default(Rectangle);
				this.list_51 = new List<Unit>();
				this.bool_14 = false;
				this.list_56 = new List<FixedGeoPolygon>();
				this.point_5 = default(System.Drawing.Point);
				this.dictionary_3 = new Dictionary<Color, SolidBrush>();
				this.list_61 = new List<Mission.Flight>();
				this.font_0 = new System.Drawing.Font("Verdana", 11f, System.Drawing.FontStyle.Bold);
				this.font_1 = new System.Drawing.Font("Verdana", 9f, System.Drawing.FontStyle.Regular);
				this.font_2 = new System.Drawing.Font("Verdana", 9f, System.Drawing.FontStyle.Regular);
				this.font_3 = new System.Drawing.Font("Verdana", 9f, System.Drawing.FontStyle.Regular);
				this.font_4 = new System.Drawing.Font("Verdana", 11f, System.Drawing.FontStyle.Regular);
				this.font_5 = new System.Drawing.Font("Verdana", 11f, System.Drawing.FontStyle.Regular);
				this.font_6 = new System.Drawing.Font("Verdana", 11f, System.Drawing.FontStyle.Regular);
				this.font_7 = new System.Drawing.Font(Client.font_1.FontFamily, 11f, System.Drawing.FontStyle.Bold);
				this.method_98(new Class2425());
				this.list_57 = new List<GeoPoint>();
				this.list_58 = new List<Waypoint>();
				this.list_59 = new List<Waypoint>();
				this.list_60 = new List<Waypoint>();
				if (Class570.class280_0.method_50())
				{
					string text = "Configured MainForm working area";
					GameGeneral.smethod_26(ref text);
				}
				this.vmethod_224().Enabled = (GameGeneral.smethod_6() || Class2556.smethod_6(Class2556.Enum209.const_0));
				this.vmethod_908().Visible = true;
				if (this.vmethod_224().Enabled && Class570.class280_0.method_50())
				{
					string text = "License: Command full version";
					GameGeneral.smethod_26(ref text);
				}
				this.color_0 = Client.smethod_52().struct27_0.color_0;
				this.color_1 = Client.smethod_52().struct27_0.color_2;
				this.color_2 = Client.smethod_52().struct27_0.color_5;
				this.color_3 = Client.smethod_52().struct27_0.color_1;
				this.color_4 = Client.smethod_52().struct27_0.color_3;
				this.color_5 = Client.smethod_52().struct27_0.color_4;
				this.color_6 = Client.smethod_52().struct27_0.color_6;
				this.color_7 = Client.smethod_52().struct27_0.color_7;
				if (Class570.class280_0.method_50())
				{
					string text = "Configured range ring colors";
					GameGeneral.smethod_26(ref text);
				}
				this.vmethod_732().Interval = 250;
				this.vmethod_732().Start();
				if (Class570.class280_0.method_50())
				{
					string text = "Done loading MainForm.";
					GameGeneral.smethod_26(ref text);
				}
				this.method_105();
				this.vmethod_958().Visible = true;
				this.vmethod_782().Visible = false;
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200579", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x060063DA RID: 25562 RVA: 0x0036F540 File Offset: 0x0036D740
		private void method_203()
		{
			if (base.Visible)
			{
				this.vmethod_246().Text = Conversions.ToString(Client.float_1);
				try
				{
					if (Client.smethod_50() != null)
					{
						if (Enumerable.Count<SpecialAction>(Enumerable.Where<SpecialAction>(Client.smethod_50().dictionary_2.Values, (MainForm._Closure$__.$I2482-0 == null) ? (MainForm._Closure$__.$I2482-0 = new Func<SpecialAction, bool>(MainForm._Closure$__.$I.method_34)) : MainForm._Closure$__.$I2482-0)) > 0)
						{
							((GameControlBar)this.vmethod_1010().Child).vmethod_34().Visibility = Visibility.Visible;
						}
						else
						{
							((GameControlBar)this.vmethod_1010().Child).vmethod_34().Visibility = Visibility.Collapsed;
						}
						List<Unit> list = new List<Unit>();
						list.AddRange(Client.smethod_50().method_56());
						if (list.Count > 0)
						{
							try
							{
								foreach (Unit unit in list)
								{
									if (unit != null)
									{
										if (unit.bool_0)
										{
											if (((ActiveUnit)unit).method_82())
											{
												Client.smethod_50().method_61(unit);
												if (Client.smethod_54() == unit)
												{
													Client.smethod_56(null, true);
												}
											}
										}
										else if (unit.method_14() && !Client.smethod_50().method_11().Values.Contains((Contact)unit) && !Client.smethod_50().method_12().Values.Contains((Contact)unit) && string.IsNullOrEmpty(Client.smethod_52().method_59()))
										{
											Client.smethod_50().method_61(unit);
											if (Client.smethod_54() == unit)
											{
												Client.smethod_56(null, true);
											}
										}
									}
								}
								goto IL_1C4;
							}
							finally
							{
								List<Unit>.Enumerator enumerator;
								((IDisposable)enumerator).Dispose();
							}
						}
						if (Client.smethod_54() != null && Client.smethod_54().bool_0 && !((ActiveUnit)Client.smethod_54()).vmethod_127())
						{
							Client.smethod_56(null, true);
						}
						IL_1C4:
						if (Class2413.smethod_2().unitMessageLog_0 != null && Class2413.smethod_2().method_74().Visible)
						{
							Class2413.smethod_2().method_74().method_4(true, true);
						}
						this.vmethod_96().Checked = Client.smethod_52().method_1();
						if (!string.IsNullOrEmpty(Client.smethod_52().method_59()) && Client.smethod_54() == null)
						{
							this.method_562();
						}
						if (Class570.class280_0.method_48())
						{
							this.vmethod_774().Visible = true;
							bool flag = true;
							bool flag2 = true;
							bool flag3 = true;
							Class279.Class280 class280_ = Class570.class280_0;
							if (class280_.method_0())
							{
								flag3 = false;
							}
							if (Client.smethod_52().method_57() == Class285.Enum85.const_0)
							{
								flag2 = false;
							}
							else if (Client.smethod_52().method_51() == Class285.Enum85.const_0)
							{
								flag2 = false;
							}
							else if (Client.smethod_52().method_53() == Class285.Enum85.const_0)
							{
								flag2 = false;
							}
							if (class280_.method_52())
							{
								flag = false;
							}
							else if (Client.smethod_52().method_25())
							{
								flag = false;
							}
							else
							{
								if (class280_.method_38() == 8f)
								{
									if ((double)class280_.method_40() == 0.5)
									{
										if (class280_.method_54())
										{
											flag = false;
											goto IL_34E;
										}
										if (Class570.class280_0.method_30() == Class279.Class280.Enum78.const_0)
										{
											flag = false;
											goto IL_34E;
										}
										if (Client.smethod_52().method_49() == Class285.Enum85.const_0)
										{
											flag = false;
											goto IL_34E;
										}
										if (Client.smethod_52().method_45() == Class285.Enum85.const_0)
										{
											flag = false;
											goto IL_34E;
										}
										if (class280_.method_56())
										{
											flag = false;
											goto IL_34E;
										}
										if (class280_.method_28() != Class279.Class280.Enum74.const_0)
										{
											if (class280_.method_28() != Class279.Class280.Enum74.const_1)
											{
												if (!class280_.method_58() && Class2473.smethod_2())
												{
													flag = false;
													goto IL_34E;
												}
												goto IL_34E;
											}
										}
										flag = false;
										goto IL_34E;
									}
								}
								flag = false;
							}
							IL_34E:
							if (!flag)
							{
								this.vmethod_774().BackColor = Color.Red;
							}
							else if (!flag2)
							{
								this.vmethod_774().BackColor = Color.Orange;
							}
							else if (!flag3)
							{
								this.vmethod_774().BackColor = Color.Yellow;
							}
							else
							{
								this.vmethod_774().BackColor = Color.LightGreen;
							}
						}
						else
						{
							this.vmethod_774().Visible = false;
						}
					}
					else if (Class570.class280_0.method_48())
					{
						this.vmethod_774().Visible = true;
						this.vmethod_774().BackColor = Control.DefaultBackColor;
					}
					else
					{
						this.vmethod_774().Visible = false;
					}
					if (Information.IsNothing(Client.smethod_54()))
					{
						this.vmethod_250().Enabled = false;
						this.vmethod_440().Enabled = false;
					}
					else if (Client.smethod_50().method_56().Count == 1 && Client.smethod_54().bool_0 && Client.smethod_54().vmethod_7(false) == Client.smethod_50())
					{
						this.vmethod_250().Enabled = Client.smethod_54().bool_0;
						this.vmethod_440().Enabled = Client.smethod_54().method_14();
					}
					else if (Client.smethod_50().method_56().Count > 0)
					{
						this.vmethod_250().Enabled = false;
						this.vmethod_440().Enabled = false;
						try
						{
							foreach (Unit unit2 in Client.smethod_50().method_56())
							{
								if (unit2.bool_0 && unit2.vmethod_7(false) == Client.smethod_50())
								{
									this.vmethod_250().Enabled = true;
								}
								else
								{
									this.vmethod_440().Enabled = true;
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator2;
							if (enumerator2 != null)
							{
								enumerator2.Dispose();
							}
						}
					}
					Class279.Enum68 @enum = Client.smethod_0().method_0();
					if (@enum != Class279.Enum68.const_0)
					{
						if (@enum == Class279.Enum68.const_1)
						{
							this.vmethod_24().Checked = true;
							this.vmethod_24().Text = "Stop / Pause";
							this.vmethod_24().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\Stop_16.gif");
						}
					}
					else
					{
						this.vmethod_24().Checked = false;
						this.vmethod_24().Text = "Start / Resume";
						this.vmethod_24().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\Play.gif");
					}
					if (Client.nullable_0 != null)
					{
						this.vmethod_986().Visible = true;
						this.vmethod_986().Text = "Auto-pausing in " + Misc.smethod_11((long)Math.Round((Client.nullable_0.Value - Client.smethod_46().method_31()).TotalSeconds), Aircraft_AirOps.Enum44.const_0, false, false) + " (sim time)";
					}
					else
					{
						this.vmethod_986().Visible = false;
					}
					this.method_235();
					if (Information.IsNothing(Client.smethod_50()))
					{
						this.vmethod_942().Visible = false;
					}
					else
					{
						Client.smethod_54();
						this.vmethod_38().Enabled = (Enumerable.Count<Side>(Client.smethod_46().method_44()) > 0);
						if (Information.IsNothing(Client.smethod_54()) && Client.unitSensors_0.Visible)
						{
							Client.unitSensors_0.Hide();
						}
						if (this.bool_11)
						{
							if (Information.IsNothing(Client.smethod_54()))
							{
								this.bool_11 = false;
							}
							else
							{
								this.method_161(true, new GeoPoint(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
							}
							if (this.method_158())
							{
								Client.bool_1 = true;
							}
						}
						else if (Client.queue_0.Count > 0)
						{
							Client.smethod_106(Client.queue_0.Dequeue());
						}
						else
						{
							Client.bool_1 = true;
						}
						if (!Information.IsNothing(Client.smethod_50()))
						{
							this.vmethod_942().Visible = (Enumerable.Count<KeyValuePair<string, SpecialAction>>(Enumerable.Where<KeyValuePair<string, SpecialAction>>(Client.smethod_50().dictionary_2, (MainForm._Closure$__.$I2482-1 == null) ? (MainForm._Closure$__.$I2482-1 = new Func<KeyValuePair<string, SpecialAction>, bool>(MainForm._Closure$__.$I.method_35)) : MainForm._Closure$__.$I2482-1)) > 0);
							if (this.vmethod_942().Visible)
							{
								this.vmethod_942().Text = "Special Actions (" + Conversions.ToString(Enumerable.Count<KeyValuePair<string, SpecialAction>>(Enumerable.Where<KeyValuePair<string, SpecialAction>>(Client.smethod_50().dictionary_2, (MainForm._Closure$__.$I2482-2 == null) ? (MainForm._Closure$__.$I2482-2 = new Func<KeyValuePair<string, SpecialAction>, bool>(MainForm._Closure$__.$I.method_36)) : MainForm._Closure$__.$I2482-2))) + ")";
							}
						}
						if (!Information.IsNothing(Client.exception_0))
						{
							this.method_631();
						}
						if (Client.smethod_0().method_1() == Class279.Enum67.const_0 && Client.smethod_52().method_1())
						{
							this.method_261();
						}
					}
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200126", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x060063DB RID: 25563 RVA: 0x0036FDAC File Offset: 0x0036DFAC
		private void method_204()
		{
			if (!Information.IsNothing(Client.smethod_54()) && !Information.IsNothing(Client.smethod_54().vmethod_7(false)))
			{
				try
				{
					if (Client.smethod_61() == Client.Enum197.const_6)
					{
						this.vmethod_254().Text = "End Plotting Course";
					}
					else
					{
						this.vmethod_254().Text = "Plot Course";
					}
					this.vmethod_636().Enabled = true;
					this.vmethod_636().Checked = true;
					foreach (ActiveUnit unit in Client.smethod_50().activeUnit_0)
					{
						if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && unit.bool_8 && !unit.method_5())
						{
							bool flag = true;
							if (!((Facility)unit).method_148().bool_4)
							{
								this.vmethod_636().Checked = false;
								IL_CC:
								if (!flag)
								{
									this.vmethod_636().Checked = false;
									this.vmethod_636().Enabled = false;
								}
								if ((Client.smethod_50().method_56().Count == 1 && !Information.IsNothing(Client.smethod_54())) || (Client.smethod_50().method_56().Count == 0 && !Information.IsNothing(Client.smethod_54()) && Information.IsNothing(Client.smethod_58())))
								{
									this.vmethod_472().Enabled = false;
									this.vmethod_258().Enabled = (!Client.smethod_54().bool_1 && !Client.smethod_54().bool_2);
									if (Client.smethod_54().vmethod_7(false) == Client.smethod_50())
									{
										if (!Client.smethod_54().bool_2)
										{
											this.vmethod_438().Enabled = true;
										}
										else
										{
											this.vmethod_438().Enabled = false;
										}
										Side side_ = Client.smethod_50();
										Unit unit_ = Client.smethod_54();
										bool flag2 = true;
										string text = null;
										if (GameGeneral.smethod_45(side_, unit_, flag2, ref text, Client.smethod_52().method_59()))
										{
											this.vmethod_262().Enabled = true;
										}
										else
										{
											this.vmethod_262().Enabled = false;
										}
										Side side_2 = Client.smethod_50();
										Unit unit_2 = Client.smethod_54();
										bool flag3 = false;
										text = null;
										if (GameGeneral.smethod_45(side_2, unit_2, flag3, ref text, Client.smethod_52().method_59()))
										{
											this.vmethod_254().Enabled = true;
											this.vmethod_252().Enabled = true;
										}
										else
										{
											this.vmethod_254().Enabled = false;
											this.vmethod_252().Enabled = false;
										}
										Doctrine doctrine_;
										if (Client.smethod_54().bool_0 && !Client.smethod_54().bool_2 && Client.smethod_54().vmethod_7(false) == Client.smethod_50())
										{
											doctrine_ = ((ActiveUnit)Client.smethod_54()).doctrine_0;
										}
										if (!Information.IsNothing(doctrine_) && doctrine_.method_86(Client.smethod_46()))
										{
											if (!Client.smethod_54().bool_2)
											{
												this.vmethod_726().Enabled = true;
												Doctrine.Enum64? @enum = doctrine_.method_83(Client.smethod_46(), false, null, false, false);
												byte? b;
												if (doctrine_.method_85())
												{
													this.vmethod_670().Checked = false;
													this.vmethod_672().Checked = false;
													this.vmethod_674().Checked = true;
												}
												else
												{
													b = ((@enum != null) ? new byte?((byte)@enum.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
													{
														this.vmethod_670().Checked = true;
														this.vmethod_672().Checked = false;
														this.vmethod_674().Checked = false;
													}
													else
													{
														this.vmethod_670().Checked = false;
														this.vmethod_672().Checked = true;
														this.vmethod_674().Checked = false;
													}
												}
												Doctrine doctrine = doctrine_;
												Scenario scenario_ = Client.smethod_46();
												bool flag4 = true;
												Doctrine.Enum64? enum2 = doctrine.method_3(scenario_, ref flag4).method_83(Client.smethod_46(), false, null, false, false);
												b = ((enum2 != null) ? new byte?((byte)enum2.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
												{
													this.vmethod_674().Text = "Inherited, Yes";
												}
												else
												{
													this.vmethod_674().Text = "Inherited, No";
												}
											}
											else
											{
												this.vmethod_726().Enabled = false;
											}
											if (!Client.smethod_54().bool_2)
											{
												int num = 1;
												bool flag5 = true;
												ActiveUnit[] activeUnit_2 = Client.smethod_50().activeUnit_0;
												int j = 0;
												while (j < activeUnit_2.Length)
												{
													Unit unit2 = activeUnit_2[j];
													if (!unit2.bool_0 || unit2.vmethod_7(false) != Client.smethod_50())
													{
														goto IL_5E9;
													}
													if (!unit2.bool_2)
													{
														if (num == 1)
														{
															Doctrine.Enum64? enum3;
															if (((ActiveUnit)unit2).doctrine_0.method_85())
															{
																enum3 = null;
																goto IL_5E9;
															}
															enum3 = ((ActiveUnit)unit2).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
															goto IL_5E9;
														}
														else
														{
															Doctrine.Enum64? enum3;
															byte? b2;
															if (Information.IsNothing(enum3))
															{
																if (((ActiveUnit)unit2).doctrine_0.method_85())
																{
																	goto IL_5E9;
																}
																flag5 = false;
															}
															else if (!((ActiveUnit)unit2).doctrine_0.method_85())
															{
																byte? b = (enum3 != null) ? new byte?((byte)enum3.GetValueOrDefault()) : null;
																Doctrine.Enum64? enum4 = ((ActiveUnit)unit2).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
																b2 = ((enum4 != null) ? new byte?((byte)enum4.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	goto IL_5E9;
																}
																flag5 = false;
															}
															else
															{
																flag5 = false;
															}
															IL_60F:
															this.vmethod_624().Enabled = true;
															if (flag5)
															{
																if (Information.IsNothing(enum3))
																{
																	this.vmethod_676().Checked = false;
																	this.vmethod_678().Checked = false;
																	this.vmethod_680().Checked = true;
																}
																else
																{
																	b2 = ((enum3 != null) ? new byte?((byte)enum3.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																	{
																		this.vmethod_676().Checked = true;
																		this.vmethod_678().Checked = false;
																		this.vmethod_680().Checked = false;
																	}
																	else
																	{
																		this.vmethod_676().Checked = false;
																		this.vmethod_678().Checked = true;
																		this.vmethod_680().Checked = false;
																	}
																}
															}
															else
															{
																this.vmethod_676().Checked = false;
																this.vmethod_678().Checked = false;
																this.vmethod_680().Checked = false;
															}
															Doctrine.Enum52? enum5 = Client.smethod_50().doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
															b2 = ((enum5 != null) ? new byte?((byte)enum5.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																this.vmethod_680().Text = "Inherited, Yes";
																goto IL_7C0;
															}
															this.vmethod_680().Text = "Inherited, No";
															goto IL_7C0;
														}
													}
													IL_5EF:
													checked
													{
														j++;
														continue;
														IL_5E9:;
													}
													num++;
													goto IL_5EF;
												}
												goto IL_60F;
											}
											this.vmethod_624().Enabled = false;
										}
										IL_7C0:
										if (!Client.smethod_50().doctrine_0.method_66(Client.smethod_46()) && !Client.smethod_50().doctrine_0.method_71(Client.smethod_46()) && !Client.smethod_50().doctrine_0.method_76(Client.smethod_46()) && !Client.smethod_50().doctrine_0.method_81(Client.smethod_46()))
										{
											this.vmethod_624().Enabled = false;
											this.vmethod_726().Enabled = false;
											this.vmethod_620().Enabled = false;
											this.vmethod_550().Enabled = false;
										}
										else
										{
											if (!Client.smethod_54().bool_2)
											{
												this.vmethod_550().Enabled = true;
												Doctrine.Enum52? enum6 = doctrine_.method_63(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum7 = doctrine_.method_68(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum8 = doctrine_.method_73(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum9 = doctrine_.method_78(Client.smethod_46(), false, null, false, false);
												byte? b;
												if (doctrine_.method_65() && doctrine_.method_70() && doctrine_.method_75() && doctrine_.method_80())
												{
													this.vmethod_682().Checked = false;
													this.vmethod_684().Checked = false;
													this.vmethod_686().Checked = false;
													this.vmethod_688().Checked = true;
												}
												else
												{
													bool flag7 = false;
													byte? b2 = (enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null;
													b = ((enum7 != null) ? new byte?((byte)enum7.GetValueOrDefault()) : null);
													if (((b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null).GetValueOrDefault())
													{
														b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
														b2 = ((enum8 != null) ? new byte?((byte)enum8.GetValueOrDefault()) : null);
														if (((b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null).GetValueOrDefault())
														{
															b2 = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
															b = ((enum9 != null) ? new byte?((byte)enum9.GetValueOrDefault()) : null);
															if (((b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null).GetValueOrDefault())
															{
																flag7 = true;
															}
														}
													}
													if (!flag7)
													{
														this.vmethod_682().Checked = false;
														this.vmethod_684().Checked = false;
														this.vmethod_686().Checked = false;
														this.vmethod_688().Checked = false;
													}
													else
													{
														b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															this.vmethod_682().Checked = false;
															this.vmethod_684().Checked = false;
															this.vmethod_686().Checked = true;
															this.vmethod_688().Checked = false;
														}
														else
														{
															b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																this.vmethod_682().Checked = true;
																this.vmethod_684().Checked = false;
																this.vmethod_686().Checked = false;
																this.vmethod_688().Checked = false;
															}
															else
															{
																b = ((enum6 != null) ? new byte?((byte)enum6.GetValueOrDefault()) : null);
																if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																{
																	this.vmethod_682().Checked = false;
																	this.vmethod_684().Checked = true;
																	this.vmethod_686().Checked = false;
																	this.vmethod_688().Checked = false;
																}
															}
														}
													}
												}
												Doctrine doctrine2 = doctrine_;
												Scenario scenario_2 = Client.smethod_46();
												bool flag4 = true;
												Doctrine.Enum52? enum10 = doctrine2.method_3(scenario_2, ref flag4).method_63(Client.smethod_46(), false, null, false, false);
												Doctrine doctrine3 = doctrine_;
												Scenario scenario_3 = Client.smethod_46();
												flag4 = true;
												Doctrine.Enum52? enum11 = doctrine3.method_3(scenario_3, ref flag4).method_68(Client.smethod_46(), false, null, false, false);
												Doctrine doctrine4 = doctrine_;
												Scenario scenario_4 = Client.smethod_46();
												flag4 = true;
												Doctrine.Enum52? enum12 = doctrine4.method_3(scenario_4, ref flag4).method_73(Client.smethod_46(), false, null, false, false);
												Doctrine doctrine5 = doctrine_;
												Scenario scenario_5 = Client.smethod_46();
												flag4 = true;
												Doctrine.Enum52? enum13 = doctrine5.method_3(scenario_5, ref flag4).method_78(Client.smethod_46(), false, null, false, false);
												b = ((enum10 != null) ? new byte?((byte)enum10.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
												{
													b = ((enum11 != null) ? new byte?((byte)enum11.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
													{
														b = ((enum12 != null) ? new byte?((byte)enum12.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															b = ((enum13 != null) ? new byte?((byte)enum13.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
															{
																this.vmethod_688().Text = "Inherited, Free";
																goto IL_1177;
															}
														}
													}
												}
												b = ((enum10 != null) ? new byte?((byte)enum10.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
												{
													b = ((enum11 != null) ? new byte?((byte)enum11.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
													{
														b = ((enum12 != null) ? new byte?((byte)enum12.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
														{
															b = ((enum13 != null) ? new byte?((byte)enum13.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																this.vmethod_688().Text = "Inherited, Tight";
																goto IL_1177;
															}
														}
													}
												}
												b = ((enum10 != null) ? new byte?((byte)enum10.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
												{
													b = ((enum11 != null) ? new byte?((byte)enum11.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
													{
														b = ((enum12 != null) ? new byte?((byte)enum12.GetValueOrDefault()) : null);
														if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
														{
															b = ((enum13 != null) ? new byte?((byte)enum13.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																this.vmethod_688().Text = "Inherited, Hold";
																goto IL_1177;
															}
														}
													}
												}
												this.vmethod_688().Text = "Inherited, Various";
											}
											else
											{
												this.vmethod_550().Enabled = false;
											}
											IL_1177:
											if (!Client.smethod_54().bool_2)
											{
												int num2 = 1;
												bool flag8 = true;
												ActiveUnit[] activeUnit_3 = Client.smethod_50().activeUnit_0;
												int k = 0;
												while (k < activeUnit_3.Length)
												{
													Unit unit3 = activeUnit_3[k];
													if (!unit3.bool_0 || unit3.vmethod_7(false) != Client.smethod_50())
													{
														goto IL_18F4;
													}
													if (!unit3.bool_2)
													{
														byte? b2;
														Doctrine.Enum52? enum14;
														if (num2 == 1)
														{
															ActiveUnit activeUnit = (ActiveUnit)unit3;
															if (activeUnit.doctrine_0.method_65())
															{
																enum14 = null;
															}
															else
															{
																enum14 = activeUnit.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
															}
															if (Information.IsNothing(enum14))
															{
																if (!activeUnit.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (Information.IsNothing(enum14))
															{
																if (!activeUnit.doctrine_0.method_75())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit.doctrine_0.method_75())
																{
																	flag8 = false;
																	break;
																}
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																Doctrine.Enum52? enum15 = activeUnit.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
																byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
																bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (Information.IsNothing(enum14))
															{
																if (activeUnit.doctrine_0.method_80())
																{
																	goto IL_18F4;
																}
																flag8 = false;
															}
															else if (!activeUnit.doctrine_0.method_80())
															{
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	goto IL_18F4;
																}
																flag8 = false;
															}
															else
															{
																flag8 = false;
															}
														}
														else
														{
															ActiveUnit activeUnit2 = (ActiveUnit)unit3;
															if (Information.IsNothing(enum14))
															{
																if (!activeUnit2.doctrine_0.method_65())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit2.doctrine_0.method_65())
																{
																	flag8 = false;
																	break;
																}
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
																byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
																bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (Information.IsNothing(enum14))
															{
																if (!activeUnit2.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit2.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (Information.IsNothing(enum14))
															{
																if (!activeUnit2.doctrine_0.method_75())
																{
																	flag8 = false;
																	break;
																}
															}
															else
															{
																if (activeUnit2.doctrine_0.method_70())
																{
																	flag8 = false;
																	break;
																}
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
																byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
																bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag8 = false;
																	break;
																}
															}
															if (Information.IsNothing(enum14))
															{
																if (activeUnit2.doctrine_0.method_80())
																{
																	goto IL_18F4;
																}
																flag8 = false;
															}
															else if (!activeUnit2.doctrine_0.method_80())
															{
																byte? b = (enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null;
																Doctrine.Enum52? enum15 = activeUnit2.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
																b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	goto IL_18F4;
																}
																flag8 = false;
															}
															else
															{
																flag8 = false;
															}
														}
														IL_1974:
														this.vmethod_620().Enabled = true;
														if (flag8)
														{
															if (Information.IsNothing(enum14))
															{
																this.vmethod_690().Checked = false;
																this.vmethod_692().Checked = false;
																this.vmethod_694().Checked = false;
																this.vmethod_696().Checked = true;
															}
															else
															{
																b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
																{
																	this.vmethod_690().Checked = false;
																	this.vmethod_692().Checked = false;
																	this.vmethod_694().Checked = true;
																	this.vmethod_696().Checked = false;
																}
																else
																{
																	b2 = ((enum14 != null) ? new byte?((byte)enum14.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
																	{
																		this.vmethod_690().Checked = true;
																		this.vmethod_692().Checked = false;
																		this.vmethod_694().Checked = false;
																		this.vmethod_696().Checked = false;
																	}
																	else
																	{
																		this.vmethod_690().Checked = false;
																		this.vmethod_692().Checked = true;
																		this.vmethod_694().Checked = false;
																		this.vmethod_696().Checked = false;
																	}
																}
															}
														}
														else
														{
															this.vmethod_690().Checked = false;
															this.vmethod_692().Checked = false;
															this.vmethod_694().Checked = false;
															this.vmethod_696().Checked = false;
														}
														Doctrine doctrine6 = doctrine_;
														Scenario scenario_6 = Client.smethod_46();
														bool flag4 = true;
														Doctrine.Enum52? enum16 = doctrine6.method_3(scenario_6, ref flag4).method_63(Client.smethod_46(), false, null, false, false);
														Doctrine doctrine7 = doctrine_;
														Scenario scenario_7 = Client.smethod_46();
														flag4 = true;
														Doctrine.Enum52? enum17 = doctrine7.method_3(scenario_7, ref flag4).method_68(Client.smethod_46(), false, null, false, false);
														Doctrine doctrine8 = doctrine_;
														Scenario scenario_8 = Client.smethod_46();
														flag4 = true;
														Doctrine.Enum52? enum18 = doctrine8.method_3(scenario_8, ref flag4).method_73(Client.smethod_46(), false, null, false, false);
														Doctrine doctrine9 = doctrine_;
														Scenario scenario_9 = Client.smethod_46();
														flag4 = true;
														Doctrine.Enum52? enum19 = doctrine9.method_3(scenario_9, ref flag4).method_78(Client.smethod_46(), false, null, false, false);
														b2 = ((enum16 != null) ? new byte?((byte)enum16.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															b2 = ((enum17 != null) ? new byte?((byte)enum17.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
															{
																b2 = ((enum18 != null) ? new byte?((byte)enum18.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
																{
																	b2 = ((enum19 != null) ? new byte?((byte)enum19.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
																	{
																		this.vmethod_696().Text = "Inherited, Free";
																		goto IL_2023;
																	}
																}
															}
														}
														b2 = ((enum16 != null) ? new byte?((byte)enum16.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
														{
															b2 = ((enum17 != null) ? new byte?((byte)enum17.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																b2 = ((enum18 != null) ? new byte?((byte)enum18.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																{
																	b2 = ((enum19 != null) ? new byte?((byte)enum19.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
																	{
																		this.vmethod_696().Text = "Inherited, Tight";
																		goto IL_2023;
																	}
																}
															}
														}
														b2 = ((enum16 != null) ? new byte?((byte)enum16.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
														{
															b2 = ((enum17 != null) ? new byte?((byte)enum17.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																b2 = ((enum18 != null) ? new byte?((byte)enum18.GetValueOrDefault()) : null);
																if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
																{
																	b2 = ((enum19 != null) ? new byte?((byte)enum19.GetValueOrDefault()) : null);
																	if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
																	{
																		this.vmethod_696().Text = "Inherited, Hold";
																		goto IL_2023;
																	}
																}
															}
														}
														this.vmethod_696().Text = "Inherited, Various";
														goto IL_2023;
													}
													IL_18FA:
													checked
													{
														k++;
														continue;
														IL_18F4:;
													}
													num2++;
													goto IL_18FA;
												}
												goto IL_1974;
											}
											this.vmethod_620().Enabled = false;
										}
										IL_2023:
										this.vmethod_580().Enabled = (Client.smethod_54().vmethod_43() || Client.smethod_54().bool_1);
										this.vmethod_538().Enabled = true;
										Side side_3 = Client.smethod_50();
										Unit unit_3 = Client.smethod_54();
										bool flag9 = false;
										text = null;
										if (GameGeneral.smethod_45(side_3, unit_3, flag9, ref text, Client.smethod_52().method_59()))
										{
											this.vmethod_540().Enabled = true;
										}
										else
										{
											this.vmethod_540().Enabled = false;
										}
										if (!Client.smethod_54().bool_2)
										{
											this.vmethod_542().Enabled = true;
											this.vmethod_544().Enabled = true;
										}
										else
										{
											this.vmethod_542().Enabled = false;
											this.vmethod_544().Enabled = false;
										}
										if (!Client.smethod_54().bool_2)
										{
											this.vmethod_446().Enabled = true;
											this.vmethod_448().Enabled = true;
											this.vmethod_450().Enabled = true;
											this.vmethod_444().Enabled = true;
											this.vmethod_452().Enabled = true;
											this.vmethod_454().Enabled = true;
											this.vmethod_476().Enabled = true;
										}
										else
										{
											this.vmethod_446().Enabled = false;
											this.vmethod_448().Enabled = false;
											this.vmethod_450().Enabled = false;
											this.vmethod_444().Enabled = false;
											this.vmethod_452().Enabled = false;
											this.vmethod_454().Enabled = false;
											this.vmethod_476().Enabled = false;
										}
										if (Client.smethod_54().bool_3)
										{
											Aircraft aircraft = (Aircraft)Client.smethod_54();
											if (!aircraft.bool_28 && !aircraft.bool_27)
											{
												this.vmethod_576().Enabled = false;
												this.vmethod_576().Text = "Refuel (not AAR capable)";
											}
											else
											{
												this.vmethod_576().Enabled = true;
												this.vmethod_576().Text = "Refuel (if possible)";
											}
										}
										else if (Client.smethod_54().bool_1 && ((Group)Client.smethod_54()).method_143() == Group.GroupType.AirGroup)
										{
											Aircraft aircraft2 = (Aircraft)((Group)Client.smethod_54()).method_147();
											if (!aircraft2.bool_28 && !aircraft2.bool_27)
											{
												this.vmethod_576().Enabled = false;
												this.vmethod_576().Text = "Refuel (not AAR capable)";
											}
											else
											{
												this.vmethod_576().Enabled = true;
												this.vmethod_576().Text = "Refuel (if possible)";
											}
										}
										else
										{
											if (!Client.smethod_54().bool_6)
											{
												if (!Client.smethod_54().bool_1 || ((Group)Client.smethod_54()).method_143() != Group.GroupType.SurfaceGroup)
												{
													this.vmethod_576().Enabled = false;
													goto IL_22C5;
												}
											}
											this.vmethod_576().Enabled = true;
											this.vmethod_576().Text = "UNREP (if possible)";
										}
										IL_22C5:
										if (Client.smethod_54().bool_3)
										{
											Aircraft aircraft3 = (Aircraft)Client.smethod_54();
											if (!Information.IsNothing(aircraft3.method_167()) && aircraft3.method_167().bool_13)
											{
												this.vmethod_660().Enabled = true;
											}
											else
											{
												this.vmethod_660().Enabled = false;
											}
										}
										else
										{
											this.vmethod_660().Enabled = false;
										}
										if (Client.smethod_54().bool_0)
										{
											this.vmethod_840().Enabled = false;
											if (Enumerable.Count<Cargo>(((ActiveUnit)Client.smethod_54()).cargo_0) > 0)
											{
												this.vmethod_840().Enabled = true;
											}
											this.vmethod_842().Enabled = false;
											if (Client.smethod_54().bool_3)
											{
												this.vmethod_842().Enabled = true;
											}
										}
									}
									else
									{
										this.vmethod_254().Enabled = false;
										this.vmethod_252().Enabled = false;
										this.vmethod_262().Enabled = false;
										this.vmethod_438().Enabled = false;
										this.vmethod_726().Enabled = false;
										this.vmethod_624().Enabled = false;
										this.vmethod_550().Enabled = false;
										this.vmethod_620().Enabled = false;
										this.vmethod_580().Enabled = false;
										this.vmethod_578().DropDownItems.Clear();
										this.vmethod_578().Enabled = false;
										this.vmethod_856().DropDownItems.Clear();
										this.vmethod_856().Enabled = false;
										this.vmethod_538().Enabled = false;
										this.vmethod_540().Enabled = false;
										this.vmethod_542().Enabled = false;
										this.vmethod_544().Enabled = false;
										this.vmethod_446().Enabled = false;
										this.vmethod_448().Enabled = false;
										this.vmethod_450().Enabled = false;
										this.vmethod_444().Enabled = false;
										this.vmethod_452().Enabled = false;
										this.vmethod_454().Enabled = false;
										this.vmethod_476().Enabled = false;
										this.vmethod_660().Enabled = false;
										this.vmethod_248().Visible = false;
									}
									if (Client.smethod_54().bool_1)
									{
										this.vmethod_264().Enabled = false;
										Group.GroupType groupType = ((Group)Client.smethod_54()).method_143();
										this.vmethod_256().Enabled = (groupType == Group.GroupType.AirBase || groupType == Group.GroupType.SurfaceGroup);
										this.vmethod_288().Enabled = (groupType == Group.GroupType.NavalBase || groupType == Group.GroupType.SurfaceGroup || groupType == Group.GroupType.SubGroup);
										this.vmethod_474().Enabled = false;
										this.vmethod_604().Enabled = false;
										this.vmethod_604().Checked = false;
										this.vmethod_260().Enabled = ((Group)Client.smethod_54()).method_140();
										if (Client.smethod_54().vmethod_7(false) == Client.smethod_50())
										{
											this.vmethod_266().Enabled = true;
											this.vmethod_546().Enabled = true;
											this.vmethod_548().Enabled = true;
											if (((Group)Client.smethod_54()).method_143() == Group.GroupType.AirGroup)
											{
												this.vmethod_572().Enabled = true;
												this.vmethod_574().Enabled = true;
											}
											else
											{
												this.vmethod_572().Enabled = false;
												this.vmethod_574().Enabled = false;
											}
										}
										else
										{
											this.vmethod_266().Enabled = false;
											this.vmethod_546().Enabled = false;
											this.vmethod_548().Enabled = false;
											this.vmethod_572().Enabled = false;
											this.vmethod_574().Enabled = false;
										}
									}
									else
									{
										this.vmethod_264().Enabled = (Client.smethod_54().bool_8 || Client.smethod_54().bool_6 || Client.smethod_54().bool_5);
										if (Client.smethod_54().bool_2)
										{
											this.vmethod_320().Enabled = false;
										}
										else
										{
											this.vmethod_320().Enabled = (Enumerable.Count<Magazine>(((Class350)Client.smethod_54()).magazine_0) > 0);
										}
										this.vmethod_256().Enabled = (Client.smethod_54().bool_8 || Client.smethod_54().bool_6);
										this.vmethod_288().Enabled = (Client.smethod_54().bool_8 || Client.smethod_54().bool_6 || Client.smethod_54().bool_5);
										this.vmethod_266().Enabled = false;
										if (Client.smethod_54().vmethod_7(false) == Client.smethod_50())
										{
											ToolStripMenuItem toolStripMenuItem = this.vmethod_572();
											bool enabled;
											if (!Client.smethod_54().bool_3 && !Client.smethod_54().bool_6 && !Client.smethod_54().bool_5)
											{
												enabled = false;
											}
											else
											{
												Side side_4 = Client.smethod_50();
												Unit unit_4 = Client.smethod_54();
												bool flag10 = false;
												string text = null;
												enabled = GameGeneral.smethod_45(side_4, unit_4, flag10, ref text, Client.smethod_52().method_59());
											}
											toolStripMenuItem.Enabled = enabled;
											ToolStripMenuItem toolStripMenuItem2 = this.vmethod_574();
											bool enabled2;
											if (!Client.smethod_54().bool_3 && !Client.smethod_54().bool_6 && !Client.smethod_54().bool_5)
											{
												enabled2 = false;
											}
											else
											{
												Side side_5 = Client.smethod_50();
												Unit unit_5 = Client.smethod_54();
												bool flag11 = false;
												string text = null;
												enabled2 = GameGeneral.smethod_45(side_5, unit_5, flag11, ref text, Client.smethod_52().method_59());
											}
											toolStripMenuItem2.Enabled = enabled2;
											this.vmethod_474().Enabled = ((ActiveUnit)Client.smethod_54()).method_120();
											if (!Client.smethod_54().bool_2)
											{
												this.vmethod_546().Enabled = (((ActiveUnit)Client.smethod_54()).vmethod_86().method_12().Length > 0);
												this.vmethod_548().Enabled = this.vmethod_546().Enabled;
											}
											else
											{
												this.vmethod_546().Enabled = false;
												this.vmethod_548().Enabled = false;
											}
											if (Client.smethod_54().bool_8 && !Client.smethod_54().method_5())
											{
												this.vmethod_604().Enabled = true;
												this.vmethod_604().Checked = ((Facility)Client.smethod_54()).method_148().bool_4;
											}
											else
											{
												this.vmethod_604().Enabled = false;
												this.vmethod_604().Checked = false;
											}
										}
									}
									this.vmethod_578().DropDownItems.Clear();
									this.vmethod_856().DropDownItems.Clear();
									if (!Client.smethod_54().bool_2)
									{
										try
										{
											foreach (Mission mission in Client.smethod_50().method_35())
											{
												if (mission.enum88_0 != Mission.Enum88.const_2 && (Client.smethod_54().bool_3 || (Client.smethod_54().bool_1 && ((Group)Client.smethod_54()).method_143() == Group.GroupType.AirGroup) || mission.enum88_0 != Mission.Enum88.const_1))
												{
													ToolStripMenuItem toolStripMenuItem3 = new ToolStripMenuItem();
													ToolStripMenuItem toolStripMenuItem4 = new ToolStripMenuItem();
													toolStripMenuItem3 = (ToolStripMenuItem)this.vmethod_578().DropDownItems.Add(mission.Name, null, new EventHandler(this.method_212));
													toolStripMenuItem3.Tag = mission;
													if (mission._MissionClass_0 == Mission._MissionClass.Support || mission._MissionClass_0 == Mission._MissionClass.Ferry)
													{
														bool flag12 = false;
														try
														{
															foreach (ActiveUnit activeUnit3 in mission.method_15(Client.smethod_46()))
															{
																if (activeUnit3.bool_3)
																{
																	if (!((Aircraft)activeUnit3).method_146())
																	{
																		continue;
																	}
																	flag12 = true;
																}
																else
																{
																	if (!activeUnit3.bool_6 || !((Ship)activeUnit3).vmethod_106())
																	{
																		continue;
																	}
																	flag12 = true;
																}
																break;
															}
														}
														finally
														{
															List<ActiveUnit>.Enumerator enumerator2;
															((IDisposable)enumerator2).Dispose();
														}
														if (flag12)
														{
															new ToolStripMenuItem();
															((ToolStripMenuItem)this.vmethod_856().DropDownItems.Add(mission.Name, null, new EventHandler(this.method_575))).Tag = mission;
														}
													}
													if (mission._MissionClass_0 == Mission._MissionClass.Strike)
													{
														toolStripMenuItem4 = (ToolStripMenuItem)this.vmethod_578().DropDownItems.Add(mission.Name + " - Escort", null, new EventHandler(this.method_212));
														toolStripMenuItem4.Tag = mission;
													}
													ActiveUnit activeUnit4 = (ActiveUnit)Client.smethod_54();
													if (mission == activeUnit4.vmethod_101())
													{
														if (mission._MissionClass_0 == Mission._MissionClass.Strike)
														{
															if (activeUnit4.bool_1)
															{
																Group group = (Group)activeUnit4;
																if (!Information.IsNothing(group.method_147()))
																{
																	if (group.method_147().vmethod_86().bool_2)
																	{
																		toolStripMenuItem4.Checked = true;
																	}
																	else
																	{
																		toolStripMenuItem3.Checked = true;
																	}
																}
																else
																{
																	toolStripMenuItem3.Checked = true;
																}
															}
															else if (activeUnit4.vmethod_86().bool_2)
															{
																toolStripMenuItem4.Checked = true;
															}
															else
															{
																toolStripMenuItem3.Checked = true;
															}
														}
														else
														{
															toolStripMenuItem3.Checked = true;
														}
													}
												}
											}
										}
										finally
										{
											IEnumerator<Mission> enumerator;
											if (enumerator != null)
											{
												enumerator.Dispose();
											}
										}
										foreach (Side side in Client.smethod_46().method_44())
										{
											if (side != Client.smethod_50() && side.method_67(Client.smethod_50()))
											{
												try
												{
													foreach (Mission mission2 in Enumerable.OrderBy<Mission, string>(side.method_35(), (MainForm._Closure$__.$I2483-0 == null) ? (MainForm._Closure$__.$I2483-0 = new Func<Mission, string>(MainForm._Closure$__.$I.method_37)) : MainForm._Closure$__.$I2483-0))
													{
														if (mission2._MissionClass_0 == Mission._MissionClass.Support || mission2._MissionClass_0 == Mission._MissionClass.Ferry)
														{
															bool flag13 = false;
															try
															{
																foreach (ActiveUnit activeUnit5 in mission2.method_15(Client.smethod_46()))
																{
																	if (activeUnit5.bool_3)
																	{
																		if (!((Aircraft)activeUnit5).method_146())
																		{
																			continue;
																		}
																		flag13 = true;
																	}
																	else
																	{
																		if (!activeUnit5.bool_6 || !((Ship)activeUnit5).vmethod_106())
																		{
																			continue;
																		}
																		flag13 = true;
																	}
																	break;
																}
															}
															finally
															{
																List<ActiveUnit>.Enumerator enumerator4;
																((IDisposable)enumerator4).Dispose();
															}
															if (flag13)
															{
																new ToolStripMenuItem();
																((ToolStripMenuItem)this.vmethod_856().DropDownItems.Add(mission2.Name + " (" + side.method_51() + ")", null, new EventHandler(this.method_575))).Tag = mission2;
															}
														}
													}
												}
												finally
												{
													IEnumerator<Mission> enumerator3;
													if (enumerator3 != null)
													{
														enumerator3.Dispose();
													}
												}
											}
										}
										this.vmethod_578().Enabled = (Client.smethod_50().method_35().Count > 0);
										this.vmethod_856().Enabled = (this.vmethod_856().DropDownItems.Count > 0);
									}
									else
									{
										this.vmethod_578().Enabled = false;
										this.vmethod_856().Enabled = false;
									}
									this.vmethod_578().Enabled = (Client.smethod_54().bool_0 && ((ActiveUnit)Client.smethod_54()).vmethod_90().vmethod_1());
								}
								else if (Client.smethod_50().method_56().Count == 0 && !Information.IsNothing(Client.smethod_54()))
								{
									this.vmethod_252().Enabled = true;
									this.vmethod_288().Enabled = false;
									this.vmethod_438().Enabled = false;
									this.vmethod_256().Enabled = false;
									this.vmethod_266().Enabled = false;
									this.vmethod_264().Enabled = false;
									this.vmethod_260().Enabled = false;
									this.vmethod_258().Enabled = false;
									this.vmethod_580().Enabled = false;
									this.vmethod_472().Enabled = false;
									this.vmethod_576().Enabled = false;
									this.vmethod_576().Text = "Refuel (if possible)";
									this.vmethod_726().Enabled = false;
									this.vmethod_624().Enabled = false;
									this.vmethod_572().Enabled = false;
									this.vmethod_574().Enabled = false;
									this.vmethod_546().Enabled = false;
									this.vmethod_548().Enabled = false;
									this.vmethod_604().Enabled = false;
									this.vmethod_604().Checked = false;
									this.vmethod_474().Enabled = false;
									this.vmethod_578().Enabled = false;
									this.vmethod_856().Enabled = false;
									this.vmethod_538().Enabled = false;
									this.vmethod_540().Enabled = false;
									this.vmethod_542().Enabled = false;
									this.vmethod_544().Enabled = false;
									this.vmethod_550().Enabled = false;
									this.vmethod_620().Enabled = false;
									this.vmethod_446().Enabled = false;
									this.vmethod_448().Enabled = false;
									this.vmethod_450().Enabled = false;
									this.vmethod_444().Enabled = false;
									this.vmethod_452().Enabled = false;
									this.vmethod_454().Enabled = false;
									this.vmethod_476().Enabled = false;
									this.vmethod_660().Enabled = false;
								}
								else if (Client.smethod_50().method_56().Count == 0 && !Information.IsNothing(Client.smethod_54()))
								{
									this.vmethod_252().Enabled = true;
									this.vmethod_288().Enabled = false;
									this.vmethod_438().Enabled = false;
									this.vmethod_256().Enabled = false;
									this.vmethod_266().Enabled = false;
									this.vmethod_264().Enabled = false;
									this.vmethod_260().Enabled = false;
									this.vmethod_258().Enabled = false;
									this.vmethod_580().Enabled = false;
									this.vmethod_472().Enabled = false;
									this.vmethod_576().Enabled = false;
									this.vmethod_576().Text = "Refuel (if possible)";
									this.vmethod_726().Enabled = false;
									this.vmethod_624().Enabled = false;
									this.vmethod_572().Enabled = false;
									this.vmethod_574().Enabled = false;
									this.vmethod_546().Enabled = false;
									this.vmethod_548().Enabled = false;
									this.vmethod_604().Enabled = false;
									this.vmethod_604().Checked = false;
									this.vmethod_474().Enabled = false;
									this.vmethod_578().Enabled = false;
									this.vmethod_856().Enabled = false;
									this.vmethod_538().Enabled = false;
									this.vmethod_540().Enabled = false;
									this.vmethod_542().Enabled = false;
									this.vmethod_544().Enabled = false;
									this.vmethod_550().Enabled = false;
									this.vmethod_620().Enabled = false;
									this.vmethod_446().Enabled = false;
									this.vmethod_448().Enabled = false;
									this.vmethod_450().Enabled = false;
									this.vmethod_444().Enabled = false;
									this.vmethod_452().Enabled = false;
									this.vmethod_454().Enabled = false;
									this.vmethod_476().Enabled = false;
									this.vmethod_660().Enabled = false;
								}
								else if (Client.smethod_50().method_56().Count > 1)
								{
									this.vmethod_252().Enabled = false;
									this.vmethod_288().Enabled = false;
									this.vmethod_256().Enabled = false;
									this.vmethod_266().Enabled = false;
									this.vmethod_264().Enabled = false;
									this.vmethod_260().Enabled = false;
									this.vmethod_258().Enabled = false;
									this.vmethod_580().Enabled = false;
									this.vmethod_620().Enabled = false;
									this.vmethod_550().Enabled = false;
									this.vmethod_624().Enabled = false;
									this.vmethod_328().Enabled = false;
									if (Client.smethod_50().doctrine_0.method_86(Client.smethod_46()))
									{
										int num3 = 1;
										bool flag14 = true;
										bool flag15 = true;
										Doctrine.Enum64? enum20;
										Doctrine.Enum64? enum21;
										try
										{
											foreach (Unit unit4 in Client.smethod_50().method_56())
											{
												if (unit4.bool_0 && unit4.vmethod_7(false) == Client.smethod_50())
												{
													if (unit4.bool_2)
													{
														continue;
													}
													if (num3 == 1)
													{
														if (((ActiveUnit)unit4).doctrine_0.method_85())
														{
															enum20 = null;
														}
														else
														{
															enum20 = ((ActiveUnit)unit4).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
														}
														Doctrine doctrine_2 = ((ActiveUnit)unit4).doctrine_0;
														Scenario scenario_10 = Client.smethod_46();
														bool flag4 = true;
														if (doctrine_2.method_3(scenario_10, ref flag4).method_85())
														{
															enum21 = null;
														}
														else
														{
															Doctrine doctrine_3 = ((ActiveUnit)unit4).doctrine_0;
															Scenario scenario_11 = Client.smethod_46();
															flag4 = true;
															enum21 = doctrine_3.method_3(scenario_11, ref flag4).method_83(Client.smethod_46(), false, null, false, false);
														}
													}
													else
													{
														if (Information.IsNothing(enum20))
														{
															if (!((ActiveUnit)unit4).doctrine_0.method_85())
															{
																flag14 = false;
															}
														}
														else if (((ActiveUnit)unit4).doctrine_0.method_85())
														{
															flag14 = false;
														}
														else
														{
															byte? b2 = (enum20 != null) ? new byte?((byte)enum20.GetValueOrDefault()) : null;
															Doctrine.Enum64? enum4 = ((ActiveUnit)unit4).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
															byte? b = (enum4 != null) ? new byte?((byte)enum4.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag14 = false;
															}
														}
														if (Information.IsNothing(enum21))
														{
															if (!((ActiveUnit)unit4).doctrine_0.method_85())
															{
																flag15 = false;
															}
														}
														else
														{
															Doctrine doctrine_4 = ((ActiveUnit)unit4).doctrine_0;
															Scenario scenario_12 = Client.smethod_46();
															bool flag4 = true;
															if (Information.IsNothing(doctrine_4.method_3(scenario_12, ref flag4).method_83(Client.smethod_46(), false, null, false, false)))
															{
																flag15 = false;
															}
															else
															{
																byte? b = (enum21 != null) ? new byte?((byte)enum21.GetValueOrDefault()) : null;
																Doctrine doctrine_5 = ((ActiveUnit)unit4).doctrine_0;
																Scenario scenario_13 = Client.smethod_46();
																flag4 = true;
																Doctrine.Enum64? enum4 = doctrine_5.method_3(scenario_13, ref flag4).method_83(Client.smethod_46(), false, null, false, false);
																byte? b2 = (enum4 != null) ? new byte?((byte)enum4.GetValueOrDefault()) : null;
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag15 = false;
																}
															}
														}
													}
												}
												num3++;
												if (!flag14 && !flag15)
												{
													break;
												}
											}
										}
										finally
										{
											IEnumerator<Unit> enumerator5;
											if (enumerator5 != null)
											{
												enumerator5.Dispose();
											}
										}
										this.vmethod_726().Enabled = true;
										if (flag14)
										{
											if (Information.IsNothing(enum20))
											{
												this.vmethod_670().Checked = false;
												this.vmethod_672().Checked = false;
												this.vmethod_674().Checked = true;
											}
											else
											{
												byte? b2 = (enum20 != null) ? new byte?((byte)enum20.GetValueOrDefault()) : null;
												if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
												{
													this.vmethod_670().Checked = true;
													this.vmethod_672().Checked = false;
													this.vmethod_674().Checked = false;
												}
												else
												{
													this.vmethod_670().Checked = false;
													this.vmethod_672().Checked = true;
													this.vmethod_674().Checked = false;
												}
											}
										}
										else
										{
											this.vmethod_670().Checked = false;
											this.vmethod_672().Checked = false;
											this.vmethod_674().Checked = false;
										}
										if (flag15)
										{
											byte? b2 = (enum21 != null) ? new byte?((byte)enum21.GetValueOrDefault()) : null;
											if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
											{
												this.vmethod_674().Text = "Inherited, Yes";
											}
											else
											{
												this.vmethod_674().Text = "Inherited, No";
											}
										}
										else
										{
											this.vmethod_674().Text = "Inherited, Various";
										}
										num3 = 1;
										flag14 = true;
										ActiveUnit[] activeUnit_4 = Client.smethod_50().activeUnit_0;
										int m = 0;
										while (m < activeUnit_4.Length)
										{
											Unit unit5 = activeUnit_4[m];
											if (!unit5.bool_0 || unit5.vmethod_7(false) != Client.smethod_50())
											{
												goto IL_3873;
											}
											if (!unit5.bool_2)
											{
												if (num3 == 1)
												{
													if (((ActiveUnit)unit5).doctrine_0.method_85())
													{
														enum20 = null;
														goto IL_3873;
													}
													enum20 = ((ActiveUnit)unit5).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
													goto IL_3873;
												}
												else
												{
													byte? b;
													if (Information.IsNothing(enum20))
													{
														if (((ActiveUnit)unit5).doctrine_0.method_85())
														{
															goto IL_3873;
														}
														flag14 = false;
													}
													else if (!((ActiveUnit)unit5).doctrine_0.method_85())
													{
														byte? b2 = (enum20 != null) ? new byte?((byte)enum20.GetValueOrDefault()) : null;
														Doctrine.Enum64? enum4 = ((ActiveUnit)unit5).doctrine_0.method_83(Client.smethod_46(), false, null, false, false);
														b = ((enum4 != null) ? new byte?((byte)enum4.GetValueOrDefault()) : null);
														bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
														if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															goto IL_3873;
														}
														flag14 = false;
													}
													else
													{
														flag14 = false;
													}
													IL_3899:
													this.vmethod_624().Enabled = true;
													if (flag14)
													{
														if (Information.IsNothing(enum20))
														{
															this.vmethod_676().Checked = false;
															this.vmethod_678().Checked = false;
															this.vmethod_680().Checked = true;
														}
														else
														{
															b = ((enum20 != null) ? new byte?((byte)enum20.GetValueOrDefault()) : null);
															if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																this.vmethod_676().Checked = true;
																this.vmethod_678().Checked = false;
																this.vmethod_680().Checked = false;
															}
															else
															{
																this.vmethod_676().Checked = false;
																this.vmethod_678().Checked = true;
																this.vmethod_680().Checked = false;
															}
														}
													}
													else
													{
														this.vmethod_676().Checked = false;
														this.vmethod_678().Checked = false;
														this.vmethod_680().Checked = false;
													}
													Doctrine.Enum52? enum22 = Client.smethod_50().doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
													b = ((enum22 != null) ? new byte?((byte)enum22.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
													{
														this.vmethod_680().Text = "Inherited, Yes";
														goto IL_3A3C;
													}
													this.vmethod_680().Text = "Inherited, No";
													goto IL_3A3C;
												}
											}
											IL_3879:
											checked
											{
												m++;
												continue;
												IL_3873:;
											}
											num3++;
											goto IL_3879;
										}
										goto IL_3899;
									}
									IL_3A3C:
									if (Client.smethod_50().doctrine_0.method_66(Client.smethod_46()) || Client.smethod_50().doctrine_0.method_71(Client.smethod_46()) || Client.smethod_50().doctrine_0.method_76(Client.smethod_46()) || Client.smethod_50().doctrine_0.method_81(Client.smethod_46()))
									{
										int num4 = 1;
										bool flag16 = true;
										bool flag17 = true;
										Doctrine.Enum52? enum23;
										Doctrine.Enum52? enum24;
										try
										{
											foreach (Unit unit6 in Client.smethod_50().method_56())
											{
												if (unit6.bool_0 && unit6.vmethod_7(false) == Client.smethod_50())
												{
													if (unit6.bool_2)
													{
														continue;
													}
													if (num4 == 1)
													{
														ActiveUnit activeUnit6 = (ActiveUnit)unit6;
														if (activeUnit6.doctrine_0.method_65())
														{
															enum23 = null;
														}
														else
														{
															enum23 = activeUnit6.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
														}
														if (Information.IsNothing(enum23))
														{
															if (!activeUnit6.doctrine_0.method_70())
															{
																flag16 = false;
																break;
															}
														}
														else
														{
															if (activeUnit6.doctrine_0.method_70())
															{
																flag16 = false;
																break;
															}
															byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine.Enum52? enum15 = activeUnit6.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
															byte? b2 = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag16 = false;
																break;
															}
														}
														if (Information.IsNothing(enum23))
														{
															if (!activeUnit6.doctrine_0.method_75())
															{
																flag16 = false;
																break;
															}
														}
														else
														{
															if (activeUnit6.doctrine_0.method_75())
															{
																flag16 = false;
																break;
															}
															byte? b2 = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine.Enum52? enum15 = activeUnit6.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
															byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag16 = false;
																break;
															}
														}
														if (Information.IsNothing(enum23))
														{
															if (!activeUnit6.doctrine_0.method_80())
															{
																flag16 = false;
																break;
															}
														}
														else
														{
															if (activeUnit6.doctrine_0.method_80())
															{
																flag16 = false;
																break;
															}
															byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine.Enum52? enum15 = activeUnit6.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
															byte? b2 = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag16 = false;
																break;
															}
														}
														Doctrine doctrine_6 = activeUnit6.doctrine_0;
														Scenario scenario_14 = Client.smethod_46();
														bool flag4 = true;
														if (doctrine_6.method_3(scenario_14, ref flag4).method_65())
														{
															enum24 = null;
														}
														else
														{
															Doctrine doctrine_7 = activeUnit6.doctrine_0;
															Scenario scenario_15 = Client.smethod_46();
															flag4 = true;
															enum24 = doctrine_7.method_3(scenario_15, ref flag4).method_63(Client.smethod_46(), false, null, false, false);
														}
														if (Information.IsNothing(enum24))
														{
															Doctrine doctrine_8 = activeUnit6.doctrine_0;
															Scenario scenario_16 = Client.smethod_46();
															flag4 = true;
															if (!doctrine_8.method_3(scenario_16, ref flag4).method_70())
															{
																flag17 = false;
																break;
															}
														}
														else
														{
															Doctrine doctrine_9 = activeUnit6.doctrine_0;
															Scenario scenario_17 = Client.smethod_46();
															flag4 = true;
															if (doctrine_9.method_3(scenario_17, ref flag4).method_70())
															{
																flag17 = false;
																break;
															}
															byte? b2 = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine doctrine_10 = activeUnit6.doctrine_0;
															Scenario scenario_18 = Client.smethod_46();
															flag4 = true;
															Doctrine.Enum52? enum15 = doctrine_10.method_3(scenario_18, ref flag4).method_68(Client.smethod_46(), false, null, false, false);
															byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag17 = false;
																break;
															}
														}
														if (Information.IsNothing(enum24))
														{
															Doctrine doctrine_11 = activeUnit6.doctrine_0;
															Scenario scenario_19 = Client.smethod_46();
															flag4 = true;
															if (!doctrine_11.method_3(scenario_19, ref flag4).method_75())
															{
																flag17 = false;
																break;
															}
														}
														else
														{
															Doctrine doctrine_12 = activeUnit6.doctrine_0;
															Scenario scenario_20 = Client.smethod_46();
															flag4 = true;
															if (doctrine_12.method_3(scenario_20, ref flag4).method_75())
															{
																flag17 = false;
																break;
															}
															byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine doctrine_13 = activeUnit6.doctrine_0;
															Scenario scenario_21 = Client.smethod_46();
															flag4 = true;
															Doctrine.Enum52? enum15 = doctrine_13.method_3(scenario_21, ref flag4).method_73(Client.smethod_46(), false, null, false, false);
															byte? b2 = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag17 = false;
																break;
															}
														}
														if (Information.IsNothing(enum24))
														{
															Doctrine doctrine_14 = activeUnit6.doctrine_0;
															Scenario scenario_22 = Client.smethod_46();
															flag4 = true;
															if (!doctrine_14.method_3(scenario_22, ref flag4).method_80())
															{
																flag17 = false;
																break;
															}
														}
														else
														{
															Doctrine doctrine_15 = activeUnit6.doctrine_0;
															Scenario scenario_23 = Client.smethod_46();
															flag4 = true;
															if (doctrine_15.method_3(scenario_23, ref flag4).method_80())
															{
																flag17 = false;
																break;
															}
															byte? b2 = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine doctrine_16 = activeUnit6.doctrine_0;
															Scenario scenario_24 = Client.smethod_46();
															flag4 = true;
															Doctrine.Enum52? enum15 = doctrine_16.method_3(scenario_24, ref flag4).method_78(Client.smethod_46(), false, null, false, false);
															byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag17 = false;
																break;
															}
														}
													}
													else
													{
														ActiveUnit activeUnit7 = (ActiveUnit)unit6;
														if (Information.IsNothing(enum23))
														{
															if (!activeUnit7.doctrine_0.method_65())
															{
																flag16 = false;
															}
														}
														else if (activeUnit7.doctrine_0.method_65())
														{
															flag16 = false;
														}
														else
														{
															byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine.Enum52? enum15 = activeUnit7.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
															byte? b2 = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag16 = false;
															}
														}
														if (Information.IsNothing(enum23))
														{
															if (!activeUnit7.doctrine_0.method_70())
															{
																flag16 = false;
																break;
															}
														}
														else
														{
															if (activeUnit7.doctrine_0.method_70())
															{
																flag16 = false;
																break;
															}
															byte? b2 = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine.Enum52? enum15 = activeUnit7.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
															byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag16 = false;
																break;
															}
														}
														if (Information.IsNothing(enum23))
														{
															if (!activeUnit7.doctrine_0.method_75())
															{
																flag16 = false;
																break;
															}
														}
														else
														{
															if (activeUnit7.doctrine_0.method_70())
															{
																flag16 = false;
																break;
															}
															byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine.Enum52? enum15 = activeUnit7.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
															byte? b2 = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag16 = false;
																break;
															}
														}
														if (Information.IsNothing(enum23))
														{
															if (!activeUnit7.doctrine_0.method_80())
															{
																flag16 = false;
																break;
															}
														}
														else
														{
															if (activeUnit7.doctrine_0.method_80())
															{
																flag16 = false;
																break;
															}
															byte? b2 = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine.Enum52? enum15 = activeUnit7.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
															byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag16 = false;
																break;
															}
														}
														if (Information.IsNothing(enum24))
														{
															if (!((ActiveUnit)unit6).doctrine_0.method_65())
															{
																flag17 = false;
															}
														}
														else
														{
															Doctrine doctrine_17 = ((ActiveUnit)unit6).doctrine_0;
															Scenario scenario_25 = Client.smethod_46();
															bool flag4 = true;
															if (Information.IsNothing(doctrine_17.method_3(scenario_25, ref flag4).method_63(Client.smethod_46(), false, null, false, false)))
															{
																flag17 = false;
															}
															else
															{
																byte? b = (enum24 != null) ? new byte?((byte)enum24.GetValueOrDefault()) : null;
																Doctrine doctrine_18 = ((ActiveUnit)unit6).doctrine_0;
																Scenario scenario_26 = Client.smethod_46();
																flag4 = true;
																Doctrine.Enum52? enum15 = doctrine_18.method_3(scenario_26, ref flag4).method_63(Client.smethod_46(), false, null, false, false);
																byte? b2 = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
																bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
																if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
																{
																	flag17 = false;
																}
															}
														}
														if (Information.IsNothing(enum24))
														{
															Doctrine doctrine_19 = activeUnit7.doctrine_0;
															Scenario scenario_27 = Client.smethod_46();
															bool flag4 = true;
															if (!doctrine_19.method_3(scenario_27, ref flag4).method_70())
															{
																flag17 = false;
																break;
															}
														}
														else
														{
															Doctrine doctrine_20 = activeUnit7.doctrine_0;
															Scenario scenario_28 = Client.smethod_46();
															bool flag4 = true;
															if (doctrine_20.method_3(scenario_28, ref flag4).method_70())
															{
																flag17 = false;
																break;
															}
															byte? b2 = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine doctrine_21 = activeUnit7.doctrine_0;
															Scenario scenario_29 = Client.smethod_46();
															flag4 = true;
															Doctrine.Enum52? enum15 = doctrine_21.method_3(scenario_29, ref flag4).method_68(Client.smethod_46(), false, null, false, false);
															byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag17 = false;
																break;
															}
														}
														if (Information.IsNothing(enum24))
														{
															Doctrine doctrine_22 = activeUnit7.doctrine_0;
															Scenario scenario_30 = Client.smethod_46();
															bool flag4 = true;
															if (!doctrine_22.method_3(scenario_30, ref flag4).method_75())
															{
																flag17 = false;
																break;
															}
														}
														else
														{
															Doctrine doctrine_23 = activeUnit7.doctrine_0;
															Scenario scenario_31 = Client.smethod_46();
															bool flag4 = true;
															if (doctrine_23.method_3(scenario_31, ref flag4).method_75())
															{
																flag17 = false;
																break;
															}
															byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine doctrine_24 = activeUnit7.doctrine_0;
															Scenario scenario_32 = Client.smethod_46();
															flag4 = true;
															Doctrine.Enum52? enum15 = doctrine_24.method_3(scenario_32, ref flag4).method_73(Client.smethod_46(), false, null, false, false);
															byte? b2 = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag17 = false;
																break;
															}
														}
														if (Information.IsNothing(enum24))
														{
															Doctrine doctrine_25 = activeUnit7.doctrine_0;
															Scenario scenario_33 = Client.smethod_46();
															bool flag4 = true;
															if (!doctrine_25.method_3(scenario_33, ref flag4).method_80())
															{
																flag17 = false;
																break;
															}
														}
														else
														{
															Doctrine doctrine_26 = activeUnit7.doctrine_0;
															Scenario scenario_34 = Client.smethod_46();
															bool flag4 = true;
															if (doctrine_26.method_3(scenario_34, ref flag4).method_80())
															{
																flag17 = false;
																break;
															}
															byte? b2 = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
															Doctrine doctrine_27 = activeUnit7.doctrine_0;
															Scenario scenario_35 = Client.smethod_46();
															flag4 = true;
															Doctrine.Enum52? enum15 = doctrine_27.method_3(scenario_35, ref flag4).method_78(Client.smethod_46(), false, null, false, false);
															byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
															bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
															if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
															{
																flag17 = false;
																break;
															}
														}
													}
												}
												num4++;
												if (flag16 || flag17)
												{
													continue;
												}
												break;
											}
										}
										finally
										{
											IEnumerator<Unit> enumerator6;
											if (enumerator6 != null)
											{
												enumerator6.Dispose();
											}
										}
										this.vmethod_550().Enabled = true;
										if (flag16)
										{
											if (Information.IsNothing(enum23))
											{
												this.vmethod_682().Checked = false;
												this.vmethod_684().Checked = false;
												this.vmethod_686().Checked = false;
												this.vmethod_688().Checked = true;
											}
											else
											{
												byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
												{
													this.vmethod_682().Checked = false;
													this.vmethod_684().Checked = false;
													this.vmethod_686().Checked = true;
													this.vmethod_688().Checked = false;
												}
												else
												{
													b = ((enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null);
													if (((b != null) ? new bool?(b.GetValueOrDefault() == 2) : null).GetValueOrDefault())
													{
														this.vmethod_682().Checked = true;
														this.vmethod_684().Checked = false;
														this.vmethod_686().Checked = false;
														this.vmethod_688().Checked = false;
													}
													else
													{
														this.vmethod_682().Checked = false;
														this.vmethod_684().Checked = true;
														this.vmethod_686().Checked = false;
														this.vmethod_688().Checked = false;
													}
												}
											}
										}
										else
										{
											this.vmethod_682().Checked = false;
											this.vmethod_684().Checked = false;
											this.vmethod_686().Checked = false;
											this.vmethod_688().Checked = false;
										}
										if (flag17)
										{
											byte? b = (enum24 != null) ? new byte?((byte)enum24.GetValueOrDefault()) : null;
											if (((b != null) ? new bool?(b.GetValueOrDefault() == 0) : null).GetValueOrDefault())
											{
												this.vmethod_688().Text = "Inherited, Free";
											}
											else
											{
												b = ((enum24 != null) ? new byte?((byte)enum24.GetValueOrDefault()) : null);
												if (((b != null) ? new bool?(b.GetValueOrDefault() == 1) : null).GetValueOrDefault())
												{
													this.vmethod_688().Text = "Inherited, Tight";
												}
												else
												{
													this.vmethod_688().Text = "Inherited, Hold";
												}
											}
										}
										else
										{
											this.vmethod_688().Text = "Inherited, Various";
										}
										num4 = 1;
										flag16 = true;
										ActiveUnit[] activeUnit_5 = Client.smethod_50().activeUnit_0;
										int n = 0;
										while (n < activeUnit_5.Length)
										{
											Unit unit7 = activeUnit_5[n];
											if (!unit7.bool_0 || unit7.vmethod_7(false) != Client.smethod_50())
											{
												goto IL_55C0;
											}
											if (!unit7.bool_2)
											{
												byte? b2;
												if (num4 == 1)
												{
													ActiveUnit activeUnit8 = (ActiveUnit)unit7;
													if (activeUnit8.doctrine_0.method_65())
													{
														enum23 = null;
													}
													else
													{
														enum23 = activeUnit8.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
													}
													if (Information.IsNothing(enum23))
													{
														if (!activeUnit8.doctrine_0.method_70())
														{
															flag16 = false;
															break;
														}
													}
													else
													{
														if (activeUnit8.doctrine_0.method_70())
														{
															flag16 = false;
															break;
														}
														byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
														Doctrine.Enum52? enum15 = activeUnit8.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
														b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
														bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
														if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															flag16 = false;
															break;
														}
													}
													if (Information.IsNothing(enum23))
													{
														if (!activeUnit8.doctrine_0.method_75())
														{
															flag16 = false;
															break;
														}
													}
													else
													{
														if (activeUnit8.doctrine_0.method_75())
														{
															flag16 = false;
															break;
														}
														b2 = ((enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null);
														Doctrine.Enum52? enum15 = activeUnit8.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
														byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
														bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
														if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															flag16 = false;
															break;
														}
													}
													if (Information.IsNothing(enum23))
													{
														if (activeUnit8.doctrine_0.method_80())
														{
															goto IL_55C0;
														}
														flag16 = false;
													}
													else if (!activeUnit8.doctrine_0.method_80())
													{
														byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
														Doctrine.Enum52? enum15 = activeUnit8.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
														b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
														bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
														if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															goto IL_55C0;
														}
														flag16 = false;
													}
													else
													{
														flag16 = false;
													}
												}
												else
												{
													ActiveUnit activeUnit9 = (ActiveUnit)unit7;
													if (Information.IsNothing(enum23))
													{
														if (!activeUnit9.doctrine_0.method_65())
														{
															flag16 = false;
															break;
														}
													}
													else
													{
														if (activeUnit9.doctrine_0.method_65())
														{
															flag16 = false;
															break;
														}
														b2 = ((enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null);
														Doctrine.Enum52? enum15 = activeUnit9.doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
														byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
														bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
														if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															flag16 = false;
															break;
														}
													}
													if (Information.IsNothing(enum23))
													{
														if (!activeUnit9.doctrine_0.method_70())
														{
															flag16 = false;
															break;
														}
													}
													else
													{
														if (activeUnit9.doctrine_0.method_70())
														{
															flag16 = false;
															break;
														}
														byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
														Doctrine.Enum52? enum15 = activeUnit9.doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
														b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
														bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
														if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															flag16 = false;
															break;
														}
													}
													if (Information.IsNothing(enum23))
													{
														if (!activeUnit9.doctrine_0.method_75())
														{
															flag16 = false;
															break;
														}
													}
													else
													{
														if (activeUnit9.doctrine_0.method_70())
														{
															flag16 = false;
															break;
														}
														b2 = ((enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null);
														Doctrine.Enum52? enum15 = activeUnit9.doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
														byte? b = (enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null;
														bool? flag6 = (b2 != null & b != null) ? new bool?(b2.GetValueOrDefault() == b.GetValueOrDefault()) : null;
														if (((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															flag16 = false;
															break;
														}
													}
													if (Information.IsNothing(enum23))
													{
														if (activeUnit9.doctrine_0.method_80())
														{
															goto IL_55C0;
														}
														flag16 = false;
													}
													else if (!activeUnit9.doctrine_0.method_80())
													{
														byte? b = (enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null;
														Doctrine.Enum52? enum15 = activeUnit9.doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
														b2 = ((enum15 != null) ? new byte?((byte)enum15.GetValueOrDefault()) : null);
														bool? flag6 = (b != null & b2 != null) ? new bool?(b.GetValueOrDefault() == b2.GetValueOrDefault()) : null;
														if (!((flag6 != null) ? new bool?(!flag6.GetValueOrDefault()) : flag6).GetValueOrDefault())
														{
															goto IL_55C0;
														}
														flag16 = false;
													}
													else
													{
														flag16 = false;
													}
												}
												IL_5640:
												this.vmethod_620().Enabled = true;
												if (flag16)
												{
													if (Information.IsNothing(enum23))
													{
														this.vmethod_690().Checked = false;
														this.vmethod_692().Checked = false;
														this.vmethod_694().Checked = false;
														this.vmethod_696().Checked = true;
													}
													else
													{
														b2 = ((enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															this.vmethod_690().Checked = false;
															this.vmethod_692().Checked = false;
															this.vmethod_694().Checked = true;
															this.vmethod_696().Checked = false;
														}
														else
														{
															b2 = ((enum23 != null) ? new byte?((byte)enum23.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																this.vmethod_690().Checked = true;
																this.vmethod_692().Checked = false;
																this.vmethod_694().Checked = false;
																this.vmethod_696().Checked = false;
															}
															else
															{
																this.vmethod_690().Checked = false;
																this.vmethod_692().Checked = true;
																this.vmethod_694().Checked = false;
																this.vmethod_696().Checked = false;
															}
														}
													}
												}
												else
												{
													this.vmethod_690().Checked = false;
													this.vmethod_692().Checked = false;
													this.vmethod_694().Checked = false;
													this.vmethod_696().Checked = false;
												}
												Doctrine.Enum52? enum25 = Client.smethod_50().doctrine_0.method_63(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum26 = Client.smethod_50().doctrine_0.method_68(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum27 = Client.smethod_50().doctrine_0.method_73(Client.smethod_46(), false, null, false, false);
												Doctrine.Enum52? enum28 = Client.smethod_50().doctrine_0.method_78(Client.smethod_46(), false, null, false, false);
												b2 = ((enum25 != null) ? new byte?((byte)enum25.GetValueOrDefault()) : null);
												if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
												{
													b2 = ((enum26 != null) ? new byte?((byte)enum26.GetValueOrDefault()) : null);
													if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
													{
														b2 = ((enum27 != null) ? new byte?((byte)enum27.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
														{
															b2 = ((enum28 != null) ? new byte?((byte)enum28.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 0) : null).GetValueOrDefault())
															{
																this.vmethod_696().Text = "Inherited, Free";
																goto IL_5CC5;
															}
														}
													}
												}
												b2 = ((enum25 != null) ? new byte?((byte)enum25.GetValueOrDefault()) : null);
												if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
												{
													b2 = ((enum26 != null) ? new byte?((byte)enum26.GetValueOrDefault()) : null);
													if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
													{
														b2 = ((enum27 != null) ? new byte?((byte)enum27.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
														{
															b2 = ((enum28 != null) ? new byte?((byte)enum28.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 1) : null).GetValueOrDefault())
															{
																this.vmethod_696().Text = "Inherited, Tight";
																goto IL_5CC5;
															}
														}
													}
												}
												b2 = ((enum25 != null) ? new byte?((byte)enum25.GetValueOrDefault()) : null);
												if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
												{
													b2 = ((enum26 != null) ? new byte?((byte)enum26.GetValueOrDefault()) : null);
													if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
													{
														b2 = ((enum27 != null) ? new byte?((byte)enum27.GetValueOrDefault()) : null);
														if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
														{
															b2 = ((enum28 != null) ? new byte?((byte)enum28.GetValueOrDefault()) : null);
															if (((b2 != null) ? new bool?(b2.GetValueOrDefault() == 2) : null).GetValueOrDefault())
															{
																this.vmethod_696().Text = "Inherited, Hold";
																goto IL_5CC5;
															}
														}
													}
												}
												this.vmethod_696().Text = "Inherited, Various";
												goto IL_5CC5;
											}
											IL_55C6:
											checked
											{
												n++;
												continue;
												IL_55C0:;
											}
											num4++;
											goto IL_55C6;
										}
										goto IL_5640;
									}
									IL_5CC5:
									this.vmethod_254().Enabled = false;
									this.vmethod_472().Enabled = false;
									this.vmethod_262().Enabled = false;
									this.vmethod_438().Enabled = false;
									this.vmethod_538().Enabled = false;
									this.vmethod_540().Enabled = false;
									this.vmethod_542().Enabled = false;
									this.vmethod_544().Enabled = false;
									bool flag18 = false;
									this.vmethod_576().Enabled = false;
									this.vmethod_576().Text = "Refuel (if possible)";
									this.vmethod_572().Enabled = false;
									this.vmethod_574().Enabled = false;
									this.vmethod_546().Enabled = false;
									this.vmethod_548().Enabled = false;
									this.vmethod_604().Enabled = false;
									this.vmethod_604().Checked = false;
									this.vmethod_474().Enabled = false;
									this.vmethod_578().Enabled = false;
									this.vmethod_578().DropDownItems.Clear();
									this.vmethod_856().Enabled = false;
									this.vmethod_856().DropDownItems.Clear();
									this.vmethod_446().Enabled = false;
									this.vmethod_448().Enabled = false;
									this.vmethod_450().Enabled = false;
									this.vmethod_444().Enabled = false;
									this.vmethod_452().Enabled = false;
									this.vmethod_454().Enabled = false;
									this.vmethod_476().Enabled = false;
									this.vmethod_660().Enabled = false;
									try
									{
										foreach (Unit unit8 in Client.smethod_50().method_56())
										{
											if (unit8.bool_0 && unit8.vmethod_7(false) == Client.smethod_50())
											{
												if (!this.vmethod_538().Enabled)
												{
													this.vmethod_538().Enabled = true;
												}
												if (!this.vmethod_580().Enabled)
												{
													this.vmethod_580().Enabled = true;
												}
												string text;
												if (!this.vmethod_540().Enabled)
												{
													Side side_6 = Client.smethod_50();
													Unit unit_6 = unit8;
													bool flag19 = false;
													text = null;
													if (GameGeneral.smethod_45(side_6, unit_6, flag19, ref text, Client.smethod_52().method_59()))
													{
														this.vmethod_540().Enabled = true;
													}
												}
												if (!this.vmethod_542().Enabled && !unit8.bool_2)
												{
													this.vmethod_542().Enabled = true;
													this.vmethod_544().Enabled = true;
												}
												if (!this.vmethod_262().Checked)
												{
													Side side_7 = Client.smethod_50();
													Unit unit_7 = unit8;
													bool flag20 = true;
													text = null;
													if (GameGeneral.smethod_45(side_7, unit_7, flag20, ref text, Client.smethod_52().method_59()))
													{
														this.vmethod_262().Enabled = true;
													}
												}
												if (!this.vmethod_262().Checked)
												{
													Side side_8 = Client.smethod_50();
													Unit unit_8 = unit8;
													bool flag21 = false;
													text = null;
													if (GameGeneral.smethod_45(side_8, unit_8, flag21, ref text, Client.smethod_52().method_59()))
													{
														this.vmethod_254().Enabled = true;
													}
												}
												if (this.vmethod_438().Checked)
												{
													goto IL_5FAB;
												}
												Side side_9 = Client.smethod_50();
												Unit unit_9 = unit8;
												bool flag22 = false;
												text = null;
												if (!GameGeneral.smethod_45(side_9, unit_9, flag22, ref text, Client.smethod_52().method_59()))
												{
													goto IL_5FAB;
												}
												this.vmethod_438().Enabled = true;
												IL_5FB7:
												if (!this.vmethod_472().Checked && !unit8.bool_2)
												{
													this.vmethod_472().Enabled = true;
												}
												if (!this.vmethod_546().Enabled && !unit8.bool_2)
												{
													this.vmethod_546().Enabled = (((ActiveUnit)unit8).vmethod_86().method_12().Length > 0);
													this.vmethod_548().Enabled = this.vmethod_546().Enabled;
												}
												if (!flag18 && !unit8.bool_2)
												{
													flag18 = true;
												}
												if (!this.vmethod_446().Enabled && !unit8.bool_2)
												{
													this.vmethod_446().Enabled = false;
													this.vmethod_448().Enabled = false;
													this.vmethod_450().Enabled = false;
													this.vmethod_444().Enabled = false;
													this.vmethod_452().Enabled = false;
													this.vmethod_454().Enabled = false;
													this.vmethod_476().Enabled = false;
												}
												if (unit8.bool_1)
												{
													if (((Group)unit8).method_143() == Group.GroupType.AirGroup)
													{
														this.vmethod_572().Enabled = true;
														this.vmethod_574().Enabled = true;
													}
													if (!this.vmethod_572().Enabled && ((Group)unit8).method_143() == Group.GroupType.AirGroup)
													{
														this.vmethod_572().Enabled = true;
														this.vmethod_574().Enabled = true;
													}
												}
												else
												{
													if (!this.vmethod_572().Enabled)
													{
														this.vmethod_572().Enabled = (unit8.bool_3 || unit8.bool_6 || unit8.bool_5);
														this.vmethod_574().Enabled = (unit8.bool_3 || unit8.bool_6 || unit8.bool_5);
													}
													if (!this.vmethod_546().Enabled && !unit8.bool_2)
													{
														this.vmethod_546().Enabled = (((ActiveUnit)unit8).vmethod_86().method_12().Length > 0);
														this.vmethod_548().Enabled = this.vmethod_546().Enabled;
													}
													if (!this.vmethod_446().Enabled && !unit8.bool_2)
													{
														this.vmethod_446().Enabled = false;
													}
													if (!this.vmethod_446().Enabled && !unit8.bool_2)
													{
														this.vmethod_446().Enabled = false;
														this.vmethod_448().Enabled = false;
														this.vmethod_450().Enabled = false;
														this.vmethod_444().Enabled = false;
														this.vmethod_452().Enabled = false;
														this.vmethod_454().Enabled = false;
														this.vmethod_476().Enabled = false;
													}
												}
												bool flag25;
												if (!unit8.bool_3 && (!unit8.bool_1 || ((Group)unit8).method_143() != Group.GroupType.AirGroup))
												{
													if (!unit8.bool_6 && (!unit8.bool_1 || ((Group)unit8).method_143() != Group.GroupType.SurfaceGroup))
													{
														continue;
													}
													bool flag23;
													if (this.vmethod_576().Enabled && flag23)
													{
														bool flag24;
														if (flag24)
														{
															this.vmethod_576().Enabled = true;
															this.vmethod_576().Text = "UNREP/Refuel (if possible)";
															continue;
														}
														this.vmethod_576().Enabled = true;
														this.vmethod_576().Text = "UNREP/Refuel (not AAR capable)";
														continue;
													}
													else
													{
														if (!this.vmethod_576().Enabled)
														{
															this.vmethod_576().Enabled = true;
															this.vmethod_576().Text = "UNREP (if possible)";
															flag25 = true;
															continue;
														}
														continue;
													}
												}
												else if (this.vmethod_576().Enabled && flag25)
												{
													bool flag24;
													if (unit8.bool_3)
													{
														Aircraft aircraft4 = (Aircraft)unit8;
														if (aircraft4.bool_28 || aircraft4.bool_27)
														{
															flag24 = true;
														}
													}
													else if (unit8.bool_1 && ((Group)unit8).method_143() == Group.GroupType.AirGroup)
													{
														Aircraft aircraft5 = (Aircraft)((Group)unit8).method_147();
														if (aircraft5.bool_28 || aircraft5.bool_27)
														{
															flag24 = true;
														}
													}
													if (flag24)
													{
														this.vmethod_576().Enabled = true;
														this.vmethod_576().Text = "UNREP/Refuel (if possible)";
														continue;
													}
													this.vmethod_576().Enabled = true;
													this.vmethod_576().Text = "UNREP/Refuel (not AAR capable)";
													continue;
												}
												else
												{
													bool flag24;
													if (this.vmethod_576().Enabled && flag24)
													{
														continue;
													}
													if (unit8.bool_3)
													{
														Aircraft aircraft6 = (Aircraft)unit8;
														if (aircraft6.bool_28 || aircraft6.bool_27)
														{
															this.vmethod_576().Enabled = true;
															this.vmethod_576().Text = "Refuel (if possible)";
															bool flag23 = true;
															flag24 = true;
															continue;
														}
														if (!flag24)
														{
															this.vmethod_576().Text = "Refuel (not AAR capable)";
															bool flag23 = true;
															continue;
														}
														continue;
													}
													else
													{
														if (!unit8.bool_1 || ((Group)unit8).method_143() != Group.GroupType.AirGroup)
														{
															continue;
														}
														Aircraft aircraft7 = (Aircraft)((Group)unit8).method_147();
														if (aircraft7.bool_28 || aircraft7.bool_27)
														{
															this.vmethod_576().Enabled = true;
															this.vmethod_576().Text = "Refuel (if possible)";
															bool flag23 = true;
															flag24 = true;
															continue;
														}
														if (!flag24)
														{
															this.vmethod_576().Text = "Refuel (not AAR capable)";
															bool flag23 = true;
															continue;
														}
														continue;
													}
												}
												IL_5FAB:
												this.vmethod_438().Enabled = false;
												goto IL_5FB7;
											}
										}
									}
									finally
									{
										IEnumerator<Unit> enumerator7;
										if (enumerator7 != null)
										{
											enumerator7.Dispose();
										}
									}
									if (flag18)
									{
										if (!Client.smethod_54().bool_2)
										{
											try
											{
												foreach (Mission mission3 in Client.smethod_50().method_35())
												{
													if (mission3.enum88_0 != Mission.Enum88.const_2 && (Client.smethod_54().bool_3 || (Client.smethod_54().bool_1 && ((Group)Client.smethod_54()).method_143() == Group.GroupType.AirGroup) || mission3.enum88_0 != Mission.Enum88.const_1))
													{
														new ToolStripMenuItem();
														new ToolStripMenuItem();
														((ToolStripMenuItem)this.vmethod_578().DropDownItems.Add(mission3.Name, null, new EventHandler(this.method_212))).Tag = mission3;
														if (mission3._MissionClass_0 == Mission._MissionClass.Support || mission3._MissionClass_0 == Mission._MissionClass.Ferry)
														{
															bool flag26 = false;
															try
															{
																foreach (ActiveUnit activeUnit10 in mission3.method_15(Client.smethod_46()))
																{
																	if (activeUnit10.bool_3)
																	{
																		if (!((Aircraft)activeUnit10).method_146())
																		{
																			continue;
																		}
																		flag26 = true;
																	}
																	else
																	{
																		if (!activeUnit10.bool_6 || !((Ship)activeUnit10).vmethod_106())
																		{
																			continue;
																		}
																		flag26 = true;
																	}
																	break;
																}
															}
															finally
															{
																List<ActiveUnit>.Enumerator enumerator9;
																((IDisposable)enumerator9).Dispose();
															}
															if (flag26)
															{
																new ToolStripMenuItem();
																((ToolStripMenuItem)this.vmethod_856().DropDownItems.Add(mission3.Name, null, new EventHandler(this.method_575))).Tag = mission3;
															}
														}
														if (mission3._MissionClass_0 == Mission._MissionClass.Strike)
														{
															((ToolStripMenuItem)this.vmethod_578().DropDownItems.Add(mission3.Name + " - Escort", null, new EventHandler(this.method_212))).Tag = mission3;
														}
													}
												}
											}
											finally
											{
												IEnumerator<Mission> enumerator8;
												if (enumerator8 != null)
												{
													enumerator8.Dispose();
												}
											}
											foreach (Side side2 in Client.smethod_46().method_44())
											{
												if (side2 != Client.smethod_50() && side2.method_67(Client.smethod_50()))
												{
													try
													{
														foreach (Mission mission4 in Enumerable.OrderBy<Mission, string>(side2.method_35(), (MainForm._Closure$__.$I2483-1 == null) ? (MainForm._Closure$__.$I2483-1 = new Func<Mission, string>(MainForm._Closure$__.$I.method_38)) : MainForm._Closure$__.$I2483-1))
														{
															if (mission4._MissionClass_0 == Mission._MissionClass.Support || mission4._MissionClass_0 == Mission._MissionClass.Ferry)
															{
																bool flag27 = false;
																try
																{
																	foreach (ActiveUnit activeUnit11 in mission4.method_15(Client.smethod_46()))
																	{
																		if (activeUnit11.bool_3)
																		{
																			if (!((Aircraft)activeUnit11).method_146())
																			{
																				continue;
																			}
																			flag27 = true;
																		}
																		else
																		{
																			if (!activeUnit11.bool_6 || !((Ship)activeUnit11).vmethod_106())
																			{
																				continue;
																			}
																			flag27 = true;
																		}
																		break;
																	}
																}
																finally
																{
																	List<ActiveUnit>.Enumerator enumerator11;
																	((IDisposable)enumerator11).Dispose();
																}
																if (flag27)
																{
																	new ToolStripMenuItem();
																	((ToolStripMenuItem)this.vmethod_856().DropDownItems.Add(mission4.Name + " (" + side2.method_51() + ")", null, new EventHandler(this.method_575))).Tag = mission4;
																}
															}
														}
													}
													finally
													{
														IEnumerator<Mission> enumerator10;
														if (enumerator10 != null)
														{
															enumerator10.Dispose();
														}
													}
												}
											}
										}
										this.vmethod_578().Enabled = (Client.smethod_50().method_35().Count > 0);
										this.vmethod_856().Enabled = (this.vmethod_856().DropDownItems.Count > 0);
									}
								}
								return;
							}
						}
					}
					goto IL_CC;
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200280", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x060063DC RID: 25564 RVA: 0x00376798 File Offset: 0x00374998
		private void method_205()
		{
			this.vmethod_744().Visible = true;
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					this.vmethod_668().Enabled = (Client.smethod_46().vmethod_2().Count > 0);
					if (Client.smethod_50().method_56().Count == 1 && !Information.IsNothing(Client.smethod_54()))
					{
						this.vmethod_536().Enabled = true;
						this.vmethod_94().Enabled = true;
						this.vmethod_282().Enabled = true;
						this.vmethod_492().Enabled = !Client.smethod_54().bool_1;
						this.vmethod_656().Enabled = !Client.smethod_54().bool_1;
						this.vmethod_494().Enabled = true;
						this.vmethod_506().Enabled = true;
						if (Client.smethod_54().bool_0 && !Client.smethod_54().bool_1)
						{
							this.vmethod_598().Enabled = true;
							this.vmethod_598().Checked = ((ActiveUnit)Client.smethod_54()).method_92(null);
						}
						else
						{
							this.vmethod_598().Enabled = false;
							this.vmethod_598().Checked = false;
						}
						if (!Information.IsNothing(Client.smethod_54()))
						{
							if (Client.smethod_54().bool_8)
							{
								this.vmethod_600().Enabled = true;
							}
							else
							{
								this.vmethod_600().Enabled = false;
							}
						}
						else
						{
							this.vmethod_600().Enabled = false;
						}
						if (Client.smethod_54().bool_8 && !Client.smethod_54().method_5())
						{
							this.vmethod_602().Enabled = true;
							this.vmethod_602().Checked = ((Facility)Client.smethod_54()).method_148().bool_4;
						}
						else
						{
							this.vmethod_602().Enabled = false;
							this.vmethod_602().Checked = false;
						}
						if (Client.smethod_54().bool_3)
						{
							if (!Information.IsNothing(((Aircraft)Client.smethod_54()).method_167()))
							{
								this.vmethod_664().Enabled = true;
							}
							else
							{
								this.vmethod_664().Enabled = false;
							}
						}
						else
						{
							this.vmethod_664().Enabled = false;
						}
					}
					else
					{
						this.vmethod_536().Enabled = false;
						this.vmethod_94().Enabled = false;
						this.vmethod_282().Enabled = false;
						this.vmethod_492().Enabled = false;
						this.vmethod_494().Enabled = false;
						this.vmethod_506().Enabled = false;
						this.vmethod_664().Enabled = false;
						this.vmethod_598().Enabled = false;
						this.vmethod_598().Checked = false;
						this.vmethod_602().Enabled = false;
						this.vmethod_602().Checked = false;
						this.vmethod_600().Enabled = false;
						try
						{
							foreach (Unit unit in Client.smethod_50().method_56())
							{
								if (!this.vmethod_598().Checked && unit.bool_0 && !unit.bool_1)
								{
									this.vmethod_598().Checked = ((ActiveUnit)unit).method_92(null);
								}
								if (!this.vmethod_598().Enabled && unit.bool_0 && !unit.bool_1)
								{
									this.vmethod_598().Enabled = true;
								}
								if (!this.vmethod_600().Enabled)
								{
									if (!Information.IsNothing(Client.smethod_54()))
									{
										if (Client.smethod_54().bool_8)
										{
											this.vmethod_600().Enabled = true;
										}
										else
										{
											this.vmethod_600().Enabled = false;
										}
									}
									else
									{
										this.vmethod_600().Enabled = false;
									}
								}
								if (!this.vmethod_602().Enabled)
								{
									if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_8 && !Client.smethod_54().method_5())
									{
										this.vmethod_602().Enabled = true;
										this.vmethod_602().Checked = ((Facility)Client.smethod_54()).method_148().bool_4;
									}
									else
									{
										this.vmethod_602().Enabled = false;
										this.vmethod_602().Checked = false;
									}
								}
							}
						}
						finally
						{
							IEnumerator<Unit> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
					}
					this.vmethod_904().Enabled = (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && (Client.smethod_0().method_1() == Class279.Enum67.const_2 || ((ActiveUnit)Client.smethod_54()).vmethod_90().vmethod_1()));
					this.vmethod_904().Checked = !string.IsNullOrEmpty(Client.smethod_52().method_59());
				}
				catch (Exception ex)
				{
					ex.Data.Add("Error at 200282", ex.Message);
					GameGeneral.smethod_25(ref ex);
					if (Debugger.IsAttached)
					{
						Debugger.Break();
					}
				}
			}
		}

		// Token: 0x060063DD RID: 25565 RVA: 0x00376C70 File Offset: 0x00374E70
		private void method_206()
		{
			if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0)
			{
				this.vmethod_402().Text = "Switch to UNIT View";
			}
			else
			{
				this.vmethod_402().Text = "Switch to GROUP View";
			}
			if (this.bool_11)
			{
				this.vmethod_430().Checked = true;
			}
			else
			{
				this.vmethod_430().Checked = false;
			}
			this.vmethod_108().Text = "Air Sensors (Current: " + (this.vmethod_108().Checked ? "ON" : "OFF") + ")";
			this.vmethod_110().Text = "Surface Sensors (Current: " + (this.vmethod_110().Checked ? "ON" : "OFF") + ")";
			this.vmethod_112().Text = "Underwater Sensors (Current: " + (this.vmethod_112().Checked ? "ON" : "OFF") + ")";
			this.vmethod_114().Text = "Air Weapons (Current: " + (this.vmethod_114().Checked ? "ON" : "OFF") + ")";
			this.vmethod_116().Text = "Surface Weapons (Current: " + (this.vmethod_116().Checked ? "ON" : "OFF") + ")";
			this.vmethod_658().Text = "Land Weapons (Current: " + (this.vmethod_658().Checked ? "ON" : "OFF") + ")";
			this.vmethod_118().Text = "Underwater Weapons (Current: " + (this.vmethod_118().Checked ? "ON" : "OFF") + ")";
			this.vmethod_1012().Text = "Aircraft Range (Current: " + (this.vmethod_1012().Checked ? "ON" : "OFF") + ")";
		}

		// Token: 0x060063DE RID: 25566 RVA: 0x0003F090 File Offset: 0x0003D290
		private void method_207()
		{
			if (Client.smethod_61() == Client.Enum197.const_1)
			{
				this.vmethod_432().Checked = true;
			}
			else
			{
				this.vmethod_432().Checked = false;
			}
			this.vmethod_632().Checked = Class570.class280_0.method_6();
		}

		// Token: 0x060063DF RID: 25567 RVA: 0x00376E68 File Offset: 0x00375068
		private void method_208()
		{
			Class279.Enum68 @enum = Client.smethod_0().method_0();
			if (@enum == Class279.Enum68.const_0)
			{
				this.vmethod_418().Checked = false;
				this.vmethod_418().Text = "Start / Resume";
				this.vmethod_418().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\Play.gif");
				return;
			}
			if (@enum != Class279.Enum68.const_1)
			{
				return;
			}
			this.vmethod_418().Checked = true;
			this.vmethod_418().Text = "Stop / Pause";
			this.vmethod_418().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\Stop_16.gif");
		}

		// Token: 0x060063E0 RID: 25568 RVA: 0x0003F0C9 File Offset: 0x0003D2C9
		private void method_209()
		{
			if (Client.smethod_50().method_56().Count != 1)
			{
				this.vmethod_486().Enabled = false;
				return;
			}
			this.vmethod_486().Enabled = true;
		}

		// Token: 0x060063E1 RID: 25569 RVA: 0x0003F0F6 File Offset: 0x0003D2F6
		private void method_210()
		{
			this.vmethod_936().Visible = false;
			this.vmethod_794().Visible = false;
		}

		// Token: 0x060063E2 RID: 25570 RVA: 0x00376F00 File Offset: 0x00375100
		private void method_211(object sender, EventArgs e)
		{
			ToolStripMenuItem toolStripMenuItem = sender as ToolStripMenuItem;
			Mission mission = (Mission)toolStripMenuItem.Tag;
			List<ActiveUnit> list = new List<ActiveUnit>();
			try
			{
				foreach (Unit unit in Client.smethod_50().method_56())
				{
					if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2 && (unit.bool_3 || (unit.bool_1 && ((Group)unit).method_143() == Group.GroupType.AirGroup) || mission.enum88_0 != Mission.Enum88.const_1))
					{
						list.Add((ActiveUnit)unit);
						((ActiveUnit)unit).vmethod_85().referencePoint_0 = null;
					}
				}
			}
			finally
			{
				IEnumerator<Unit> enumerator;
				if (enumerator != null)
				{
					enumerator.Dispose();
				}
			}
			bool flag = Strings.InStr(toolStripMenuItem.Text, " - Escort", CompareMethod.Binary) != 0;
			Client.smethod_55(RuntimeHelpers.GetObjectValue(sender), list, ref mission, ref flag);
			Class514.smethod_0(Client.smethod_46(), mission, ref list, true);
			Client.bool_1 = true;
			Client.bool_1 = true;
			this.method_97().method_2(Client.smethod_46(), Client.smethod_50(), Client.smethod_54(), false);
		}

		// Token: 0x060063E3 RID: 25571 RVA: 0x0037702C File Offset: 0x0037522C
		private void method_212(object sender, EventArgs e)
		{
			List<ActiveUnit> list = new List<ActiveUnit>();
			ToolStripMenuItem toolStripMenuItem = sender as ToolStripMenuItem;
			Mission mission = (Mission)toolStripMenuItem.Tag;
			if (Client.smethod_50().method_56().Count > 0)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2 && (unit.bool_3 || (unit.bool_1 && ((Group)unit).method_143() == Group.GroupType.AirGroup) || mission.enum88_0 != Mission.Enum88.const_1))
						{
							list.Add((ActiveUnit)unit);
							((ActiveUnit)unit).vmethod_85().referencePoint_0 = null;
						}
					}
					goto IL_175;
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && !Client.smethod_54().bool_2 && Client.smethod_54().vmethod_7(false) == Client.smethod_50() && (Client.smethod_54().bool_3 || (Client.smethod_54().bool_1 && ((Group)Client.smethod_54()).method_143() == Group.GroupType.AirGroup) || (!Client.smethod_54().bool_3 && mission.enum88_0 != Mission.Enum88.const_2 && mission.enum88_0 != Mission.Enum88.const_1)))
			{
				list.Add((ActiveUnit)Client.smethod_54());
				((ActiveUnit)Client.smethod_54()).vmethod_85().referencePoint_0 = null;
			}
			IL_175:
			bool flag = Strings.InStr(toolStripMenuItem.Text, " - Escort", CompareMethod.Binary) != 0;
			Client.smethod_55(RuntimeHelpers.GetObjectValue(sender), list, ref mission, ref flag);
			Class514.smethod_0(Client.smethod_46(), mission, ref list, true);
			Client.bool_1 = true;
		}

		// Token: 0x060063E4 RID: 25572 RVA: 0x003771F8 File Offset: 0x003753F8
		private void method_213(object sender, EventArgs e)
		{
			if (!Class2556.smethod_6(Class2556.Enum209.const_0) && !GameGeneral.smethod_6())
			{
				Class2413.smethod_2().method_30().method_2(new List<Class2556.Enum209>
				{
					Class2556.Enum209.const_0
				});
				Class2413.smethod_2().method_30().Show();
				return;
			}
			if (DarkMessageBox.smethod_1("Are you sure? All unsaved progress on current scenario will be lost.", "Confirm", Enum11.const_2) == DialogResult.OK)
			{
				this.method_491(true);
				Client.smethod_76();
				Client.bool_1 = true;
				Client.smethod_0().method_2(Class279.Enum67.const_2);
				Client.bool_1 = true;
			}
		}

		// Token: 0x060063E5 RID: 25573 RVA: 0x00377278 File Offset: 0x00375478
		public void method_214(object sender, EventArgs e)
		{
			Class279.Enum68 @enum = Client.smethod_0().method_0();
			if (@enum == Class279.Enum68.const_0)
			{
				this.vmethod_24().Checked = true;
				this.vmethod_24().Text = "Stop / Pause";
				this.vmethod_24().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\Stop_16.gif");
				Client.smethod_0().method_3();
				this.gameControlBar_0.vmethod_18().Visibility = Visibility.Collapsed;
				this.gameControlBar_0.vmethod_22().Visibility = Visibility.Visible;
				return;
			}
			if (@enum != Class279.Enum68.const_1)
			{
				return;
			}
			this.vmethod_24().Checked = false;
			this.vmethod_24().Text = "Start / Resume";
			this.vmethod_24().Image = Image.FromFile(System.Windows.Forms.Application.StartupPath + "\\Symbols\\Menu\\Play.gif");
			Client.smethod_0().method_4();
			this.gameControlBar_0.vmethod_18().Visibility = Visibility.Visible;
			this.gameControlBar_0.vmethod_22().Visibility = Visibility.Collapsed;
		}

		// Token: 0x060063E6 RID: 25574 RVA: 0x00377368 File Offset: 0x00375568
		private void method_215(object sender, EventArgs e)
		{
			if (Client.smethod_50() == null)
			{
				DarkMessageBox.smethod_2("You must have at least one side created in order to save a scenario.", "No side exists!", Enum11.const_0);
				return;
			}
			if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
			{
				this.vmethod_28().Title = "Save scenario";
			}
			else
			{
				this.vmethod_28().Title = "Save game";
			}
			base.Enabled = false;
			if (Client.smethod_46().FileName != null)
			{
				if (Operators.CompareString(Client.string_3, null, false) == 0)
				{
					this.vmethod_28().InitialDirectory = GameGeneral.string_4;
					this.vmethod_28().FileName = Class2558.smethod_0(Client.smethod_46().method_0());
				}
				else
				{
					this.vmethod_28().InitialDirectory = Path.GetDirectoryName(Client.string_3);
					this.vmethod_28().FileName = Client.string_3;
				}
				bool flag;
				if (flag = (Client.smethod_0().method_0() == Class279.Enum68.const_1))
				{
					Client.smethod_0().method_4();
				}
				this.vmethod_28().AddExtension = true;
				if (Client.smethod_0().method_1() == Class279.Enum67.const_2)
				{
					this.vmethod_28().Filter = "Command scenario file (*.scen)|*.scen|Command saved game (*.save)|*.save|All Files (*.*)|*.*";
				}
				else
				{
					this.vmethod_28().Filter = "Command saved game (*.save)|*.save|Command scenario file (*.scen)|*.scen|All Files (*.*)|*.*";
				}
				if (string.IsNullOrEmpty(this.vmethod_28().InitialDirectory))
				{
					this.vmethod_28().InitialDirectory = GameGeneral.string_4;
				}
				else if (!Path.GetFullPath(this.vmethod_28().InitialDirectory).StartsWith(GameGeneral.string_4))
				{
					this.vmethod_28().InitialDirectory = GameGeneral.string_4;
				}
				switch (this.vmethod_28().ShowDialog())
				{
				case DialogResult.OK:
					Client.smethod_75(false, "", false);
					base.Enabled = true;
					Client.string_3 = this.vmethod_28().FileName;
					Client.smethod_102(Client.string_3);
					break;
				case DialogResult.Cancel:
					base.Enabled = true;
					break;
				case DialogResult.Abort:
					base.Enabled = true;
					break;
				case DialogResult.No:
					base.Enabled = true;
					break;
				}
				Client.smethod_62(Client.Enum197.const_0);
				if (flag)
				{
					Client.smethod_0().method_3();
					return;
				}
			}
			else
			{
				Client.smethod_62(Client.Enum197.const_5);
			}
		}

		// Token: 0x060063E7 RID: 25575 RVA: 0x0003F110 File Offset: 0x0003D310
		private void method_216(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_2);
		}

		// Token: 0x060063E8 RID: 25576 RVA: 0x0003F118 File Offset: 0x0003D318
		private void method_217(object sender, EventArgs e)
		{
			base.Enabled = true;
		}

		// Token: 0x060063E9 RID: 25577 RVA: 0x0037756C File Offset: 0x0037576C
		private List<System.Drawing.Point[]> method_218(List<System.Drawing.Point[]> list_62)
		{
			List<System.Drawing.Point[]> list = new List<System.Drawing.Point[]>();
			List<System.Drawing.Point[]> result;
			try
			{
				MainForm.Class2445 @class = new MainForm.Class2445(@class);
				IEnumerable<List<System.Drawing.Point[]>> enumerable = Misc.smethod_60(list_62, 100);
				@class.concurrentDictionary_0 = new ConcurrentDictionary<double, List<IntPoint>>();
				Parallel.ForEach<List<System.Drawing.Point[]>>(enumerable, new Action<List<System.Drawing.Point[]>>(@class.method_0));
				int count = @class.concurrentDictionary_0.Count;
				if (count != 0)
				{
					if (count == 1)
					{
						list.Add(Enumerable.ToArray<System.Drawing.Point>(Enumerable.Select<IntPoint, System.Drawing.Point>(Enumerable.ElementAtOrDefault<List<IntPoint>>(@class.concurrentDictionary_0.Values, 0), (MainForm._Closure$__.$I2501-1 == null) ? (MainForm._Closure$__.$I2501-1 = new Func<IntPoint, System.Drawing.Point>(MainForm._Closure$__.$I.method_39)) : MainForm._Closure$__.$I2501-1)));
					}
					else
					{
						Class145 class2 = new Class145(0);
						try
						{
							foreach (List<IntPoint> list2 in @class.concurrentDictionary_0.Values)
							{
								class2.method_7(list2, Enum20.const_1, true);
							}
						}
						finally
						{
							IEnumerator<List<IntPoint>> enumerator;
							if (enumerator != null)
							{
								enumerator.Dispose();
							}
						}
						List<List<IntPoint>> list3 = new List<List<IntPoint>>();
						class2.method_20(Enum19.const_1, list3, Enum21.const_1, Enum21.const_1);
						if (list3.Count > 0)
						{
							try
							{
								foreach (List<IntPoint> list4 in list3)
								{
									list.Add(Enumerable.ToArray<System.Drawing.Point>(Enumerable.Select<IntPoint, System.Drawing.Point>(list4, (MainForm._Closure$__.$I2501-2 == null) ? (MainForm._Closure$__.$I2501-2 = new Func<IntPoint, System.Drawing.Point>(MainForm._Closure$__.$I.method_40)) : MainForm._Closure$__.$I2501-2)));
								}
							}
							finally
							{
								List<List<IntPoint>>.Enumerator enumerator2;
								((IDisposable)enumerator2).Dispose();
							}
						}
					}
				}
				result = list;
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200128", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
				result = list;
			}
			return result;
		}

		// Token: 0x060063EA RID: 25578 RVA: 0x00377764 File Offset: 0x00375964
		public void method_219()
		{
			this.class1873_2.bool_4 = Client.smethod_52().method_15();
			try
			{
				foreach (Class1879 @class in this.list_52)
				{
					@class.vmethod_12(Class570.class280_0.method_54());
				}
			}
			finally
			{
				List<Class1879>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
			Class1840.smethod_1(Client.smethod_46().method_31());
			Client.bool_1 = true;
		}

		// Token: 0x060063EB RID: 25579 RVA: 0x0003F121 File Offset: 0x0003D321
		private void method_220(object sender, EventArgs e)
		{
			this.method_491(true);
			if (Client.smethod_0().method_0() == Class279.Enum68.const_1)
			{
				Client.smethod_0().method_4();
			}
			Class2413.smethod_2().method_38().Show();
		}

		// Token: 0x060063EC RID: 25580 RVA: 0x0003F152 File Offset: 0x0003D352
		private void method_221(object sender, EventArgs e)
		{
			base.Enabled = false;
			Client.smethod_62(Client.Enum197.const_4);
		}

		// Token: 0x060063ED RID: 25581 RVA: 0x003777E8 File Offset: 0x003759E8
		private void method_222()
		{
		}

		// Token: 0x060063EE RID: 25582 RVA: 0x003777F8 File Offset: 0x003759F8
		private void method_223()
		{
			try
			{
				if (Client.smethod_50() != null)
				{
					List<ActiveUnit> list = Client.smethod_46().method_42();
					new List<ActiveUnit>().AddRange(Client.smethod_50().activeUnit_0);
					List<Contact> list2 = new List<Contact>();
					if (Client.smethod_50().method_44() != null)
					{
						int num = Client.smethod_50().method_44().Count - 1;
						for (int i = 0; i <= num; i++)
						{
							try
							{
								list2.Add(Client.smethod_50().method_44()[i]);
							}
							catch (Exception ex)
							{
							}
						}
					}
					if (Client.smethod_50().method_46().Count > 0)
					{
						list2.AddRange(Client.smethod_50().method_46());
					}
					this.dictionary_0 = new Dictionary<string, HashSet<string>>();
					foreach (Side side in Client.smethod_46().method_44())
					{
						HashSet<string> hashSet = new HashSet<string>();
						side.method_70(Client.smethod_46(), hashSet);
						this.dictionary_0.Add(side.string_0, hashSet);
					}
					this.list_53.Clear();
					this.dictionary_2.Clear();
					if (list != null)
					{
						if (list.Count != 0)
						{
							List<Unit> list3 = new List<Unit>();
							List<Unit> list4 = new List<Unit>();
							List<Unit> list5 = new List<Unit>();
							Unit unit_ = Client.smethod_54();
							if (Client.smethod_52().method_1())
							{
								List<ActiveUnit> list6 = new List<ActiveUnit>(list.Count);
								try
								{
									foreach (ActiveUnit activeUnit in list)
									{
										if ((!activeUnit.bool_1 || Client.smethod_52().enum87_0 != Class285.Enum87.const_1) && activeUnit != null && activeUnit.vmethod_127() && Class2572.smethod_6(this.vmethod_796(), activeUnit) && Client.smethod_86(ref activeUnit, false, null, unit_))
										{
											list6.Add(activeUnit);
										}
									}
								}
								finally
								{
									List<ActiveUnit>.Enumerator enumerator;
									((IDisposable)enumerator).Dispose();
								}
								for (int k = list6.Count - 1; k >= 0; k += -1)
								{
									try
									{
										ActiveUnit activeUnit2 = list6[k];
										if (activeUnit2 != null)
										{
											if (!activeUnit2.bool_3 && !activeUnit2.method_2() && !activeUnit2.method_1() && !activeUnit2.method_88() && !activeUnit2.vmethod_2())
											{
												if (!activeUnit2.bool_6 && !activeUnit2.bool_8 && !activeUnit2.bool_1)
												{
													if (activeUnit2.bool_5 || activeUnit2.bool_7 || activeUnit2.method_4() || (activeUnit2.bool_2 && ((Weapon)activeUnit2).method_167() == Weapon._WeaponType.Sonobuoy))
													{
														list5.Add(activeUnit2);
													}
												}
												else
												{
													list4.Add(activeUnit2);
												}
											}
											else
											{
												list3.Add(activeUnit2);
											}
										}
									}
									catch (Exception ex2)
									{
										ex2.Data.Add("Error at 200193", ex2.Message);
										GameGeneral.smethod_25(ref ex2);
										if (Debugger.IsAttached)
										{
											Debugger.Break();
										}
									}
								}
							}
							else
							{
								List<ActiveUnit> list7 = new List<ActiveUnit>();
								if (!string.IsNullOrEmpty(Client.smethod_52().method_59()))
								{
									if (!Client.smethod_46().vmethod_0().ContainsKey(Client.smethod_52().method_59()))
									{
										goto IL_A2C;
									}
									ActiveUnit activeUnit3 = Client.smethod_46().vmethod_0()[Client.smethod_52().method_59()];
									this.list_53.Add(activeUnit3);
									try
									{
										foreach (Weapon weapon in Client.smethod_46().method_17())
										{
											if (weapon.method_177() == activeUnit3)
											{
												this.list_53.Add(weapon);
											}
										}
									}
									finally
									{
										List<Weapon>.Enumerator enumerator2;
										((IDisposable)enumerator2).Dispose();
									}
									try
									{
										foreach (ActiveUnit activeUnit4 in list)
										{
											if (!Information.IsNothing(activeUnit4) && !Information.IsNothing(activeUnit4.vmethod_7(false)) && activeUnit4.vmethod_127() && Class2572.smethod_6(this.vmethod_796(), activeUnit4) && activeUnit4.method_5() && (activeUnit4.vmethod_7(false) == activeUnit3.vmethod_7(false) || activeUnit4.vmethod_7(false).method_68(activeUnit3.vmethod_7(false)) == Misc.PostureStance.Friendly))
											{
												this.list_53.Add(activeUnit4);
											}
										}
									}
									finally
									{
										List<ActiveUnit>.Enumerator enumerator3;
										((IDisposable)enumerator3).Dispose();
									}
									try
									{
										foreach (Contact contact in activeUnit3.vmethod_88().method_0())
										{
											try
											{
												if (!contact.method_124(Client.smethod_46()))
												{
													if (Class2572.smethod_6(this.vmethod_796(), contact))
													{
														if (!Information.IsNothing(contact.activeUnit_0))
														{
															if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && contact.activeUnit_0.method_120())
															{
																Group.GroupType groupType = contact.activeUnit_0.vmethod_65(false).method_143();
																if (groupType == Group.GroupType.Installation || groupType - Group.GroupType.AirBase <= 1)
																{
																	continue;
																}
															}
															switch (contact.contactType_0)
															{
															case Contact_Base.ContactType.Air:
															case Contact_Base.ContactType.Missile:
															case Contact_Base.ContactType.Orbital:
															case Contact_Base.ContactType.Explosion:
															case Contact_Base.ContactType.Decoy_Air:
																list3.Add(contact);
																break;
															case Contact_Base.ContactType.Surface:
															case Contact_Base.ContactType.UndeterminedNaval:
															case Contact_Base.ContactType.Aimpoint:
															case Contact_Base.ContactType.Undetermined:
															case Contact_Base.ContactType.Decoy_Surface:
																list4.Add(contact);
																break;
															case Contact_Base.ContactType.Submarine:
															case Contact_Base.ContactType.Torpedo:
															case Contact_Base.ContactType.Mine:
															case Contact_Base.ContactType.Decoy_Sub:
															case Contact_Base.ContactType.Sonobuoy:
																list5.Add(contact);
																break;
															case Contact_Base.ContactType.Facility_Fixed:
															case Contact_Base.ContactType.Facility_Mobile:
															case Contact_Base.ContactType.Decoy_Land:
																list4.Add(contact);
																break;
															case Contact_Base.ContactType.Installation:
															case Contact_Base.ContactType.AirBase:
															case Contact_Base.ContactType.NavalBase:
																list4.Add(contact);
																break;
															}
														}
													}
												}
											}
											catch (Exception ex3)
											{
												string message = ex3.Message;
												ex3.Data.Add("Error at 20023453465777", ex3.Message);
												GameGeneral.smethod_25(ref ex3);
												if (Debugger.IsAttached)
												{
													Debugger.Break();
												}
											}
										}
										goto IL_A2C;
									}
									finally
									{
										List<Contact>.Enumerator enumerator4;
										((IDisposable)enumerator4).Dispose();
									}
								}
								try
								{
									foreach (ActiveUnit activeUnit5 in list)
									{
										if (!Information.IsNothing(activeUnit5) && !Information.IsNothing(activeUnit5.vmethod_7(false)) && activeUnit5.vmethod_127())
										{
											double num2;
											double num3;
											if (!activeUnit5.vmethod_90().vmethod_1())
											{
												num2 = activeUnit5.method_56().Value;
												num3 = activeUnit5.method_58().Value;
											}
											else
											{
												num2 = activeUnit5.vmethod_30(null);
												num3 = activeUnit5.vmethod_28(null);
											}
											if (Class2572.smethod_5(this.vmethod_796(), num2, num3) && (!activeUnit5.bool_1 || Client.smethod_52().enum87_0 != Class285.Enum87.const_1) && Client.smethod_86(ref activeUnit5, false, null, unit_) && (!activeUnit5.bool_2 || Information.IsNothing(((Weapon)activeUnit5).method_177()) || ((Weapon)activeUnit5).method_177().vmethod_90().vmethod_1()) && (activeUnit5.vmethod_7(false) == Client.smethod_50() | this.dictionary_0[activeUnit5.vmethod_7(false).string_0].Contains(Client.smethod_50().string_0)))
											{
												list7.Add(activeUnit5);
											}
										}
									}
								}
								finally
								{
									List<ActiveUnit>.Enumerator enumerator5;
									((IDisposable)enumerator5).Dispose();
								}
								for (int l = list7.Count - 1; l >= 0; l += -1)
								{
									try
									{
										ActiveUnit activeUnit2 = list7[l];
										if (!Information.IsNothing(activeUnit2))
										{
											if (!(activeUnit2.bool_3 | activeUnit2.method_2() | activeUnit2.method_1() | activeUnit2.method_88()) && !activeUnit2.vmethod_2())
											{
												if (activeUnit2.bool_6 | activeUnit2.bool_8 | activeUnit2.bool_1)
												{
													list4.Add(activeUnit2);
												}
												else if (activeUnit2.bool_5 | activeUnit2.bool_7 | activeUnit2.method_4() | (activeUnit2.bool_2 && ((Weapon)activeUnit2).method_167() == Weapon._WeaponType.Sonobuoy))
												{
													list5.Add(activeUnit2);
												}
											}
											else
											{
												list3.Add(activeUnit2);
											}
										}
									}
									catch (Exception ex4)
									{
										string message2 = ex4.Message;
										ex4.Data.Add("Error at 200194", ex4.Message);
										GameGeneral.smethod_25(ref ex4);
										if (Debugger.IsAttached)
										{
											Debugger.Break();
										}
									}
								}
								if (Information.IsNothing(list2))
								{
									return;
								}
								if (!Client.smethod_52().method_1() && !Information.IsNothing(Client.smethod_50()) && (Client.smethod_50().method_11().Count > 0 | Client.smethod_50().method_12().Count > 0))
								{
									for (int m = list2.Count - 1; m >= 0; m += -1)
									{
										try
										{
											Contact contact2 = list2[m];
											if (!contact2.method_124(Client.smethod_46()))
											{
												if (Class2572.smethod_6(this.vmethod_796(), contact2))
												{
													if (!Information.IsNothing(contact2.activeUnit_0))
													{
														if (Client.smethod_52().enum87_0 == Class285.Enum87.const_0 && contact2.activeUnit_0.method_120() && contact2.contactType_0 == Contact_Base.ContactType.Facility_Fixed)
														{
															Group.GroupType groupType2 = contact2.activeUnit_0.vmethod_65(false).method_143();
															if (groupType2 == Group.GroupType.Installation || groupType2 - Group.GroupType.AirBase <= 1)
															{
																goto IL_A21;
															}
														}
														switch (contact2.contactType_0)
														{
														case Contact_Base.ContactType.Air:
														case Contact_Base.ContactType.Missile:
														case Contact_Base.ContactType.Orbital:
														case Contact_Base.ContactType.Explosion:
															list3.Add(contact2);
															break;
														case Contact_Base.ContactType.Surface:
														case Contact_Base.ContactType.UndeterminedNaval:
														case Contact_Base.ContactType.Aimpoint:
														case Contact_Base.ContactType.Undetermined:
															list4.Add(contact2);
															break;
														case Contact_Base.ContactType.Submarine:
														case Contact_Base.ContactType.Torpedo:
														case Contact_Base.ContactType.Mine:
														case Contact_Base.ContactType.Sonobuoy:
															list5.Add(contact2);
															break;
														case Contact_Base.ContactType.Facility_Fixed:
														case Contact_Base.ContactType.Facility_Mobile:
															list4.Add(contact2);
															break;
														case Contact_Base.ContactType.Installation:
														case Contact_Base.ContactType.AirBase:
														case Contact_Base.ContactType.NavalBase:
															list4.Add(contact2);
															break;
														}
													}
												}
											}
										}
										catch (Exception ex5)
										{
											string message3 = ex5.Message;
											ex5.Data.Add("Error at 200195", ex5.Message);
											if (Debugger.IsAttached)
											{
												Debugger.Break();
											}
											GameGeneral.smethod_25(ref ex5);
										}
										IL_A21:;
									}
								}
							}
							IL_A2C:
							this.list_53.AddRange(list5);
							this.list_53.AddRange(list4);
							this.list_53.AddRange(list3);
							int count = this.list_53.Count;
							for (int n = this.list_53.Count - 1; n >= 0; n += -1)
							{
								Unit unit = this.list_53[n];
								int item;
								int item2;
								Class2572.smethod_4(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null), ref item, ref item2);
								if (!this.dictionary_2.ContainsKey(unit))
								{
									this.dictionary_2.Add(unit, new Tuple<int, int>(item, item2));
								}
							}
						}
					}
				}
			}
			catch (Exception ex6)
			{
				ex6.Data.Add("Error at 200544", ex6.Message);
				GameGeneral.smethod_25(ref ex6);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x060063EF RID: 25583 RVA: 0x00378430 File Offset: 0x00376630
		private void method_224()
		{
			try
			{
				this.list_54.Clear();
				int num = this.list_53.Count - 1;
				for (int i = 0; i <= num; i++)
				{
					Unit unit = this.list_53[i];
					if ((unit.bool_0 || unit.method_14()) && (Class570.class280_0.method_16() != Class279.Class280.Enum69.const_2 || !unit.bool_0 || !unit.bool_2 || ((Weapon)unit).method_167() != Weapon._WeaponType.Sonobuoy))
					{
						this.list_54.Add(unit);
					}
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200545", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x060063F0 RID: 25584 RVA: 0x00378504 File Offset: 0x00376704
		private void method_225(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_46()) && !Information.IsNothing(Class570.class280_0))
			{
				this.vmethod_70().Interval = 100;
				if (Client.smethod_46().method_14())
				{
					this.vmethod_32().Interval = 100;
					this.vmethod_66().Interval = 250;
					Client.int_1 = 10;
				}
				else
				{
					this.vmethod_32().Interval = 50;
					this.vmethod_66().Interval = 500;
					Client.int_1 = 30;
				}
				if (Client.smethod_0().method_0() == Class279.Enum68.const_1)
				{
					Client.double_2 -= (double)this.vmethod_32().Interval;
				}
				if (!Client.smethod_46().ExecutionInProgress)
				{
					if (Client.nullable_0 != null)
					{
						if (DateTime.Compare(Client.smethod_46().method_31(), Client.nullable_0.Value) < 0)
						{
							Client.smethod_67(this.vmethod_32().Interval);
							Client.bool_1 = true;
							return;
						}
						Client.smethod_0().method_4();
						Client.nullable_0 = null;
						this.method_203();
						return;
					}
					else
					{
						Client.smethod_67(this.vmethod_32().Interval);
						Client.bool_1 = true;
					}
				}
			}
		}

		// Token: 0x060063F1 RID: 25585 RVA: 0x00378634 File Offset: 0x00376834
		private void method_226(object sender, EventArgs e)
		{
			ToolStripMenuItem toolStripMenuItem = sender as ToolStripMenuItem;
			foreach (Side side in Client.smethod_46().method_44())
			{
				if (Operators.CompareString(side.method_51(), toolStripMenuItem.Text, false) == 0)
				{
					Client.smethod_46().method_53(side);
					return;
				}
			}
		}

		// Token: 0x060063F2 RID: 25586 RVA: 0x00378688 File Offset: 0x00376888
		private void method_227()
		{
			if (Client.smethod_54() != null && Client.smethod_54().bool_0)
			{
				Side side_ = Client.smethod_50();
				Unit unit_ = Client.smethod_54();
				bool flag = false;
				string text = null;
				if (GameGeneral.smethod_45(side_, unit_, flag, ref text, Client.smethod_52().method_59()))
				{
					Client.smethod_33().method_3((ActiveUnit)Client.smethod_54());
					Client.smethod_33().Show();
				}
			}
		}

		// Token: 0x060063F3 RID: 25587 RVA: 0x0003F161 File Offset: 0x0003D361
		private void method_228(object sender, EventArgs e)
		{
			base.Close();
		}

		// Token: 0x060063F4 RID: 25588 RVA: 0x0003F169 File Offset: 0x0003D369
		private void method_229(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_64().Show();
		}

		// Token: 0x060063F5 RID: 25589 RVA: 0x0003F17A File Offset: 0x0003D37A
		private void method_230(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_47().Show();
		}

		// Token: 0x060063F6 RID: 25590 RVA: 0x003786E8 File Offset: 0x003768E8
		private ReferencePoint method_231()
		{
			List<ReferencePoint> list = new List<ReferencePoint>();
			ReferencePoint result;
			if (Information.IsNothing(Client.smethod_50()))
			{
				result = null;
			}
			else
			{
				List<ActiveUnit> list2 = new List<ActiveUnit>();
				list2.AddRange(Client.smethod_50().activeUnit_0);
				if (Information.IsNothing(list2))
				{
					result = null;
				}
				else
				{
					short num = (short)(this.point_2.Y - 4);
					short num2 = (short)(this.point_2.Y + 4);
					short num3 = (short)(this.point_2.X - 4);
					short num4 = (short)(this.point_2.X + 4);
					try
					{
						try
						{
							foreach (ReferencePoint referencePoint in Client.smethod_50().vmethod_12())
							{
								if (!Information.IsNothing(referencePoint))
								{
									System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), referencePoint.imethod_2(), referencePoint.imethod_0());
									if ((int)num <= point.Y && point.Y <= (int)num2 && (int)num3 <= point.X && point.X <= (int)num4)
									{
										list.Add(referencePoint);
									}
								}
							}
						}
						finally
						{
							List<ReferencePoint>.Enumerator enumerator;
							((IDisposable)enumerator).Dispose();
						}
						IEnumerable<ReferencePoint> enumerable = Enumerable.OrderBy<ReferencePoint, float>(list, new Func<ReferencePoint, float>(this.method_640));
						if (Enumerable.Count<ReferencePoint>(enumerable) > 0)
						{
							this.method_159(false);
							result = Enumerable.ElementAtOrDefault<ReferencePoint>(enumerable, 0);
						}
						else
						{
							result = null;
						}
					}
					catch (Exception ex)
					{
						ex.Data.Add("Error at 200198", ex.Message);
						GameGeneral.smethod_25(ref ex);
						if (Debugger.IsAttached)
						{
							Debugger.Break();
						}
						result = null;
					}
				}
			}
			return result;
		}

		// Token: 0x060063F7 RID: 25591 RVA: 0x00378888 File Offset: 0x00376A88
		private Waypoint method_232()
		{
			List<Waypoint> list = new List<Waypoint>();
			Waypoint result;
			if (Information.IsNothing(Client.smethod_50()))
			{
				result = null;
			}
			else
			{
				List<ActiveUnit> list2 = new List<ActiveUnit>();
				list2.AddRange(Client.smethod_50().activeUnit_0);
				if (Information.IsNothing(list2))
				{
					result = null;
				}
				else if (Information.IsNothing(Client.smethod_54()) && Class570.class280_0.method_34() == Class279.Class280.Enum76.const_2 && Class570.class280_0.method_36() == Class279.Class280.Enum77.const_4)
				{
					result = null;
				}
				else if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_2 && Information.IsNothing(((Weapon)Client.smethod_54()).method_179()))
				{
					result = null;
				}
				else
				{
					short num = (short)(this.point_2.Y - 4);
					short num2 = (short)(this.point_2.Y + 4);
					short num3 = (short)(this.point_2.X - 4);
					short num4 = (short)(this.point_2.X + 4);
					short num5 = (short)(this.point_2.Y - 8);
					short num6 = (short)(this.point_2.Y + 8);
					short num7 = (short)(this.point_2.X - 8);
					short num8 = (short)(this.point_2.X + 8);
					try
					{
						if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && Client.smethod_54().vmethod_7(false) == Client.smethod_50())
						{
							ActiveUnit activeUnit = (ActiveUnit)Client.smethod_54();
							List<Waypoint> list3 = new List<Waypoint>();
							if (Information.IsNothing(activeUnit.vmethod_85().method_4()))
							{
								return null;
							}
							list3.AddRange(activeUnit.vmethod_85().method_4());
							try
							{
								foreach (Waypoint waypoint in list3)
								{
									if (waypoint.waypointType_0 != Waypoint.WaypointType.PathfindingPoint)
									{
										System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), waypoint.imethod_2(), waypoint.imethod_0());
										if ((int)num <= point.Y && point.Y <= (int)num2 && (int)num3 <= point.X && point.X <= (int)num4)
										{
											Class285.Enum87 enum87_ = Client.smethod_52().enum87_0;
											if (enum87_ != Class285.Enum87.const_0)
											{
												if (enum87_ != Class285.Enum87.const_1)
												{
													continue;
												}
												list.Add(waypoint);
												if ((waypoint.waypointType_0 != Waypoint.WaypointType.Target && waypoint.waypointType_0 != Waypoint.WaypointType.WeaponTarget) || waypoint.enum105_0 != Mission.Enum105.const_2)
												{
													continue;
												}
												if (!Information.IsNothing(waypoint.list_9))
												{
													try
													{
														foreach (Mission.Class289 @class in waypoint.list_9)
														{
															if (!Information.IsNothing(@class.waypoint_0) && Enumerable.Count<Waypoint>(@class.waypoint_0) > 0)
															{
																int num9 = Enumerable.Count<Waypoint>(@class.waypoint_0);
																int num10 = num9 - 1;
																this.int_7 = 1;
																while (this.int_7 <= num10)
																{
																	Waypoint waypoint2 = @class.waypoint_0[this.int_7];
																	point = Class2572.smethod_0(this.vmethod_796(), waypoint2.imethod_2(), waypoint2.imethod_0());
																	if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																	{
																		list.Add(waypoint2);
																	}
																	this.int_7++;
																}
															}
														}
													}
													finally
													{
														List<Mission.Class289>.Enumerator enumerator2;
														((IDisposable)enumerator2).Dispose();
													}
												}
												if (!Information.IsNothing(waypoint.list_10))
												{
													try
													{
														foreach (Mission.Class289 class2 in waypoint.list_10)
														{
															if (!Information.IsNothing(class2.waypoint_0) && Enumerable.Count<Waypoint>(class2.waypoint_0) > 0)
															{
																int num11 = Enumerable.Count<Waypoint>(class2.waypoint_0);
																int num12 = num11 - 1;
																this.int_7 = 1;
																while (this.int_7 <= num12)
																{
																	Waypoint waypoint3 = class2.waypoint_0[this.int_7];
																	point = Class2572.smethod_0(this.vmethod_796(), waypoint3.imethod_2(), waypoint3.imethod_0());
																	if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																	{
																		list.Add(waypoint3);
																	}
																	this.int_7++;
																}
															}
														}
													}
													finally
													{
														List<Mission.Class289>.Enumerator enumerator3;
														((IDisposable)enumerator3).Dispose();
													}
												}
												if (!Information.IsNothing(waypoint.list_11))
												{
													try
													{
														foreach (Mission.Class289 class3 in waypoint.list_11)
														{
															if (!Information.IsNothing(class3.waypoint_0) && Enumerable.Count<Waypoint>(class3.waypoint_0) > 0)
															{
																int num13 = Enumerable.Count<Waypoint>(class3.waypoint_0);
																int num14 = num13 - 1;
																this.int_7 = 1;
																while (this.int_7 <= num14)
																{
																	Waypoint waypoint4 = class3.waypoint_0[this.int_7];
																	point = Class2572.smethod_0(this.vmethod_796(), waypoint4.imethod_2(), waypoint4.imethod_0());
																	if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																	{
																		list.Add(waypoint4);
																	}
																	this.int_7++;
																}
															}
														}
													}
													finally
													{
														List<Mission.Class289>.Enumerator enumerator4;
														((IDisposable)enumerator4).Dispose();
													}
												}
												if (!Information.IsNothing(waypoint.list_12))
												{
													try
													{
														foreach (Mission.Class289 class4 in waypoint.list_12)
														{
															if (!Information.IsNothing(class4.waypoint_0) && Enumerable.Count<Waypoint>(class4.waypoint_0) > 0)
															{
																int num15 = Enumerable.Count<Waypoint>(class4.waypoint_0);
																int num16 = num15 - 1;
																this.int_7 = 1;
																while (this.int_7 <= num16)
																{
																	Waypoint waypoint5 = class4.waypoint_0[this.int_7];
																	point = Class2572.smethod_0(this.vmethod_796(), waypoint5.imethod_2(), waypoint5.imethod_0());
																	if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																	{
																		list.Add(waypoint5);
																	}
																	this.int_7++;
																}
															}
														}
													}
													finally
													{
														List<Mission.Class289>.Enumerator enumerator5;
														((IDisposable)enumerator5).Dispose();
													}
												}
												if (!Information.IsNothing(waypoint.list_13))
												{
													try
													{
														foreach (Mission.Class289 class5 in waypoint.list_13)
														{
															if (!Information.IsNothing(class5.waypoint_0) && Enumerable.Count<Waypoint>(class5.waypoint_0) > 0)
															{
																int num17 = Enumerable.Count<Waypoint>(class5.waypoint_0);
																int num18 = num17 - 1;
																this.int_7 = 1;
																while (this.int_7 <= num18)
																{
																	Waypoint waypoint6 = class5.waypoint_0[this.int_7];
																	point = Class2572.smethod_0(this.vmethod_796(), waypoint6.imethod_2(), waypoint6.imethod_0());
																	if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																	{
																		list.Add(waypoint6);
																	}
																	this.int_7++;
																}
															}
														}
													}
													finally
													{
														List<Mission.Class289>.Enumerator enumerator6;
														((IDisposable)enumerator6).Dispose();
													}
												}
												if (Information.IsNothing(waypoint.list_14))
												{
													continue;
												}
												try
												{
													foreach (Mission.Class289 class6 in waypoint.list_14)
													{
														if (!Information.IsNothing(class6.waypoint_0) && Enumerable.Count<Waypoint>(class6.waypoint_0) > 0)
														{
															int num19 = Enumerable.Count<Waypoint>(class6.waypoint_0);
															int num20 = num19 - 1;
															this.int_7 = 1;
															while (this.int_7 <= num20)
															{
																Waypoint waypoint7 = class6.waypoint_0[this.int_7];
																point = Class2572.smethod_0(this.vmethod_796(), waypoint7.imethod_2(), waypoint7.imethod_0());
																if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																{
																	list.Add(waypoint7);
																}
																this.int_7++;
															}
														}
													}
													continue;
												}
												finally
												{
													List<Mission.Class289>.Enumerator enumerator7;
													((IDisposable)enumerator7).Dispose();
												}
											}
											if (!activeUnit.method_120())
											{
												list.Add(waypoint);
												if ((waypoint.waypointType_0 == Waypoint.WaypointType.Target || waypoint.waypointType_0 == Waypoint.WaypointType.WeaponTarget) && waypoint.enum105_0 == Mission.Enum105.const_2)
												{
													if (!Information.IsNothing(waypoint.list_9))
													{
														try
														{
															foreach (Mission.Class289 class7 in waypoint.list_9)
															{
																if (!Information.IsNothing(class7.waypoint_0) && Enumerable.Count<Waypoint>(class7.waypoint_0) > 0)
																{
																	int num21 = Enumerable.Count<Waypoint>(class7.waypoint_0);
																	int num22 = num21 - 1;
																	this.int_7 = 1;
																	while (this.int_7 <= num22)
																	{
																		Waypoint waypoint8 = class7.waypoint_0[this.int_7];
																		point = Class2572.smethod_0(this.vmethod_796(), waypoint8.imethod_2(), waypoint8.imethod_0());
																		if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																		{
																			list.Add(waypoint8);
																		}
																		this.int_7++;
																	}
																}
															}
														}
														finally
														{
															List<Mission.Class289>.Enumerator enumerator8;
															((IDisposable)enumerator8).Dispose();
														}
													}
													if (!Information.IsNothing(waypoint.list_10))
													{
														try
														{
															foreach (Mission.Class289 class8 in waypoint.list_10)
															{
																if (!Information.IsNothing(class8.waypoint_0) && Enumerable.Count<Waypoint>(class8.waypoint_0) > 0)
																{
																	int num23 = Enumerable.Count<Waypoint>(class8.waypoint_0);
																	int num24 = num23 - 1;
																	this.int_7 = 1;
																	while (this.int_7 <= num24)
																	{
																		Waypoint waypoint9 = class8.waypoint_0[this.int_7];
																		point = Class2572.smethod_0(this.vmethod_796(), waypoint9.imethod_2(), waypoint9.imethod_0());
																		if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																		{
																			list.Add(waypoint9);
																		}
																		this.int_7++;
																	}
																}
															}
														}
														finally
														{
															List<Mission.Class289>.Enumerator enumerator9;
															((IDisposable)enumerator9).Dispose();
														}
													}
													if (!Information.IsNothing(waypoint.list_11))
													{
														try
														{
															foreach (Mission.Class289 class9 in waypoint.list_11)
															{
																if (!Information.IsNothing(class9.waypoint_0) && Enumerable.Count<Waypoint>(class9.waypoint_0) > 0)
																{
																	int num25 = Enumerable.Count<Waypoint>(class9.waypoint_0);
																	int num26 = num25 - 1;
																	this.int_7 = 1;
																	while (this.int_7 <= num26)
																	{
																		Waypoint waypoint10 = class9.waypoint_0[this.int_7];
																		point = Class2572.smethod_0(this.vmethod_796(), waypoint10.imethod_2(), waypoint10.imethod_0());
																		if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																		{
																			list.Add(waypoint10);
																		}
																		this.int_7++;
																	}
																}
															}
														}
														finally
														{
															List<Mission.Class289>.Enumerator enumerator10;
															((IDisposable)enumerator10).Dispose();
														}
													}
													if (!Information.IsNothing(waypoint.list_12))
													{
														try
														{
															foreach (Mission.Class289 class10 in waypoint.list_12)
															{
																if (!Information.IsNothing(class10.waypoint_0) && Enumerable.Count<Waypoint>(class10.waypoint_0) > 0)
																{
																	int num27 = Enumerable.Count<Waypoint>(class10.waypoint_0);
																	int num28 = num27 - 1;
																	this.int_7 = 1;
																	while (this.int_7 <= num28)
																	{
																		Waypoint waypoint11 = class10.waypoint_0[this.int_7];
																		point = Class2572.smethod_0(this.vmethod_796(), waypoint11.imethod_2(), waypoint11.imethod_0());
																		if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																		{
																			list.Add(waypoint11);
																		}
																		this.int_7++;
																	}
																}
															}
														}
														finally
														{
															List<Mission.Class289>.Enumerator enumerator11;
															((IDisposable)enumerator11).Dispose();
														}
													}
													if (!Information.IsNothing(waypoint.list_13))
													{
														try
														{
															foreach (Mission.Class289 class11 in waypoint.list_13)
															{
																if (!Information.IsNothing(class11.waypoint_0) && Enumerable.Count<Waypoint>(class11.waypoint_0) > 0)
																{
																	int num29 = Enumerable.Count<Waypoint>(class11.waypoint_0);
																	int num30 = num29 - 1;
																	this.int_7 = 1;
																	while (this.int_7 <= num30)
																	{
																		Waypoint waypoint12 = class11.waypoint_0[this.int_7];
																		point = Class2572.smethod_0(this.vmethod_796(), waypoint12.imethod_2(), waypoint12.imethod_0());
																		if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																		{
																			list.Add(waypoint12);
																		}
																		this.int_7++;
																	}
																}
															}
														}
														finally
														{
															List<Mission.Class289>.Enumerator enumerator12;
															((IDisposable)enumerator12).Dispose();
														}
													}
													if (!Information.IsNothing(waypoint.list_14))
													{
														try
														{
															foreach (Mission.Class289 class12 in waypoint.list_14)
															{
																if (!Information.IsNothing(class12.waypoint_0) && Enumerable.Count<Waypoint>(class12.waypoint_0) > 0)
																{
																	int num31 = Enumerable.Count<Waypoint>(class12.waypoint_0);
																	int num32 = num31 - 1;
																	this.int_7 = 1;
																	while (this.int_7 <= num32)
																	{
																		Waypoint waypoint13 = class12.waypoint_0[this.int_7];
																		point = Class2572.smethod_0(this.vmethod_796(), waypoint13.imethod_2(), waypoint13.imethod_0());
																		if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
																		{
																			list.Add(waypoint13);
																		}
																		this.int_7++;
																	}
																}
															}
														}
														finally
														{
															List<Mission.Class289>.Enumerator enumerator13;
															((IDisposable)enumerator13).Dispose();
														}
													}
												}
											}
										}
									}
								}
							}
							finally
							{
								List<Waypoint>.Enumerator enumerator;
								((IDisposable)enumerator).Dispose();
							}
						}
						if (this.list_59.Count > 0)
						{
							int count = this.list_59.Count;
							int num33 = count - 1;
							this.int_6 = num33;
							while (this.int_6 >= 0)
							{
								Waypoint waypoint14 = this.list_59[this.int_6];
								if (!list.Contains(waypoint14))
								{
									System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), waypoint14.imethod_2(), waypoint14.imethod_0());
									if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
									{
										list.Add(waypoint14);
									}
									if ((waypoint14.waypointType_0 == Waypoint.WaypointType.Target || waypoint14.waypointType_0 == Waypoint.WaypointType.WeaponTarget) && waypoint14.enum105_0 == Mission.Enum105.const_2)
									{
										if (!Information.IsNothing(waypoint14.list_9))
										{
											try
											{
												foreach (Mission.Class289 class13 in waypoint14.list_9)
												{
													if (!Information.IsNothing(class13.waypoint_0) && Enumerable.Count<Waypoint>(class13.waypoint_0) > 0)
													{
														int num34 = Enumerable.Count<Waypoint>(class13.waypoint_0);
														int num35 = num34 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num35)
														{
															Waypoint waypoint15 = class13.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint15.imethod_2(), waypoint15.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint15);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator14;
												((IDisposable)enumerator14).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint14.list_10))
										{
											try
											{
												foreach (Mission.Class289 class14 in waypoint14.list_10)
												{
													if (!Information.IsNothing(class14.waypoint_0) && Enumerable.Count<Waypoint>(class14.waypoint_0) > 0)
													{
														int num36 = Enumerable.Count<Waypoint>(class14.waypoint_0);
														int num37 = num36 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num37)
														{
															Waypoint waypoint16 = class14.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint16.imethod_2(), waypoint16.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint16);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator15;
												((IDisposable)enumerator15).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint14.list_11))
										{
											try
											{
												foreach (Mission.Class289 class15 in waypoint14.list_11)
												{
													if (!Information.IsNothing(class15.waypoint_0) && Enumerable.Count<Waypoint>(class15.waypoint_0) > 0)
													{
														int num38 = Enumerable.Count<Waypoint>(class15.waypoint_0);
														int num39 = num38 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num39)
														{
															Waypoint waypoint17 = class15.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint17.imethod_2(), waypoint17.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint17);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator16;
												((IDisposable)enumerator16).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint14.list_12))
										{
											try
											{
												foreach (Mission.Class289 class16 in waypoint14.list_12)
												{
													if (!Information.IsNothing(class16.waypoint_0) && Enumerable.Count<Waypoint>(class16.waypoint_0) > 0)
													{
														int num40 = Enumerable.Count<Waypoint>(class16.waypoint_0);
														int num41 = num40 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num41)
														{
															Waypoint waypoint18 = class16.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint18.imethod_2(), waypoint18.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint18);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator17;
												((IDisposable)enumerator17).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint14.list_13))
										{
											try
											{
												foreach (Mission.Class289 class17 in waypoint14.list_13)
												{
													if (!Information.IsNothing(class17.waypoint_0) && Enumerable.Count<Waypoint>(class17.waypoint_0) > 0)
													{
														int num42 = Enumerable.Count<Waypoint>(class17.waypoint_0);
														int num43 = num42 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num43)
														{
															Waypoint waypoint19 = class17.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint19.imethod_2(), waypoint19.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint19);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator18;
												((IDisposable)enumerator18).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint14.list_14))
										{
											try
											{
												foreach (Mission.Class289 class18 in waypoint14.list_14)
												{
													if (!Information.IsNothing(class18.waypoint_0) && Enumerable.Count<Waypoint>(class18.waypoint_0) > 0)
													{
														int num44 = Enumerable.Count<Waypoint>(class18.waypoint_0);
														int num45 = num44 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num45)
														{
															Waypoint waypoint20 = class18.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint20.imethod_2(), waypoint20.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint20);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator19;
												((IDisposable)enumerator19).Dispose();
											}
										}
									}
									if (waypoint14.enum83_0 == Waypoint.Enum83.const_2)
									{
										if (!Information.IsNothing(waypoint14.waypoint_0))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint14.waypoint_0.imethod_2(), waypoint14.waypoint_0.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint14.waypoint_0);
											}
										}
										if (!Information.IsNothing(waypoint14.waypoint_1))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint14.waypoint_1.imethod_2(), waypoint14.waypoint_1.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint14.waypoint_1);
											}
										}
										if (!Information.IsNothing(waypoint14.waypoint_2))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint14.waypoint_2.imethod_2(), waypoint14.waypoint_2.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint14.waypoint_2);
											}
										}
										if (!Information.IsNothing(waypoint14.waypoint_3))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint14.waypoint_3.imethod_2(), waypoint14.waypoint_3.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint14.waypoint_3);
											}
										}
										if (!Information.IsNothing(waypoint14.waypoint_4))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint14.waypoint_4.imethod_2(), waypoint14.waypoint_4.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint14.waypoint_4);
											}
										}
									}
								}
								this.int_6 += -1;
							}
						}
						if (this.list_60.Count > 0)
						{
							int count2 = this.list_60.Count;
							int num46 = count2 - 1;
							this.int_6 = num46;
							while (this.int_6 >= 0)
							{
								Waypoint waypoint21 = this.list_60[this.int_6];
								if (!list.Contains(waypoint21))
								{
									System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), waypoint21.imethod_2(), waypoint21.imethod_0());
									if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
									{
										list.Add(waypoint21);
									}
									if ((waypoint21.waypointType_0 == Waypoint.WaypointType.Target || waypoint21.waypointType_0 == Waypoint.WaypointType.WeaponTarget) && waypoint21.enum105_0 == Mission.Enum105.const_2)
									{
										if (!Information.IsNothing(waypoint21.list_9))
										{
											try
											{
												foreach (Mission.Class289 class19 in waypoint21.list_9)
												{
													if (!Information.IsNothing(class19.waypoint_0) && Enumerable.Count<Waypoint>(class19.waypoint_0) > 1)
													{
														int num47 = Enumerable.Count<Waypoint>(class19.waypoint_0);
														int num48 = num47 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num48)
														{
															Waypoint waypoint22 = class19.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint22.imethod_2(), waypoint22.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint22);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator20;
												((IDisposable)enumerator20).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint21.list_10))
										{
											try
											{
												foreach (Mission.Class289 class20 in waypoint21.list_10)
												{
													if (!Information.IsNothing(class20.waypoint_0) && Enumerable.Count<Waypoint>(class20.waypoint_0) > 0)
													{
														int num49 = Enumerable.Count<Waypoint>(class20.waypoint_0);
														int num50 = num49 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num50)
														{
															Waypoint waypoint23 = class20.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint23.imethod_2(), waypoint23.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint23);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator21;
												((IDisposable)enumerator21).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint21.list_11))
										{
											try
											{
												foreach (Mission.Class289 class21 in waypoint21.list_11)
												{
													if (!Information.IsNothing(class21.waypoint_0) && Enumerable.Count<Waypoint>(class21.waypoint_0) > 0)
													{
														int num51 = Enumerable.Count<Waypoint>(class21.waypoint_0);
														int num52 = num51 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num52)
														{
															Waypoint waypoint24 = class21.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint24.imethod_2(), waypoint24.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint24);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator22;
												((IDisposable)enumerator22).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint21.list_12))
										{
											try
											{
												foreach (Mission.Class289 class22 in waypoint21.list_12)
												{
													if (!Information.IsNothing(class22.waypoint_0) && Enumerable.Count<Waypoint>(class22.waypoint_0) > 0)
													{
														int num53 = Enumerable.Count<Waypoint>(class22.waypoint_0);
														int num54 = num53 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num54)
														{
															Waypoint waypoint25 = class22.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint25.imethod_2(), waypoint25.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint25);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator23;
												((IDisposable)enumerator23).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint21.list_13))
										{
											try
											{
												foreach (Mission.Class289 class23 in waypoint21.list_13)
												{
													if (!Information.IsNothing(class23.waypoint_0) && Enumerable.Count<Waypoint>(class23.waypoint_0) > 0)
													{
														int num55 = Enumerable.Count<Waypoint>(class23.waypoint_0);
														int num56 = num55 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num56)
														{
															Waypoint waypoint26 = class23.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint26.imethod_2(), waypoint26.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint26);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator24;
												((IDisposable)enumerator24).Dispose();
											}
										}
										if (!Information.IsNothing(waypoint21.list_14))
										{
											try
											{
												foreach (Mission.Class289 class24 in waypoint21.list_14)
												{
													if (!Information.IsNothing(class24.waypoint_0) && Enumerable.Count<Waypoint>(class24.waypoint_0) > 0)
													{
														int num57 = Enumerable.Count<Waypoint>(class24.waypoint_0);
														int num58 = num57 - 1;
														this.int_7 = 1;
														while (this.int_7 <= num58)
														{
															Waypoint waypoint27 = class24.waypoint_0[this.int_7];
															point = Class2572.smethod_0(this.vmethod_796(), waypoint27.imethod_2(), waypoint27.imethod_0());
															if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
															{
																list.Add(waypoint27);
															}
															this.int_7++;
														}
													}
												}
											}
											finally
											{
												List<Mission.Class289>.Enumerator enumerator25;
												((IDisposable)enumerator25).Dispose();
											}
										}
									}
									if (waypoint21.enum83_0 == Waypoint.Enum83.const_2)
									{
										if (!Information.IsNothing(waypoint21.waypoint_0))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint21.waypoint_0.imethod_2(), waypoint21.waypoint_0.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint21.waypoint_0);
											}
										}
										if (!Information.IsNothing(waypoint21.waypoint_1))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint21.waypoint_1.imethod_2(), waypoint21.waypoint_1.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint21.waypoint_1);
											}
										}
										if (!Information.IsNothing(waypoint21.waypoint_2))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint21.waypoint_2.imethod_2(), waypoint21.waypoint_2.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint21.waypoint_2);
											}
										}
										if (!Information.IsNothing(waypoint21.waypoint_3))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint21.waypoint_3.imethod_2(), waypoint21.waypoint_3.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint21.waypoint_3);
											}
										}
										if (!Information.IsNothing(waypoint21.waypoint_4))
										{
											point = Class2572.smethod_0(this.vmethod_796(), waypoint21.waypoint_4.imethod_2(), waypoint21.waypoint_4.imethod_0());
											if ((int)num5 <= point.Y && point.Y <= (int)num6 && (int)num7 <= point.X && point.X <= (int)num8)
											{
												list.Add(waypoint21.waypoint_4);
											}
										}
									}
								}
								this.int_6 += -1;
							}
						}
						IEnumerable<Waypoint> enumerable = Enumerable.OrderBy<Waypoint, double>(list, new Func<Waypoint, double>(this.method_641));
						if (Enumerable.Count<Waypoint>(enumerable) > 0)
						{
							this.method_159(false);
							result = Enumerable.ElementAtOrDefault<Waypoint>(enumerable, 0);
						}
						else
						{
							result = null;
						}
					}
					catch (Exception ex)
					{
						ex.Data.Add("Error at 200199", ex.Message);
						GameGeneral.smethod_25(ref ex);
						if (Debugger.IsAttached)
						{
							Debugger.Break();
						}
						result = null;
					}
				}
			}
			return result;
		}

		// Token: 0x060063F8 RID: 25592 RVA: 0x0037AC38 File Offset: 0x00378E38
		private ReferencePoint method_233()
		{
			HashSet<ReferencePoint> hashSet = new HashSet<ReferencePoint>();
			ReferencePoint result;
			if (Client.smethod_50() == null)
			{
				result = null;
			}
			else
			{
				short num = (short)(this.point_2.Y - 4);
				short num2 = (short)(this.point_2.Y + 4);
				short num3 = (short)(this.point_2.X - 4);
				short num4 = (short)(this.point_2.X + 4);
				List<ReferencePoint> list = new List<ReferencePoint>();
				list.AddRange(Client.smethod_50().vmethod_12());
				try
				{
					foreach (ReferencePoint referencePoint in list)
					{
						if (!Information.IsNothing(referencePoint))
						{
							System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), referencePoint.imethod_2(), referencePoint.imethod_0());
							if ((int)num <= point.Y && point.Y <= (int)num2 && (int)num3 <= point.X && point.X <= (int)num4)
							{
								hashSet.Add(referencePoint);
							}
						}
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				result = Enumerable.ElementAtOrDefault<ReferencePoint>(Enumerable.OrderBy<ReferencePoint, float>(hashSet, new Func<ReferencePoint, float>(this.method_642)), 0);
			}
			return result;
		}

		// Token: 0x060063F9 RID: 25593 RVA: 0x0037AD60 File Offset: 0x00378F60
		public void method_234()
		{
			string text = Conversions.ToString(Interaction.IIf(this.bool_11, "(Tracking)", ""));
			string text2 = Client.smethod_46().method_31().Hour.ToString("D2");
			string text3 = Client.smethod_46().method_31().Minute.ToString("D2");
			string text4 = Client.smethod_46().method_31().Second.ToString("D2");
			string text5 = "";
			TimeSpan timeSpan = Client.smethod_46().method_27().Add(Client.smethod_46().method_29()) - Client.smethod_46().method_31();
			if (timeSpan.TotalSeconds > 0.0)
			{
				text5 = Misc.smethod_11((long)Math.Round(timeSpan.TotalSeconds), Aircraft_AirOps.Enum44.const_0, false, false) + " to go - ";
			}
			string text6 = "";
			if (!double.IsNaN(this.method_160(true).imethod_0()) && !double.IsNaN(this.method_160(true).imethod_2()))
			{
				text6 = string.Concat(new string[]
				{
					" - Local: ",
					Misc.smethod_10(Client.smethod_46().method_31(), this.method_160(true).imethod_0(), Client.smethod_46().method_33(), Client.smethod_46().method_35(), Client.smethod_46().method_37()).Hour.ToString("D2"),
					":",
					text3,
					":",
					text4
				});
			}
			string str = string.Concat(new string[]
			{
				"Time: ",
				Client.smethod_46().method_31().ToLongDateString(),
				" - Zulu: ",
				text2,
				":",
				text3,
				":",
				text4,
				text6,
				" - ",
				text5,
				" Camera Alt: ",
				Conversions.ToString((long)this.method_152()),
				"m ",
				text
			});
			if (Class570.class280_0.method_4())
			{
				this.stringBuilder_3.Clear();
				this.stringBuilder_3.Append(" - AU Count: ").Append(Client.int_0.ToString());
				this.stringBuilder_3.Append(" - Pulse Time: ").Append(Client.float_0.ToString()).Append("ms");
				this.stringBuilder_3.Append(" - Pathfinder Queue: ").Append(Client.double_0.ToString());
				if (Client.double_0 > 0.0)
				{
					this.stringBuilder_3.Append(" Current: ").Append(Client.string_1);
				}
				str += this.stringBuilder_3.ToString();
				if (Enumerable.Count<IEventExporter>(Enumerable.Where<IEventExporter>(Class428.ieventExporter_0, (MainForm._Closure$__.$I2535-0 == null) ? (MainForm._Closure$__.$I2535-0 = new Func<IEventExporter, bool>(MainForm._Closure$__.$I.method_41)) : MainForm._Closure$__.$I2535-0)) > 0)
				{
					this.stringBuilder_4.Clear();
					this.stringBuilder_4.Append("Event Queue Length:");
					foreach (IEventExporter eventExporter in Class428.ieventExporter_0)
					{
						if (eventExporter.imethod_3() != IEventExporter.Enum142.const_9)
						{
							this.stringBuilder_4.Append(" ").Append(eventExporter.Name).Append(":").Append(eventExporter.imethod_0());
						}
					}
					this.string_1 = this.stringBuilder_4.ToString();
					this.bool_1 = true;
				}
				else
				{
					this.bool_1 = false;
				}
			}
			this.string_0 = str;
			this.bool_0 = true;
		}

		// Token: 0x060063FA RID: 25594 RVA: 0x0037B13C File Offset: 0x0037933C
		public void method_235()
		{
			try
			{
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 101341", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x060063FB RID: 25595 RVA: 0x0037B194 File Offset: 0x00379394
		public bool method_236(Unit unit_0)
		{
			return this.list_53.Contains(unit_0) && this.method_237(unit_0.vmethod_30(null), unit_0.vmethod_28(null));
		}

		// Token: 0x060063FC RID: 25596 RVA: 0x0037B1DC File Offset: 0x003793DC
		public bool method_237(double double_2, double double_3)
		{
			System.Drawing.Point point = default(System.Drawing.Point);
			point = Class2572.smethod_0(this.vmethod_796(), double_2, double_3);
			return this.rectangle_1.Contains(point.X, point.Y);
		}

		// Token: 0x060063FD RID: 25597 RVA: 0x0037B218 File Offset: 0x00379418
		private void method_238()
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
			{
				Side side_ = Client.smethod_50();
				Unit unit_ = Client.smethod_54();
				bool flag = false;
				string text = null;
				if (GameGeneral.smethod_45(side_, unit_, flag, ref text, Client.smethod_52().method_59()) && (Information.IsNothing(Client.damageControlWindow_0) || !Client.damageControlWindow_0.Visible) && Client.smethod_54().vmethod_43())
				{
					Client.damageControlWindow_0 = new DamageControlWindow();
					Client.damageControlWindow_0.activeUnit_0 = (ActiveUnit)Client.smethod_54();
					Client.damageControlWindow_0.class279_0 = Client.smethod_0();
					Client.damageControlWindow_0.Show();
				}
			}
		}

		// Token: 0x060063FE RID: 25598 RVA: 0x0037B2BC File Offset: 0x003794BC
		private void method_239()
		{
			try
			{
				foreach (Unit unit in Client.smethod_50().method_56())
				{
					if (unit.vmethod_7(false) == Client.smethod_50())
					{
						ActiveUnit activeUnit = (ActiveUnit)unit;
						if (activeUnit.bool_3)
						{
							Aircraft aircraft = (Aircraft)activeUnit;
							activeUnit.vmethod_111(aircraft.vmethod_61(null, aircraft.doctrine_0.method_206(aircraft.scenario_0, false, true, false, false)));
							activeUnit.vmethod_113(aircraft.method_161().vmethod_5());
							activeUnit.vmethod_92().vmethod_7(true, ActiveUnit._ActiveUnitStatus.RTB_Manual, false, ActiveUnit._ActiveUnitStatus.Unassigned, true, true);
							string str = "";
							if (Operators.CompareString(activeUnit.Name, activeUnit.string_2, false) != 0)
							{
								str = " (" + activeUnit.string_2 + ")";
							}
							string str2 = "";
							ActiveUnit activeUnit2 = ((Aircraft_AirOps)activeUnit.vmethod_92()).method_21();
							if (!Information.IsNothing(activeUnit2))
							{
								str2 = " (" + activeUnit2.Name + ")";
							}
							activeUnit.vmethod_85().vmethod_2();
							Client.smethod_46().method_59(activeUnit.Name + str + " Is returning to base" + str2, "Unit returning to base", LoggedMessage.MessageType.AirOps, 5, activeUnit.string_0, Client.smethod_50(), new Geopoint_Struct(activeUnit.vmethod_28(null), activeUnit.vmethod_30(null)));
						}
						else if (activeUnit.bool_6 || activeUnit.bool_5)
						{
							string str3 = "";
							ActiveUnit activeUnit3 = activeUnit.vmethod_93().method_2();
							if (!Information.IsNothing(activeUnit3))
							{
								str3 = " (" + activeUnit3.Name + ")";
							}
							activeUnit.vmethod_93().method_5(true, ActiveUnit._ActiveUnitStatus.RTB_Manual, false, ActiveUnit._ActiveUnitStatus.Unassigned, true, true);
							activeUnit.vmethod_85().vmethod_2();
							Client.smethod_46().method_59(activeUnit.Name + " Is returning to docking unit" + str3, "Unit returning to mothership", LoggedMessage.MessageType.DockingOps, 5, activeUnit.string_0, Client.smethod_50(), new Geopoint_Struct(activeUnit.vmethod_28(null), activeUnit.vmethod_30(null)));
						}
						if (activeUnit.bool_1)
						{
							if (((Group)activeUnit).method_143() == Group.GroupType.AirGroup)
							{
								List<ActiveUnit> list = new List<ActiveUnit>();
								list.AddRange(((Group)activeUnit).vmethod_141().Values);
								try
								{
									foreach (ActiveUnit activeUnit4 in list)
									{
										activeUnit4.vmethod_111(((Aircraft)activeUnit4).vmethod_61(null, activeUnit4.doctrine_0.method_206(activeUnit4.scenario_0, false, true, false, false)));
										activeUnit4.vmethod_113(((Aircraft)activeUnit4).method_161().vmethod_5());
										string str4 = "";
										if (Operators.CompareString(activeUnit4.Name, activeUnit4.string_2, false) != 0)
										{
											str4 = " (" + activeUnit4.string_2 + ")";
										}
										string str5 = "";
										ActiveUnit activeUnit5 = ((Aircraft_AirOps)activeUnit4.vmethod_92()).method_21();
										if (!Information.IsNothing(activeUnit5))
										{
											str5 = " (" + activeUnit5.Name + ") ";
										}
										activeUnit4.vmethod_92().vmethod_7(true, ActiveUnit._ActiveUnitStatus.RTB_Manual, false, ActiveUnit._ActiveUnitStatus.Unassigned, false, true);
										activeUnit4.vmethod_85().vmethod_2();
										Client.smethod_46().method_59(activeUnit4.Name + str4 + " Is returning to base" + str5, "Unit returning to base", LoggedMessage.MessageType.AirOps, 5, activeUnit4.string_0, Client.smethod_50(), new Geopoint_Struct(activeUnit4.vmethod_28(null), activeUnit4.vmethod_30(null)));
									}
									continue;
								}
								finally
								{
									List<ActiveUnit>.Enumerator enumerator2;
									((IDisposable)enumerator2).Dispose();
								}
							}
							if (((Group)activeUnit).method_143() == Group.GroupType.SurfaceGroup || ((Group)activeUnit).method_143() == Group.GroupType.SubGroup)
							{
								List<ActiveUnit> list2 = new List<ActiveUnit>();
								list2.AddRange(((Group)activeUnit).vmethod_141().Values);
								try
								{
									foreach (ActiveUnit activeUnit6 in list2)
									{
										if (activeUnit6.bool_6 || activeUnit6.bool_5)
										{
											activeUnit6.vmethod_93().method_5(true, ActiveUnit._ActiveUnitStatus.RTB_Manual, false, ActiveUnit._ActiveUnitStatus.Unassigned, true, true);
											string str6 = "";
											ActiveUnit activeUnit7 = activeUnit.vmethod_93().method_2();
											if (!Information.IsNothing(activeUnit7))
											{
												str6 = " (" + activeUnit7.Name + ") ";
											}
											activeUnit6.vmethod_85().vmethod_2();
											Client.smethod_46().method_59(activeUnit6.Name + " Is returning to docking unit" + str6, "Unit returning to mothership", LoggedMessage.MessageType.DockingOps, 5, activeUnit6.string_0, Client.smethod_50(), default(Geopoint_Struct));
										}
									}
								}
								finally
								{
									List<ActiveUnit>.Enumerator enumerator3;
									((IDisposable)enumerator3).Dispose();
								}
							}
						}
					}
				}
			}
			finally
			{
				IEnumerator<Unit> enumerator;
				if (enumerator != null)
				{
					enumerator.Dispose();
				}
			}
			Client.bool_1 = true;
		}

		// Token: 0x060063FF RID: 25599 RVA: 0x0003F18B File Offset: 0x0003D38B
		private void method_240(object sender, EventArgs e)
		{
			this.method_239();
		}

		// Token: 0x06006400 RID: 25600 RVA: 0x0003F193 File Offset: 0x0003D393
		private void method_241(object sender, EventArgs e)
		{
			this.method_242();
		}

		// Token: 0x06006401 RID: 25601 RVA: 0x0037B7FC File Offset: 0x003799FC
		private void method_242()
		{
			if (!Information.IsNothing(Client.smethod_54()) && (Information.IsNothing(Client.magazines_0) || !Client.magazines_0.Visible) && Client.smethod_54().bool_0)
			{
				if (Client.smethod_54().vmethod_43())
				{
					if (Information.IsNothing(((Class350)Client.smethod_54()).magazine_0))
					{
						DarkMessageBox.smethod_2("Selected unit has no magazines.", "No mags!", Enum11.const_0);
						return;
					}
					if (Client.smethod_0().method_1() == Class279.Enum67.const_2 || Enumerable.Count<Magazine>(((Class350)Client.smethod_54()).magazine_0) > 0)
					{
						Client.magazines_0 = new Magazines();
						Client.magazines_0.activeUnit_0 = (ActiveUnit)Client.smethod_54();
						Client.magazines_0.Show();
						return;
					}
					bool flag;
					if ((Client.smethod_54().bool_6 || Client.smethod_54().bool_8) && ((Class350)Client.smethod_54()).vmethod_51().Count > 0)
					{
						try
						{
							List<Mount>.Enumerator enumerator = ((Class350)Client.smethod_54()).vmethod_51().GetEnumerator();
							while (enumerator.MoveNext())
							{
								if (enumerator.Current.method_32().vmethod_10().Count > 0)
								{
									flag = true;
									break;
								}
							}
						}
						finally
						{
							List<Mount>.Enumerator enumerator;
							((IDisposable)enumerator).Dispose();
						}
					}
					if (flag)
					{
						Client.magazines_0 = new Magazines();
						Client.magazines_0.activeUnit_0 = (ActiveUnit)Client.smethod_54();
						Client.magazines_0.Show();
						return;
					}
					DarkMessageBox.smethod_2("Selected unit has no magazines.", "No mags!", Enum11.const_0);
					return;
				}
				else if (Client.smethod_54().bool_1)
				{
					if (Information.IsNothing(((Group)Client.smethod_54()).vmethod_117()))
					{
						DarkMessageBox.smethod_2("Selected unit has no magazines.", "No mags!", Enum11.const_0);
						return;
					}
					if (((Group)Client.smethod_54()).vmethod_117().Length > 0)
					{
						Client.magazines_0 = new Magazines();
						Client.magazines_0.activeUnit_0 = (ActiveUnit)Client.smethod_54();
						Client.magazines_0.Show();
						return;
					}
					DarkMessageBox.smethod_2("Selected group has no magazines.", "No mags!", Enum11.const_0);
				}
			}
		}

		// Token: 0x06006402 RID: 25602 RVA: 0x0003F19B File Offset: 0x0003D39B
		private void method_243(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString(1));
			Client.smethod_92();
		}

		// Token: 0x06006403 RID: 25603 RVA: 0x0003F1AD File Offset: 0x0003D3AD
		private void method_244(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString(1));
			Client.smethod_93();
		}

		// Token: 0x06006404 RID: 25604 RVA: 0x0003F1BF File Offset: 0x0003D3BF
		private void method_245(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString(1));
			Client.smethod_94();
		}

		// Token: 0x06006405 RID: 25605 RVA: 0x0003F1D1 File Offset: 0x0003D3D1
		private void method_246(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString(1));
			Client.smethod_95();
		}

		// Token: 0x06006406 RID: 25606 RVA: 0x0037BA18 File Offset: 0x00379C18
		private void method_247(object sender, EventArgs e)
		{
			try
			{
				if (Class570.class280_0.method_24() != Class279.Class280.Enum72.const_2 && (this.point_1.X != this.point_0.X || this.point_1.Y != this.point_0.Y) && !this.vmethod_68().IsBusy)
				{
					this.vmethod_68().RunWorkerAsync();
					this.point_1.X = this.point_0.X;
					this.point_1.Y = this.point_0.Y;
					this.method_249();
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200200", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
				GC.Collect();
			}
		}

		// Token: 0x06006407 RID: 25607 RVA: 0x0037BAFC File Offset: 0x00379CFC
		private void method_248(object sender, DoWorkEventArgs e)
		{
			Geopoint_Struct geopoint_Struct = Class2572.smethod_2(this.vmethod_796(), this.point_0.X, this.point_0.Y);
			if (geopoint_Struct.double_1 > 90.0 || geopoint_Struct.double_1 < -90.0 || geopoint_Struct.double_0 > 180.0 || geopoint_Struct.double_0 < -180.0)
			{
				this.string_6 = "";
				return;
			}
			int num = (int)Terrain.smethod_7(geopoint_Struct.double_1, geopoint_Struct.double_0, true);
			if (Class570.class280_0.method_12())
			{
				if (num > 0)
				{
					this.string_6 = " - Elevation: " + Conversions.ToString((int)Math.Round((double)((float)num * 3.28084f))) + "ft ";
				}
				else
				{
					this.string_6 = " - Depth: " + Conversions.ToString((int)Math.Round((double)((float)num * 3.28084f))) + "ft ";
				}
			}
			else if (num > 0)
			{
				this.string_6 = " - Elevation: " + Conversions.ToString(num) + "m ";
			}
			else
			{
				this.string_6 = " - Depth: " + Conversions.ToString(num) + "m ";
			}
			if (num < 0)
			{
				int num2;
				int num3;
				float num4;
				Class568.smethod_1(geopoint_Struct.double_1, geopoint_Struct.double_0, num, ref num2, ref num3, ref num4, true);
				if (Class570.class280_0.method_12())
				{
					this.string_7 = string.Concat(new string[]
					{
						"Layer: ",
						Conversions.ToString((int)Math.Round((double)((float)num2 * 3.28084f))),
						"ft to ",
						Conversions.ToString((int)Math.Round((double)((float)num3 * 3.28084f))),
						"ft - Strength: ",
						string.Format("{0:0.0}", num4, 2)
					});
				}
				else
				{
					this.string_7 = string.Concat(new string[]
					{
						"Layer: ",
						Conversions.ToString(num2),
						"m to ",
						Conversions.ToString(num3),
						"m - Strength: ",
						string.Format("{0:0.0}", num4, 2)
					});
				}
				string str;
				if (num < -200)
				{
					int num5 = (int)Math.Round((double)Class568.smethod_0(geopoint_Struct.double_1));
					str = string.Concat(new string[]
					{
						" - CZs at ",
						Conversions.ToString(num5),
						"-",
						Conversions.ToString(2 * num5),
						"-",
						Conversions.ToString(3 * num5),
						"-",
						Conversions.ToString(4 * num5),
						"nm "
					});
				}
				else
				{
					str = " - No CZs ";
				}
				ref string ptr = ref this.string_7;
				this.string_7 = ptr + str;
				this.string_8 = string.Empty;
				this.string_9 = string.Empty;
				return;
			}
			this.string_8 = "Slope: " + Conversions.ToString((int)Math.Round((double)(100f * Terrain.smethod_8(geopoint_Struct.double_1, geopoint_Struct.double_0, true)))) + "% ";
			this.string_9 = "";
			LandCover.LandCoverType landCoverType = LandCover.smethod_1(geopoint_Struct.double_1, geopoint_Struct.double_0);
			switch (landCoverType)
			{
			case LandCover.LandCoverType.Water:
				this.string_9 = "Land: Water ";
				break;
			case LandCover.LandCoverType.Evergreen_Needleleaf_forest:
				this.string_9 = "Land: Evergreen Needleleaf Forest ";
				break;
			case LandCover.LandCoverType.Evergreen_Broadleaf_forest:
				this.string_9 = "Land: Evergreen Broadleaf Forest ";
				break;
			case LandCover.LandCoverType.Deciduous_Needleleaf_forest:
				this.string_9 = "Land: Deciduous Needleleaf Forest ";
				break;
			case LandCover.LandCoverType.Deciduous_Broadleaf_forest:
				this.string_9 = "Land: Deciduous Broadleaf Forest ";
				break;
			case LandCover.LandCoverType.Mixed_forest:
				this.string_9 = "Land: Mixed Forest ";
				break;
			case LandCover.LandCoverType.Closed_shrublands:
				this.string_9 = "Land: Closed Shrublands ";
				break;
			case LandCover.LandCoverType.Open_shrublands:
				this.string_9 = "Land: Open Shrublands ";
				break;
			case LandCover.LandCoverType.Woody_savannas:
				this.string_9 = "Land: Woody Savannas ";
				break;
			case LandCover.LandCoverType.Savannas:
				this.string_9 = "Land: Savannas ";
				break;
			case LandCover.LandCoverType.Grasslands:
				this.string_9 = "Land: Grasslands ";
				break;
			case LandCover.LandCoverType.Permanent_wetlands:
				this.string_9 = "Land: Permanent Wetlands ";
				break;
			case LandCover.LandCoverType.Croplands:
				this.string_9 = "Land: Croplands ";
				break;
			case LandCover.LandCoverType.UrbanAndBuiltUp:
				this.string_9 = "Land: Urban / Built Up ";
				break;
			case LandCover.LandCoverType.CroplandNaturalVegetationMosaic:
				this.string_9 = "Land: Cropland / Natural Vegetation Mosaic ";
				break;
			case LandCover.LandCoverType.SnowAndIce:
				this.string_9 = "Land: Snow / Ice ";
				break;
			case LandCover.LandCoverType.BarrenOrSparselyVegetated:
				this.string_9 = "Land: Barren / Sparsely Vegetated ";
				break;
			default:
				if (landCoverType != LandCover.LandCoverType.Unclassified)
				{
					this.string_9 = "Land: " + LandCover.smethod_1(geopoint_Struct.double_1, geopoint_Struct.double_0).ToString() + " ";
				}
				else
				{
					this.string_9 = " ";
				}
				break;
			}
			this.string_7 = string.Empty;
		}

		// Token: 0x06006408 RID: 25608 RVA: 0x0037BFD4 File Offset: 0x0037A1D4
		private void method_249()
		{
			try
			{
				if (Information.IsNothing(this.vmethod_796()))
				{
					string text = "WorldWindow1 object not found! Error 200596";
					GameGeneral.smethod_26(ref text);
				}
				else
				{
					WorldWindow worldWindow = this.vmethod_796();
					ref System.Drawing.Point ptr = ref this.point_0;
					int x = this.point_0.X;
					ref System.Drawing.Point ptr2 = ref this.point_0;
					int y = this.point_0.Y;
					double num;
					double num2;
					Class2572.smethod_3(worldWindow, ref x, ref y, ref num, ref num2);
					ptr2.Y = y;
					ptr.X = x;
					if (!double.IsNaN(num) && !double.IsNaN(num2))
					{
						DateTime dateTime = Client.smethod_46().method_31();
						bool flag = Client.smethod_46().method_33();
						string text2 = Client.smethod_46().method_35();
						string text3 = Client.smethod_46().method_37();
						string text4 = Misc.smethod_10(dateTime, num, flag, text2, text3).ToString("HH:mm:ss");
						Weather.TTimeOfDayType ttimeOfDayType_ = Class418.smethod_1(Client.smethod_46(), dateTime.Year, dateTime.Month, dateTime.Day, dateTime.Hour, dateTime.Minute, dateTime.Second, true, num2, num, 0.0);
						string text5 = "(" + Class418.smethod_0(ttimeOfDayType_, dateTime, num, flag, text2, text3) + ")";
						switch (ttimeOfDayType_)
						{
						case Weather.TTimeOfDayType.const_0:
							text5 = "(Day)";
							break;
						case Weather.TTimeOfDayType.const_1:
							if (Misc.smethod_10(dateTime, num, flag, text2, text3).Hour < 12)
							{
								text5 = "(Dawn)";
							}
							else
							{
								text5 = "(Dusk)";
							}
							break;
						case Weather.TTimeOfDayType.const_2:
							text5 = "(Night)";
							break;
						}
						string text6 = "Weather: ";
						Weather.WeatherProfile weatherProfile = Weather.smethod_0(Client.smethod_46(), num2, num, 0);
						text6 = string.Concat(new string[]
						{
							text6,
							weatherProfile.method_5(),
							" - ",
							weatherProfile.method_2(),
							" - ",
							Conversions.ToString((int)weatherProfile.method_1(ttimeOfDayType_)),
							"°C - Wind/Sea ",
							Conversions.ToString(weatherProfile.int_0)
						});
						string str = "";
						if (!Information.IsNothing(Client.smethod_54()))
						{
							float num3 = Math2.smethod_15(Client.smethod_54().vmethod_30(null), Client.smethod_54().vmethod_28(null), num2, num);
							if (num3 < 1f)
							{
								str = " - " + Conversions.ToString((int)Math.Round((double)(num3 * 1852f))) + "m from sel";
							}
							else if (num3 < 10f)
							{
								str = " - " + string.Format("{0:0.00}", num3) + "nm from sel";
							}
							else
							{
								str = " - " + string.Format("{0:0}", num3) + "nm from sel";
							}
						}
						Class279.Class280.Enum72 @enum = Class570.class280_0.method_24();
						if (@enum > Class279.Class280.Enum72.const_1)
						{
							if (@enum != Class279.Class280.Enum72.const_2)
							{
							}
						}
						else
						{
							this.int_1 = this.point_0.X;
							this.int_2 = this.point_0.Y;
							this.string_2 = Misc.smethod_8(num2, num) + str + this.string_6 + " ";
							if (!string.IsNullOrEmpty(this.string_7))
							{
								this.string_3 = this.string_7 + " ";
							}
							else
							{
								this.string_3 = this.string_8 + " - " + this.string_9 + " ";
							}
							this.string_4 = string.Concat(new string[]
							{
								"Local time: ",
								text4,
								" ",
								text5,
								" "
							});
							this.string_5 = text6 + " ";
						}
					}
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200601", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06006409 RID: 25609 RVA: 0x0037C3D8 File Offset: 0x0037A5D8
		private void method_250(object sender, EventArgs e)
		{
			try
			{
				if (Client.smethod_46().UnhandledPopUpMessages.Count > 0)
				{
					this.method_251();
				}
				if (Client.bool_1 || Client.smethod_0().method_0() == Class279.Enum68.const_1)
				{
					this.method_203();
					Client.bool_1 = false;
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200201", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
				GC.Collect();
			}
		}

		// Token: 0x0600640A RID: 25610 RVA: 0x0037C46C File Offset: 0x0037A66C
		private void method_251()
		{
			while (Client.smethod_46().UnhandledPopUpMessages.Count > 0)
			{
				LoggedMessage loggedMessage = Client.smethod_46().UnhandledPopUpMessages.Dequeue();
				if (!Information.IsNothing(Client.smethod_50()) && loggedMessage.side_0 == Client.smethod_50())
				{
					NewMessageForm newMessageForm = null;
					Client.dictionary_5.TryGetValue(loggedMessage.messageType_0, out newMessageForm);
					if (Information.IsNothing(newMessageForm))
					{
						newMessageForm = new NewMessageForm();
						Client.dictionary_5.Add(loggedMessage.messageType_0, newMessageForm);
					}
					newMessageForm.vmethod_14().Add(loggedMessage);
				}
			}
			try
			{
				foreach (NewMessageForm newMessageForm2 in Client.dictionary_5.Values)
				{
					newMessageForm2.Show();
				}
			}
			finally
			{
				Dictionary<LoggedMessage.MessageType, NewMessageForm>.ValueCollection.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
		}

		// Token: 0x0600640B RID: 25611 RVA: 0x0003F1E3 File Offset: 0x0003D3E3
		private void method_252(object sender, EventArgs e)
		{
			this.method_491(true);
			StartGameMenuWindow.smethod_1();
		}

		// Token: 0x0600640C RID: 25612 RVA: 0x0003F1F1 File Offset: 0x0003D3F1
		private void method_253(object sender, EventArgs e)
		{
			if (Client.smethod_50().method_56().Count > 0)
			{
				Class2413.smethod_2().method_57().Show();
				return;
			}
			DarkMessageBox.smethod_2("Please select something in order to export it to a file.", "No unit/group selected!", Enum11.const_0);
		}

		// Token: 0x0600640D RID: 25613 RVA: 0x0003F226 File Offset: 0x0003D426
		private void method_254(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have a side selected before you can load a group", "No side selected!", Enum11.const_0);
				return;
			}
			Class2413.smethod_2().method_37().Show();
		}

		// Token: 0x0600640E RID: 25614 RVA: 0x0037C540 File Offset: 0x0037A740
		private void method_255(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have a side selected before you can edit its briefing", "No side selected!", Enum11.const_0);
				return;
			}
			try
			{
				Class2413.smethod_2().method_21().side_0 = Client.smethod_50();
				Class2413.smethod_2().method_21().Show();
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200202", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x0600640F RID: 25615 RVA: 0x0003F255 File Offset: 0x0003D455
		private void method_256(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString(1));
			Client.smethod_96();
		}

		// Token: 0x06006410 RID: 25616 RVA: 0x0003F17A File Offset: 0x0003D37A
		private void method_257(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_47().Show();
		}

		// Token: 0x06006411 RID: 25617 RVA: 0x0003F267 File Offset: 0x0003D467
		private void method_258(object sender, EventArgs e)
		{
			this.method_259();
		}

		// Token: 0x06006412 RID: 25618 RVA: 0x0037C5D8 File Offset: 0x0037A7D8
		public void method_259()
		{
			if (Information.IsNothing(Client.smethod_54()))
			{
				DarkMessageBox.smethod_2("No unit selected!", "", Enum11.const_0);
				return;
			}
			if (Client.smethod_54().bool_0 && !Information.IsNothing(((ActiveUnit)Client.smethod_54()).vmethod_99()))
			{
				Class2413.smethod_2().method_19().activeUnit_0 = (ActiveUnit)Client.smethod_54();
				Class2413.smethod_2().method_19().Show();
			}
		}

		// Token: 0x06006413 RID: 25619 RVA: 0x0003F26F File Offset: 0x0003D46F
		private void method_260(object sender, EventArgs e)
		{
			this.method_261();
		}

		// Token: 0x06006414 RID: 25620 RVA: 0x0037C650 File Offset: 0x0037A850
		private void method_261()
		{
			if (Enumerable.Count<Side>(Client.smethod_46().method_44()) != 0)
			{
				bool flag;
				if (flag = Client.smethod_52().method_1())
				{
					if (flag)
					{
						Client.smethod_52().method_2(false);
						Client.smethod_46().method_59("GOD'S EYE DISABLED.", null, LoggedMessage.MessageType.UI, 5, null, Client.smethod_50(), default(Geopoint_Struct));
					}
				}
				else
				{
					Client.smethod_52().method_2(true);
					Client.smethod_46().method_59("GOD'S EYE ENABLED.", null, LoggedMessage.MessageType.UI, 5, null, Client.smethod_50(), default(Geopoint_Struct));
				}
				this.method_307();
				Client.bool_1 = true;
			}
		}

		// Token: 0x06006415 RID: 25621 RVA: 0x0003F277 File Offset: 0x0003D477
		private void method_262(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString(1));
			Client.smethod_97();
		}

		// Token: 0x06006416 RID: 25622 RVA: 0x0037C6E8 File Offset: 0x0037A8E8
		private void method_263()
		{
			try
			{
				if (Class570.class280_0.method_50())
				{
					string text = "Preparing Wold Window.";
					GameGeneral.smethod_26(ref text);
				}
				this.vmethod_796().method_5(GameGeneral.class1874_0);
				Class1874.class1854_0.method_27(false);
				Class1874.class1854_0.method_28(false);
				Class1874.class1854_0.method_12(true);
				Class1874.class1854_0.method_14(true);
				Class1874.class1854_0.method_31(1f);
				Class1874.class1854_0.method_32(1f);
				Class1874.class1854_0.method_26(false);
				Class1874.class1854_0.method_49(0f);
				Class1874.class1854_0.method_36(false);
				Class1874.class1854_0.method_6(false);
				Class1874.class1854_0.method_39(this.vmethod_844().Checked);
				Class1874.class1854_0.method_4(true);
				if (Class570.class280_0.method_50())
				{
					if (Information.IsNothing(this.vmethod_796().method_4()))
					{
						string text = "Preparing Wold Window failed! WorldWindow1.CurrentWorld is null.";
						GameGeneral.smethod_26(ref text);
					}
					if (!Directory.Exists(Path.Combine(GameGeneral.string_9, "Cache")))
					{
						string text = "Preparing Wold Window failed! Could not find path " + Path.Combine(GameGeneral.string_9, "Cache");
						GameGeneral.smethod_26(ref text);
					}
				}
				this.vmethod_796().method_9(new Class1820(Path.Combine(GameGeneral.string_9, "Cache"), new TimeSpan(999, 59, 59), TimeSpan.Zero));
				if (Class570.class280_0.method_50() && Information.IsNothing(this.vmethod_796().method_8()))
				{
					string text = "Preparing Wold Window failed! WorldWindow1.Cache is null.";
					GameGeneral.smethod_26(ref text);
				}
				Class1875 @class = new Class1875("BaseLayer", this.vmethod_796().method_4(), 1000.0, Path.Combine(GameGeneral.string_9, "Data\\Earth\\BmngBathy\\world.topo.bathy.200407.jpg"), -90.0, 90.0, -180.0, 180.0, (double)1f, this.class1848_0);
				@class.vmethod_0(this.vmethod_796().method_7());
				this.vmethod_796().method_4().method_5().vmethod_19(@class);
				if (Class570.class280_0.method_50())
				{
					if (Information.IsNothing(@class))
					{
						string text = "Preparing Wold Window failed! Variable newLayer is null.";
						GameGeneral.smethod_26(ref text);
					}
					if (this.vmethod_796().method_4().method_5().vmethod_18() == 0)
					{
						string text = "Preparing Wold Window failed! WorldWindow1.CurrentWorld.RenderableObjects has no objects.";
						GameGeneral.smethod_26(ref text);
					}
				}
				this.method_141();
				this.method_144();
				this.method_145();
				this.method_138();
				this.method_146();
				this.method_140();
				this.method_148();
				this.method_149();
				this.method_147();
				this.method_139();
				this.method_150();
				this.method_151();
				this.vmethod_410().Checked = true;
				this.vmethod_764().Checked = true;
				this.vmethod_1020().Checked = true;
				this.vmethod_414().Checked = true;
				this.vmethod_844().Checked = Client.smethod_52().method_21();
				this.vmethod_918().Checked = this.class1871_0.vmethod_11();
				Class1874.class1854_0.method_27(false);
				Class1874.class1854_0.method_28(false);
				Class1874.class1854_0.method_12(true);
				Class1874.class1854_0.method_14(true);
				Class1874.class1854_0.method_31(1f);
				Class1874.class1854_0.method_32(1f);
				Class1874.class1854_0.method_26(false);
				Class1874.class1854_0.method_49(0f);
				Class1874.class1854_0.method_36(false);
				Class1874.class1854_0.method_6(false);
				Class1874.class1854_0.method_1(false);
				Class1874.class1854_0.method_39(this.vmethod_844().Checked);
				Class1821.cameraBase_1.method_0(new CameraBase.PanDelegate(this.method_264));
				if (Class570.class280_0.method_50())
				{
					string text = "Preparing Wold Window done.";
					GameGeneral.smethod_26(ref text);
				}
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200519", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06006417 RID: 25623 RVA: 0x0003F289 File Offset: 0x0003D489
		private void method_264()
		{
			this.geoPoint_0 = new GeoPoint(Class1821.cameraBase_1.vmethod_1().double_0 * 57.2957795130823, Class1821.cameraBase_1.vmethod_0().double_0 * 57.2957795130823);
		}

		// Token: 0x06006418 RID: 25624 RVA: 0x0003ADFE File Offset: 0x00038FFE
		private void method_265(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_16().Show();
		}

		// Token: 0x06006419 RID: 25625 RVA: 0x0003F2C8 File Offset: 0x0003D4C8
		private void method_266(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_0().Show();
		}

		// Token: 0x0600641A RID: 25626 RVA: 0x0037CB04 File Offset: 0x0037AD04
		private void method_267(object sender, EventArgs e)
		{
			this.vmethod_108().Checked = !this.vmethod_108().Checked;
			if (this.vmethod_108().Checked)
			{
				if (this.vmethod_396().Checked)
				{
					Client.smethod_52().method_30(Class285.Enum85.const_1);
				}
				else if (this.vmethod_398().Checked)
				{
					Client.smethod_52().method_30(Class285.Enum85.const_0);
				}
			}
			else
			{
				Client.smethod_52().method_30(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x0600641B RID: 25627 RVA: 0x0037CB7C File Offset: 0x0037AD7C
		private void method_268(object sender, EventArgs e)
		{
			this.vmethod_110().Checked = !this.vmethod_110().Checked;
			if (this.vmethod_110().Checked)
			{
				if (this.vmethod_396().Checked)
				{
					Client.smethod_52().method_34(Class285.Enum85.const_1);
				}
				else if (this.vmethod_398().Checked)
				{
					Client.smethod_52().method_34(Class285.Enum85.const_0);
				}
			}
			else
			{
				Client.smethod_52().method_34(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x0600641C RID: 25628 RVA: 0x0037CBF4 File Offset: 0x0037ADF4
		private void method_269(object sender, EventArgs e)
		{
			this.vmethod_112().Checked = !this.vmethod_112().Checked;
			if (this.vmethod_112().Checked)
			{
				if (this.vmethod_396().Checked)
				{
					Client.smethod_52().method_40(Class285.Enum85.const_1);
				}
				else if (this.vmethod_398().Checked)
				{
					Client.smethod_52().method_40(Class285.Enum85.const_0);
				}
			}
			else
			{
				Client.smethod_52().method_40(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x0600641D RID: 25629 RVA: 0x0037CC6C File Offset: 0x0037AE6C
		private void method_270(object sender, EventArgs e)
		{
			this.vmethod_114().Checked = !this.vmethod_114().Checked;
			if (this.vmethod_114().Checked)
			{
				if (this.vmethod_396().Checked)
				{
					Client.smethod_52().method_32(Class285.Enum85.const_1);
				}
				else if (this.vmethod_398().Checked)
				{
					Client.smethod_52().method_32(Class285.Enum85.const_0);
				}
			}
			else
			{
				Client.smethod_52().method_32(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x0600641E RID: 25630 RVA: 0x0037CCE4 File Offset: 0x0037AEE4
		private void method_271(object sender, EventArgs e)
		{
			this.vmethod_116().Checked = !this.vmethod_116().Checked;
			if (this.vmethod_116().Checked)
			{
				if (this.vmethod_396().Checked)
				{
					Client.smethod_52().method_36(Class285.Enum85.const_1);
				}
				else if (this.vmethod_398().Checked)
				{
					Client.smethod_52().method_36(Class285.Enum85.const_0);
				}
			}
			else
			{
				Client.smethod_52().method_36(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x0600641F RID: 25631 RVA: 0x0037CD5C File Offset: 0x0037AF5C
		private void method_272(object sender, EventArgs e)
		{
			this.vmethod_658().Checked = !this.vmethod_658().Checked;
			if (this.vmethod_658().Checked)
			{
				if (this.vmethod_396().Checked)
				{
					Client.smethod_52().method_38(Class285.Enum85.const_1);
				}
				else if (this.vmethod_398().Checked)
				{
					Client.smethod_52().method_38(Class285.Enum85.const_0);
				}
			}
			else
			{
				Client.smethod_52().method_38(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x06006420 RID: 25632 RVA: 0x0037CDD4 File Offset: 0x0037AFD4
		private void method_273(object sender, EventArgs e)
		{
			this.vmethod_118().Checked = !this.vmethod_118().Checked;
			if (this.vmethod_118().Checked)
			{
				if (this.vmethod_396().Checked)
				{
					Client.smethod_52().method_42(Class285.Enum85.const_1);
				}
				else if (this.vmethod_398().Checked)
				{
					Client.smethod_52().method_42(Class285.Enum85.const_0);
				}
			}
			else
			{
				Client.smethod_52().method_42(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x06006421 RID: 25633 RVA: 0x0003F2D9 File Offset: 0x0003D4D9
		private void method_274(object sender, EventArgs e)
		{
			if (!this.vmethod_124().Checked)
			{
				Client.smethod_52().method_52(Class285.Enum85.const_1);
				this.method_307();
			}
		}

		// Token: 0x06006422 RID: 25634 RVA: 0x0003F2F9 File Offset: 0x0003D4F9
		private void method_275(object sender, EventArgs e)
		{
			if (!this.vmethod_126().Checked)
			{
				Client.smethod_52().method_52(Class285.Enum85.const_0);
				this.method_307();
			}
		}

		// Token: 0x06006423 RID: 25635 RVA: 0x0003F319 File Offset: 0x0003D519
		private void method_276(object sender, EventArgs e)
		{
			if (!this.vmethod_128().Checked)
			{
				Client.smethod_52().method_52(Class285.Enum85.const_2);
				this.method_307();
			}
		}

		// Token: 0x06006424 RID: 25636 RVA: 0x0003F339 File Offset: 0x0003D539
		private void method_277(object sender, EventArgs e)
		{
			if (!this.vmethod_132().Checked)
			{
				Client.smethod_52().method_50(Class285.Enum85.const_1);
				this.method_307();
			}
		}

		// Token: 0x06006425 RID: 25637 RVA: 0x0003F359 File Offset: 0x0003D559
		private void method_278(object sender, EventArgs e)
		{
			if (!this.vmethod_134().Checked)
			{
				Client.smethod_52().method_50(Class285.Enum85.const_0);
				this.method_307();
			}
		}

		// Token: 0x06006426 RID: 25638 RVA: 0x0003F379 File Offset: 0x0003D579
		private void method_279(object sender, EventArgs e)
		{
			if (!this.vmethod_136().Checked)
			{
				Client.smethod_52().method_50(Class285.Enum85.const_2);
				this.method_307();
			}
		}

		// Token: 0x06006427 RID: 25639 RVA: 0x0003F399 File Offset: 0x0003D599
		private void method_280(object sender, EventArgs e)
		{
			if (!this.vmethod_142().Checked)
			{
				Client.smethod_52().method_48(Class285.Enum85.const_1);
				this.method_307();
			}
		}

		// Token: 0x06006428 RID: 25640 RVA: 0x0003F3B9 File Offset: 0x0003D5B9
		private void method_281(object sender, EventArgs e)
		{
			if (!this.vmethod_144().Checked)
			{
				Client.smethod_52().method_48(Class285.Enum85.const_0);
				this.method_307();
			}
		}

		// Token: 0x06006429 RID: 25641 RVA: 0x0003F3D9 File Offset: 0x0003D5D9
		private void method_282(object sender, EventArgs e)
		{
			if (!this.vmethod_146().Checked)
			{
				Client.smethod_52().method_48(Class285.Enum85.const_2);
				this.method_307();
			}
		}

		// Token: 0x0600642A RID: 25642 RVA: 0x0003F3F9 File Offset: 0x0003D5F9
		private void method_283(object sender, EventArgs e)
		{
			if (!this.vmethod_148().Checked)
			{
				Client.smethod_52().method_46(Class285.Enum85.const_1);
				this.method_307();
			}
		}

		// Token: 0x0600642B RID: 25643 RVA: 0x0003F419 File Offset: 0x0003D619
		private void method_284(object sender, EventArgs e)
		{
			if (!this.vmethod_150().Checked)
			{
				Client.smethod_52().method_46(Class285.Enum85.const_0);
				this.method_307();
			}
		}

		// Token: 0x0600642C RID: 25644 RVA: 0x0003F439 File Offset: 0x0003D639
		private void method_285(object sender, EventArgs e)
		{
			if (!this.vmethod_152().Checked)
			{
				Client.smethod_52().method_46(Class285.Enum85.const_2);
				this.method_307();
			}
		}

		// Token: 0x0600642D RID: 25645 RVA: 0x0003F459 File Offset: 0x0003D659
		private void method_286(object sender, EventArgs e)
		{
			Client.smethod_52().method_4(!Client.smethod_52().method_3());
			this.method_307();
		}

		// Token: 0x0600642E RID: 25646 RVA: 0x0003F478 File Offset: 0x0003D678
		private void method_287(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_53().Show();
		}

		// Token: 0x0600642F RID: 25647 RVA: 0x0003F489 File Offset: 0x0003D689
		private void method_288(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString(1));
			Client.smethod_98();
		}

		// Token: 0x06006430 RID: 25648 RVA: 0x0037CE4C File Offset: 0x0037B04C
		private void method_289(object sender, EventArgs e)
		{
			this.vmethod_168().InitialDirectory = System.Windows.Forms.Application.StartupPath;
			this.vmethod_168().FileName = "ScenExport.xml";
			if (this.vmethod_168().ShowDialog() == DialogResult.OK)
			{
				FileStream fileStream = File.Create(this.vmethod_168().FileName);
				MemoryStream memoryStream = new MemoryStream();
				bool flag;
				if (Client.smethod_0().method_0() == Class279.Enum68.const_1)
				{
					flag = true;
					Client.smethod_0().method_4();
				}
				memoryStream = GameGeneral.smethod_11(Client.smethod_46());
				if (flag)
				{
					Client.smethod_0().method_3();
				}
				fileStream.Write(memoryStream.ToArray(), 0, (int)memoryStream.Position);
				fileStream.Close();
			}
		}

		// Token: 0x06006431 RID: 25649 RVA: 0x0037CEE8 File Offset: 0x0037B0E8
		private void method_290(object sender, EventArgs e)
		{
			this.vmethod_166().InitialDirectory = System.Windows.Forms.Application.StartupPath;
			this.vmethod_166().FileName = "ScenExport.xml";
			string text = "";
			if (this.vmethod_166().ShowDialog() == DialogResult.OK)
			{
				string fileName = this.vmethod_166().FileName;
				double num = 0.0;
				Client.smethod_47(Scenario.smethod_20(fileName, ref text, ref num), false);
				Client.smethod_0().method_4();
			}
			if (!string.IsNullOrEmpty(text))
			{
				DarkMessageBox.smethod_2(text, "Error", Enum11.const_0);
			}
		}

		// Token: 0x06006432 RID: 25650 RVA: 0x0003F49B File Offset: 0x0003D69B
		private void method_291(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have a side selected.", "No side selected!", Enum11.const_0);
				return;
			}
			Client.smethod_30().Show();
		}

		// Token: 0x06006433 RID: 25651 RVA: 0x0000378C File Offset: 0x0000198C
		private void method_292(object sender, EventArgs e)
		{
		}

		// Token: 0x06006434 RID: 25652 RVA: 0x0037CF6C File Offset: 0x0037B16C
		private void method_293(object sender, EventArgs e)
		{
			if (DarkMessageBox.smethod_1("Are you sure?", "Confirm", Enum11.const_2) == DialogResult.OK)
			{
				List<ActiveUnit> list = new List<ActiveUnit>();
				try
				{
					foreach (ActiveUnit activeUnit in Client.smethod_46().vmethod_0().Values)
					{
						if (activeUnit.vmethod_7(false) == Client.smethod_50())
						{
							list.Add(activeUnit);
						}
					}
				}
				finally
				{
					IEnumerator<ActiveUnit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				try
				{
					foreach (ActiveUnit activeUnit2 in list)
					{
						activeUnit2.vmethod_133(true, false, false);
					}
				}
				finally
				{
					List<ActiveUnit>.Enumerator enumerator2;
					((IDisposable)enumerator2).Dispose();
				}
				Client.bool_1 = true;
				this.method_219();
			}
		}

		// Token: 0x06006435 RID: 25653 RVA: 0x0003F4C5 File Offset: 0x0003D6C5
		private void method_294(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have a side selected.", "No side selected!", Enum11.const_0);
				return;
			}
			Client.newMission_0.Show();
		}

		// Token: 0x06006436 RID: 25654 RVA: 0x0003F4EF File Offset: 0x0003D6EF
		private void method_295(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_7);
		}

		// Token: 0x06006437 RID: 25655 RVA: 0x0037D038 File Offset: 0x0037B238
		private void method_296(object sender, EventArgs e)
		{
			this.vmethod_166().InitialDirectory = GameGeneral.string_4;
			if (this.vmethod_166().ShowDialog() == DialogResult.OK)
			{
				ScenContainer scenContainer = ScenContainer.smethod_2(this.vmethod_166().FileName);
				string text = "";
				text = scenContainer.method_7();
				text = Misc.smethod_3(text);
				try
				{
					XmlDocument xmlDocument = new XmlDocument();
					xmlDocument.LoadXml(text);
					xmlDocument.Save(new XmlTextWriter(this.vmethod_166().FileName + ".xml", Encoding.UTF8)
					{
						Formatting = Formatting.Indented
					});
				}
				catch (Exception ex)
				{
					File.WriteAllText(this.vmethod_166().FileName + ".xml", text);
				}
				DarkMessageBox.smethod_0("Scenario exported to: " + this.vmethod_166().FileName + ".xml", "", Enum11.const_0);
			}
		}

		// Token: 0x06006438 RID: 25656 RVA: 0x0003F4F7 File Offset: 0x0003D6F7
		private void method_297(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_8);
			this.referencePoint_0 = null;
		}

		// Token: 0x06006439 RID: 25657 RVA: 0x0003F506 File Offset: 0x0003D706
		private void method_298(object sender, EventArgs e)
		{
			this.method_198();
		}

		// Token: 0x0600643A RID: 25658 RVA: 0x0037D124 File Offset: 0x0037B324
		private void method_299()
		{
			Client.smethod_46().method_62();
			if (this.messageLogOuterControl_0.method_0() != null)
			{
				this.messageLogOuterControl_0.method_0().method_1();
			}
			if (Class2413.smethod_2().method_44().Visible)
			{
				Class2413.smethod_2().method_44().method_3(true);
			}
			Client.bool_1 = true;
		}

		// Token: 0x0600643B RID: 25659 RVA: 0x0003F50E File Offset: 0x0003D70E
		private void method_300(object sender, EventArgs e)
		{
			this.method_299();
		}

		// Token: 0x0600643C RID: 25660 RVA: 0x0003F516 File Offset: 0x0003D716
		private void method_301(object sender, EventArgs e)
		{
			Client.smethod_99();
		}

		// Token: 0x0600643D RID: 25661 RVA: 0x0003F4F7 File Offset: 0x0003D6F7
		private void method_302(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_8);
			this.referencePoint_0 = null;
		}

		// Token: 0x0600643E RID: 25662 RVA: 0x0000378C File Offset: 0x0000198C
		private void method_303(object sender, EventArgs e)
		{
		}

		// Token: 0x0600643F RID: 25663 RVA: 0x0003F51D File Offset: 0x0003D71D
		private void method_304(object sender, EventArgs e)
		{
			Client.orientationType_0 = ReferencePoint.OrientationType.Fixed;
			Client.smethod_62(Client.Enum197.const_15);
		}

		// Token: 0x06006440 RID: 25664 RVA: 0x0037D180 File Offset: 0x0037B380
		private void method_305(object sender, EventArgs e)
		{
			this.vmethod_188().Enabled = !Information.IsNothing(Client.smethod_50());
			this.vmethod_190().Enabled = !Information.IsNothing(Client.smethod_50());
			this.vmethod_206().Enabled = !Information.IsNothing(Client.smethod_50());
		}

		// Token: 0x06006441 RID: 25665 RVA: 0x0037D1D8 File Offset: 0x0037B3D8
		private void method_306(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_208()).Checked;
			this.method_480(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x06006442 RID: 25666 RVA: 0x0037D204 File Offset: 0x0037B404
		public void method_307()
		{
			Class285 @class = Client.smethod_52();
			if (Client.smethod_0().method_1() != Class279.Enum67.const_2)
			{
				@class.method_2(false);
			}
			this.vmethod_108().Checked = (@class.method_29() != Class285.Enum85.const_2);
			this.vmethod_114().Checked = (@class.method_31() != Class285.Enum85.const_2);
			this.vmethod_110().Checked = (@class.method_33() != Class285.Enum85.const_2);
			this.vmethod_116().Checked = (@class.method_35() != Class285.Enum85.const_2);
			this.vmethod_658().Checked = (@class.method_37() != Class285.Enum85.const_2);
			this.vmethod_112().Checked = (@class.method_39() != Class285.Enum85.const_2);
			this.vmethod_118().Checked = (@class.method_41() != Class285.Enum85.const_2);
			this.vmethod_1012().Checked = (@class.method_43() != Class285.Enum85.const_2);
			this.vmethod_284().Checked = @class.method_23();
			this.vmethod_346().Checked = @class.method_25();
			this.vmethod_408().Checked = @class.method_3();
			this.vmethod_410().Checked = @class.method_7();
			this.vmethod_1020().Checked = @class.method_5();
			this.vmethod_412().Checked = @class.method_9();
			this.vmethod_918().Checked = @class.method_11();
			this.vmethod_938().Checked = @class.method_13();
			this.vmethod_414().Checked = @class.method_15();
			this.vmethod_764().Checked = @class.method_17();
			this.vmethod_956().Checked = @class.method_19();
			this.vmethod_844().Checked = @class.method_21();
			switch (@class.method_45())
			{
			case Class285.Enum85.const_0:
				this.vmethod_148().Checked = false;
				this.vmethod_150().Checked = true;
				this.vmethod_152().Checked = false;
				break;
			case Class285.Enum85.const_1:
				this.vmethod_148().Checked = true;
				this.vmethod_150().Checked = false;
				this.vmethod_152().Checked = false;
				break;
			case Class285.Enum85.const_2:
				this.vmethod_148().Checked = false;
				this.vmethod_150().Checked = false;
				this.vmethod_152().Checked = true;
				break;
			}
			switch (@class.method_47())
			{
			case Class285.Enum85.const_0:
				this.vmethod_142().Checked = false;
				this.vmethod_144().Checked = true;
				this.vmethod_146().Checked = false;
				break;
			case Class285.Enum85.const_1:
				this.vmethod_142().Checked = true;
				this.vmethod_144().Checked = false;
				this.vmethod_146().Checked = false;
				break;
			case Class285.Enum85.const_2:
				this.vmethod_142().Checked = false;
				this.vmethod_144().Checked = false;
				this.vmethod_146().Checked = true;
				break;
			}
			switch (@class.method_49())
			{
			case Class285.Enum85.const_0:
				this.vmethod_132().Checked = false;
				this.vmethod_134().Checked = true;
				this.vmethod_136().Checked = false;
				break;
			case Class285.Enum85.const_1:
				this.vmethod_132().Checked = true;
				this.vmethod_134().Checked = false;
				this.vmethod_136().Checked = false;
				break;
			case Class285.Enum85.const_2:
				this.vmethod_132().Checked = false;
				this.vmethod_134().Checked = false;
				this.vmethod_136().Checked = true;
				break;
			}
			switch (@class.method_51())
			{
			case Class285.Enum85.const_0:
				this.vmethod_124().Checked = false;
				this.vmethod_126().Checked = true;
				this.vmethod_128().Checked = false;
				break;
			case Class285.Enum85.const_1:
				this.vmethod_124().Checked = true;
				this.vmethod_126().Checked = false;
				this.vmethod_128().Checked = false;
				break;
			case Class285.Enum85.const_2:
				this.vmethod_124().Checked = false;
				this.vmethod_126().Checked = false;
				this.vmethod_128().Checked = true;
				break;
			}
			switch (@class.method_53())
			{
			case Class285.Enum85.const_0:
				this.vmethod_368().Checked = false;
				this.vmethod_370().Checked = true;
				this.vmethod_372().Checked = false;
				break;
			case Class285.Enum85.const_1:
				this.vmethod_368().Checked = true;
				this.vmethod_370().Checked = false;
				this.vmethod_372().Checked = false;
				break;
			case Class285.Enum85.const_2:
				this.vmethod_368().Checked = false;
				this.vmethod_370().Checked = false;
				this.vmethod_372().Checked = true;
				break;
			}
			switch (@class.method_55())
			{
			case Class285.Enum86.const_0:
				this.vmethod_760().Checked = true;
				this.vmethod_762().Checked = false;
				this.vmethod_846().Checked = false;
				break;
			case Class285.Enum86.const_1:
				this.vmethod_760().Checked = false;
				this.vmethod_762().Checked = true;
				this.vmethod_846().Checked = false;
				break;
			case Class285.Enum86.const_2:
				this.vmethod_760().Checked = false;
				this.vmethod_762().Checked = false;
				this.vmethod_846().Checked = true;
				break;
			}
			switch (@class.method_57())
			{
			case Class285.Enum85.const_0:
				this.vmethod_396().Checked = false;
				this.vmethod_398().Checked = true;
				this.vmethod_400().Checked = false;
				break;
			case Class285.Enum85.const_1:
				this.vmethod_396().Checked = true;
				this.vmethod_398().Checked = false;
				this.vmethod_400().Checked = false;
				break;
			case Class285.Enum85.const_2:
				this.vmethod_396().Checked = false;
				this.vmethod_398().Checked = false;
				this.vmethod_400().Checked = true;
				break;
			}
			switch (Class570.class280_0.method_16())
			{
			case Class279.Class280.Enum69.const_0:
				this.vmethod_514().Checked = true;
				this.vmethod_516().Checked = false;
				this.vmethod_518().Checked = false;
				break;
			case Class279.Class280.Enum69.const_1:
				this.vmethod_514().Checked = false;
				this.vmethod_516().Checked = true;
				this.vmethod_518().Checked = false;
				break;
			case Class279.Class280.Enum69.const_2:
				this.vmethod_514().Checked = false;
				this.vmethod_516().Checked = false;
				this.vmethod_518().Checked = true;
				break;
			}
			switch (Class570.class280_0.method_20())
			{
			case Class279.Class280.Enum71.const_0:
				this.vmethod_520().Checked = true;
				this.vmethod_522().Checked = false;
				this.vmethod_524().Checked = false;
				break;
			case Class279.Class280.Enum71.const_1:
				this.vmethod_520().Checked = false;
				this.vmethod_522().Checked = true;
				this.vmethod_524().Checked = false;
				break;
			case Class279.Class280.Enum71.const_2:
				this.vmethod_520().Checked = false;
				this.vmethod_522().Checked = false;
				this.vmethod_524().Checked = true;
				break;
			}
			switch (Class570.class280_0.method_28())
			{
			case Class279.Class280.Enum74.const_0:
				this.vmethod_528().Checked = false;
				this.vmethod_530().Checked = true;
				this.vmethod_532().Checked = false;
				break;
			case Class279.Class280.Enum74.const_1:
				this.vmethod_528().Checked = true;
				this.vmethod_530().Checked = false;
				this.vmethod_532().Checked = false;
				break;
			case Class279.Class280.Enum74.const_2:
				this.vmethod_528().Checked = false;
				this.vmethod_530().Checked = false;
				this.vmethod_532().Checked = true;
				break;
			}
			switch (Class570.class280_0.method_32())
			{
			case Class279.Class280.Enum75.const_0:
				this.vmethod_612().Checked = false;
				this.vmethod_614().Checked = true;
				this.vmethod_616().Checked = false;
				break;
			case Class279.Class280.Enum75.const_1:
				this.vmethod_612().Checked = true;
				this.vmethod_614().Checked = false;
				this.vmethod_616().Checked = false;
				break;
			case Class279.Class280.Enum75.const_2:
				this.vmethod_612().Checked = false;
				this.vmethod_614().Checked = false;
				this.vmethod_616().Checked = true;
				break;
			}
			switch (Class570.class280_0.method_34())
			{
			case Class279.Class280.Enum76.const_0:
				this.vmethod_784().Checked = false;
				this.vmethod_786().Checked = true;
				this.vmethod_788().Checked = false;
				break;
			case Class279.Class280.Enum76.const_1:
				this.vmethod_784().Checked = true;
				this.vmethod_786().Checked = false;
				this.vmethod_788().Checked = false;
				break;
			case Class279.Class280.Enum76.const_2:
				this.vmethod_784().Checked = false;
				this.vmethod_786().Checked = false;
				this.vmethod_788().Checked = true;
				break;
			}
			this.vmethod_866().Checked = (Class570.class280_0.method_30() == Class279.Class280.Enum78.const_1);
			this.vmethod_868().Checked = (Class570.class280_0.method_30() == Class279.Class280.Enum78.const_0);
			this.vmethod_870().Checked = (Class570.class280_0.method_30() == Class279.Class280.Enum78.const_2);
			this.vmethod_796().vmethod_0(@class.method_3());
			if (@class.method_7())
			{
				this.vmethod_796().method_4().method_5().vmethod_16("BMNGv2").vmethod_9(byte.MaxValue);
				this.class1871_2.vmethod_12(true);
				this.vmethod_796().method_4().method_5().vmethod_16("BaseLayer").vmethod_9(byte.MaxValue);
			}
			else
			{
				this.vmethod_796().method_4().method_5().vmethod_16("BMNGv2").vmethod_9(1);
				this.class1871_2.vmethod_12(false);
				this.vmethod_796().method_4().method_5().vmethod_16("BaseLayer").vmethod_9(1);
			}
			this.class1871_3.vmethod_12(@class.method_5());
			this.class1871_4.vmethod_12(@class.method_9());
			this.class1871_0.vmethod_12(@class.method_11());
			this.class1871_5.vmethod_12(@class.method_19());
			this.class1871_1.vmethod_12(@class.method_13());
			this.class1872_0.vmethod_12(@class.method_17());
			if (this.class1871_0.vmethod_11())
			{
				this.class1871_1.vmethod_12(false);
				this.class1872_0.vmethod_12(false);
			}
			Class1874.class1854_0.method_39(@class.method_21());
			this.vmethod_96().Checked = @class.method_1();
			this.method_219();
			System.Windows.Forms.Application.DoEvents();
		}

		// Token: 0x06006443 RID: 25667 RVA: 0x0037DC14 File Offset: 0x0037BE14
		public void method_308(Class310 class310_0, ref ReadOnlyCollection<Unit> readOnlyCollection_0, ref List<ActiveUnit> list_62, bool bool_15)
		{
			DoctrineForm doctrineForm = new DoctrineForm();
			doctrineForm.bool_3 = bool_15;
			if (!Information.IsNothing(list_62))
			{
				if (list_62.Count == 1)
				{
					if (!list_62[0].method_14() && list_62[0].vmethod_7(false) == Client.smethod_50())
					{
						doctrineForm.class310_0 = list_62[0];
						doctrineForm.list_0 = null;
					}
				}
				else
				{
					doctrineForm.list_0 = new List<ActiveUnit>();
					doctrineForm.bool_6 = true;
					try
					{
						foreach (ActiveUnit activeUnit in list_62)
						{
							if (!activeUnit.method_14() && activeUnit.vmethod_7(false) == Client.smethod_50())
							{
								doctrineForm.list_0.Add(activeUnit);
							}
						}
					}
					finally
					{
						List<ActiveUnit>.Enumerator enumerator;
						((IDisposable)enumerator).Dispose();
					}
					doctrineForm.class310_0 = null;
				}
			}
			else if (!Information.IsNothing(readOnlyCollection_0) && readOnlyCollection_0.Count > 1)
			{
				doctrineForm.list_0 = new List<ActiveUnit>();
				try
				{
					foreach (Unit unit in readOnlyCollection_0)
					{
						if (!unit.method_14() && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
						{
							ActiveUnit item = (ActiveUnit)unit;
							doctrineForm.list_0.Add(item);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator2;
					if (enumerator2 != null)
					{
						enumerator2.Dispose();
					}
				}
				doctrineForm.class310_0 = null;
			}
			else if (!Information.IsNothing(class310_0))
			{
				if (class310_0.bool_0)
				{
					ActiveUnit activeUnit2 = (ActiveUnit)class310_0;
					if (!activeUnit2.method_14() && activeUnit2.vmethod_7(false) == Client.smethod_50())
					{
						doctrineForm.class310_0 = class310_0;
					}
				}
				else if (class310_0.GetType() == typeof(Side))
				{
					doctrineForm.class310_0 = class310_0;
				}
				else if (class310_0.GetType() == typeof(Waypoint))
				{
					doctrineForm.class310_0 = class310_0;
				}
			}
			if (!Information.IsNothing(doctrineForm.class310_0) || (!Information.IsNothing(doctrineForm.list_0) && doctrineForm.list_0.Count != 0) || Information.IsNothing(class310_0) || class310_0.GetType() == typeof(Side))
			{
				if (!Information.IsNothing(doctrineForm.class310_0))
				{
					if (doctrineForm.class310_0.GetType() == typeof(Group))
					{
						Group group = (Group)doctrineForm.class310_0;
						if (!Information.IsNothing(group.method_147()))
						{
							doctrineForm.bool_8 = group.method_147().vmethod_86().bool_2;
						}
						else
						{
							doctrineForm.bool_8 = false;
						}
					}
					else if (doctrineForm.class310_0.GetType() == typeof(ActiveUnit))
					{
						doctrineForm.bool_8 = ((ActiveUnit)doctrineForm.class310_0).vmethod_86().bool_2;
					}
				}
				doctrineForm.Show();
			}
		}

		// Token: 0x06006444 RID: 25668 RVA: 0x0037DEE4 File Offset: 0x0037C0E4
		private void method_309(object sender, EventArgs e)
		{
			Class310 class310_ = Client.smethod_54();
			ReadOnlyCollection<Unit> readOnlyCollection = Client.smethod_50().method_56();
			List<ActiveUnit> list = null;
			this.method_308(class310_, ref readOnlyCollection, ref list, true);
		}

		// Token: 0x06006445 RID: 25669 RVA: 0x0003F52C File Offset: 0x0003D72C
		private void method_310(object sender, EventArgs e)
		{
			new FixedFacilityOrientation
			{
				activeUnit_0 = (ActiveUnit)Client.smethod_54()
			}.Show();
		}

		// Token: 0x06006446 RID: 25670 RVA: 0x0037DF10 File Offset: 0x0037C110
		private void method_311()
		{
			this.method_316();
			string string_;
			if (string.IsNullOrEmpty(Client.smethod_46().CampaignID))
			{
				string_ = Client.smethod_46().method_0();
			}
			else if (Client.smethod_46().method_16())
			{
				string_ = Client.smethod_46().method_0() + " (Campaign Play)";
			}
			else
			{
				string_ = Client.smethod_46().method_0() + " (Standalone Play)";
			}
			this.method_386(Client.smethod_46(), string_);
			this.method_219();
		}

		// Token: 0x06006447 RID: 25671 RVA: 0x0003F548 File Offset: 0x0003D748
		private void method_312(object sender, EventArgs e)
		{
			new DoctrineForm
			{
				class310_0 = Client.smethod_58()
			}.Show();
		}

		// Token: 0x06006448 RID: 25672 RVA: 0x0037DF8C File Offset: 0x0037C18C
		public void method_313()
		{
			this.vmethod_946().Text = "Current: " + Client.smethod_40().string_1;
			DBRecord dbrecord = Enumerable.FirstOrDefault<DBRecord>(Enumerable.Where<DBRecord>(DBOps.smethod_4(), (MainForm._Closure$__.$I2619-0 == null) ? (MainForm._Closure$__.$I2619-0 = new Func<DBRecord, bool>(MainForm._Closure$__.$I.method_42)) : MainForm._Closure$__.$I2619-0));
			if (Information.IsNothing(dbrecord))
			{
				this.vmethod_948().Visible = false;
			}
			else
			{
				this.vmethod_948().Visible = true;
				this.vmethod_948().Text = "Use latest DB3000: " + dbrecord.string_1;
				this.vmethod_948().Tag = dbrecord.string_0;
			}
			DBRecord dbrecord2 = Enumerable.FirstOrDefault<DBRecord>(Enumerable.Where<DBRecord>(DBOps.smethod_4(), (MainForm._Closure$__.$I2619-1 == null) ? (MainForm._Closure$__.$I2619-1 = new Func<DBRecord, bool>(MainForm._Closure$__.$I.method_43)) : MainForm._Closure$__.$I2619-1));
			if (Information.IsNothing(dbrecord2))
			{
				this.vmethod_950().Visible = false;
			}
			else
			{
				this.vmethod_950().Visible = true;
				this.vmethod_950().Text = "Use latest CWDB: " + dbrecord2.string_1;
				this.vmethod_950().Tag = dbrecord2.string_0;
			}
			this.bool_10 = true;
		}

		// Token: 0x06006449 RID: 25673 RVA: 0x0037E0C4 File Offset: 0x0037C2C4
		public void method_314()
		{
			this.vmethod_630().DropDownItems.Clear();
			if (!Information.IsNothing(Client.smethod_50()))
			{
				IEnumerable<KeyValuePair<byte, QuickJumpSlot>> enumerable = Enumerable.OrderBy<KeyValuePair<byte, QuickJumpSlot>, byte>(Client.smethod_50().dictionary_3, (MainForm._Closure$__.$I2620-0 == null) ? (MainForm._Closure$__.$I2620-0 = new Func<KeyValuePair<byte, QuickJumpSlot>, byte>(MainForm._Closure$__.$I.method_44)) : MainForm._Closure$__.$I2620-0);
				try
				{
					foreach (KeyValuePair<byte, QuickJumpSlot> keyValuePair in enumerable)
					{
						QuickJumpSlot value = keyValuePair.Value;
						string text = "";
						string left = value.string_0.Split(new char[]
						{
							'_'
						})[0];
						if (Operators.CompareString(left, "AU", false) != 0)
						{
							if (Operators.CompareString(left, "Con", false) == 0)
							{
								Contact contact;
								Client.smethod_50().method_11().TryGetValue(value.string_0.Split(new char[]
								{
									'_'
								})[1], ref contact);
								if (!Information.IsNothing(contact))
								{
									text = "Contact: " + contact.Name;
								}
								else
								{
									text = "Contact: [No longer valid]";
								}
							}
						}
						else
						{
							ActiveUnit activeUnit;
							Client.smethod_46().vmethod_0().TryGetValue(value.string_0.Split(new char[]
							{
								'_'
							})[1], ref activeUnit);
							if (!Information.IsNothing(activeUnit))
							{
								text = "Unit: " + activeUnit.Name;
							}
							else
							{
								text = "Unit: [No longer valid]";
							}
						}
						ToolStripMenuItem toolStripMenuItem = (ToolStripMenuItem)this.vmethod_630().DropDownItems.Add(text, null, new EventHandler(this.method_315));
						toolStripMenuItem.Tag = value;
						toolStripMenuItem.ShortcutKeyDisplayString = value.byte_0.ToString();
					}
				}
				finally
				{
					IEnumerator<KeyValuePair<byte, QuickJumpSlot>> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
			this.vmethod_630().Enabled = (this.vmethod_630().DropDownItems.Count > 0);
		}

		// Token: 0x0600644A RID: 25674 RVA: 0x0037E2B0 File Offset: 0x0037C4B0
		private void method_315(object sender, EventArgs e)
		{
			QuickJumpSlot quickJumpSlot = (QuickJumpSlot)(sender as ToolStripMenuItem).Tag;
			this.method_497(quickJumpSlot.byte_0);
		}

		// Token: 0x0600644B RID: 25675 RVA: 0x0037E2DC File Offset: 0x0037C4DC
		public void method_316()
		{
			int num = Client.smethod_46().method_47();
			switch (num)
			{
			case 1:
				this.vmethod_976().Text = "Time Acceleration: 1x";
				this.gameControlBar_0.vmethod_0().SelectedIndex = 0;
				return;
			case 2:
				this.vmethod_976().Text = "Time Acceleration: 2x";
				this.gameControlBar_0.vmethod_0().SelectedIndex = 1;
				return;
			case 3:
			case 4:
				break;
			case 5:
				this.vmethod_976().Text = "Time Acceleration: 5x";
				this.gameControlBar_0.vmethod_0().SelectedIndex = 2;
				return;
			default:
				if (num != 15)
				{
					return;
				}
				this.vmethod_976().Text = "Time Acceleration: Turbo";
				this.gameControlBar_0.vmethod_0().SelectedIndex = 3;
				break;
			}
		}

		// Token: 0x0600644C RID: 25676 RVA: 0x0003F55F File Offset: 0x0003D75F
		private void method_317(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				Class2413.smethod_2().method_39().Show();
			}
		}

		// Token: 0x0600644D RID: 25677 RVA: 0x0003F57C File Offset: 0x0003D77C
		private void method_318(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_71().Show();
		}

		// Token: 0x0600644E RID: 25678 RVA: 0x0003F58D File Offset: 0x0003D78D
		private void method_319(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				Class2413.smethod_2().method_25().Show();
			}
		}

		// Token: 0x0600644F RID: 25679 RVA: 0x0037E3A0 File Offset: 0x0037C5A0
		public void method_320(object sender, EventArgs e)
		{
			if (!Class2556.smethod_6(Class2556.Enum209.const_0) && !GameGeneral.smethod_6())
			{
				Class2413.smethod_2().method_30().method_2(new List<Class2556.Enum209>
				{
					Class2556.Enum209.const_0
				});
				Class2413.smethod_2().method_30().Show();
				return;
			}
			Client.smethod_45(false);
			Client.recorderForm_0.Show();
		}

		// Token: 0x06006450 RID: 25680 RVA: 0x0003F5AA File Offset: 0x0003D7AA
		private void method_321(object sender, EventArgs e)
		{
			if (Client.smethod_44())
			{
				Client.smethod_45(false);
				return;
			}
			Client.class581_0 = Recorder.smethod_0(null, null);
			Client.smethod_45(true);
		}

		// Token: 0x06006451 RID: 25681 RVA: 0x0037E3F8 File Offset: 0x0037C5F8
		private void method_322(object sender, EventArgs e)
		{
			this.vmethod_234().InitialDirectory = System.Windows.Forms.Application.StartupPath;
			this.vmethod_234().FileName = Client.smethod_46().method_0() + ".ini";
			if (this.vmethod_234().ShowDialog() == DialogResult.OK)
			{
				FileStream fileStream = File.Create(this.vmethod_234().FileName);
				MemoryStream memoryStream = new MemoryStream();
				Class559.smethod_0(Client.smethod_46(), memoryStream);
				fileStream.Write(memoryStream.ToArray(), 0, (int)memoryStream.Position);
				fileStream.Close();
				DarkMessageBox.smethod_0("SBR template file generated!", "Success", Enum11.const_0);
			}
		}

		// Token: 0x06006452 RID: 25682 RVA: 0x0037E490 File Offset: 0x0037C690
		private void method_323(object sender, EventArgs e)
		{
			this.vmethod_238().InitialDirectory = System.Windows.Forms.Application.StartupPath;
			if (this.vmethod_238().ShowDialog() == DialogResult.OK)
			{
				Class559.smethod_9(Client.smethod_46(), this.vmethod_238().FileName, false, null);
				Scenario scenario = Client.smethod_46();
				Class559.smethod_11(ref scenario);
				DarkMessageBox.smethod_0("SBR script applied to current scenario.", "Success", Enum11.const_0);
			}
		}

		// Token: 0x06006453 RID: 25683 RVA: 0x0037E4F0 File Offset: 0x0037C6F0
		private void method_324(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_60()) && Client.smethod_60().Count >= 3)
			{
				MinefieldForm minefieldForm = new MinefieldForm();
				minefieldForm.list_0.AddRange(Client.smethod_60());
				minefieldForm.Show();
				return;
			}
			DarkMessageBox.smethod_2("You must first select at least 3 reference points to define the minefield area.", "Not enough ref points selected!", Enum11.const_0);
		}

		// Token: 0x06006454 RID: 25684 RVA: 0x0037E544 File Offset: 0x0037C744
		private void method_325(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_60()) && Client.smethod_60().Count >= 3)
			{
				List<ReferencePoint> list = new List<ReferencePoint>();
				List<UnguidedWeapon> list2 = new List<UnguidedWeapon>();
				try
				{
					foreach (UnguidedWeapon unguidedWeapon in Client.smethod_46().vmethod_20().Values)
					{
						list.AddRange(Client.smethod_60());
						if (unguidedWeapon.method_65() && unguidedWeapon.vmethod_46(list, Client.smethod_46(), false))
						{
							list2.Add(unguidedWeapon);
						}
					}
				}
				finally
				{
					IEnumerator<UnguidedWeapon> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				try
				{
					foreach (UnguidedWeapon unguidedWeapon2 in list2)
					{
						Scenario scenario = Client.smethod_46();
						unguidedWeapon2.method_75(ref scenario);
					}
				}
				finally
				{
					List<UnguidedWeapon>.Enumerator enumerator2;
					((IDisposable)enumerator2).Dispose();
				}
				Client.bool_1 = true;
				return;
			}
			DarkMessageBox.smethod_2("You must first select at least 3 reference points to define the minefield area.", "Not enough ref points selected!", Enum11.const_0);
		}

		// Token: 0x06006455 RID: 25685 RVA: 0x0037E644 File Offset: 0x0037C844
		private bool method_326(float float_6, float float_7)
		{
			return float_6 > 0f && float_7 > 0f && float_6 < (float)this.vmethod_796().Width && float_7 < (float)this.vmethod_796().Height;
		}

		// Token: 0x06006456 RID: 25686 RVA: 0x0037E690 File Offset: 0x0037C890
		private List<RangeSymbol> method_327(Geopoint_Struct geopoint_Struct_2, PlatformComponent platformComponent_0, float float_6)
		{
			List<RangeSymbol> list = new List<RangeSymbol>();
			bool flag = false;
			RangeSymbol rangeSymbol = new RangeSymbol();
			Color color = default(Color);
			if (platformComponent_0.class295_0.bool_7)
			{
				flag = true;
				rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 0f, 22.5f, color);
			}
			if (platformComponent_0.class295_0.bool_15)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 45f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 22.5f, 45f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_6)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 67.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 45f, 67.5f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_14)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 90f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 67.5f, 90f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_5)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 112.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 90f, 112.5f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_13)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 135f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 112.5f, 135f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_4)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 157.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 135f, 157.5f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_12)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 180f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 157.5f, 180f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_0)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 202.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 180f, 202.5f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_8)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 225f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 202.5f, 225f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_1)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 247.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 225f, 247.5f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_9)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 270f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 247.5f, 270f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_2)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 292.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 270f, 292.5f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_10)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 315f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 292.5f, 315f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_3)
			{
				if (flag)
				{
					rangeSymbol.float_1 = 337.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 315f, 337.5f, color);
					flag = true;
				}
			}
			else if (flag)
			{
				list.Add(rangeSymbol);
				flag = false;
			}
			if (platformComponent_0.class295_0.bool_11)
			{
				if (flag)
				{
					if (platformComponent_0.class295_0.bool_7)
					{
						if (list.Count > 0)
						{
							list[0].float_0 = rangeSymbol.float_0;
							flag = false;
						}
						else
						{
							list.Add(rangeSymbol);
							list[0].float_1 = 360f;
							flag = false;
						}
					}
					else
					{
						rangeSymbol.float_1 = 0f;
					}
				}
				else if (platformComponent_0.class295_0.bool_7)
				{
					list[0].float_0 = 337.5f;
				}
				else
				{
					rangeSymbol = new RangeSymbol(RangeSymbol.SymbolType.Wedge, "", (double)float_6, 337.5f, 0f, color);
					flag = true;
				}
			}
			if (flag)
			{
				list.Add(rangeSymbol);
			}
			return list;
		}

		// Token: 0x06006457 RID: 25687 RVA: 0x0037EB60 File Offset: 0x0037CD60
		private System.Drawing.Point[] method_328(Geopoint_Struct thePoint, Sensor theSensor, Unit theUnit, float theSensorRange = 0f)
		{
			System.Drawing.Point[] result = new System.Drawing.Point[0];
			List<RangeSymbol> list = this.method_327(thePoint, theSensor, theSensorRange);
			try
			{
				foreach (RangeSymbol rangeSymbol in list)
				{
					System.Drawing.Point[] array = this.method_331(thePoint, theUnit.vmethod_9(), (float)rangeSymbol.double_0, rangeSymbol.float_0, rangeSymbol.float_1);
					result = Misc.smethod_65(ref result, ref array);
				}
			}
			finally
			{
				List<RangeSymbol>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
			return result;
		}

		// Token: 0x06006458 RID: 25688 RVA: 0x0037EBE8 File Offset: 0x0037CDE8
		private bool method_329(float float_6)
		{
			bool result;
			if (float_6 >= 30f)
			{
				result = true;
			}
			else if (float_6 == 0f)
			{
				result = false;
			}
			else
			{
				Geopoint_Struct geopoint_Struct = new Geopoint_Struct(this.method_160(true).imethod_0(), this.method_160(true).imethod_2());
				Geopoint_Struct geopoint_Struct2 = default(Geopoint_Struct);
				Class411.smethod_1(geopoint_Struct.double_0, geopoint_Struct.double_1, ref geopoint_Struct2.double_0, ref geopoint_Struct2.double_1, (double)float_6, 0.0);
				System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
				System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct2.double_1, geopoint_Struct2.double_0);
				result = (point.Y - point2.Y > 2);
			}
			return result;
		}

		// Token: 0x06006459 RID: 25689 RVA: 0x0037ECB0 File Offset: 0x0037CEB0
		private System.Drawing.Point[] method_330(Geopoint_Struct geopoint_Struct_2, float float_6)
		{
			MainForm.Class2446 @class = new MainForm.Class2446();
			@class.mainForm_0 = this;
			@class.float_0 = float_6;
			System.Drawing.Point point = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct_2.double_1, geopoint_Struct_2.double_0);
			Geopoint_Struct geopoint_Struct = default(Geopoint_Struct);
			Class411.smethod_1(geopoint_Struct_2.double_0, geopoint_Struct_2.double_1, ref geopoint_Struct.double_0, ref geopoint_Struct.double_1, (double)@class.float_0, 0.0);
			System.Drawing.Point point2 = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct.double_1, geopoint_Struct.double_0);
			float num = (float)Math.Abs(point.Y - point2.Y);
			int num2;
			if (num < 25f)
			{
				num2 = 18;
			}
			else if (num < 50f)
			{
				num2 = 30;
			}
			else if (num < 100f)
			{
				num2 = 45;
			}
			else if (num < 300f)
			{
				num2 = 60;
			}
			else
			{
				num2 = 90;
			}
			@class.point_0 = new System.Drawing.Point[num2 + 1];
			@class.double_2 = geopoint_Struct_2.double_1;
			@class.double_1 = geopoint_Struct_2.double_0;
			@class.double_0 = 360.0 / (double)num2;
			Parallel.For(0, num2, new Action<int>(@class.method_0));
			@class.point_0[num2] = @class.point_0[0];
			return @class.point_0;
		}

		// Token: 0x0600645A RID: 25690 RVA: 0x0037EDF8 File Offset: 0x0037CFF8
		private System.Drawing.Point[] method_331(Geopoint_Struct geopoint_Struct_2, float float_6, float float_7, float float_8, float float_9)
		{
			MainForm.Class2447 @class = new MainForm.Class2447(@class);
			@class.mainForm_0 = this;
			@class.float_0 = float_7;
			int num = 720;
			System.Drawing.Point item = default(System.Drawing.Point);
			List<System.Drawing.Point> list = new List<System.Drawing.Point>();
			@class.double_0 = geopoint_Struct_2.double_0;
			@class.double_1 = geopoint_Struct_2.double_1;
			float num2 = 4f;
			bool flag;
			float num3;
			if (!(flag = (float_8 == 0f && float_9 == 360f)))
			{
				item = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct_2.double_1, geopoint_Struct_2.double_0);
				list.Add(item);
				num3 = 0.25f;
			}
			else
			{
				num3 = 0f;
			}
			float_8 = Math2.smethod_7(float_8 + float_6);
			float_9 = Math2.smethod_7(float_9 + float_6);
			float_8 = (float)((int)Math.Round((double)float_8));
			float_9 = (float)((int)Math.Round((double)float_9));
			float num4 = float_8;
			@class.dictionary_0 = new Dictionary<float, System.Drawing.Point>();
			List<float> list2 = new List<float>();
			int num5 = 0;
			int num6 = (int)Math.Round((double)(360f / num2));
			while (num4 < (float)num)
			{
				num5++;
				float num7 = Math2.smethod_7(num4);
				if ((int)Math.Round((double)num7) == (int)Math.Round((double)float_8))
				{
					list2.Add(num7 - num3);
					try
					{
						@class.dictionary_0.Add(num7 - num3, default(System.Drawing.Point));
						goto IL_17D;
					}
					catch (Exception ex)
					{
						goto IL_17D;
					}
					goto IL_149;
				}
				goto IL_149;
				IL_17D:
				num4 += num2;
				continue;
				IL_149:
				list2.Add(num7);
				try
				{
					@class.dictionary_0.Add(num7, default(System.Drawing.Point));
					goto IL_189;
				}
				catch (Exception ex2)
				{
					goto IL_189;
				}
				IL_175:
				if (num5 == num6)
				{
					goto IL_1A3;
				}
				goto IL_17D;
				IL_189:
				if (Math.Abs((int)Math.Round((double)num7) - (int)Math.Round((double)float_9)) >= 4)
				{
					goto IL_175;
				}
				IL_1A3:
				list2.Add(float_9 + num3);
				if (!@class.dictionary_0.ContainsKey(float_9 + num3))
				{
					try
					{
						@class.dictionary_0.Add(float_9 + num3, default(System.Drawing.Point));
					}
					catch (Exception ex3)
					{
					}
					break;
				}
				break;
			}
			Parallel.ForEach<float>(list2, new Action<float>(@class.method_0));
			try
			{
				foreach (System.Drawing.Point item2 in @class.dictionary_0.Values)
				{
					list.Add(item2);
				}
			}
			finally
			{
				Dictionary<float, System.Drawing.Point>.ValueCollection.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
			if (!flag)
			{
				double num8;
				double num9;
				Class411.smethod_1(@class.double_0, @class.double_1, ref num8, ref num9, (double)@class.float_0, (double)(float_9 + num3));
				item = Class2572.smethod_0(this.vmethod_796(), num9, num8);
				list.Add(item);
				item = Class2572.smethod_0(this.vmethod_796(), geopoint_Struct_2.double_1, geopoint_Struct_2.double_0);
				list.Add(item);
			}
			System.Drawing.Point[] array = new System.Drawing.Point[list.Count - 1 + 1];
			int count = list.Count;
			for (int i = 1; i <= count; i++)
			{
				array[i - 1] = list[i - 1];
			}
			list = null;
			return array;
		}

		// Token: 0x0600645B RID: 25691 RVA: 0x0037F118 File Offset: 0x0037D318
		private void method_332(object sender, EventArgs e)
		{
			try
			{
				TacviewServer.smethod_6();
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200390", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x0600645C RID: 25692 RVA: 0x0037F174 File Offset: 0x0037D374
		private void method_333(ref ActiveUnit activeUnit_0, ref Mission mission_0)
		{
			if (Client.smethod_54() != null && Client.smethod_50().method_56().Count != 0)
			{
				List<Mission> list;
				if (mission_0 != null)
				{
					list = new List<Mission>();
					list.Add(mission_0);
				}
				if (activeUnit_0 != null && activeUnit_0.bool_1)
				{
					Group group = (Group)activeUnit_0;
					if (group.method_147() == null)
					{
						return;
					}
					activeUnit_0 = group.method_147();
				}
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						string text = "";
						if (unit.bool_3)
						{
							Aircraft aircraft = (Aircraft)unit;
							Aircraft_AirOps aircraft_AirOps = aircraft.method_164();
							GeoPoint geoPoint = aircraft.method_158().method_18();
							Doctrine.Enum57 enum57_ = Doctrine.Enum57.const_0;
							bool flag = true;
							bool flag2 = false;
							bool flag3 = false;
							bool flag4 = false;
							if (!aircraft_AirOps.method_80(geoPoint, enum57_, ref flag, flag2, ref activeUnit_0, ref list, ref text, ref flag3, ref flag4) && Operators.CompareString(text, "", false) != 0)
							{
								string text2 = "";
								if (Operators.CompareString(aircraft.Name, aircraft.string_2, false) != 0)
								{
									text2 = " (" + aircraft.string_2 + ")";
								}
								Client.smethod_46().method_59(string.Concat(new string[]
								{
									"Aircraft ",
									aircraft.Name,
									text2,
									" cannot refuel. Reason: ",
									text
								}), "AC unable to refuel", LoggedMessage.MessageType.AirOps, 5, aircraft.string_0, Client.smethod_50(), new Geopoint_Struct(aircraft.vmethod_28(null), aircraft.vmethod_30(null)));
							}
							aircraft.method_158().vmethod_11(0f, false, false);
						}
						else if (unit.bool_1)
						{
							Group group2 = (Group)unit;
							if (group2.method_143() == Group.GroupType.AirGroup && !Information.IsNothing(((Group)unit).method_147()))
							{
								Aircraft aircraft2 = (Aircraft)((Group)unit).method_147();
								Aircraft_AirOps aircraft_AirOps2 = aircraft2.method_164();
								GeoPoint geoPoint2 = aircraft2.method_158().method_18();
								Doctrine.Enum57 enum57_2 = Doctrine.Enum57.const_0;
								bool flag4 = true;
								bool flag5 = false;
								bool flag3 = false;
								bool flag = false;
								if (aircraft_AirOps2.method_80(geoPoint2, enum57_2, ref flag4, flag5, ref activeUnit_0, ref list, ref text, ref flag3, ref flag))
								{
									Aircraft aircraft3 = aircraft2.method_164().method_24();
									if (Information.IsNothing(aircraft3))
									{
										goto IL_30E;
									}
									try
									{
										foreach (ActiveUnit activeUnit in group2.vmethod_141().Values)
										{
											if (activeUnit != aircraft2 && activeUnit.vmethod_108() != ActiveUnit._ActiveUnitStatus.Refuelling && activeUnit.vmethod_127() && activeUnit != aircraft3)
											{
												Aircraft_AirOps aircraft_AirOps3 = (Aircraft_AirOps)activeUnit.vmethod_92();
												activeUnit.vmethod_109(ActiveUnit._ActiveUnitStatus.HeadingToRefuelPoint);
												aircraft_AirOps3.method_37(Aircraft_AirOps._AirOpsCondition.ManoeuveringToRefuel);
												aircraft_AirOps3.method_25(aircraft3);
											}
										}
										goto IL_30E;
									}
									finally
									{
										IEnumerator<ActiveUnit> enumerator2;
										if (enumerator2 != null)
										{
											enumerator2.Dispose();
										}
									}
								}
								if (Operators.CompareString(text, "", false) != 0)
								{
									Client.smethod_46().method_59("The aircraft in group " + group2.Name + " cannot refuel. Reason: " + text, "AC unable to refuel", LoggedMessage.MessageType.AirOps, 5, aircraft2.string_0, Client.smethod_50(), new Geopoint_Struct(aircraft2.vmethod_28(null), aircraft2.vmethod_30(null)));
								}
							}
							IL_30E:
							group2.vmethod_86().vmethod_11(0f, false, false);
						}
						if (unit.bool_4)
						{
							ValueTuple<ActiveUnit_DockingOps.Enum32, string> valueTuple = ((ActiveUnit)unit).vmethod_93().method_54(((ActiveUnit)unit).vmethod_86().method_18(), activeUnit_0, list, false, new int?(100));
							if (valueTuple.Item1 != ActiveUnit_DockingOps.Enum32.const_1 && Operators.CompareString(valueTuple.Item2, string.Empty, false) != 0)
							{
								DarkMessageBox.smethod_0(valueTuple.Item2, "Unable to UNREP", Enum11.const_0);
								Client.smethod_46().method_59("Unit " + unit.Name + " cannot UNREP. Reason: " + valueTuple.Item2, "Unit " + unit.Name + " cannot UNREP", LoggedMessage.MessageType.DockingOps, 5, unit.string_0, Client.smethod_50(), new Geopoint_Struct(unit.vmethod_28(null), unit.vmethod_30(null)));
							}
							((ActiveUnit)unit).vmethod_86().vmethod_11(0f, false, false);
						}
						else if (unit.bool_8 && !unit.method_5())
						{
							ValueTuple<ActiveUnit_DockingOps.Enum32, string> valueTuple2 = ((ActiveUnit)unit).vmethod_93().method_54(((ActiveUnit)unit).vmethod_86().method_18(), activeUnit_0, list, false, new int?(100));
							if (valueTuple2.Item1 != ActiveUnit_DockingOps.Enum32.const_1 && Operators.CompareString(valueTuple2.Item2, string.Empty, false) != 0)
							{
								DarkMessageBox.smethod_0(valueTuple2.Item2, "Unable to replenish", Enum11.const_0);
								Client.smethod_46().method_59("Unit " + unit.Name + " cannot replenish. Reason: " + valueTuple2.Item2, "Unit " + unit.Name + " cannot replenish", LoggedMessage.MessageType.DockingOps, 5, unit.string_0, Client.smethod_50(), new Geopoint_Struct(unit.vmethod_28(null), unit.vmethod_30(null)));
							}
							((ActiveUnit)unit).vmethod_86().vmethod_11(0f, false, false);
						}
						if (unit.bool_1)
						{
							Group group3 = (Group)unit;
							List<string> list2 = new List<string>();
							try
							{
								foreach (ActiveUnit activeUnit2 in group3.vmethod_141().Values)
								{
									ValueTuple<ActiveUnit_DockingOps.Enum32, string> valueTuple3 = activeUnit2.vmethod_93().method_54(activeUnit2.vmethod_86().method_18(), activeUnit_0, list, false, new int?(100));
									if (valueTuple3.Item1 != ActiveUnit_DockingOps.Enum32.const_1 && Operators.CompareString(valueTuple3.Item2, string.Empty, false) != 0)
									{
										Client.smethod_46().method_59("Unit " + activeUnit2.Name + " cannot UNREP. Reason: " + valueTuple3.Item2, "Unit " + unit.Name + " cannot UNREP", LoggedMessage.MessageType.AirOps, 5, activeUnit2.string_0, Client.smethod_50(), new Geopoint_Struct(activeUnit2.vmethod_28(null), activeUnit2.vmethod_30(null)));
										list2.Add(activeUnit2.Name + ": " + valueTuple3.Item2);
									}
								}
							}
							finally
							{
								IEnumerator<ActiveUnit> enumerator3;
								if (enumerator3 != null)
								{
									enumerator3.Dispose();
								}
							}
							if (list2.Count > 0)
							{
								DarkMessageBox.smethod_0(string.Join("\r\n", list2), "Some of the group's units failed to schedule an UNREP redezvous", Enum11.const_0);
							}
							group3.vmethod_86().vmethod_11(0f, false, false);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
				this.method_97().method_2(Client.smethod_46(), Client.smethod_50(), Client.smethod_54(), false);
			}
		}

		// Token: 0x0600645D RID: 25693 RVA: 0x0003F5CC File Offset: 0x0003D7CC
		private void method_334(object sender, EventArgs e)
		{
			this.method_171();
		}

		// Token: 0x0600645E RID: 25694 RVA: 0x0003D896 File Offset: 0x0003BA96
		private void method_335(object sender, EventArgs e)
		{
			this.method_172();
		}

		// Token: 0x0600645F RID: 25695 RVA: 0x0003F5D4 File Offset: 0x0003D7D4
		private void method_336(object sender, EventArgs e)
		{
			this.method_238();
		}

		// Token: 0x06006460 RID: 25696 RVA: 0x0003F5DC File Offset: 0x0003D7DC
		private void method_337(object sender, EventArgs e)
		{
			this.method_166();
		}

		// Token: 0x06006461 RID: 25697 RVA: 0x0003F5E4 File Offset: 0x0003D7E4
		private void method_338(object sender, EventArgs e)
		{
			this.method_227();
		}

		// Token: 0x06006462 RID: 25698 RVA: 0x0003F5EC File Offset: 0x0003D7EC
		private void method_339(object sender, EventArgs e)
		{
			this.method_169();
		}

		// Token: 0x06006463 RID: 25699 RVA: 0x0003F5F4 File Offset: 0x0003D7F4
		private void method_340(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_36().Show();
		}

		// Token: 0x06006464 RID: 25700 RVA: 0x0037F884 File Offset: 0x0037DA84
		private void method_341(object sender, EventArgs e)
		{
			try
			{
				Class2413.smethod_2().method_34().Show();
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200217", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
				Class2413.smethod_2().method_34().Show();
			}
		}

		// Token: 0x06006465 RID: 25701 RVA: 0x0003F605 File Offset: 0x0003D805
		private void method_342(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_32().Show();
		}

		// Token: 0x06006466 RID: 25702 RVA: 0x0003F616 File Offset: 0x0003D816
		private void method_343(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_24().Show();
		}

		// Token: 0x06006467 RID: 25703 RVA: 0x0003F627 File Offset: 0x0003D827
		private void method_344(object sender, EventArgs e)
		{
			this.method_345();
		}

		// Token: 0x06006468 RID: 25704 RVA: 0x0037F8F8 File Offset: 0x0037DAF8
		public void method_345()
		{
			if (Information.IsNothing(Client.smethod_54()))
			{
				DarkMessageBox.smethod_2("No unit selected!", "", Enum11.const_0);
				return;
			}
			if (Client.smethod_54().bool_0 && ((ActiveUnit)Client.smethod_54()).vmethod_100().Length > 0)
			{
				Class2413.smethod_2().method_20().activeUnit_0 = (ActiveUnit)Client.smethod_54();
				Class2413.smethod_2().method_20().Show();
			}
		}

		// Token: 0x06006469 RID: 25705 RVA: 0x0003F62F File Offset: 0x0003D82F
		private void method_346(object sender, EventArgs e)
		{
			Client.smethod_52().method_24(!Client.smethod_52().method_23());
			this.method_307();
		}

		// Token: 0x0600646A RID: 25706 RVA: 0x0003F64E File Offset: 0x0003D84E
		private void method_347(object sender, EventArgs e)
		{
			this.method_173();
		}

		// Token: 0x0600646B RID: 25707 RVA: 0x0003F193 File Offset: 0x0003D393
		private void method_348(object sender, EventArgs e)
		{
			this.method_242();
		}

		// Token: 0x0600646C RID: 25708 RVA: 0x0003F656 File Offset: 0x0003D856
		private void method_349(object sender, EventArgs e)
		{
			this.method_174();
		}

		// Token: 0x0600646D RID: 25709 RVA: 0x0037F96C File Offset: 0x0037DB6C
		private void method_350(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have a side selected before you can view its briefing", "No side selected!", Enum11.const_0);
				return;
			}
			try
			{
				Class2413.smethod_2().method_21().side_0 = Client.smethod_50();
				Class2413.smethod_2().method_21().Show();
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200218", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x0600646E RID: 25710 RVA: 0x0003F65E File Offset: 0x0003D85E
		private void method_351(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_19);
		}

		// Token: 0x0600646F RID: 25711 RVA: 0x0003F667 File Offset: 0x0003D867
		private void method_352(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_1("You must have a side selected in order to add a satellite.", "No side selected!", Enum11.const_0);
				return;
			}
			new AddSatellite().Show();
		}

		// Token: 0x06006470 RID: 25712 RVA: 0x0037FA04 File Offset: 0x0037DC04
		public void method_353()
		{
			this.vmethod_776().Visible = Client.smethod_46().DeclaredFeatures.Contains(Scenario.ScenarioFeatureOption.const_5);
			this.vmethod_906().Visible = Client.smethod_46().DeclaredFeatures.Contains(Scenario.ScenarioFeatureOption.const_5);
			this.vmethod_904().Visible = Client.smethod_46().DeclaredFeatures.Contains(Scenario.ScenarioFeatureOption.const_5);
			this.vmethod_900().Visible = true;
			this.vmethod_902().Visible = true;
			this.vmethod_838().Visible = true;
		}

		// Token: 0x06006471 RID: 25713 RVA: 0x0037FA88 File Offset: 0x0037DC88
		private void MainForm_Shown(object sender, EventArgs e)
		{
			base.SetStyle(ControlStyles.UserPaint | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.OptimizedDoubleBuffer, true);
			try
			{
				StartGameMenuWindow.smethod_3(base.Handle);
				if (Class570.class280_0.method_18() == Class279.Class280.Enum70.const_0 && Client.float_1 != 1f)
				{
					Class2413.smethod_2().method_10().Show();
					Class2413.smethod_2().method_10().Close();
				}
				if (Class570.class280_0.method_50())
				{
					string text = "Calling MainForm_Shown.";
					GameGeneral.smethod_26(ref text);
				}
				base.Hide();
				base.Enabled = false;
				this.list_56.Add(Class579.smethod_0());
				this.list_56.Add(Class579.smethod_1());
				this.list_56.Add(Class579.smethod_2());
				this.list_56.Add(Class579.smethod_3());
				if (Class570.class280_0.method_50())
				{
					string text = "Populated CanalList.";
					GameGeneral.smethod_26(ref text);
				}
				Client.smethod_13(new Client.Delegate77(this.method_311));
				Scenario.smethod_0(new Scenario.TitleChangedEventHandler(this.method_386));
				Scenario.smethod_4(new Scenario.TimeCompressionChangedEventHandler(this.method_316));
				Class279.smethod_1(new Class279.Delegate31(this.method_176));
				Class279.smethod_0(new Class279.Delegate30(this.method_155));
				UnitStatus_WPF.smethod_3(new UnitStatus_WPF.Delegate94(this.method_166));
				UnitStatus_WPF.smethod_1(new UnitStatus_WPF.Delegate92(this.method_242));
				UnitStatus_WPF.smethod_0(new UnitStatus_WPF.Delegate91(this.method_238));
				UnitStatus_WPF.smethod_2(new UnitStatus_WPF.Delegate93(this.method_227));
				EmconControl.smethod_0(new EmconControl.Delegate89(this.method_166));
				UnitEMCONViewModel.SensorsFormRequested += this.method_166;
				DBOps.smethod_2(new DBOps.Delegate56(this.method_354));
				try
				{
					foreach (object obj in this.vmethod_836().Items)
					{
						ToolStripItem toolStripItem = (ToolStripItem)obj;
						if (toolStripItem.GetType() == typeof(ToolStripButton))
						{
							toolStripItem.Size = new System.Drawing.Size(114, 32);
						}
					}
				}
				finally
				{
					IEnumerator enumerator;
					if (enumerator is IDisposable)
					{
						(enumerator as IDisposable).Dispose();
					}
				}
				this.vmethod_796().method_9(null);
				this.vmethod_796().method_6("");
				this.vmethod_796().method_2(false);
				this.vmethod_796().method_5(GameGeneral.class1874_0);
				this.vmethod_796().Dock = DockStyle.Fill;
				this.vmethod_796().method_11(false);
				this.vmethod_796().Location = new System.Drawing.Point(0, 0);
				this.vmethod_796().Name = "WorldWindow1";
				this.vmethod_796().Text = "WorldWindow1";
				this.vmethod_798().Controls.Add(this.vmethod_796());
				this.vmethod_796().Width = 800;
				this.vmethod_796().Height = 600;
				Client.worldWindow_0 = this.vmethod_796();
				if (Class570.class280_0.method_50())
				{
					string text = "Added World Window panel.";
					GameGeneral.smethod_26(ref text);
				}
				base.WindowState = FormWindowState.Maximized;
				this.Text = GameGeneral.smethod_2();
				this.vmethod_922().Visible = false;
				if (DBOps.bool_0 && !this.bool_10)
				{
					this.method_313();
				}
				if (Class570.class280_0.method_50())
				{
					string text = "Built database list.";
					GameGeneral.smethod_26(ref text);
				}
				this.method_263();
				this.method_161(true, new GeoPoint(0.0, 0.0));
				this.method_153(8000000);
				Client.bool_1 = true;
				this.method_178();
				if (Class570.class280_0.method_50())
				{
					string text = "Prepared Wold Window.";
					GameGeneral.smethod_26(ref text);
				}
				this.vmethod_914().Visible = Class2472.hashSet_0.Contains(Class2472.Enum202.const_2);
				this.vmethod_916().Visible = Class2472.hashSet_0.Contains(Class2472.Enum202.const_3);
				this.vmethod_910().Visible = Class2472.hashSet_0.Contains(Class2472.Enum202.const_6);
				this.vmethod_42().Visible = Class2472.hashSet_0.Contains(Class2472.Enum202.const_0);
				this.vmethod_156().Visible = Class2472.hashSet_0.Contains(Class2472.Enum202.const_0);
				this.vmethod_246().Visible = Class2472.hashSet_0.Contains(Class2472.Enum202.const_0);
				this.vmethod_740().Visible = Class2472.hashSet_0.Contains(Class2472.Enum202.const_4);
				this.vmethod_940().Visible = GameGeneral.bool_0;
				this.method_353();
				Class2486.smethod_2();
				base.Enabled = true;
				Client.bool_0 = true;
				if (Class570.class280_0.method_50())
				{
					string text = "Calling MainForm_Shown: Show window.";
					GameGeneral.smethod_26(ref text);
				}
				base.Show();
				Class2413.smethod_2().method_42().Close();
				if (Class570.class280_0.method_50())
				{
					string text = "Closed splash screen.";
					GameGeneral.smethod_26(ref text);
				}
				if (Class570.class280_0.method_6())
				{
					this.method_125();
				}
				this.vmethod_32().Interval = 250;
				this.vmethod_32().Start();
				this.vmethod_70().Start();
				this.vmethod_790().Interval = 1000;
				this.vmethod_790().Start();
				StartGameMenuWindow.smethod_1();
				if (Class570.class280_0.method_50())
				{
					string text = "Showed Start Game window.";
					GameGeneral.smethod_26(ref text);
				}
				this.vmethod_756().Visible = Class2474.bool_0;
				if (Class570.class280_0.method_50())
				{
					string text = "Finished MainForm_Shown.";
					GameGeneral.smethod_26(ref text);
				}
				this.vmethod_796().method_7().method_1().method_0(new CameraBase.PanDelegate(this.method_129));
				ToolStripManager.Renderer = this.vmethod_40().Renderer;
				this.method_99();
				this.method_124();
				if (Class570.class280_0.method_60())
				{
					Class2558.smethod_18(this);
					this.vmethod_998().Checked = true;
				}
				Client.smethod_21(true);
				this.vmethod_804().Start();
			}
			catch (Exception ex)
			{
				ex.Data.Add("Error at 200580", ex.Message);
				GameGeneral.smethod_25(ref ex);
				if (Debugger.IsAttached)
				{
					Debugger.Break();
				}
			}
		}

		// Token: 0x06006472 RID: 25714 RVA: 0x0003F691 File Offset: 0x0003D891
		private void method_354()
		{
			base.Invoke(new MethodInvoker(this.method_313));
		}

		// Token: 0x06006473 RID: 25715 RVA: 0x0003F6A6 File Offset: 0x0003D8A6
		private void method_355(object sender, EventArgs e)
		{
			this.method_165();
		}

		// Token: 0x06006474 RID: 25716 RVA: 0x0003F5DC File Offset: 0x0003D7DC
		private void method_356(object sender, EventArgs e)
		{
			this.method_166();
		}

		// Token: 0x06006475 RID: 25717 RVA: 0x0003F5E4 File Offset: 0x0003D7E4
		private void method_357(object sender, EventArgs e)
		{
			this.method_227();
		}

		// Token: 0x06006476 RID: 25718 RVA: 0x0003F6AE File Offset: 0x0003D8AE
		private void method_358(object sender, EventArgs e)
		{
			this.method_359();
		}

		// Token: 0x06006477 RID: 25719 RVA: 0x0003F6B6 File Offset: 0x0003D8B6
		private void method_359()
		{
			this.referencePoint_0 = null;
			if (Client.smethod_61() == Client.Enum197.const_1)
			{
				this.geopoint_Struct_1 = default(Geopoint_Struct);
				Client.smethod_62(Client.Enum197.const_0);
				return;
			}
			this.geopoint_Struct_1 = default(Geopoint_Struct);
			Client.smethod_62(Client.Enum197.const_1);
		}

		// Token: 0x06006478 RID: 25720 RVA: 0x0003F6EC File Offset: 0x0003D8EC
		private void method_360()
		{
			this.vmethod_796().Cursor = Cursors.Cross;
			this.vmethod_808().Text = "Select target to drop - Hold down SHIFT to drop multiple targets";
			Client.smethod_62(Client.Enum197.const_10);
		}

		// Token: 0x06006479 RID: 25721 RVA: 0x00380084 File Offset: 0x0037E284
		private void method_361()
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_50().method_56().Count != 0)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
						{
							if (unit.bool_1)
							{
								try
								{
									foreach (ActiveUnit activeUnit in ((Group)unit).vmethod_141().Values)
									{
										ActiveUnit activeUnit2 = (ActiveUnit)activeUnit;
										activeUnit2.vmethod_86().method_33(ref activeUnit2);
									}
									continue;
								}
								finally
								{
									IEnumerator<ActiveUnit> enumerator2;
									if (enumerator2 != null)
									{
										enumerator2.Dispose();
									}
								}
							}
							ActiveUnit activeUnit3 = (ActiveUnit)unit;
							activeUnit3.vmethod_86().method_33(ref activeUnit3);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x0600647A RID: 25722 RVA: 0x0003F715 File Offset: 0x0003D915
		private void method_362(object sender, EventArgs e)
		{
			this.method_167();
		}

		// Token: 0x0600647B RID: 25723 RVA: 0x0003F71D File Offset: 0x0003D91D
		private void method_363(object sender, EventArgs e)
		{
			this.method_168();
		}

		// Token: 0x0600647C RID: 25724 RVA: 0x0003F725 File Offset: 0x0003D925
		private void method_364(object sender, EventArgs e)
		{
			this.method_170();
		}

		// Token: 0x0600647D RID: 25725 RVA: 0x0003F72D File Offset: 0x0003D92D
		private void method_365(object sender, EventArgs e)
		{
			this.method_360();
		}

		// Token: 0x0600647E RID: 25726 RVA: 0x0003F735 File Offset: 0x0003D935
		private void method_366(object sender, EventArgs e)
		{
			this.method_361();
		}

		// Token: 0x0600647F RID: 25727 RVA: 0x0003F5CC File Offset: 0x0003D7CC
		private void method_367(object sender, EventArgs e)
		{
			this.method_171();
		}

		// Token: 0x06006480 RID: 25728 RVA: 0x0003F5EC File Offset: 0x0003D7EC
		private void method_368(object sender, EventArgs e)
		{
			this.method_169();
		}

		// Token: 0x06006481 RID: 25729 RVA: 0x0003F193 File Offset: 0x0003D393
		private void method_369(object sender, EventArgs e)
		{
			this.method_242();
		}

		// Token: 0x06006482 RID: 25730 RVA: 0x0003F64E File Offset: 0x0003D84E
		private void method_370(object sender, EventArgs e)
		{
			this.method_173();
		}

		// Token: 0x06006483 RID: 25731 RVA: 0x0003F656 File Offset: 0x0003D856
		private void method_371(object sender, EventArgs e)
		{
			this.method_174();
		}

		// Token: 0x06006484 RID: 25732 RVA: 0x0003F5D4 File Offset: 0x0003D7D4
		private void method_372(object sender, EventArgs e)
		{
			this.method_238();
		}

		// Token: 0x06006485 RID: 25733 RVA: 0x0003F73D File Offset: 0x0003D93D
		private void method_373(object sender, EventArgs e)
		{
			Class2452.smethod_0();
		}

		// Token: 0x06006486 RID: 25734 RVA: 0x0003F744 File Offset: 0x0003D944
		private void method_374(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have at least one side to view available platforms", "No side!", Enum11.const_0);
				return;
			}
			Class2413.smethod_2().method_8().Show();
		}

		// Token: 0x06006487 RID: 25735 RVA: 0x0003F773 File Offset: 0x0003D973
		private void method_375(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				Class2413.smethod_2().method_48().Show();
			}
		}

		// Token: 0x06006488 RID: 25736 RVA: 0x0038018C File Offset: 0x0037E38C
		private void method_376(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_60()))
			{
				try
				{
					foreach (ReferencePoint referencePoint in Client.smethod_60())
					{
						referencePoint.bool_12 = true;
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x06006489 RID: 25737 RVA: 0x003801F0 File Offset: 0x0037E3F0
		private void method_377(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_60()))
			{
				try
				{
					foreach (ReferencePoint referencePoint in Client.smethod_60())
					{
						referencePoint.bool_12 = false;
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x0600648A RID: 25738 RVA: 0x0003F790 File Offset: 0x0003D990
		private void method_378(object sender, EventArgs e)
		{
			Client.scenarioFeatures_0 = new ScenarioFeatures();
			Client.scenarioFeatures_0.Show();
		}

		// Token: 0x0600648B RID: 25739 RVA: 0x0003F7A6 File Offset: 0x0003D9A6
		private void method_379(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_59().Show();
		}

		// Token: 0x0600648C RID: 25740 RVA: 0x0003F7B7 File Offset: 0x0003D9B7
		private void method_380(object sender, EventArgs e)
		{
			Client.smethod_52().method_26(!Client.smethod_52().method_25());
			this.method_307();
		}

		// Token: 0x0600648D RID: 25741 RVA: 0x0003F7D6 File Offset: 0x0003D9D6
		private void method_381(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have at least one side in order to edit scoring.", "No sides present!", Enum11.const_0);
				return;
			}
			Class2413.smethod_2().method_61().Show();
		}

		// Token: 0x0600648E RID: 25742 RVA: 0x0003F805 File Offset: 0x0003DA05
		private void method_382(object sender, EventArgs e)
		{
			Client.orientationType_0 = ReferencePoint.OrientationType.Rotating;
			Client.smethod_62(Client.Enum197.const_15);
		}

		// Token: 0x0600648F RID: 25743 RVA: 0x00380254 File Offset: 0x0037E454
		private void method_383(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (ReferencePoint referencePoint in Client.smethod_50().vmethod_12())
					{
						if (referencePoint.method_19())
						{
							referencePoint.orientationType_0 = ReferencePoint.OrientationType.Fixed;
							referencePoint.method_21();
						}
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
		}

		// Token: 0x06006490 RID: 25744 RVA: 0x003802C8 File Offset: 0x0037E4C8
		private void method_384(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (ReferencePoint referencePoint in Client.smethod_50().vmethod_12())
					{
						if (referencePoint.method_19())
						{
							referencePoint.orientationType_0 = ReferencePoint.OrientationType.Rotating;
							referencePoint.method_21();
						}
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
		}

		// Token: 0x06006491 RID: 25745 RVA: 0x0038033C File Offset: 0x0037E53C
		private void method_385(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (ReferencePoint referencePoint in Client.smethod_50().vmethod_12())
					{
						if (referencePoint.method_19())
						{
							referencePoint.bool_12 = false;
							referencePoint.orientationType_0 = ReferencePoint.OrientationType.Fixed;
							referencePoint.unit_0 = null;
							referencePoint.float_2 = 0f;
							referencePoint.float_2 = 0f;
						}
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
		}

		// Token: 0x06006492 RID: 25746 RVA: 0x0003F814 File Offset: 0x0003DA14
		public void method_386(Scenario scenario_0, string string_11)
		{
			if (Client.smethod_46() == scenario_0)
			{
				this.Text = string_11 + (string.IsNullOrEmpty(string_11) ? "" : " - ") + GameGeneral.smethod_2();
			}
		}

		// Token: 0x06006493 RID: 25747 RVA: 0x0003F843 File Offset: 0x0003DA43
		private void method_387(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				new DoctrineForm
				{
					class310_0 = Client.smethod_50()
				}.Show();
			}
		}

		// Token: 0x06006494 RID: 25748 RVA: 0x003803CC File Offset: 0x0037E5CC
		private void method_388(object sender, EventArgs e)
		{
			this.vmethod_234().InitialDirectory = System.Windows.Forms.Application.StartupPath;
			this.vmethod_234().FileName = Client.smethod_46().method_0() + ".ini";
			if (this.vmethod_234().ShowDialog() == DialogResult.OK)
			{
				FileStream fileStream = File.Create(this.vmethod_234().FileName);
				MemoryStream memoryStream = new MemoryStream();
				Class559.smethod_3(Client.smethod_46(), memoryStream, this.vmethod_234().FileName, null);
				fileStream.Write(memoryStream.ToArray(), 0, (int)memoryStream.Position);
				fileStream.Close();
			}
		}

		// Token: 0x06006495 RID: 25749 RVA: 0x0038045C File Offset: 0x0037E65C
		private void method_389(object sender, EventArgs e)
		{
			if (Client.smethod_46().method_16())
			{
				List<string> list = new List<string>();
				Class264.smethod_3(GameGeneral.string_4, list);
				try
				{
					foreach (string path in list)
					{
						Class264 @class = Class264.smethod_1(path);
						if (Operators.CompareString(@class.string_0, Client.smethod_46().CampaignID, false) == 0)
						{
							Client.string_3 = Path.Combine(Path.GetDirectoryName(path), Guid.NewGuid().ToString() + ".save");
							break;
						}
					}
				}
				finally
				{
					List<string>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
			}
			if (Operators.CompareString(Client.string_3, null, false) == 0)
			{
				this.method_215(RuntimeHelpers.GetObjectValue(sender), e);
				return;
			}
			bool flag = Client.smethod_0().method_0() == Class279.Enum68.const_1;
			if (flag)
			{
				Client.smethod_0().method_4();
			}
			base.Enabled = false;
			Client.smethod_75(false, Client.string_3, false);
			Client.smethod_102(Client.string_3);
			base.Enabled = true;
			Client.smethod_62(Client.Enum197.const_0);
			if (flag)
			{
				Client.smethod_0().method_3();
			}
		}

		// Token: 0x06006496 RID: 25750 RVA: 0x0003F866 File Offset: 0x0003DA66
		private void method_390(object sender, EventArgs e)
		{
			if (!this.vmethod_368().Checked)
			{
				Client.smethod_52().method_54(Class285.Enum85.const_1);
				this.method_307();
			}
		}

		// Token: 0x06006497 RID: 25751 RVA: 0x0003F886 File Offset: 0x0003DA86
		private void method_391(object sender, EventArgs e)
		{
			if (!this.vmethod_370().Checked)
			{
				Client.smethod_52().method_54(Class285.Enum85.const_0);
				this.method_307();
			}
		}

		// Token: 0x06006498 RID: 25752 RVA: 0x0003F8A6 File Offset: 0x0003DAA6
		private void method_392(object sender, EventArgs e)
		{
			if (!this.vmethod_372().Checked)
			{
				Client.smethod_52().method_54(Class285.Enum85.const_2);
				this.method_307();
			}
		}

		// Token: 0x06006499 RID: 25753 RVA: 0x0003ADFE File Offset: 0x00038FFE
		private void method_393(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_16().Show();
		}

		// Token: 0x0600649A RID: 25754 RVA: 0x00380580 File Offset: 0x0037E780
		private void method_394(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				Client.smethod_50().vmethod_12();
				try
				{
					foreach (ReferencePoint referencePoint in Client.smethod_60())
					{
						referencePoint.method_20(false);
					}
				}
				finally
				{
					List<ReferencePoint>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x0600649B RID: 25755 RVA: 0x0003F8C6 File Offset: 0x0003DAC6
		private void method_395(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_33().Show();
		}

		// Token: 0x0600649C RID: 25756 RVA: 0x0003F8D7 File Offset: 0x0003DAD7
		private void method_396(object sender, EventArgs e)
		{
			this.method_397();
			this.method_97().method_2(Client.smethod_46(), Client.smethod_50(), Client.smethod_54(), false);
		}

		// Token: 0x0600649D RID: 25757 RVA: 0x003805F0 File Offset: 0x0037E7F0
		private void method_397()
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_50().method_56().Count != 0)
			{
				List<ActiveUnit> list = new List<ActiveUnit>();
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50())
						{
							list.Add((ActiveUnit)unit);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				if (list.Count > 0)
				{
					this.method_398(ref list);
				}
				this.method_361();
			}
		}

		// Token: 0x0600649E RID: 25758 RVA: 0x00380698 File Offset: 0x0037E898
		private void method_398(ref List<ActiveUnit> list_62)
		{
			try
			{
				foreach (ActiveUnit activeUnit in list_62)
				{
					if (activeUnit.bool_0 && activeUnit.vmethod_7(false) == Client.smethod_50() && !activeUnit.bool_2)
					{
						ActiveUnit activeUnit2 = activeUnit;
						if (activeUnit.bool_3)
						{
							Aircraft aircraft = (Aircraft)activeUnit;
							Aircraft_AirOps aircraft_AirOps = aircraft.method_164();
							aircraft_AirOps.method_37(Aircraft_AirOps._AirOpsCondition.Airborne);
							if (Enumerable.Count<Waypoint>(aircraft.method_157().method_4()) > 0 && aircraft.vmethod_108() == ActiveUnit._ActiveUnitStatus.OnPlottedCourse)
							{
								aircraft.vmethod_109(ActiveUnit._ActiveUnitStatus.OnPlottedCourse);
							}
							else if (aircraft.vmethod_108() == ActiveUnit._ActiveUnitStatus.Tasked)
							{
								aircraft.vmethod_109(ActiveUnit._ActiveUnitStatus.Tasked);
							}
							else
							{
								aircraft.vmethod_109(ActiveUnit._ActiveUnitStatus.Unassigned);
							}
							if (aircraft.vmethod_110() != ActiveUnit._ActiveUnitFuelState.None)
							{
								aircraft.vmethod_111(ActiveUnit._ActiveUnitFuelState.IgnoreBingoAndJoker);
							}
							if (aircraft.vmethod_112() != ActiveUnit._ActiveUnitWeaponState.None)
							{
								aircraft.vmethod_113(ActiveUnit._ActiveUnitWeaponState.IgnoreWinchesterAndShotgun);
							}
							if (!Information.IsNothing(aircraft_AirOps.method_24()))
							{
								aircraft_AirOps.method_45();
							}
						}
						else if (activeUnit.bool_6)
						{
							Ship ship = (Ship)activeUnit;
							ActiveUnit_DockingOps activeUnit_DockingOps = ship.vmethod_93();
							activeUnit_DockingOps.method_9(ActiveUnit_DockingOps._DockingOpsCondition.Underway);
							if (Enumerable.Count<Waypoint>(ship.method_144().method_4()) > 0)
							{
								ship.vmethod_109(ActiveUnit._ActiveUnitStatus.OnPlottedCourse);
							}
							else
							{
								ship.vmethod_109(ActiveUnit._ActiveUnitStatus.Unassigned);
							}
							if (!Information.IsNothing(activeUnit_DockingOps.method_6()))
							{
								activeUnit_DockingOps.method_26();
							}
						}
						else if (activeUnit.bool_5)
						{
							Submarine submarine = (Submarine)activeUnit;
							ActiveUnit_DockingOps activeUnit_DockingOps2 = submarine.vmethod_93();
							activeUnit_DockingOps2.method_9(ActiveUnit_DockingOps._DockingOpsCondition.Underway);
							if (Enumerable.Count<Waypoint>(submarine.method_152().method_4()) > 0)
							{
								submarine.vmethod_109(ActiveUnit._ActiveUnitStatus.OnPlottedCourse);
							}
							else
							{
								submarine.vmethod_109(ActiveUnit._ActiveUnitStatus.Unassigned);
							}
							if (!Information.IsNothing(activeUnit_DockingOps2.method_6()))
							{
								activeUnit_DockingOps2.method_26();
							}
						}
						else if (activeUnit.bool_1)
						{
							this.method_399(ref activeUnit2);
							activeUnit2.doctrine_0.method_4();
							List<ActiveUnit> list = new List<ActiveUnit>();
							try
							{
								foreach (ActiveUnit activeUnit3 in ((Group)activeUnit).vmethod_141().Values)
								{
									if (activeUnit3.vmethod_127())
									{
										list.Add(activeUnit3);
									}
								}
							}
							finally
							{
								IEnumerator<ActiveUnit> enumerator2;
								if (enumerator2 != null)
								{
									enumerator2.Dispose();
								}
							}
							if (list.Count > 0)
							{
								this.method_398(ref list);
							}
						}
						else
						{
							activeUnit2.vmethod_109(ActiveUnit._ActiveUnitStatus.Unassigned);
						}
						this.method_399(ref activeUnit2);
						activeUnit2.doctrine_0.method_4();
						activeUnit2.vmethod_88().vmethod_5(activeUnit2.method_78());
						activeUnit2.vmethod_81(Waypoint.Enum81.const_2);
					}
				}
			}
			finally
			{
				List<ActiveUnit>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
			Client.bool_1 = true;
		}

		// Token: 0x0600649F RID: 25759 RVA: 0x00380950 File Offset: 0x0037EB50
		public void method_399(ref ActiveUnit activeUnit_0)
		{
			string str = "";
			if (activeUnit_0.bool_3 && Operators.CompareString(activeUnit_0.Name, activeUnit_0.string_2, false) != 0)
			{
				str = " (" + activeUnit_0.string_2 + ")";
			}
			if (!Information.IsNothing(activeUnit_0.vmethod_101()))
			{
				string name = activeUnit_0.vmethod_101().Name;
				Mission mission = activeUnit_0.vmethod_101();
				if (activeUnit_0.vmethod_86().bool_2)
				{
					activeUnit_0.vmethod_86().bool_2 = false;
				}
				activeUnit_0.vmethod_85().vmethod_10();
				ActiveUnit activeUnit = activeUnit_0;
				Mission value = null;
				bool setMissionOnly = false;
				Mission.MissionAssignmentAttemptResult missionAssignmentAttemptResult = Mission.MissionAssignmentAttemptResult.None;
				activeUnit.vmethod_102(value, setMissionOnly, ref missionAssignmentAttemptResult);
				activeUnit_0.vmethod_104(null);
				if (!Information.IsNothing(mission))
				{
					mission.method_56(Client.smethod_46(), Client.smethod_50());
				}
				Client.smethod_46().method_59(activeUnit_0.Name + str + " has been removed from mission: " + name, "Unit removed from mission", LoggedMessage.MessageType.UnitAI, 5, activeUnit_0.string_0, Client.smethod_50(), new Geopoint_Struct(activeUnit_0.vmethod_28(null), activeUnit_0.vmethod_30(null)));
				return;
			}
			if (!Information.IsNothing(activeUnit_0.vmethod_103()))
			{
				string name2 = activeUnit_0.vmethod_103().Name;
				Mission mission2 = activeUnit_0.vmethod_101();
				ActiveUnit activeUnit2 = activeUnit_0;
				Mission value2 = null;
				bool setMissionOnly2 = false;
				Mission.MissionAssignmentAttemptResult missionAssignmentAttemptResult = Mission.MissionAssignmentAttemptResult.None;
				activeUnit2.vmethod_102(value2, setMissionOnly2, ref missionAssignmentAttemptResult);
				activeUnit_0.vmethod_104(null);
				if (!Information.IsNothing(mission2))
				{
					mission2.method_56(Client.smethod_46(), Client.smethod_50());
				}
				Client.smethod_46().method_59(activeUnit_0.Name + str + " has been removed from task pool: " + name2, "Unit removed from task pool", LoggedMessage.MessageType.UnitAI, 5, activeUnit_0.string_0, Client.smethod_50(), new Geopoint_Struct(activeUnit_0.vmethod_28(null), activeUnit_0.vmethod_30(null)));
				return;
			}
			Client.smethod_46().method_59(activeUnit_0.Name + str + " has no orders (Unassigned)", "Unit unassigned", LoggedMessage.MessageType.UnitAI, 5, activeUnit_0.string_0, Client.smethod_50(), new Geopoint_Struct(activeUnit_0.vmethod_28(null), activeUnit_0.vmethod_30(null)));
		}

		// Token: 0x060064A0 RID: 25760 RVA: 0x0003F5CC File Offset: 0x0003D7CC
		private void method_400(object sender, EventArgs e)
		{
			this.method_171();
		}

		// Token: 0x060064A1 RID: 25761 RVA: 0x00380B74 File Offset: 0x0037ED74
		private void method_401()
		{
			List<Unit> list = new List<Unit>();
			Unit unit_ = null;
			Geopoint_Struct geopoint_Struct = Class2572.smethod_2(this.vmethod_796(), this.point_0.X, this.point_0.Y);
			if (!double.IsNaN(geopoint_Struct.double_1) && !double.IsNaN(geopoint_Struct.double_0))
			{
				short num = (short)(this.point_0.Y - 9);
				short num2 = (short)(this.point_0.Y + 9);
				short num3 = (short)(this.point_0.X - 9);
				short num4 = (short)(this.point_0.X + 9);
				int num5 = this.list_54.Count - 1;
				for (int i = 0; i <= num5; i++)
				{
					Unit unit = this.list_54[i];
					Tuple<int, int> tuple = null;
					this.dictionary_2.TryGetValue(unit, out tuple);
					System.Drawing.Point point;
					if (!Information.IsNothing(tuple))
					{
						int item = tuple.Item1;
						int item2 = tuple.Item2;
						point = new System.Drawing.Point(item, item2);
					}
					else
					{
						point = Class2572.smethod_0(this.vmethod_796(), unit.vmethod_30(null), unit.vmethod_28(null));
					}
					if (unit.bool_0 && !((ActiveUnit)unit).vmethod_90().vmethod_1() && !Client.smethod_52().method_1() && !Class2558.smethod_17((ActiveUnit)unit))
					{
						point = Class2572.smethod_0(this.vmethod_796(), ((ActiveUnit)unit).method_56().Value, ((ActiveUnit)unit).method_58().Value);
					}
					if ((int)num < point.Y && point.Y < (int)num2 && (int)num3 < point.X && point.X < (int)num4)
					{
						Class285.Enum87 enum87_ = Client.smethod_52().enum87_0;
						if (enum87_ != Class285.Enum87.const_0)
						{
							if (enum87_ == Class285.Enum87.const_1)
							{
								list.Add(unit);
							}
						}
						else if (!unit.bool_0 || !((ActiveUnit)unit).method_120())
						{
							list.Add(unit);
						}
					}
				}
				int count = list.Count;
				if (count != 0)
				{
					if (count != 1)
					{
						float num6 = float.PositiveInfinity;
						try
						{
							foreach (Unit unit2 in list)
							{
								float num7 = (float)unit2.method_29(geopoint_Struct);
								if (num7 < num6)
								{
									num6 = num7;
									unit_ = unit2;
								}
							}
							goto IL_263;
						}
						finally
						{
							List<Unit>.Enumerator enumerator;
							((IDisposable)enumerator).Dispose();
						}
					}
					unit_ = list[0];
				}
				else
				{
					unit_ = null;
				}
				IL_263:
				Unit unit3 = Client.smethod_42();
				Client.smethod_43(unit_);
				if (unit3 != Client.smethod_42())
				{
					this.vmethod_796().Invalidate();
				}
			}
		}

		// Token: 0x060064A2 RID: 25762 RVA: 0x00380E14 File Offset: 0x0037F014
		private void method_402(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_388()).Checked;
			this.method_404(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x060064A3 RID: 25763 RVA: 0x00380E40 File Offset: 0x0037F040
		private void method_403(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_388()).Checked;
			this.method_405(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x060064A4 RID: 25764 RVA: 0x00380E6C File Offset: 0x0037F06C
		private void method_404(ref bool bool_15)
		{
			if (!Information.IsNothing(Client.smethod_50()) && !Information.IsNothing(Client.smethod_54()) && Client.smethod_50().method_56().Count != 0)
			{
				bool_15 = !bool_15;
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && unit.bool_8 && !unit.method_5())
						{
							((Facility)unit).method_148().bool_4 = bool_15;
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x060064A5 RID: 25765 RVA: 0x00380F24 File Offset: 0x0037F124
		private void method_405(ref bool bool_15)
		{
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_50().method_56().Count != 0)
			{
				bool_15 = !bool_15;
				foreach (ActiveUnit unit in Client.smethod_50().activeUnit_0)
				{
					if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && unit.bool_8 && !unit.method_5())
					{
						((Facility)unit).method_148().bool_4 = bool_15;
					}
				}
			}
		}

		// Token: 0x060064A6 RID: 25766 RVA: 0x0003F8FA File Offset: 0x0003DAFA
		private void method_406(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_14().Show();
		}

		// Token: 0x060064A7 RID: 25767 RVA: 0x0003F90B File Offset: 0x0003DB0B
		private void method_407(object sender, EventArgs e)
		{
			if (!this.vmethod_396().Checked)
			{
				Client.smethod_52().method_58(Class285.Enum85.const_1);
				this.method_307();
			}
		}

		// Token: 0x060064A8 RID: 25768 RVA: 0x0003F92B File Offset: 0x0003DB2B
		private void method_408(object sender, EventArgs e)
		{
			if (!this.vmethod_398().Checked)
			{
				Client.smethod_52().method_58(Class285.Enum85.const_0);
				this.method_307();
			}
		}

		// Token: 0x060064A9 RID: 25769 RVA: 0x0003F94B File Offset: 0x0003DB4B
		private void method_409(object sender, EventArgs e)
		{
			if (!this.vmethod_400().Checked)
			{
				Client.smethod_52().method_58(Class285.Enum85.const_2);
				this.method_307();
			}
		}

		// Token: 0x060064AA RID: 25770 RVA: 0x0003F96B File Offset: 0x0003DB6B
		private void method_410(object sender, EventArgs e)
		{
			this.method_177();
		}

		// Token: 0x060064AB RID: 25771 RVA: 0x00380FAC File Offset: 0x0037F1AC
		private void method_411(object sender, EventArgs e)
		{
			Class279.Enum68 @enum = Client.smethod_0().method_0();
			if (@enum == Class279.Enum68.const_0)
			{
				Client.smethod_0().method_3();
				return;
			}
			if (@enum != Class279.Enum68.const_1)
			{
				return;
			}
			Client.smethod_0().method_4();
		}

		// Token: 0x060064AC RID: 25772 RVA: 0x0003F973 File Offset: 0x0003DB73
		private void method_412(object sender, EventArgs e)
		{
			this.method_179();
		}

		// Token: 0x060064AD RID: 25773 RVA: 0x0003F6AE File Offset: 0x0003D8AE
		private void method_413(object sender, EventArgs e)
		{
			this.method_359();
		}

		// Token: 0x060064AE RID: 25774 RVA: 0x0003F8D7 File Offset: 0x0003DAD7
		private void method_414(object sender, EventArgs e)
		{
			this.method_397();
			this.method_97().method_2(Client.smethod_46(), Client.smethod_50(), Client.smethod_54(), false);
		}

		// Token: 0x060064AF RID: 25775 RVA: 0x0003F97B File Offset: 0x0003DB7B
		private void method_415(object sender, EventArgs e)
		{
			this.method_180();
		}

		// Token: 0x060064B0 RID: 25776 RVA: 0x00380FE4 File Offset: 0x0037F1E4
		private void method_416(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_2(Client.smethod_54(), true, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064B1 RID: 25777 RVA: 0x00381070 File Offset: 0x0037F270
		private void method_417(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_2(Client.smethod_54(), false, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064B2 RID: 25778 RVA: 0x003810FC File Offset: 0x0037F2FC
		private void method_418(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_3(Client.smethod_54(), true, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064B3 RID: 25779 RVA: 0x00381188 File Offset: 0x0037F388
		private void method_419(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_3(Client.smethod_54(), false, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064B4 RID: 25780 RVA: 0x0003F983 File Offset: 0x0003DB83
		private void method_420(object sender, EventArgs e)
		{
			this.method_120(false);
		}

		// Token: 0x060064B5 RID: 25781 RVA: 0x0003F98C File Offset: 0x0003DB8C
		private void method_421(object sender, EventArgs e)
		{
			this.method_121();
		}

		// Token: 0x060064B6 RID: 25782 RVA: 0x0003F994 File Offset: 0x0003DB94
		private void method_422(object sender, EventArgs e)
		{
			this.method_183();
		}

		// Token: 0x060064B7 RID: 25783 RVA: 0x0003F99C File Offset: 0x0003DB9C
		private void method_423(object sender, EventArgs e)
		{
			this.method_184();
		}

		// Token: 0x060064B8 RID: 25784 RVA: 0x0003F9A4 File Offset: 0x0003DBA4
		private void method_424(object sender, EventArgs e)
		{
			this.method_182();
		}

		// Token: 0x060064B9 RID: 25785 RVA: 0x0003F9AC File Offset: 0x0003DBAC
		private void method_425(object sender, EventArgs e)
		{
			this.method_185();
		}

		// Token: 0x060064BA RID: 25786 RVA: 0x0003F9B4 File Offset: 0x0003DBB4
		private void method_426(object sender, EventArgs e)
		{
			this.method_186();
		}

		// Token: 0x060064BB RID: 25787 RVA: 0x0003F9BC File Offset: 0x0003DBBC
		private void method_427(object sender, EventArgs e)
		{
			this.method_187();
		}

		// Token: 0x060064BC RID: 25788 RVA: 0x0003F9C4 File Offset: 0x0003DBC4
		private void method_428(object sender, EventArgs e)
		{
			this.method_181();
		}

		// Token: 0x060064BD RID: 25789 RVA: 0x0003F9CC File Offset: 0x0003DBCC
		private void method_429(object sender, EventArgs e)
		{
			Client.smethod_46().method_52(Scenario.enumTimeCompression.OneSec);
			this.method_316();
		}

		// Token: 0x060064BE RID: 25790 RVA: 0x0003F9DF File Offset: 0x0003DBDF
		private void method_430(object sender, EventArgs e)
		{
			this.method_190();
		}

		// Token: 0x060064BF RID: 25791 RVA: 0x0003F9E7 File Offset: 0x0003DBE7
		private void method_431(object sender, EventArgs e)
		{
			this.method_193();
		}

		// Token: 0x060064C0 RID: 25792 RVA: 0x0003F9EF File Offset: 0x0003DBEF
		private void method_432(object sender, EventArgs e)
		{
			this.method_196();
		}

		// Token: 0x060064C1 RID: 25793 RVA: 0x0003F9F7 File Offset: 0x0003DBF7
		private void method_433(object sender, EventArgs e)
		{
			this.method_199();
		}

		// Token: 0x060064C2 RID: 25794 RVA: 0x0003F9FF File Offset: 0x0003DBFF
		private void method_434(object sender, EventArgs e)
		{
			this.method_201();
		}

		// Token: 0x060064C3 RID: 25795 RVA: 0x0003FA07 File Offset: 0x0003DC07
		private void method_435(object sender, EventArgs e)
		{
			this.method_202();
		}

		// Token: 0x060064C4 RID: 25796 RVA: 0x00381214 File Offset: 0x0037F414
		private void method_436(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()) && !Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				Contact contact = (Contact)Client.smethod_54();
				string name = string.Concat(new string[]
				{
					contact.Name,
					" at ",
					Client.smethod_46().method_31().ToShortDateString(),
					"-",
					Client.smethod_46().method_31().ToShortTimeString()
				});
				ReferencePoint referencePoint = new ReferencePoint(contact.vmethod_28(null), contact.vmethod_30(null));
				referencePoint.Name = name;
				referencePoint.method_20(true);
				Client.smethod_50().vmethod_12().method_4(referencePoint);
				Client.bool_1 = true;
			}
		}

		// Token: 0x060064C5 RID: 25797 RVA: 0x0003FA0F File Offset: 0x0003DC0F
		private void method_437(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				Contact contact = (Contact)Client.smethod_54();
				contact.bool_16 = !contact.bool_16;
				Client.bool_1 = true;
			}
		}

		// Token: 0x060064C6 RID: 25798 RVA: 0x0003FA47 File Offset: 0x0003DC47
		private void method_438(object sender, EventArgs e)
		{
			this.method_197();
		}

		// Token: 0x060064C7 RID: 25799 RVA: 0x0003FA4F File Offset: 0x0003DC4F
		private void method_439(object sender, EventArgs e)
		{
			this.method_206();
		}

		// Token: 0x060064C8 RID: 25800 RVA: 0x0003FA57 File Offset: 0x0003DC57
		private void method_440(object sender, EventArgs e)
		{
			this.method_204();
		}

		// Token: 0x060064C9 RID: 25801 RVA: 0x0003FA5F File Offset: 0x0003DC5F
		private void method_441(object sender, EventArgs e)
		{
			this.method_205();
		}

		// Token: 0x060064CA RID: 25802 RVA: 0x0003FA67 File Offset: 0x0003DC67
		private void method_442(object sender, EventArgs e)
		{
			this.method_208();
		}

		// Token: 0x060064CB RID: 25803 RVA: 0x0003FA6F File Offset: 0x0003DC6F
		private void method_443(object sender, EventArgs e)
		{
			this.method_207();
		}

		// Token: 0x060064CC RID: 25804 RVA: 0x0003FA77 File Offset: 0x0003DC77
		private void method_444(object sender, EventArgs e)
		{
			this.method_209();
		}

		// Token: 0x060064CD RID: 25805 RVA: 0x0003FA7F File Offset: 0x0003DC7F
		private void method_445(object sender, EventArgs e)
		{
			this.method_210();
		}

		// Token: 0x060064CE RID: 25806 RVA: 0x0003FA87 File Offset: 0x0003DC87
		private void method_446(object sender, EventArgs e)
		{
			Client.smethod_46().method_50();
		}

		// Token: 0x060064CF RID: 25807 RVA: 0x0003FA93 File Offset: 0x0003DC93
		private void method_447(object sender, EventArgs e)
		{
			Client.smethod_46().method_51();
		}

		// Token: 0x060064D0 RID: 25808 RVA: 0x0003FA9F File Offset: 0x0003DC9F
		private void method_448(object sender, EventArgs e)
		{
			this.method_188();
		}

		// Token: 0x060064D1 RID: 25809 RVA: 0x0003FAA7 File Offset: 0x0003DCA7
		private void method_449(object sender, EventArgs e)
		{
			this.method_189();
		}

		// Token: 0x060064D2 RID: 25810 RVA: 0x0003FAAF File Offset: 0x0003DCAF
		private void method_450(object sender, EventArgs e)
		{
			if (!this.vmethod_514().Checked)
			{
				Class570.class280_0.method_17(Class279.Class280.Enum69.const_0);
				this.method_307();
			}
		}

		// Token: 0x060064D3 RID: 25811 RVA: 0x0003FACF File Offset: 0x0003DCCF
		private void method_451(object sender, EventArgs e)
		{
			if (!this.vmethod_516().Checked)
			{
				Class570.class280_0.method_17(Class279.Class280.Enum69.const_1);
				this.method_307();
			}
		}

		// Token: 0x060064D4 RID: 25812 RVA: 0x0003FAEF File Offset: 0x0003DCEF
		private void method_452(object sender, EventArgs e)
		{
			if (!this.vmethod_518().Checked)
			{
				Class570.class280_0.method_17(Class279.Class280.Enum69.const_2);
				this.method_307();
			}
		}

		// Token: 0x060064D5 RID: 25813 RVA: 0x0003FB0F File Offset: 0x0003DD0F
		private void method_453(object sender, EventArgs e)
		{
			if (!this.vmethod_520().Checked)
			{
				Class570.class280_0.method_21(Class279.Class280.Enum71.const_0);
				this.method_307();
			}
		}

		// Token: 0x060064D6 RID: 25814 RVA: 0x0003FB2F File Offset: 0x0003DD2F
		private void method_454(object sender, EventArgs e)
		{
			if (!this.vmethod_522().Checked)
			{
				Class570.class280_0.method_21(Class279.Class280.Enum71.const_1);
				this.method_307();
			}
		}

		// Token: 0x060064D7 RID: 25815 RVA: 0x0003FB4F File Offset: 0x0003DD4F
		private void method_455(object sender, EventArgs e)
		{
			if (!this.vmethod_524().Checked)
			{
				Class570.class280_0.method_21(Class279.Class280.Enum71.const_2);
				this.method_307();
			}
		}

		// Token: 0x060064D8 RID: 25816 RVA: 0x0003FB6F File Offset: 0x0003DD6F
		private void method_456(object sender, EventArgs e)
		{
			if (!this.vmethod_528().Checked)
			{
				Class570.class280_0.method_29(Class279.Class280.Enum74.const_1);
				this.method_307();
			}
		}

		// Token: 0x060064D9 RID: 25817 RVA: 0x0003FB8F File Offset: 0x0003DD8F
		private void method_457(object sender, EventArgs e)
		{
			if (!this.vmethod_530().Checked)
			{
				Class570.class280_0.method_29(Class279.Class280.Enum74.const_0);
				this.method_307();
			}
		}

		// Token: 0x060064DA RID: 25818 RVA: 0x0003FBAF File Offset: 0x0003DDAF
		private void method_458(object sender, EventArgs e)
		{
			if (!this.vmethod_532().Checked)
			{
				Class570.class280_0.method_29(Class279.Class280.Enum74.const_2);
				this.method_307();
			}
		}

		// Token: 0x060064DB RID: 25819 RVA: 0x0003F9DF File Offset: 0x0003DBDF
		private void method_459(object sender, EventArgs e)
		{
			this.method_190();
		}

		// Token: 0x060064DC RID: 25820 RVA: 0x0003FBCF File Offset: 0x0003DDCF
		private void method_460(object sender, EventArgs e)
		{
			this.method_191();
		}

		// Token: 0x060064DD RID: 25821 RVA: 0x0003F715 File Offset: 0x0003D915
		private void method_461(object sender, EventArgs e)
		{
			this.method_167();
		}

		// Token: 0x060064DE RID: 25822 RVA: 0x0003F71D File Offset: 0x0003D91D
		private void method_462(object sender, EventArgs e)
		{
			this.method_168();
		}

		// Token: 0x060064DF RID: 25823 RVA: 0x0003F725 File Offset: 0x0003D925
		private void method_463(object sender, EventArgs e)
		{
			this.method_170();
		}

		// Token: 0x060064E0 RID: 25824 RVA: 0x0003F72D File Offset: 0x0003D92D
		private void method_464(object sender, EventArgs e)
		{
			this.method_360();
		}

		// Token: 0x060064E1 RID: 25825 RVA: 0x0003F735 File Offset: 0x0003D935
		private void method_465(object sender, EventArgs e)
		{
			this.method_361();
		}

		// Token: 0x060064E2 RID: 25826 RVA: 0x0003FBD7 File Offset: 0x0003DDD7
		private void method_466(object sender, EventArgs e)
		{
			this.noNavZonesWindow_0 = new NoNavZonesWindow();
			this.noNavZonesWindow_0.Show();
		}

		// Token: 0x060064E3 RID: 25827 RVA: 0x003812F4 File Offset: 0x0037F4F4
		private void method_467(object sender, EventArgs e)
		{
			IEnumerable<ReferencePoint> enumerable = Enumerable.Where<ReferencePoint>(Client.smethod_50().vmethod_12(), (MainForm._Closure$__.$I2781-0 == null) ? (MainForm._Closure$__.$I2781-0 = new Func<ReferencePoint, bool>(MainForm._Closure$__.$I.method_45)) : MainForm._Closure$__.$I2781-0);
			if (Enumerable.Count<ReferencePoint>(enumerable) < 3)
			{
				DarkMessageBox.smethod_2("You must select at least three reference points in order to create a nav zone.", "Not enough reference points selected!", Enum11.const_0);
				return;
			}
			List<ReferencePoint> list = new List<ReferencePoint>();
			list.AddRange(enumerable);
			NoNavZone noNavZone = new NoNavZone("Zone " + Conversions.ToString(Client.smethod_50().list_7.Count + 1), list, Client.smethod_46(), Client.smethod_50(), null);
			Client.smethod_50().list_7.Add(noNavZone);
			this.noNavZonesWindow_0 = new NoNavZonesWindow();
			this.noNavZonesWindow_0.Show();
			this.noNavZonesWindow_0.method_4(noNavZone);
		}

		// Token: 0x060064E4 RID: 25828 RVA: 0x0003FBEF File Offset: 0x0003DDEF
		private void method_468(object sender, EventArgs e)
		{
			this.exclusionZonesWindow_0 = new ExclusionZonesWindow();
			this.exclusionZonesWindow_0.Show();
		}

		// Token: 0x060064E5 RID: 25829 RVA: 0x003813C4 File Offset: 0x0037F5C4
		private void method_469(object sender, EventArgs e)
		{
			IEnumerable<ReferencePoint> enumerable = Enumerable.Where<ReferencePoint>(Client.smethod_50().vmethod_12(), (MainForm._Closure$__.$I2783-0 == null) ? (MainForm._Closure$__.$I2783-0 = new Func<ReferencePoint, bool>(MainForm._Closure$__.$I.method_46)) : MainForm._Closure$__.$I2783-0);
			if (Enumerable.Count<ReferencePoint>(enumerable) < 3)
			{
				DarkMessageBox.smethod_2("You must select at least three reference points in order to create an exclusion zone.", "Not enough reference points selected!", Enum11.const_0);
				return;
			}
			List<ReferencePoint> list = new List<ReferencePoint>();
			list.AddRange(enumerable);
			ExclusionZone exclusionZone = new ExclusionZone("Zone " + Conversions.ToString(Client.smethod_50().list_6.Count + 1), Client.smethod_50(), list, Misc.PostureStance.Unfriendly, null);
			Client.smethod_50().list_6.Add(exclusionZone);
			this.exclusionZonesWindow_0 = new ExclusionZonesWindow();
			this.exclusionZonesWindow_0.Show();
			this.exclusionZonesWindow_0.method_4(exclusionZone);
		}

		// Token: 0x060064E6 RID: 25830 RVA: 0x0003F9B4 File Offset: 0x0003DBB4
		private void method_470(object sender, EventArgs e)
		{
			this.method_186();
		}

		// Token: 0x060064E7 RID: 25831 RVA: 0x0003F9BC File Offset: 0x0003DBBC
		private void method_471(object sender, EventArgs e)
		{
			this.method_187();
		}

		// Token: 0x060064E8 RID: 25832 RVA: 0x0003F18B File Offset: 0x0003D38B
		private void method_472(object sender, EventArgs e)
		{
			this.method_239();
		}

		// Token: 0x060064E9 RID: 25833 RVA: 0x0003F4EF File Offset: 0x0003D6EF
		private void method_473(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_7);
		}

		// Token: 0x060064EA RID: 25834 RVA: 0x00380FE4 File Offset: 0x0037F1E4
		private void method_474(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_2(Client.smethod_54(), true, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064EB RID: 25835 RVA: 0x00381070 File Offset: 0x0037F270
		private void method_475(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_2(Client.smethod_54(), false, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064EC RID: 25836 RVA: 0x003810FC File Offset: 0x0037F2FC
		private void method_476(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_3(Client.smethod_54(), true, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064ED RID: 25837 RVA: 0x00381188 File Offset: 0x0037F388
		private void method_477(object sender, EventArgs e)
		{
			string text = "";
			ActiveUnit_Weaponry.smethod_3(Client.smethod_54(), false, true, ref text);
			if (!string.IsNullOrEmpty(text))
			{
				Client.smethod_46().method_59(Client.smethod_54().Name + " is attempting to drop sonobuoy. " + text, "Drop sonobuoy", LoggedMessage.MessageType.AirOps, 5, Client.smethod_54().string_0, Client.smethod_50(), new Geopoint_Struct(Client.smethod_54().vmethod_28(null), Client.smethod_54().vmethod_30(null)));
			}
		}

		// Token: 0x060064EE RID: 25838 RVA: 0x0003F9C4 File Offset: 0x0003DBC4
		private void method_478(object sender, EventArgs e)
		{
			this.method_181();
		}

		// Token: 0x060064EF RID: 25839 RVA: 0x00381490 File Offset: 0x0037F690
		private void method_479(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_598()).Checked;
			this.method_480(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x060064F0 RID: 25840 RVA: 0x003814BC File Offset: 0x0037F6BC
		private void method_480(ref bool bool_15)
		{
			bool_15 = !bool_15;
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_50().method_56().Count != 0)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0 && !unit.bool_2)
						{
							((ActiveUnit)unit).method_93(null, bool_15);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x060064F1 RID: 25841 RVA: 0x0038154C File Offset: 0x0037F74C
		private void method_481(ref bool bool_15)
		{
			bool_15 = !bool_15;
			if (!Information.IsNothing(Client.smethod_50()) && Client.smethod_50().method_56().Count != 0)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0)
						{
							ActiveUnit activeUnit = (ActiveUnit)unit;
							if (bool_15)
							{
								activeUnit.vmethod_90().method_1(ActiveUnit_CommStuff.Enum31.const_1, false);
							}
							else
							{
								activeUnit.vmethod_90().method_1(ActiveUnit_CommStuff.Enum31.const_0, true);
							}
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x060064F2 RID: 25842 RVA: 0x0003FC07 File Offset: 0x0003DE07
		private void method_482(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()) && !Information.IsNothing(Client.smethod_54()))
			{
				new FixedFacilityOrientation
				{
					activeUnit_0 = (ActiveUnit)Client.smethod_54()
				}.Show();
			}
		}

		// Token: 0x060064F3 RID: 25843 RVA: 0x003815F0 File Offset: 0x0037F7F0
		private void method_483(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_602()).Checked;
			this.method_404(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x060064F4 RID: 25844 RVA: 0x0038161C File Offset: 0x0037F81C
		private void method_484(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_604()).Checked;
			this.method_404(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x060064F5 RID: 25845 RVA: 0x00381648 File Offset: 0x0037F848
		private void method_485(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_604()).Checked;
			this.method_405(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x060064F6 RID: 25846 RVA: 0x0037DEE4 File Offset: 0x0037C0E4
		private void method_486(object sender, EventArgs e)
		{
			Class310 class310_ = Client.smethod_54();
			ReadOnlyCollection<Unit> readOnlyCollection = Client.smethod_50().method_56();
			List<ActiveUnit> list = null;
			this.method_308(class310_, ref readOnlyCollection, ref list, true);
		}

		// Token: 0x060064F7 RID: 25847 RVA: 0x0003FC3B File Offset: 0x0003DE3B
		private void method_487(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_29().Show();
		}

		// Token: 0x060064F8 RID: 25848 RVA: 0x0003FC4C File Offset: 0x0003DE4C
		private void method_488(object sender, EventArgs e)
		{
			if (!this.vmethod_612().Checked)
			{
				Class570.class280_0.method_33(Class279.Class280.Enum75.const_1);
				this.method_307();
			}
		}

		// Token: 0x060064F9 RID: 25849 RVA: 0x0003FC6C File Offset: 0x0003DE6C
		private void method_489(object sender, EventArgs e)
		{
			if (!this.vmethod_614().Checked)
			{
				Class570.class280_0.method_33(Class279.Class280.Enum75.const_0);
				this.method_307();
			}
		}

		// Token: 0x060064FA RID: 25850 RVA: 0x0003FC8C File Offset: 0x0003DE8C
		private void method_490(object sender, EventArgs e)
		{
			if (!this.vmethod_616().Checked)
			{
				Class570.class280_0.method_33(Class279.Class280.Enum75.const_2);
				this.method_307();
			}
		}

		// Token: 0x060064FB RID: 25851 RVA: 0x00381674 File Offset: 0x0037F874
		private void method_491(bool bool_15)
		{
			try
			{
				foreach (object obj in Class2413.smethod_1().OpenForms)
				{
					Form form = (Form)obj;
					if (form != this && form.Visible)
					{
						try
						{
							form.Hide();
						}
						catch (Exception ex)
						{
						}
					}
				}
			}
			finally
			{
				IEnumerator enumerator;
				if (enumerator is IDisposable)
				{
					(enumerator as IDisposable).Dispose();
				}
			}
		}

		// Token: 0x060064FC RID: 25852 RVA: 0x003816FC File Offset: 0x0037F8FC
		private void method_492(ref Doctrine.Enum52? nullable_0)
		{
			if (Enumerable.Count<ActiveUnit>(Client.smethod_50().activeUnit_0) != 0)
			{
				foreach (ActiveUnit unit in Client.smethod_50().activeUnit_0)
				{
					if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
					{
						bool? nullable_ = new bool?(false);
						if (!Information.IsNothing(Client.smethod_54()) && unit == Client.smethod_54())
						{
							nullable_ = new bool?(true);
						}
						Doctrine doctrine_ = ((ActiveUnit)unit).doctrine_0;
						if (doctrine_.method_66(Client.smethod_46()))
						{
							doctrine_.method_64(Client.smethod_46(), false, nullable_, false, false, nullable_0);
						}
						if (doctrine_.method_71(Client.smethod_46()))
						{
							doctrine_.method_69(Client.smethod_46(), false, nullable_, false, false, nullable_0);
						}
						if (doctrine_.method_76(Client.smethod_46()))
						{
							doctrine_.method_74(Client.smethod_46(), false, nullable_, false, false, nullable_0);
						}
						if (doctrine_.method_81(Client.smethod_46()))
						{
							doctrine_.method_79(Client.smethod_46(), false, nullable_, false, false, nullable_0);
						}
					}
				}
			}
		}

		// Token: 0x060064FD RID: 25853 RVA: 0x00381828 File Offset: 0x0037FA28
		private void method_493(ref Doctrine.Enum52? nullable_0)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				if (Client.smethod_50().method_56().Count > 0)
				{
					try
					{
						foreach (Unit unit in Client.smethod_50().method_56())
						{
							if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
							{
								bool? nullable_ = new bool?(false);
								if (!Information.IsNothing(Client.smethod_54()) && unit == Client.smethod_54())
								{
									nullable_ = new bool?(true);
								}
								Doctrine doctrine_ = ((ActiveUnit)unit).doctrine_0;
								if (doctrine_.method_66(Client.smethod_46()))
								{
									doctrine_.method_64(Client.smethod_46(), false, nullable_, false, false, nullable_0);
								}
								if (doctrine_.method_71(Client.smethod_46()))
								{
									doctrine_.method_69(Client.smethod_46(), false, nullable_, false, false, nullable_0);
								}
								if (doctrine_.method_76(Client.smethod_46()))
								{
									doctrine_.method_74(Client.smethod_46(), false, nullable_, false, false, nullable_0);
								}
								if (doctrine_.method_81(Client.smethod_46()))
								{
									doctrine_.method_79(Client.smethod_46(), false, nullable_, false, false, nullable_0);
								}
							}
						}
						return;
					}
					finally
					{
						IEnumerator<Unit> enumerator;
						if (enumerator != null)
						{
							enumerator.Dispose();
						}
					}
				}
				if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && Client.smethod_54().vmethod_7(false) == Client.smethod_50() && !Client.smethod_54().bool_2)
				{
					Doctrine doctrine_2 = ((ActiveUnit)Client.smethod_54()).doctrine_0;
					if (doctrine_2.method_66(Client.smethod_46()))
					{
						doctrine_2.method_64(Client.smethod_46(), false, new bool?(true), false, false, nullable_0);
					}
					if (doctrine_2.method_71(Client.smethod_46()))
					{
						doctrine_2.method_69(Client.smethod_46(), false, new bool?(true), false, false, nullable_0);
					}
					if (doctrine_2.method_76(Client.smethod_46()))
					{
						doctrine_2.method_74(Client.smethod_46(), false, new bool?(true), false, false, nullable_0);
					}
					if (doctrine_2.method_81(Client.smethod_46()))
					{
						doctrine_2.method_79(Client.smethod_46(), false, new bool?(true), false, false, nullable_0);
					}
				}
			}
		}

		// Token: 0x060064FE RID: 25854 RVA: 0x00381A80 File Offset: 0x0037FC80
		private void method_494(ref Doctrine.Enum64? nullable_0)
		{
			if (Client.smethod_50().method_56().Count > 0)
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
						{
							Doctrine doctrine_ = ((ActiveUnit)unit).doctrine_0;
							if (doctrine_.method_86(Client.smethod_46()))
							{
								bool? nullable_ = new bool?(false);
								if (!Information.IsNothing(Client.smethod_54()) && unit == Client.smethod_54())
								{
									nullable_ = new bool?(true);
								}
								doctrine_.method_84(Client.smethod_46(), false, nullable_, false, false, nullable_0);
							}
						}
					}
					return;
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0 && Client.smethod_54().vmethod_7(false) == Client.smethod_50() && !Client.smethod_54().bool_2)
			{
				Doctrine doctrine_2 = ((ActiveUnit)Client.smethod_54()).doctrine_0;
				if (doctrine_2.method_86(Client.smethod_46()))
				{
					doctrine_2.method_84(Client.smethod_46(), false, new bool?(true), false, false, nullable_0);
				}
			}
		}

		// Token: 0x060064FF RID: 25855 RVA: 0x00381BC0 File Offset: 0x0037FDC0
		private void method_495(ref Doctrine.Enum64? nullable_0)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				foreach (ActiveUnit unit in Client.smethod_50().activeUnit_0)
				{
					if (unit.bool_0 && unit.vmethod_7(false) == Client.smethod_50() && !unit.bool_2)
					{
						Doctrine doctrine_ = ((ActiveUnit)unit).doctrine_0;
						if (doctrine_.method_86(Client.smethod_46()))
						{
							bool? nullable_ = new bool?(false);
							if (!Information.IsNothing(Client.smethod_54()) && unit == Client.smethod_54())
							{
								nullable_ = new bool?(true);
							}
							doctrine_.method_84(Client.smethod_46(), false, nullable_, false, false, nullable_0);
						}
					}
				}
			}
		}

		// Token: 0x06006500 RID: 25856 RVA: 0x0003F65E File Offset: 0x0003D85E
		private void method_496(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_19);
		}

		// Token: 0x06006501 RID: 25857 RVA: 0x00381C6C File Offset: 0x0037FE6C
		private void method_497(byte byte_0)
		{
			if (Client.smethod_50().dictionary_3.ContainsKey(byte_0))
			{
				QuickJumpSlot quickJumpSlot;
				Client.smethod_50().dictionary_3.TryGetValue(byte_0, out quickJumpSlot);
				if (Information.IsNothing(quickJumpSlot))
				{
					DarkMessageBox.smethod_2("No slot with such ID present!", "Incorrect quick-jump slot!", Enum11.const_0);
					return;
				}
				string left = quickJumpSlot.string_0.Split(new char[]
				{
					'_'
				})[0];
				if (Operators.CompareString(left, "AU", false) != 0)
				{
					if (Operators.CompareString(left, "Con", false) != 0)
					{
						return;
					}
					Contact contact;
					Client.smethod_50().method_11().TryGetValue(quickJumpSlot.string_0.Split(new char[]
					{
						'_'
					})[1], ref contact);
					if (!Information.IsNothing(contact))
					{
						this.method_161(true, new GeoPoint(contact.vmethod_28(null), contact.vmethod_30(null)));
						this.method_153(quickJumpSlot.int_0);
						this.bool_11 = quickJumpSlot.bool_0;
						this.vmethod_808().Text = "Jumped to slot #" + Conversions.ToString(byte_0);
					}
				}
				else
				{
					ActiveUnit activeUnit;
					Client.smethod_46().vmethod_0().TryGetValue(quickJumpSlot.string_0.Split(new char[]
					{
						'_'
					})[1], ref activeUnit);
					if (!Information.IsNothing(activeUnit))
					{
						this.method_161(true, new GeoPoint(activeUnit.vmethod_28(null), activeUnit.vmethod_30(null)));
						this.method_153(quickJumpSlot.int_0);
						this.bool_11 = quickJumpSlot.bool_0;
						this.vmethod_808().Text = "Jumped to slot #" + Conversions.ToString(byte_0);
						return;
					}
				}
			}
		}

		// Token: 0x06006502 RID: 25858 RVA: 0x0003FCAC File Offset: 0x0003DEAC
		private void method_498(object sender, EventArgs e)
		{
			this.vmethod_632().Checked = !this.vmethod_632().Checked;
			this.method_175();
			Class570.smethod_2(Class2566.dictionary_0, Client.list_1);
		}

		// Token: 0x06006503 RID: 25859 RVA: 0x0003FCDC File Offset: 0x0003DEDC
		private void method_499(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_20);
		}

		// Token: 0x06006504 RID: 25860 RVA: 0x00381E20 File Offset: 0x00380020
		private void method_500(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0)
						{
							((ActiveUnit)unit).vmethod_54(new GlobalVariables.ProficiencyLevel?(GlobalVariables.ProficiencyLevel.Novice));
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x06006505 RID: 25861 RVA: 0x00381E90 File Offset: 0x00380090
		private void method_501(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0)
						{
							((ActiveUnit)unit).vmethod_54(new GlobalVariables.ProficiencyLevel?(GlobalVariables.ProficiencyLevel.Cadet));
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x06006506 RID: 25862 RVA: 0x00381F00 File Offset: 0x00380100
		private void method_502(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0)
						{
							((ActiveUnit)unit).vmethod_54(new GlobalVariables.ProficiencyLevel?(GlobalVariables.ProficiencyLevel.Regular));
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x06006507 RID: 25863 RVA: 0x00381F70 File Offset: 0x00380170
		private void method_503(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0)
						{
							((ActiveUnit)unit).vmethod_54(new GlobalVariables.ProficiencyLevel?(GlobalVariables.ProficiencyLevel.Veteran));
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x06006508 RID: 25864 RVA: 0x00381FE0 File Offset: 0x003801E0
		private void method_504(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0)
						{
							((ActiveUnit)unit).vmethod_54(new GlobalVariables.ProficiencyLevel?(GlobalVariables.ProficiencyLevel.Ace));
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x06006509 RID: 25865 RVA: 0x00382050 File Offset: 0x00380250
		private void method_505(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Unit unit in Client.smethod_50().method_56())
					{
						if (unit.bool_0)
						{
							((ActiveUnit)unit).vmethod_54(null);
						}
					}
				}
				finally
				{
					IEnumerator<Unit> enumerator;
					if (enumerator != null)
					{
						enumerator.Dispose();
					}
				}
			}
		}

		// Token: 0x0600650A RID: 25866 RVA: 0x0003FCE5 File Offset: 0x0003DEE5
		private void method_506(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_26().Show();
		}

		// Token: 0x0600650B RID: 25867 RVA: 0x0003FCE5 File Offset: 0x0003DEE5
		private void method_507(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_26().Show();
		}

		// Token: 0x0600650C RID: 25868 RVA: 0x0003FCF6 File Offset: 0x0003DEF6
		private void method_508(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_27().Show();
		}

		// Token: 0x0600650D RID: 25869 RVA: 0x0003FD07 File Offset: 0x0003DF07
		private void method_509(object sender, EventArgs e)
		{
			this.method_192();
		}

		// Token: 0x0600650E RID: 25870 RVA: 0x0003FD0F File Offset: 0x0003DF0F
		private void method_510(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_60().Show();
		}

		// Token: 0x0600650F RID: 25871 RVA: 0x003820C4 File Offset: 0x003802C4
		private void method_511(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have at least one side created in order to package a scenario.", "No side exists!", Enum11.const_0);
				return;
			}
			this.vmethod_28().Title = "Package scenario for distribution";
			base.Enabled = false;
			if (!Information.IsNothing(Client.smethod_46().FileName))
			{
				this.vmethod_28().InitialDirectory = GameGeneral.string_4;
				this.vmethod_28().FileName = Class2558.smethod_0(Client.smethod_46().FileName);
				bool flag;
				if (flag = (Client.smethod_0().method_0() == Class279.Enum68.const_1))
				{
					Client.smethod_0().method_4();
				}
				this.vmethod_28().AddExtension = true;
				this.vmethod_28().Filter = "Packaged scenario file (*.zip)|*.zip";
				if (string.IsNullOrEmpty(this.vmethod_28().InitialDirectory))
				{
					this.vmethod_28().InitialDirectory = GameGeneral.string_4;
				}
				else if (!Path.GetFullPath(this.vmethod_28().InitialDirectory).StartsWith(GameGeneral.string_4))
				{
					this.vmethod_28().InitialDirectory = GameGeneral.string_4;
				}
				switch (this.vmethod_28().ShowDialog())
				{
				case DialogResult.OK:
					Class258.smethod_0(Client.smethod_46(), Client.smethod_50(), this.vmethod_28().FileName);
					base.Enabled = true;
					Client.string_3 = this.vmethod_28().FileName;
					break;
				case DialogResult.Cancel:
					base.Enabled = true;
					break;
				case DialogResult.Abort:
					base.Enabled = true;
					break;
				case DialogResult.No:
					base.Enabled = true;
					break;
				}
				Client.smethod_62(Client.Enum197.const_0);
				if (flag)
				{
					Client.smethod_0().method_3();
					return;
				}
			}
			else
			{
				Client.smethod_62(Client.Enum197.const_22);
			}
		}

		// Token: 0x06006510 RID: 25872 RVA: 0x00382264 File Offset: 0x00380464
		private void method_512(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_1);
			this.method_494(ref @enum);
		}

		// Token: 0x06006511 RID: 25873 RVA: 0x00382284 File Offset: 0x00380484
		private void method_513(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_0);
			this.method_494(ref @enum);
		}

		// Token: 0x06006512 RID: 25874 RVA: 0x003822A4 File Offset: 0x003804A4
		private void method_514(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = null;
			this.method_494(ref @enum);
		}

		// Token: 0x06006513 RID: 25875 RVA: 0x003822C4 File Offset: 0x003804C4
		private void method_515(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_1);
			this.method_495(ref @enum);
		}

		// Token: 0x06006514 RID: 25876 RVA: 0x003822E4 File Offset: 0x003804E4
		private void method_516(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_0);
			this.method_495(ref @enum);
		}

		// Token: 0x06006515 RID: 25877 RVA: 0x00382304 File Offset: 0x00380504
		private void method_517(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = null;
			this.method_495(ref @enum);
		}

		// Token: 0x06006516 RID: 25878 RVA: 0x00382324 File Offset: 0x00380524
		private void method_518(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_2);
			this.method_493(ref @enum);
		}

		// Token: 0x06006517 RID: 25879 RVA: 0x00382344 File Offset: 0x00380544
		private void method_519(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_1);
			this.method_493(ref @enum);
		}

		// Token: 0x06006518 RID: 25880 RVA: 0x00382364 File Offset: 0x00380564
		private void method_520(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_0);
			this.method_493(ref @enum);
		}

		// Token: 0x06006519 RID: 25881 RVA: 0x00382384 File Offset: 0x00380584
		private void method_521(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = null;
			this.method_493(ref @enum);
		}

		// Token: 0x0600651A RID: 25882 RVA: 0x003823A4 File Offset: 0x003805A4
		private void method_522(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_2);
			this.method_492(ref @enum);
		}

		// Token: 0x0600651B RID: 25883 RVA: 0x003823C4 File Offset: 0x003805C4
		private void method_523(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_1);
			this.method_492(ref @enum);
		}

		// Token: 0x0600651C RID: 25884 RVA: 0x003823E4 File Offset: 0x003805E4
		private void method_524(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_0);
			this.method_492(ref @enum);
		}

		// Token: 0x0600651D RID: 25885 RVA: 0x00382404 File Offset: 0x00380604
		private void method_525(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = null;
			this.method_492(ref @enum);
		}

		// Token: 0x0600651E RID: 25886 RVA: 0x00382264 File Offset: 0x00380464
		private void method_526(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_1);
			this.method_494(ref @enum);
		}

		// Token: 0x0600651F RID: 25887 RVA: 0x00382284 File Offset: 0x00380484
		private void method_527(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_0);
			this.method_494(ref @enum);
		}

		// Token: 0x06006520 RID: 25888 RVA: 0x003822A4 File Offset: 0x003804A4
		private void method_528(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = null;
			this.method_494(ref @enum);
		}

		// Token: 0x06006521 RID: 25889 RVA: 0x003822C4 File Offset: 0x003804C4
		private void method_529(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_1);
			this.method_495(ref @enum);
		}

		// Token: 0x06006522 RID: 25890 RVA: 0x003822E4 File Offset: 0x003804E4
		private void method_530(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = new Doctrine.Enum64?(Doctrine.Enum64.const_0);
			this.method_495(ref @enum);
		}

		// Token: 0x06006523 RID: 25891 RVA: 0x00382304 File Offset: 0x00380504
		private void method_531(object sender, EventArgs e)
		{
			Doctrine.Enum64? @enum = null;
			this.method_495(ref @enum);
		}

		// Token: 0x06006524 RID: 25892 RVA: 0x00382324 File Offset: 0x00380524
		private void method_532(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_2);
			this.method_493(ref @enum);
		}

		// Token: 0x06006525 RID: 25893 RVA: 0x00382344 File Offset: 0x00380544
		private void method_533(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_1);
			this.method_493(ref @enum);
		}

		// Token: 0x06006526 RID: 25894 RVA: 0x00382364 File Offset: 0x00380564
		private void method_534(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_0);
			this.method_493(ref @enum);
		}

		// Token: 0x06006527 RID: 25895 RVA: 0x00382384 File Offset: 0x00380584
		private void method_535(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = null;
			this.method_493(ref @enum);
		}

		// Token: 0x06006528 RID: 25896 RVA: 0x003823A4 File Offset: 0x003805A4
		private void method_536(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_2);
			this.method_492(ref @enum);
		}

		// Token: 0x06006529 RID: 25897 RVA: 0x003823C4 File Offset: 0x003805C4
		private void method_537(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_1);
			this.method_492(ref @enum);
		}

		// Token: 0x0600652A RID: 25898 RVA: 0x003823E4 File Offset: 0x003805E4
		private void method_538(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = new Doctrine.Enum52?(Doctrine.Enum52.const_0);
			this.method_492(ref @enum);
		}

		// Token: 0x0600652B RID: 25899 RVA: 0x00382404 File Offset: 0x00380604
		private void method_539(object sender, EventArgs e)
		{
			Doctrine.Enum52? @enum = null;
			this.method_492(ref @enum);
		}

		// Token: 0x0600652C RID: 25900 RVA: 0x0003FD20 File Offset: 0x0003DF20
		private void method_540(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				this.method_202();
			}
		}

		// Token: 0x0600652D RID: 25901 RVA: 0x0003FD40 File Offset: 0x0003DF40
		private void method_541(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				this.method_201();
			}
		}

		// Token: 0x0600652E RID: 25902 RVA: 0x0003FD60 File Offset: 0x0003DF60
		private void method_542(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				this.method_200();
			}
		}

		// Token: 0x0600652F RID: 25903 RVA: 0x0003FD80 File Offset: 0x0003DF80
		private void method_543(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				this.method_199();
			}
		}

		// Token: 0x06006530 RID: 25904 RVA: 0x0003FA0F File Offset: 0x0003DC0F
		private void method_544(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				Contact contact = (Contact)Client.smethod_54();
				contact.bool_16 = !contact.bool_16;
				Client.bool_1 = true;
			}
		}

		// Token: 0x06006531 RID: 25905 RVA: 0x00382424 File Offset: 0x00380624
		private void method_545(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_46()) && !Information.IsNothing(Client.smethod_50()) && Client.smethod_50().method_56().Count <= 1 && Client.smethod_0().method_0() == Class279.Enum68.const_1 && (this.method_97().method_0() || (!Information.IsNothing(Client.smethod_54()) && (Client.smethod_54().bool_2 || Client.smethod_54().method_14()))))
			{
				this.method_97().method_2(Client.smethod_46(), Client.smethod_50(), Client.smethod_54(), false);
			}
			if (this.float_1 <= 0f)
			{
				this.method_154();
				return;
			}
			ref float ptr = ref this.float_1;
			this.float_1 = ptr - (float)((double)this.vmethod_732().Interval / 1000.0);
		}

		// Token: 0x06006532 RID: 25906 RVA: 0x003824EC File Offset: 0x003806EC
		private void method_546(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Contact contact in Client.smethod_50().method_44())
					{
						contact.bool_16 = true;
					}
				}
				finally
				{
					List<Contact>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x06006533 RID: 25907 RVA: 0x00382554 File Offset: 0x00380754
		private void method_547(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()))
			{
				try
				{
					foreach (Contact contact in Client.smethod_50().method_44())
					{
						contact.bool_16 = false;
					}
				}
				finally
				{
					List<Contact>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x06006534 RID: 25908 RVA: 0x0003FDA0 File Offset: 0x0003DFA0
		private void method_548(object sender, EventArgs e)
		{
			if (Client.smethod_40().method_4())
			{
				if (DarkMessageBox.smethod_1("You are already using the latest version of the scenario's underlying DB. Continue?", "Confirm", Enum11.const_2) == DialogResult.OK)
				{
					Class2413.smethod_2().method_45().Show();
					return;
				}
			}
			else
			{
				Class2413.smethod_2().method_45().Show();
			}
		}

		// Token: 0x06006535 RID: 25909 RVA: 0x003825BC File Offset: 0x003807BC
		private void method_549(object sender, EventArgs e)
		{
			if (DarkMessageBox.smethod_1("Are you sure? This will create a stripped-down copy of the current DB and bind the scenario to it!", "Confirm", Enum11.const_2) == DialogResult.OK)
			{
				if (string.IsNullOrEmpty(this.vmethod_28().InitialDirectory))
				{
					this.vmethod_28().InitialDirectory = GameGeneral.string_4;
				}
				else if (!Path.GetFullPath(this.vmethod_28().InitialDirectory).StartsWith(GameGeneral.string_4))
				{
					this.vmethod_28().InitialDirectory = GameGeneral.string_4;
				}
				if (this.vmethod_28().ShowDialog() == DialogResult.OK)
				{
					string str;
					Class402.smethod_0(Client.smethod_46(), ref str);
					Class434.smethod_1(Client.smethod_46(), Client.smethod_50(), this.vmethod_28().FileName, false, false);
					DarkMessageBox.smethod_0("Done! Custom DB for this scenario is: " + str, "", Enum11.const_0);
				}
			}
		}

		// Token: 0x06006536 RID: 25910 RVA: 0x0003FDE0 File Offset: 0x0003DFE0
		private void method_550(object sender, EventArgs e)
		{
			Client.campaignEditorWindow_0.class264_0 = new Class264();
			Client.campaignEditorWindow_0.Show();
		}

		// Token: 0x06006537 RID: 25911 RVA: 0x0038267C File Offset: 0x0038087C
		private void method_551(object sender, EventArgs e)
		{
			this.vmethod_750().InitialDirectory = GameGeneral.string_4;
			this.vmethod_750().FileName = "*.campaign";
			this.vmethod_750().Filter = "Command campaign file (*.campaign)|*.campaign";
			if (this.vmethod_750().ShowDialog() == DialogResult.OK)
			{
				Class264 class264_ = Class264.smethod_1(this.vmethod_750().FileName);
				Client.campaignEditorWindow_0.class264_0 = class264_;
				Client.campaignEditorWindow_0.Show();
			}
		}

		// Token: 0x06006538 RID: 25912 RVA: 0x0003FDFB File Offset: 0x0003DFFB
		private void method_552(object sender, EventArgs e)
		{
			if (Client.smethod_46().method_16())
			{
				this.vmethod_26().Enabled = false;
				return;
			}
			this.vmethod_26().Enabled = true;
		}

		// Token: 0x06006539 RID: 25913 RVA: 0x0003FE22 File Offset: 0x0003E022
		private void method_553(object sender, EventArgs e)
		{
			Client.smethod_52().method_22(!Client.smethod_52().method_21());
			this.method_307();
		}

		// Token: 0x0600653A RID: 25914 RVA: 0x0003F110 File Offset: 0x0003D310
		private void method_554(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_2);
		}

		// Token: 0x0600653B RID: 25915 RVA: 0x0003FE41 File Offset: 0x0003E041
		public void method_555(object sender, EventArgs e)
		{
			if (Client.smethod_50() != null)
			{
				Class2413.smethod_2().method_35().Show();
			}
		}

		// Token: 0x0600653C RID: 25916 RVA: 0x0003AE22 File Offset: 0x00039022
		private void method_556(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_65().Show();
		}

		// Token: 0x0600653D RID: 25917 RVA: 0x0003FE59 File Offset: 0x0003E059
		private void method_557(object sender, EventArgs e)
		{
			Class570.class280_0.method_31(Class279.Class280.Enum78.const_1);
			this.method_307();
		}

		// Token: 0x0600653E RID: 25918 RVA: 0x0003FE6C File Offset: 0x0003E06C
		private void method_558(object sender, EventArgs e)
		{
			Class570.class280_0.method_31(Class279.Class280.Enum78.const_0);
			this.method_307();
		}

		// Token: 0x0600653F RID: 25919 RVA: 0x0003FE7F File Offset: 0x0003E07F
		private void method_559(object sender, EventArgs e)
		{
			Class570.class280_0.method_31(Class279.Class280.Enum78.const_2);
			this.method_307();
		}

		// Token: 0x06006540 RID: 25920 RVA: 0x003826F0 File Offset: 0x003808F0
		private void method_560(object sender, EventArgs e)
		{
			StringBuilder stringBuilder = new StringBuilder();
			bool flag = false;
			try
			{
				foreach (Unit unit in Client.smethod_50().method_56())
				{
					if (!Information.IsNothing(unit))
					{
						if (flag)
						{
							stringBuilder.Append(" , ");
						}
						stringBuilder.Append(string.Concat(new string[]
						{
							"{name='",
							unit.Name.ToString(),
							"', guid='",
							unit.string_0,
							"'}"
						}));
						flag = true;
					}
				}
			}
			finally
			{
				IEnumerator<Unit> enumerator;
				if (enumerator != null)
				{
					enumerator.Dispose();
				}
			}
			System.Windows.Forms.Clipboard.SetText(stringBuilder.ToString());
		}

		// Token: 0x06006541 RID: 25921 RVA: 0x0003FE92 File Offset: 0x0003E092
		private void method_561(object sender, EventArgs e)
		{
			this.method_562();
		}

		// Token: 0x06006542 RID: 25922 RVA: 0x003827A8 File Offset: 0x003809A8
		private void method_562()
		{
			if (Client.smethod_46().DeclaredFeatures.Contains(Scenario.ScenarioFeatureOption.const_5))
			{
				if (string.IsNullOrEmpty(Client.smethod_52().method_59()))
				{
					if (Information.IsNothing(Client.smethod_54()) || !Client.smethod_54().bool_0)
					{
						return;
					}
					Client.smethod_52().method_60(Client.smethod_54().string_0);
				}
				else
				{
					Client.smethod_52().method_60(null);
				}
				Client.bool_1 = true;
			}
		}

		// Token: 0x06006543 RID: 25923 RVA: 0x0003FE9A File Offset: 0x0003E09A
		private void method_563(object sender, EventArgs e)
		{
			Process.Start(Class570.smethod_3("General", "BalooganVideoTutorials"));
		}

		// Token: 0x06006544 RID: 25924 RVA: 0x0003FEB1 File Offset: 0x0003E0B1
		private void method_564(object sender, EventArgs e)
		{
			if (!Class2474.bool_0)
			{
				throw new NotSupportedException();
			}
			Class2413.smethod_2().method_68().Show();
		}

		// Token: 0x06006545 RID: 25925 RVA: 0x0003FECF File Offset: 0x0003E0CF
		private void method_565(object sender, EventArgs e)
		{
			if (!this.vmethod_760().Checked)
			{
				Client.smethod_52().method_56(Class285.Enum86.const_0);
				this.method_307();
			}
		}

		// Token: 0x06006546 RID: 25926 RVA: 0x0003FEEF File Offset: 0x0003E0EF
		private void method_566(object sender, EventArgs e)
		{
			if (!this.vmethod_762().Checked)
			{
				Client.smethod_52().method_56(Class285.Enum86.const_1);
				this.method_307();
			}
		}

		// Token: 0x06006547 RID: 25927 RVA: 0x0003FF0F File Offset: 0x0003E10F
		private void method_567(object sender, EventArgs e)
		{
			if (!this.vmethod_846().Checked)
			{
				Client.smethod_52().method_56(Class285.Enum86.const_2);
				this.method_307();
			}
		}

		// Token: 0x06006548 RID: 25928 RVA: 0x00382818 File Offset: 0x00380A18
		private void method_568(object sender, EventArgs e)
		{
			ActiveUnit activeUnit = null;
			Mission mission = null;
			this.method_333(ref activeUnit, ref mission);
		}

		// Token: 0x06006549 RID: 25929 RVA: 0x0003FF2F File Offset: 0x0003E12F
		private void method_569(object sender, EventArgs e)
		{
			this.method_200();
		}

		// Token: 0x0600654A RID: 25930 RVA: 0x0003FF37 File Offset: 0x0003E137
		private void method_570(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				this.method_190();
			}
		}

		// Token: 0x0600654B RID: 25931 RVA: 0x0003FF57 File Offset: 0x0003E157
		private void method_571(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				this.method_180();
			}
		}

		// Token: 0x0600654C RID: 25932 RVA: 0x0003FF77 File Offset: 0x0003E177
		private void method_572(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_24);
		}

		// Token: 0x0600654D RID: 25933 RVA: 0x0003FF80 File Offset: 0x0003E180
		private void method_573(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_40().Show();
		}

		// Token: 0x0600654E RID: 25934 RVA: 0x00382834 File Offset: 0x00380A34
		private void method_574(object sender, EventArgs e)
		{
			object obj = Client.object_0;
			ObjectFlowControl.CheckForSyncLockOnValueType(obj);
			lock (obj)
			{
				Task.Factory.StartNew((MainForm._Closure$__.$I2888-0 == null) ? (MainForm._Closure$__.$I2888-0 = new Action(MainForm._Closure$__.$I.method_47)) : MainForm._Closure$__.$I2888-0);
			}
		}

		// Token: 0x0600654F RID: 25935 RVA: 0x003828A4 File Offset: 0x00380AA4
		private void method_575(object sender, EventArgs e)
		{
			Mission mission = (Mission)(sender as ToolStripMenuItem).Tag;
			ActiveUnit activeUnit = null;
			this.method_333(ref activeUnit, ref mission);
			Client.bool_1 = true;
		}

		// Token: 0x06006550 RID: 25936 RVA: 0x0003FE92 File Offset: 0x0003E092
		private void method_576(object sender, EventArgs e)
		{
			this.method_562();
		}

		// Token: 0x06006551 RID: 25937 RVA: 0x00382818 File Offset: 0x00380A18
		private void method_577(object sender, EventArgs e)
		{
			ActiveUnit activeUnit = null;
			Mission mission = null;
			this.method_333(ref activeUnit, ref mission);
		}

		// Token: 0x06006552 RID: 25938 RVA: 0x0003FF77 File Offset: 0x0003E177
		private void method_578(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_24);
		}

		// Token: 0x06006553 RID: 25939 RVA: 0x0003FF91 File Offset: 0x0003E191
		private void method_579(object sender, EventArgs e)
		{
			if (Client.smethod_54().method_1())
			{
				Client.orbitAnchor_0 = new OrbitAnchor();
				ElementHost.EnableModelessKeyboardInterop(Client.orbitAnchor_0);
				Client.orbitAnchor_0.satellite_0 = (Satellite)Client.smethod_54();
				Client.orbitAnchor_0.Show();
			}
		}

		// Token: 0x06006554 RID: 25940 RVA: 0x0003FFD1 File Offset: 0x0003E1D1
		private void method_580(object sender, EventArgs e)
		{
			Client.licenseTweaker_0 = new LicenseTweaker();
			ElementHost.EnableModelessKeyboardInterop(Client.licenseTweaker_0);
			Client.licenseTweaker_0.Show();
		}

		// Token: 0x06006555 RID: 25941 RVA: 0x0003FFF1 File Offset: 0x0003E1F1
		private void method_581(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
			{
				((ActiveUnit)Client.smethod_54()).vmethod_89().method_40((float)Client.smethod_46().method_47());
			}
		}

		// Token: 0x06006556 RID: 25942 RVA: 0x003828D4 File Offset: 0x00380AD4
		private void method_582(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_54()) && Client.smethod_54().bool_0)
			{
				this.vmethod_926().Checked = !this.vmethod_926().Checked;
				((ActiveUnit)Client.smethod_54()).vmethod_89().bool_1 = this.vmethod_926().Checked;
			}
		}

		// Token: 0x06006557 RID: 25943 RVA: 0x0004002A File Offset: 0x0003E22A
		private void method_583(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_25);
		}

		// Token: 0x06006558 RID: 25944 RVA: 0x0003D833 File Offset: 0x0003BA33
		private void method_584(object sender, EventArgs e)
		{
			Client.smethod_62(Client.Enum197.const_26);
		}

		// Token: 0x06006559 RID: 25945 RVA: 0x00381214 File Offset: 0x0037F414
		private void method_585(object sender, EventArgs e)
		{
			if (!Information.IsNothing(Client.smethod_50()) && !Information.IsNothing(Client.smethod_54()) && Client.smethod_54().method_14())
			{
				Contact contact = (Contact)Client.smethod_54();
				string name = string.Concat(new string[]
				{
					contact.Name,
					" at ",
					Client.smethod_46().method_31().ToShortDateString(),
					"-",
					Client.smethod_46().method_31().ToShortTimeString()
				});
				ReferencePoint referencePoint = new ReferencePoint(contact.vmethod_28(null), contact.vmethod_30(null));
				referencePoint.Name = name;
				referencePoint.method_20(true);
				Client.smethod_50().vmethod_12().method_4(referencePoint);
				Client.bool_1 = true;
			}
		}

		// Token: 0x0600655A RID: 25946 RVA: 0x00040033 File Offset: 0x0003E233
		private void method_586(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_47().Show();
			Class2413.smethod_2().method_47().vmethod_8().SelectedIndex = 4;
		}

		// Token: 0x0600655B RID: 25947 RVA: 0x00040059 File Offset: 0x0003E259
		private void method_587(object sender, EventArgs e)
		{
			new ChanceOfAppearance
			{
				string_0 = Client.smethod_54().string_0
			}.Show();
		}

		// Token: 0x0600655C RID: 25948 RVA: 0x00382934 File Offset: 0x00380B34
		private void method_588(object sender, EventArgs e)
		{
			if (Client.smethod_46().method_54() == null)
			{
				DarkMessageBox.smethod_1("Please add at least one side first.", string.Empty, Enum11.const_0);
				return;
			}
			if (!string.IsNullOrEmpty(Class570.class280_0.method_62()) && File.Exists(Class570.class280_0.method_62()))
			{
				TacviewServer.smethod_7();
				return;
			}
			DarkMessageBox.smethod_1("You have not specified the path to the Tacview executable, or the path you have provided appears to be invalid! Please provide a valid path to the Tacview executable.", string.Empty, Enum11.const_0);
			Class2413.smethod_2().method_47().vmethod_8().SelectedIndex = 5;
			Class2413.smethod_2().method_47().Show();
		}

		// Token: 0x0600655D RID: 25949 RVA: 0x003829BC File Offset: 0x00380BBC
		private void method_589(object sender, EventArgs e)
		{
			Class128 @class;
			bool @checked = (@class = this.vmethod_776()).Checked;
			this.method_481(ref @checked);
			@class.Checked = @checked;
		}

		// Token: 0x0600655E RID: 25950 RVA: 0x00040075 File Offset: 0x0003E275
		private void method_590(object sender, EventArgs e)
		{
			if (!this.vmethod_784().Checked)
			{
				Class570.class280_0.method_35(Class279.Class280.Enum76.const_1);
				this.method_307();
			}
		}

		// Token: 0x0600655F RID: 25951 RVA: 0x0003F715 File Offset: 0x0003D915
		private void method_591(object sender, EventArgs e)
		{
			this.method_167();
		}

		// Token: 0x06006560 RID: 25952 RVA: 0x0003F71D File Offset: 0x0003D91D
		private void method_592(object sender, EventArgs e)
		{
			this.method_168();
		}

		// Token: 0x06006561 RID: 25953 RVA: 0x0003D896 File Offset: 0x0003BA96
		private void method_593(object sender, EventArgs e)
		{
			this.method_172();
		}

		// Token: 0x06006562 RID: 25954 RVA: 0x0003F5CC File Offset: 0x0003D7CC
		private void method_594(object sender, EventArgs e)
		{
			this.method_171();
		}

		// Token: 0x06006563 RID: 25955 RVA: 0x0003F5EC File Offset: 0x0003D7EC
		private void method_595(object sender, EventArgs e)
		{
			this.method_169();
		}

		// Token: 0x06006564 RID: 25956 RVA: 0x0003F193 File Offset: 0x0003D393
		private void method_596(object sender, EventArgs e)
		{
			this.method_242();
		}

		// Token: 0x06006565 RID: 25957 RVA: 0x0003F64E File Offset: 0x0003D84E
		private void method_597(object sender, EventArgs e)
		{
			this.method_173();
		}

		// Token: 0x06006566 RID: 25958 RVA: 0x0003F656 File Offset: 0x0003D856
		private void method_598(object sender, EventArgs e)
		{
			this.method_174();
		}

		// Token: 0x06006567 RID: 25959 RVA: 0x0003F5E4 File Offset: 0x0003D7E4
		private void method_599(object sender, EventArgs e)
		{
			this.method_227();
		}

		// Token: 0x06006568 RID: 25960 RVA: 0x0003F5DC File Offset: 0x0003D7DC
		private void method_600(object sender, EventArgs e)
		{
			this.method_166();
		}

		// Token: 0x06006569 RID: 25961 RVA: 0x0003F5D4 File Offset: 0x0003D7D4
		private void method_601(object sender, EventArgs e)
		{
			this.method_238();
		}

		// Token: 0x0600656A RID: 25962 RVA: 0x0037DEE4 File Offset: 0x0037C0E4
		private void method_602(object sender, EventArgs e)
		{
			Class310 class310_ = Client.smethod_54();
			ReadOnlyCollection<Unit> readOnlyCollection = Client.smethod_50().method_56();
			List<ActiveUnit> list = null;
			this.method_308(class310_, ref readOnlyCollection, ref list, true);
		}

		// Token: 0x0600656B RID: 25963 RVA: 0x0003F49B File Offset: 0x0003D69B
		private void method_603(object sender, EventArgs e)
		{
			if (Information.IsNothing(Client.smethod_50()))
			{
				DarkMessageBox.smethod_2("You must have a side selected.", "No side selected!", Enum11.const_0);
				return;
			}
			Client.smethod_30().Show();
		}

		// Token: 0x0600656C RID: 25964 RVA: 0x00040095 File Offset: 0x0003E295
		private void method_604(object sender, EventArgs e)
		{
			if (!this.vmethod_786().Checked)
			{
				Class570.class280_0.method_35(Class279.Class280.Enum76.const_0);
				this.method_307();
			}
		}

		// Token: 0x0600656D RID: 25965 RVA: 0x0003AE22 File Offset: 0x00039022
		private void method_605(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_65().Show();
		}

		// Token: 0x0600656E RID: 25966 RVA: 0x000400B5 File Offset: 0x0003E2B5
		private void method_606(object sender, EventArgs e)
		{
			if (!this.vmethod_788().Checked)
			{
				Class570.class280_0.method_35(Class279.Class280.Enum76.const_2);
				this.method_307();
			}
		}

		// Token: 0x0600656F RID: 25967 RVA: 0x003829E8 File Offset: 0x00380BE8
		private void method_607(object sender, EventArgs e)
		{
			this.vmethod_38().DropDownItems.Clear();
			try
			{
				foreach (Side side in Enumerable.OrderBy<Side, string>(Client.smethod_46().method_44(), (MainForm._Closure$__.$I2922-0 == null) ? (MainForm._Closure$__.$I2922-0 = new Func<Side, string>(MainForm._Closure$__.$I.method_48)) : MainForm._Closure$__.$I2922-0))
				{
					ToolStripMenuItem toolStripMenuItem = (ToolStripMenuItem)this.vmethod_38().DropDownItems.Add(side.method_51(), null, new EventHandler(this.method_226));
					if (side == Client.smethod_50())
					{
						toolStripMenuItem.Checked = true;
					}
				}
			}
			finally
			{
				IEnumerator<Side> enumerator;
				if (enumerator != null)
				{
					enumerator.Dispose();
				}
			}
			this.vmethod_38().Enabled = (this.vmethod_38().DropDownItems.Count > 0);
		}

		// Token: 0x06006570 RID: 25968 RVA: 0x00382AC4 File Offset: 0x00380CC4
		private void method_608(object sender, EventArgs e)
		{
			try
			{
				if (this.vmethod_954().ShowDialog() == DialogResult.OK)
				{
					ValueTuple<DBRecord, DBOps.DBFileCheckResult> valueTuple = DBOps.smethod_11(this.vmethod_954().FileName, Class2472.hashSet_0.Contains(Class2472.Enum202.const_1));
					if (valueTuple.Item2 == DBOps.DBFileCheckResult.DBIsUnregistered)
					{
						DarkMessageBox.smethod_1("The DB file you have selected is unregistered! Aborting...", string.Empty, Enum11.const_0);
					}
					else if (valueTuple.Item2 == DBOps.DBFileCheckResult.DBFileNotPresent)
					{
						DarkMessageBox.smethod_1("The DB file you have requested cannot be found! Aborting...", string.Empty, Enum11.const_0);
					}
					else if (DBOps.smethod_9(valueTuple.Item1))
					{
						DarkMessageBox.smethod_1("The DB file you have selected has been tampered with! Aborting...", string.Empty, Enum11.const_0);
					}
					else if (valueTuple.Item2 != DBOps.DBFileCheckResult.AllOK)
					{
						DarkMessageBox.smethod_1("An unspecified error has occured! Aborting...", string.Empty, Enum11.const_0);
					}
					else
					{
						Client.smethod_100(valueTuple.Item1.string_0);
					}
				}
			}
			catch (Exception ex)
			{
				DarkMessageBox.smethod_1("An unspecified error has occured! Aborting...", string.Empty, Enum11.const_0);
			}
		}

		// Token: 0x06006571 RID: 25969 RVA: 0x000400D5 File Offset: 0x0003E2D5
		private void method_609(object sender, EventArgs e)
		{
			Class2413.smethod_2().method_58().Show();
		}

		// Token: 0x06006572 RID: 25970 RVA: 0x00382BB8 File Offset: 0x00380DB8
		private void method_610(object sender, EventArgs e)
		{
			if (Client.smethod_54() != null && Client.smethod_54().bool_0)
			{
				ActiveUnit activeUnit = (ActiveUnit)Client.smethod_54();
				if (!activeUnit.vmethod_90().vmethod_1() && !activeUnit.vmethod_90().method_3())
				{
					activeUnit.vmethod_90().method_4(true);
					activeUnit.method_124(Client.smethod_54().Name + " has been recalled to re-establish communication", Client.smethod_54().Name + " summoned", LoggedMessage.MessageType.UnitAI, 0, true, new Geopoint_Struct(activeUnit.method_58().Value, activeUnit.method_56().Value));
				}
			}
		}

		// Token: 0x06006573 RID: 25971 RVA: 0x000400E6 File Offset: 0x0003E2E6
		private void method_611(object sender, EventArgs e)
		{
			this.method_612();
		}

		// Token: 0x06006574 RID: 25972 RVA: 0x00382C64 File Offset: 0x00380E64
		private void method_612()
		{
			if (Client.smethod_0().method_0() != Class279.Enum68.const_1)
			{
				Client.nullable_0 = new DateTime?(Client.smethod_46().method_31().AddSeconds(15.0));
				Client.smethod_0().method_3();
			}
		}

		// Token: 0x06006575 RID: 25973 RVA: 0x000400EE File Offset: 0x0003E2EE
		private void method_613(object sender, EventArgs e)
		{
			this.method_614();
		}

		// Token: 0x06006576 RID: 25974 RVA: 0x00382CB0 File Offset: 0x00380EB0
		private void method_614()
		{
			if (Client.smethod_0().method_0() != Class279.Enum68.const_1)
			{
				Client.nullable_0 = new DateTime?(Client.smethod_46().method_31().AddSeconds(60.0));
				Client.smethod_0().method_3();
			}
		}

		// Token: 0x06006577 RID: 25975 RVA: 0x000400F6 File Offset: 0x0003E2F6
		private void method_615(object sender, EventArgs e)
		{
			this.method_616();
		}

		// Token: 0x06006578 RID: 25976 RVA: 0x00382CFC File Offset: 0x00380EFC
		private void method_616()
		{
			if (Client.smethod_0().method_0() != Class279.Enum68.const_1)
			{
				Client.nullable_0 = new DateTime?(Client.smethod_46().method_31().AddMinutes(5.0));
				Client.smethod_0().method_3();
			}
		}

		// Token: 0x06006579 RID: 25977 RVA: 0x000400FE File Offset: 0x0003E2FE
		private void method_617(object sender, EventArgs e)
		{
			this.method_618();
		}

		// Token: 0x0600657A RID: 25978 RVA: 0x00382D48 File Offset: 0x00380F48
		private void method_618()
		{
			if (Client.smethod_0().method_0() != Class279.Enum68.const_1)
			{
				Client.nullable_0 = new DateTime?(Client.smethod_46().method_31().AddMinutes(15.0));
				Client.smethod_0().method_3();
			}
		}

		// Token: 0x0600657B RID: 25979 RVA: 0x0003F9CC File Offset: 0x0003DBCC
		public void method_619(object sender, EventArgs e)
		{
			Client.smethod_46().method_52(Scenario.enumTimeCompression.OneSec);
			this.method_316();
		}

		// Token: 0x0600657C RID: 25980 RVA: 0x00040106 File Offset: 0x0003E306
		public void method_620(object sender, EventArgs e)
		{
			Client.smethod_46().method_52(Scenario.enumTimeCompression.TwoSec);
			this.method_316();
		}

		// Token: 0x0600657D RID: 25981 RVA: 0x00040119 File Offset: 0x0003E319
		public void method_621(object sender, EventArgs e)
		{
			Client.smethod_46().method_52(Scenario.enumTimeCompression.FiveSec);
			this.method_316();
		}

		// Token: 0x0600657E RID: 25982 RVA: 0x0004012C File Offset: 0x0003E32C
		public void method_622(object sender, EventArgs e)
		{
			Client.smethod_46().method_52(Scenario.enumTimeCompression.Turbo);
			this.method_316();
		}

		// Token: 0x0600657F RID: 25983 RVA: 0x00382D94 File Offset: 0x00380F94
		protected override void WndProc(ref Message m)
		{
			try
			{
				if (!this.Focused && m.Msg == 528)
				{
					int num = (int)(65535L & (long)m.WParam);
					if (num <= 516)
					{
						if (num - 1 <= 1)
						{
							goto IL_6A;
						}
						if (num != 513 && num != 516)
						{
							goto IL_6A;
						}
					}
					else if (num != 519 && num != 523 && num != 582)
					{
						goto IL_6A;
					}
					base.Activate();
				}
				IL_6A:;
			}
			catch (Exception ex)
			{
			}
			base.WndProc(ref m);
		}

		// Token: 0x06006580 RID: 25984 RVA: 0x00382E34 File Offset: 0x00381034
		private void method_623(object sender, EventArgs e)
		{
			if (DarkMessageBox.smethod_1("Are you sure?", "Remove all contacts of this side", Enum11.const_2) == DialogResult.OK)
			{
				new List<ActiveUnit>();
				try
				{
					foreach (Contact contact in Enumerable.ToList<Contact>(Client.smethod_50().method_44()))
					{
						Side side = Client.smethod_50();
						Contact contact_ = contact;
						Scenario scenario = Client.smethod_46();
						side.method_15(contact_, ref scenario, true);
						foreach (Side side2 in Client.smethod_46().method_44())
						{
							if (side2.method_68(Client.smethod_50()) == Misc.PostureStance.Friendly && side2 != Client.smethod_50() && side2.method_44().Contains(contact))
							{
								Side side3 = side2;
								Contact contact_2 = contact;
								scenario = Client.smethod_46();
								side3.method_15(contact_2, ref scenario, false);
							}
						}
						Side side4 = Client.smethod_50();
						Contact theC = contact;
						scenario = Client.smethod_46();
						side4.method_17(theC, ref scenario, true);
					}
				}
				finally
				{
					List<Contact>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				Client.smethod_50().method_20(Client.smethod_46());
				Client.smethod_50().method_21(Client.smethod_46());
				Client.bool_1 = true;
			}
		}

		// Token: 0x06006581 RID: 25985 RVA: 0x0004013F File Offset: 0x0003E33F
		private void method_624(object sender, EventArgs e)
		{
			this.method_625();
		}

		// Token: 0x06006582 RID: 25986 RVA: 0x00382F54 File Offset: 0x00381154
		private void method_625()
		{
			this.vmethod_998().Checked = !this.vmethod_998().Checked;
			if (this.vmethod_998().Checked)
			{
				Class2558.smethod_18(this);
			}
			else
			{
				Class2558.smethod_19(this);
			}
			Class570.class280_0.method_61(this.vmethod_998().Checked);
			this.rightColumnWPF_0.method_4(this);
		}

		// Token: 0x06006583 RID: 25987 RVA: 0x00040147 File Offset: 0x0003E347
		public void method_626(object sender, EventArgs e)
		{
			this.vmethod_836().Visible = !this.vmethod_836().Visible;
			this.method_627();
		}

		// Token: 0x06006584 RID: 25988 RVA: 0x00382FB8 File Offset: 0x003811B8
		private void method_627()
		{
			if (this.vmethod_836().Visible)
			{
				this.vmethod_798().SuspendLayout();
				this.vmethod_798().Top = this.vmethod_798().Top + this.vmethod_836().Height;
				this.vmethod_798().Height = this.vmethod_798().Height - this.vmethod_836().Height;
				this.vmethod_798().ResumeLayout();
				return;
			}
			this.vmethod_798().SuspendLayout();
			this.vmethod_798().Top = this.vmethod_798().Top - this.vmethod_836().Height;
			this.vmethod_798().Height = this.vmethod_798().Height + this.vmethod_836().Height;
			this.vmethod_798().ResumeLayout();
		}

		// Token: 0x06006585 RID: 25989 RVA: 0x00040168 File Offset: 0x0003E368
		private void MainForm_ResizeBegin(object sender, EventArgs e)
		{
			base.SuspendLayout();
		}

		// Token: 0x06006586 RID: 25990 RVA: 0x00040170 File Offset: 0x0003E370
		private void MainForm_ResizeEnd(object sender, EventArgs e)
		{
			base.ResumeLayout();
		}

		// Token: 0x06006587 RID: 25991 RVA: 0x00383088 File Offset: 0x00381288
		private void method_628(object sender, EventArgs e)
		{
			if (Client.smethod_54() != null && Client.smethod_54().bool_0)
			{
				this.method_96(Client.smethod_54());
				System.Drawing.Point point = base.PointToScreen(this.vmethod_1008().Bounds.Location);
				this.vmethod_40().Show(point.X, point.Y + this.vmethod_1008().Height);
			}
		}

		// Token: 0x06006588 RID: 25992 RVA: 0x003830F4 File Offset: 0x003812F4
		private void method_629(object sender, EventArgs e)
		{
			this.vmethod_1012().Checked = !this.vmethod_1012().Checked;
			if (this.vmethod_1012().Checked)
			{
				Client.smethod_52().method_44(Class285.Enum85.const_1);
			}
			else
			{
				Client.smethod_52().method_44(Class285.Enum85.const_2);
			}
			this.method_307();
		}

		// Token: 0x06006589 RID: 25993 RVA: 0x00383148 File Offset: 0x00381348
		private void method_630(object sender, EventArgs e)
		{
			if (this.vmethod_1022().Checked)
			{
				this.vmethod_1022().Checked = false;
				this.terrainTypeLegendWindow_0.Close();
				this.terrainTypeLegendWindow_0 = null;
				return;
			}
			this.vmethod_1022().Checked = true;
			this.terrainTypeLegendWindow_0 = new TerrainTypeLegendWindow();
			this.terrainTypeLegendWindow_0.Show();
		}

		// Token: 0x0600658A RID: 25994 RVA: 0x003831A4 File Offset: 0x003813A4
		private void method_631()
		{
			if (!Information.IsNothing(Client.exception_0))
			{
				base.Focus();
				ToolTip toolTip = new ToolTip();
				toolTip.IsBalloon = true;
				toolTip.ToolTipTitle = "Failed to perform Autosave!";
				toolTip.ToolTipIcon = ToolTipIcon.Error;
				toolTip.Show(string.Empty, this.vmethod_780(), 0);
				toolTip.Show("Error message: " + Client.exception_0.Message, this.vmethod_780(), (int)Math.Round((double)this.vmethod_780().Width / 2.0), (int)Math.Round((double)this.vmethod_780().Height / 2.0));
				Client.exception_0 = null;
			}
		}

		// Token: 0x0600658B RID: 25995 RVA: 0x00040178 File Offset: 0x0003E378
		private void method_632(object sender, EventArgs e)
		{
			InternetConnectivityCheck.smethod_0(true);
		}

		// Token: 0x0600658C RID: 25996 RVA: 0x00040180 File Offset: 0x0003E380
		private void method_633(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString((sender as ToolStripMenuItem).Tag));
			Client.smethod_76();
		}

		// Token: 0x0600658D RID: 25997 RVA: 0x00040180 File Offset: 0x0003E380
		private void method_634(object sender, EventArgs e)
		{
			Client.smethod_100(Conversions.ToString((sender as ToolStripMenuItem).Tag));
			Client.smethod_76();
		}

		// Token: 0x0600658E RID: 25998 RVA: 0x00383254 File Offset: 0x00381454
		private void method_635(object sender, EventArgs e)
		{
			if (this.vmethod_994().HasDropDownItems)
			{
				this.vmethod_994().DropDownItems.Clear();
			}
			try
			{
				foreach (string text in Client.list_1)
				{
					MainForm.Class2448 @class = new MainForm.Class2448(@class);
					string fileName = Path.GetFileName(text);
					@class.toolStripMenuItem_0 = new ToolStripMenuItem();
					@class.toolStripMenuItem_0.Text = fileName;
					@class.toolStripMenuItem_0.Tag = text;
					this.vmethod_994().DropDownItems.Add(@class.toolStripMenuItem_0);
					@class.toolStripMenuItem_0.Click += @class.method_0;
				}
			}
			finally
			{
				List<string>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
		}

		// Token: 0x0600658F RID: 25999 RVA: 0x0004019C File Offset: 0x0003E39C
		[CompilerGenerated]
		private bool method_636(UnguidedWeapon unguidedWeapon_0)
		{
			return unguidedWeapon_0 != null && !unguidedWeapon_0.method_64() && Class2572.smethod_6(this.vmethod_796(), unguidedWeapon_0);
		}

		// Token: 0x06006590 RID: 26000 RVA: 0x000401B7 File Offset: 0x0003E3B7
		[CompilerGenerated]
		private void method_637(object sender, EventArgs e)
		{
			this.method_107();
		}

		// Token: 0x06006591 RID: 26001 RVA: 0x000401BF File Offset: 0x0003E3BF
		[CompilerGenerated]
		private void method_638()
		{
			this.gameControlBar_0.vmethod_18().Visibility = Visibility.Collapsed;
			this.gameControlBar_0.vmethod_22().Visibility = Visibility.Visible;
		}

		// Token: 0x06006592 RID: 26002 RVA: 0x000401E3 File Offset: 0x0003E3E3
		[CompilerGenerated]
		private void method_639()
		{
			this.gameControlBar_0.vmethod_18().Visibility = Visibility.Visible;
			this.gameControlBar_0.vmethod_22().Visibility = Visibility.Collapsed;
		}

		// Token: 0x06006593 RID: 26003 RVA: 0x00040207 File Offset: 0x0003E407
		[CompilerGenerated]
		private float method_640(ReferencePoint referencePoint_2)
		{
			return referencePoint_2.method_12(this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1);
		}

		// Token: 0x06006594 RID: 26004 RVA: 0x00040225 File Offset: 0x0003E425
		[CompilerGenerated]
		private double method_641(Waypoint waypoint_0)
		{
			return waypoint_0.method_15(this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1);
		}

		// Token: 0x06006595 RID: 26005 RVA: 0x00040207 File Offset: 0x0003E407
		[CompilerGenerated]
		private float method_642(ReferencePoint referencePoint_2)
		{
			return referencePoint_2.method_12(this.geopoint_Struct_0.double_0, this.geopoint_Struct_0.double_1);
		}

		// Token: 0x04003716 RID: 14102
		private List<System.Drawing.Point[]> list_0;

		// Token: 0x04003717 RID: 14103
		private List<System.Drawing.Point[]> list_1;

		// Token: 0x04003718 RID: 14104
		private List<System.Drawing.Point[]> list_2;

		// Token: 0x04003719 RID: 14105
		private List<System.Drawing.Point[]> list_3;

		// Token: 0x0400371A RID: 14106
		private List<System.Drawing.Point[]> list_4;

		// Token: 0x0400371B RID: 14107
		private List<System.Drawing.Point[]> list_5;

		// Token: 0x0400371C RID: 14108
		private List<System.Drawing.Point[]> list_6;

		// Token: 0x0400371D RID: 14109
		private List<System.Drawing.Point[]> list_7;

		// Token: 0x0400371E RID: 14110
		private List<System.Drawing.Point[]> list_8;

		// Token: 0x0400371F RID: 14111
		private List<System.Drawing.Point[]> list_9;

		// Token: 0x04003720 RID: 14112
		private List<System.Drawing.Point[]> list_10;

		// Token: 0x04003721 RID: 14113
		private List<System.Drawing.Point[]> list_11;

		// Token: 0x04003722 RID: 14114
		private List<System.Drawing.Point[]> list_12;

		// Token: 0x04003723 RID: 14115
		private List<System.Drawing.Point[]> list_13;

		// Token: 0x04003724 RID: 14116
		private List<System.Drawing.Point[]> list_14;

		// Token: 0x04003725 RID: 14117
		private List<System.Drawing.Point[]> list_15;

		// Token: 0x04003726 RID: 14118
		private List<System.Drawing.Point[]> list_16;

		// Token: 0x04003727 RID: 14119
		private List<System.Drawing.Point[]> list_17;

		// Token: 0x04003728 RID: 14120
		private List<System.Drawing.Point[]> list_18;

		// Token: 0x04003729 RID: 14121
		private List<System.Drawing.Point[]> list_19;

		// Token: 0x0400372A RID: 14122
		private List<System.Drawing.Point[]> list_20;

		// Token: 0x0400372B RID: 14123
		private List<System.Drawing.Point[]> list_21;

		// Token: 0x0400372C RID: 14124
		private List<System.Drawing.Point[]> list_22;

		// Token: 0x0400372D RID: 14125
		private List<System.Drawing.Point[]> list_23;

		// Token: 0x0400372E RID: 14126
		private List<System.Drawing.Point[]> list_24;

		// Token: 0x0400372F RID: 14127
		private List<System.Drawing.Point[]> list_25;

		// Token: 0x04003730 RID: 14128
		private List<System.Drawing.Point[]> list_26;

		// Token: 0x04003731 RID: 14129
		private List<System.Drawing.Point[]> list_27;

		// Token: 0x04003732 RID: 14130
		private List<System.Drawing.Point[]> list_28;

		// Token: 0x04003733 RID: 14131
		private List<System.Drawing.Point[]> list_29;

		// Token: 0x04003734 RID: 14132
		private List<System.Drawing.Point[]> list_30;

		// Token: 0x04003735 RID: 14133
		private List<System.Drawing.Point[]> list_31;

		// Token: 0x04003736 RID: 14134
		private List<System.Drawing.Point[]> list_32;

		// Token: 0x04003737 RID: 14135
		private List<System.Drawing.Point[]> list_33;

		// Token: 0x04003738 RID: 14136
		private List<System.Drawing.Point[]> list_34;

		// Token: 0x04003739 RID: 14137
		private List<System.Drawing.Point[]> list_35;

		// Token: 0x0400373A RID: 14138
		private List<System.Drawing.Point[]> list_36;

		// Token: 0x0400373B RID: 14139
		private List<System.Drawing.Point[]> list_37;

		// Token: 0x0400373C RID: 14140
		private List<System.Drawing.Point[]> list_38;

		// Token: 0x0400373D RID: 14141
		private List<System.Drawing.Point[]> list_39;

		// Token: 0x0400373E RID: 14142
		private List<System.Drawing.Point[]> list_40;

		// Token: 0x0400373F RID: 14143
		private List<System.Drawing.Point[]> list_41;

		// Token: 0x04003740 RID: 14144
		private List<System.Drawing.Point[]> list_42;

		// Token: 0x04003741 RID: 14145
		private List<System.Drawing.Point[]> list_43;

		// Token: 0x04003742 RID: 14146
		private List<System.Drawing.Point[]> list_44;

		// Token: 0x04003743 RID: 14147
		private List<System.Drawing.Point[]> list_45;

		// Token: 0x04003744 RID: 14148
		private List<System.Drawing.Point[]> list_46;

		// Token: 0x04003745 RID: 14149
		private List<System.Drawing.Point[]> list_47;

		// Token: 0x04003746 RID: 14150
		private List<System.Drawing.Point[]> list_48;

		// Token: 0x04003747 RID: 14151
		private Bitmap bitmap_0;

		// Token: 0x04003748 RID: 14152
		public List<Class2449> list_49;

		// Token: 0x04003749 RID: 14153
		private DateTime dateTime_0;

		// Token: 0x0400374A RID: 14154
		public string string_0;

		// Token: 0x0400374B RID: 14155
		public bool bool_0;

		// Token: 0x0400374C RID: 14156
		public string string_1;

		// Token: 0x0400374D RID: 14157
		public bool bool_1;

		// Token: 0x0400374E RID: 14158
		public int int_0;

		// Token: 0x0400374F RID: 14159
		private List<ActiveUnit> list_50;

		// Token: 0x04003750 RID: 14160
		public string string_2;

		// Token: 0x04003751 RID: 14161
		public string string_3;

		// Token: 0x04003752 RID: 14162
		public string string_4;

		// Token: 0x04003753 RID: 14163
		public string string_5;

		// Token: 0x04003754 RID: 14164
		private StringBuilder stringBuilder_0;

		// Token: 0x04003755 RID: 14165
		public int int_1;

		// Token: 0x04003756 RID: 14166
		public int int_2;

		// Token: 0x04003757 RID: 14167
		public int int_3;

		// Token: 0x04003758 RID: 14168
		private StringBuilder stringBuilder_1;

		// Token: 0x04003759 RID: 14169
		public CommandLayer.Enum164 enum164_0;

		// Token: 0x0400375A RID: 14170
		private StringBuilder stringBuilder_2;

		// Token: 0x0400375B RID: 14171
		private Pen pen_0;

		// Token: 0x0400375C RID: 14172
		private short short_0;

		// Token: 0x0400375D RID: 14173
		private short short_1;

		// Token: 0x0400375E RID: 14174
		[CompilerGenerated]
		private Class2425 class2425_0;

		// Token: 0x0400375F RID: 14175
		[CompilerGenerated]
		[AccessedThroughProperty("Transition_SlideRightColumnOut")]
		private Transition transition_0;

		// Token: 0x04003760 RID: 14176
		[CompilerGenerated]
		[AccessedThroughProperty("Transition_SlideRightColumnIn")]
		private Transition transition_1;

		// Token: 0x04003761 RID: 14177
		private int int_4;

		// Token: 0x04003762 RID: 14178
		public static bool bool_2 = false;

		// Token: 0x04003763 RID: 14179
		private double double_0;

		// Token: 0x04003764 RID: 14180
		private long long_0;

		// Token: 0x04003765 RID: 14181
		private GlobalMinimapWindow globalMinimapWindow_0;

		// Token: 0x04003766 RID: 14182
		private CameraFollowingMinimapWindow cameraFollowingMinimapWindow_0;

		// Token: 0x04003767 RID: 14183
		private ScenarioMinimapWindow scenarioMinimapWindow_0;

		// Token: 0x04003768 RID: 14184
		private System.Drawing.Point point_0;

		// Token: 0x04003769 RID: 14185
		private System.Drawing.Point point_1;

		// Token: 0x0400376A RID: 14186
		private MouseEventArgs mouseEventArgs_0;

		// Token: 0x0400376B RID: 14187
		[AccessedThroughProperty("doubleClickTimer")]
		[CompilerGenerated]
		private Timer timer_0;

		// Token: 0x0400376C RID: 14188
		private bool bool_3;

		// Token: 0x0400376D RID: 14189
		private bool bool_4;

		// Token: 0x0400376E RID: 14190
		private bool bool_5;

		// Token: 0x0400376F RID: 14191
		private int int_5;

		// Token: 0x04003770 RID: 14192
		private Rectangle rectangle_0;

		// Token: 0x04003771 RID: 14193
		private MouseEventArgs mouseEventArgs_1;

		// Token: 0x04003772 RID: 14194
		private bool bool_6;

		// Token: 0x04003773 RID: 14195
		public MessageLogControlViewModel messageLogControlViewModel_0;

		// Token: 0x04003774 RID: 14196
		public MessageLogWPFWindow messageLogWPFWindow_0;

		// Token: 0x04003775 RID: 14197
		private Timer timer_1;

		// Token: 0x04003776 RID: 14198
		public Class1871 class1871_0;

		// Token: 0x04003777 RID: 14199
		public Class1871 class1871_1;

		// Token: 0x04003778 RID: 14200
		public Class1872 class1872_0;

		// Token: 0x04003779 RID: 14201
		public Class1871 class1871_2;

		// Token: 0x0400377A RID: 14202
		private Class1871 class1871_3;

		// Token: 0x0400377B RID: 14203
		public Class1871 class1871_4;

		// Token: 0x0400377C RID: 14204
		public Class1871 class1871_5;

		// Token: 0x0400377D RID: 14205
		private Class1873 class1873_0;

		// Token: 0x0400377E RID: 14206
		private Class1873 class1873_1;

		// Token: 0x0400377F RID: 14207
		private Class1873 class1873_2;

		// Token: 0x04003780 RID: 14208
		private Class2571.Class1880 class1880_0;

		// Token: 0x04003782 RID: 14210
		[AccessedThroughProperty("MenuStrip1")]
		[CompilerGenerated]
		private Class119 class119_0;

		// Token: 0x04003783 RID: 14211
		[CompilerGenerated]
		[AccessedThroughProperty("FileToolStripMenuItem")]
		private Class128 class128_0;

		// Token: 0x04003784 RID: 14212
		[AccessedThroughProperty("HelpToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_1;

		// Token: 0x04003785 RID: 14213
		[CompilerGenerated]
		[AccessedThroughProperty("CMenu_AddObject")]
		private Class113 class113_0;

		// Token: 0x04003786 RID: 14214
		[CompilerGenerated]
		[AccessedThroughProperty("AddPlatformToolStripMenuItem")]
		private Class128 class128_2;

		// Token: 0x04003787 RID: 14215
		[CompilerGenerated]
		[AccessedThroughProperty("NewToolStripMenuItem")]
		private Class128 class128_3;

		// Token: 0x04003788 RID: 14216
		[CompilerGenerated]
		[AccessedThroughProperty("LoadToolStripMenuItem")]
		private Class128 class128_4;

		// Token: 0x04003789 RID: 14217
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_Editor")]
		private Class128 class128_5;

		// Token: 0x0400378A RID: 14218
		[CompilerGenerated]
		[AccessedThroughProperty("AddUnitToolStripMenuItem")]
		private Class128 class128_6;

		// Token: 0x0400378B RID: 14219
		[AccessedThroughProperty("TSB_StartGame")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_0;

		// Token: 0x0400378C RID: 14220
		[AccessedThroughProperty("SaveAsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_7;

		// Token: 0x0400378D RID: 14221
		[AccessedThroughProperty("SaveScenarioDialog")]
		[CompilerGenerated]
		private SaveFileDialog saveFileDialog_0;

		// Token: 0x0400378E RID: 14222
		[AccessedThroughProperty("TitleDescriptionToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_8;

		// Token: 0x0400378F RID: 14223
		[CompilerGenerated]
		[AccessedThroughProperty("Timer_NewTurn")]
		private Timer timer_2;

		// Token: 0x04003790 RID: 14224
		[AccessedThroughProperty("Sides_TSMI")]
		[CompilerGenerated]
		private Class128 class128_9;

		// Token: 0x04003791 RID: 14225
		[AccessedThroughProperty("ExitToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_10;

		// Token: 0x04003792 RID: 14226
		[CompilerGenerated]
		[AccessedThroughProperty("SwitchTo_TSMI")]
		private Class128 class128_11;

		// Token: 0x04003793 RID: 14227
		[CompilerGenerated]
		[AccessedThroughProperty("CMenu_Unit")]
		private Class113 class113_1;

		// Token: 0x04003794 RID: 14228
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_Scripts")]
		private Class128 class128_12;

		// Token: 0x04003795 RID: 14229
		[AccessedThroughProperty("TSMI_EditUnitProperties")]
		[CompilerGenerated]
		private Class128 class128_13;

		// Token: 0x04003796 RID: 14230
		[AccessedThroughProperty("MagazinesToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_14;

		// Token: 0x04003797 RID: 14231
		[AccessedThroughProperty("StoresToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_15;

		// Token: 0x04003798 RID: 14232
		[AccessedThroughProperty("AircraftToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_16;

		// Token: 0x04003799 RID: 14233
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_RTB")]
		private Class128 class128_17;

		// Token: 0x0400379A RID: 14234
		[CompilerGenerated]
		[AccessedThroughProperty("DB3KToolStripMenuItem")]
		private Class128 class128_18;

		// Token: 0x0400379B RID: 14235
		[AccessedThroughProperty("ToolStripMenuItem3")]
		[CompilerGenerated]
		private Class128 class128_19;

		// Token: 0x0400379C RID: 14236
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripMenuItem4")]
		private Class128 class128_20;

		// Token: 0x0400379D RID: 14237
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripMenuItem5")]
		private Class128 class128_21;

		// Token: 0x0400379E RID: 14238
		[CompilerGenerated]
		[AccessedThroughProperty("GroupToolStripMenuItem")]
		private Class128 class128_22;

		// Token: 0x0400379F RID: 14239
		[CompilerGenerated]
		[AccessedThroughProperty("ColonialWarsToolStripMenuItem")]
		private Class128 class128_23;

		// Token: 0x040037A0 RID: 14240
		[CompilerGenerated]
		[AccessedThroughProperty("Timer_ElevationSampler")]
		private Timer timer_3;

		// Token: 0x040037A1 RID: 14241
		[AccessedThroughProperty("BW_ElevationSampler")]
		[CompilerGenerated]
		private BackgroundWorker backgroundWorker_0;

		// Token: 0x040037A2 RID: 14242
		[AccessedThroughProperty("Timer_UIupdate")]
		[CompilerGenerated]
		private Timer timer_4;

		// Token: 0x040037A3 RID: 14243
		[CompilerGenerated]
		[AccessedThroughProperty("MaiToolStripMenuItem")]
		private Class128 class128_24;

		// Token: 0x040037A4 RID: 14244
		[AccessedThroughProperty("InstallationsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_25;

		// Token: 0x040037A5 RID: 14245
		[CompilerGenerated]
		[AccessedThroughProperty("SaveSelectedInstallationToFileToolStripMenuItem")]
		private Class128 class128_26;

		// Token: 0x040037A6 RID: 14246
		[AccessedThroughProperty("LoadInstallationFromFileToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_27;

		// Token: 0x040037A7 RID: 14247
		[AccessedThroughProperty("ImageList1")]
		[CompilerGenerated]
		private ImageList imageList_0;

		// Token: 0x040037A8 RID: 14248
		[AccessedThroughProperty("ToolStripSeparator4")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_0;

		// Token: 0x040037A9 RID: 14249
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator5")]
		private ToolStripSeparator toolStripSeparator_1;

		// Token: 0x040037AA RID: 14250
		[CompilerGenerated]
		[AccessedThroughProperty("BriefingToolStripMenuItem")]
		private Class128 class128_28;

		// Token: 0x040037AB RID: 14251
		[CompilerGenerated]
		[AccessedThroughProperty("ReportsToolStripMenuItem")]
		private Class128 class128_29;

		// Token: 0x040037AC RID: 14252
		[CompilerGenerated]
		[AccessedThroughProperty("OptionsToolStripMenuItem1")]
		private Class128 class128_30;

		// Token: 0x040037AD RID: 14253
		[AccessedThroughProperty("IranToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_31;

		// Token: 0x040037AE RID: 14254
		[CompilerGenerated]
		[AccessedThroughProperty("AddRemoveAircraftToolStripMenuItem")]
		private Class128 class128_32;

		// Token: 0x040037AF RID: 14255
		[CompilerGenerated]
		[AccessedThroughProperty("GodsEyeViewToolStripMenuItem")]
		private Class128 class128_33;

		// Token: 0x040037B0 RID: 14256
		[CompilerGenerated]
		[AccessedThroughProperty("LOSTerrainMaskingToolStripMenuItem")]
		private Class128 class128_34;

		// Token: 0x040037B1 RID: 14257
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripButton2")]
		private ToolStripButton toolStripButton_1;

		// Token: 0x040037B2 RID: 14258
		[CompilerGenerated]
		[AccessedThroughProperty("LoadPicDlg")]
		private OpenFileDialog openFileDialog_0;

		// Token: 0x040037B3 RID: 14259
		[CompilerGenerated]
		[AccessedThroughProperty("AboutCommandToolStripMenuItem")]
		private Class128 class128_35;

		// Token: 0x040037B4 RID: 14260
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_MapSettings")]
		private Class128 class128_36;

		// Token: 0x040037B5 RID: 14261
		[CompilerGenerated]
		[AccessedThroughProperty("AirSensorsToolStripMenuItem")]
		private Class128 class128_37;

		// Token: 0x040037B6 RID: 14262
		[CompilerGenerated]
		[AccessedThroughProperty("SurfaceSensorsToolStripMenuItem")]
		private Class128 class128_38;

		// Token: 0x040037B7 RID: 14263
		[AccessedThroughProperty("UnderwaterSensorsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_39;

		// Token: 0x040037B8 RID: 14264
		[AccessedThroughProperty("AirWeaponsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_40;

		// Token: 0x040037B9 RID: 14265
		[AccessedThroughProperty("SurfaceWeaponsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_41;

		// Token: 0x040037BA RID: 14266
		[AccessedThroughProperty("UnderwaterWeaponsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_42;

		// Token: 0x040037BB RID: 14267
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator7")]
		private ToolStripSeparator toolStripSeparator_2;

		// Token: 0x040037BC RID: 14268
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripMenuItem1")]
		private Class128 class128_43;

		// Token: 0x040037BD RID: 14269
		[AccessedThroughProperty("TSMI1")]
		[CompilerGenerated]
		private Class128 class128_44;

		// Token: 0x040037BE RID: 14270
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI2")]
		private Class128 class128_45;

		// Token: 0x040037BF RID: 14271
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI3")]
		private Class128 class128_46;

		// Token: 0x040037C0 RID: 14272
		[CompilerGenerated]
		[AccessedThroughProperty("TargetingVectorsToolStripMenuItem")]
		private Class128 class128_47;

		// Token: 0x040037C1 RID: 14273
		[AccessedThroughProperty("TSMI4")]
		[CompilerGenerated]
		private Class128 class128_48;

		// Token: 0x040037C2 RID: 14274
		[AccessedThroughProperty("TSMI5")]
		[CompilerGenerated]
		private Class128 class128_49;

		// Token: 0x040037C3 RID: 14275
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI6")]
		private Class128 class128_50;

		// Token: 0x040037C4 RID: 14276
		[CompilerGenerated]
		[AccessedThroughProperty("DatablacksToolStripMenuItem")]
		private Class128 class128_51;

		// Token: 0x040037C5 RID: 14277
		[AccessedThroughProperty("DatalinksToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_52;

		// Token: 0x040037C6 RID: 14278
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI7")]
		private Class128 class128_53;

		// Token: 0x040037C7 RID: 14279
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI8")]
		private Class128 class128_54;

		// Token: 0x040037C8 RID: 14280
		[AccessedThroughProperty("TSMI9")]
		[CompilerGenerated]
		private Class128 class128_55;

		// Token: 0x040037C9 RID: 14281
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI10")]
		private Class128 class128_56;

		// Token: 0x040037CA RID: 14282
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI11")]
		private Class128 class128_57;

		// Token: 0x040037CB RID: 14283
		[AccessedThroughProperty("TSMI12")]
		[CompilerGenerated]
		private Class128 class128_58;

		// Token: 0x040037CC RID: 14284
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_Recorder")]
		private Class128 class128_59;

		// Token: 0x040037CD RID: 14285
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_Testing")]
		private Class128 class128_60;

		// Token: 0x040037CE RID: 14286
		[CompilerGenerated]
		[AccessedThroughProperty("RegressionTestsToolStripMenuItem")]
		private Class128 class128_61;

		// Token: 0x040037CF RID: 14287
		[CompilerGenerated]
		[AccessedThroughProperty("ESMFreezeBugToolStripMenuItem")]
		private Class128 class128_62;

		// Token: 0x040037D0 RID: 14288
		[AccessedThroughProperty("ExportToToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_63;

		// Token: 0x040037D1 RID: 14289
		[AccessedThroughProperty("ImportFromTestExportxmlToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_64;

		// Token: 0x040037D2 RID: 14290
		[AccessedThroughProperty("ScenImportDialog")]
		[CompilerGenerated]
		private OpenFileDialog openFileDialog_1;

		// Token: 0x040037D3 RID: 14291
		[AccessedThroughProperty("ScenExportDialog")]
		[CompilerGenerated]
		private SaveFileDialog saveFileDialog_1;

		// Token: 0x040037D4 RID: 14292
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator9")]
		private ToolStripSeparator toolStripSeparator_3;

		// Token: 0x040037D5 RID: 14293
		[AccessedThroughProperty("MissionsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_65;

		// Token: 0x040037D6 RID: 14294
		[AccessedThroughProperty("AddNewMissionToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_66;

		// Token: 0x040037D7 RID: 14295
		[AccessedThroughProperty("MissionEditorToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_67;

		// Token: 0x040037D8 RID: 14296
		[AccessedThroughProperty("ToolStripSeparator10")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_4;

		// Token: 0x040037D9 RID: 14297
		[CompilerGenerated]
		[AccessedThroughProperty("KillAllUnitsofThisSideToolStripMenuItem")]
		private Class128 class128_68;

		// Token: 0x040037DA RID: 14298
		[AccessedThroughProperty("TSMI_EditScoring")]
		[CompilerGenerated]
		private Class128 class128_69;

		// Token: 0x040037DB RID: 14299
		[AccessedThroughProperty("TSMI_SelectNewHome")]
		[CompilerGenerated]
		private Class128 class128_70;

		// Token: 0x040037DC RID: 14300
		[AccessedThroughProperty("ScenToXMLToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_71;

		// Token: 0x040037DD RID: 14301
		[CompilerGenerated]
		[AccessedThroughProperty("AddReferencePointToolStripMenuItem")]
		private Class128 class128_72;

		// Token: 0x040037DE RID: 14302
		[AccessedThroughProperty("DeleteSelectedRefPointsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_73;

		// Token: 0x040037DF RID: 14303
		[AccessedThroughProperty("MessageLogToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_74;

		// Token: 0x040037E0 RID: 14304
		[CompilerGenerated]
		[AccessedThroughProperty("ClearToolStripMenuItem")]
		private Class128 class128_75;

		// Token: 0x040037E1 RID: 14305
		[AccessedThroughProperty("PrintToFileToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_76;

		// Token: 0x040037E2 RID: 14306
		[AccessedThroughProperty("AddReferencePointToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_77;

		// Token: 0x040037E3 RID: 14307
		[AccessedThroughProperty("Cmenu_Refpoint")]
		[CompilerGenerated]
		private Class113 class113_2;

		// Token: 0x040037E4 RID: 14308
		[CompilerGenerated]
		[AccessedThroughProperty("RemoveToolStripMenuItem")]
		private Class128 class128_78;

		// Token: 0x040037E5 RID: 14309
		[CompilerGenerated]
		[AccessedThroughProperty("MoveToToolStripMenuItem")]
		private Class128 class128_79;

		// Token: 0x040037E6 RID: 14310
		[CompilerGenerated]
		[AccessedThroughProperty("MakeSelectedRfPointsRelativeToToolStripMenuItem")]
		private Class128 class128_80;

		// Token: 0x040037E7 RID: 14311
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_UnitIsAutodetectable")]
		private Class128 class128_81;

		// Token: 0x040037E8 RID: 14312
		[AccessedThroughProperty("ToolStripSeparator11")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_5;

		// Token: 0x040037E9 RID: 14313
		[AccessedThroughProperty("TSMI_DoctrineROE")]
		[CompilerGenerated]
		private Class128 class128_82;

		// Token: 0x040037EA RID: 14314
		[AccessedThroughProperty("TSMI_SetOrientation")]
		[CompilerGenerated]
		private Class128 class128_83;

		// Token: 0x040037EB RID: 14315
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator12")]
		private ToolStripSeparator toolStripSeparator_6;

		// Token: 0x040037EC RID: 14316
		[AccessedThroughProperty("LossesExpendituresToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_84;

		// Token: 0x040037ED RID: 14317
		[CompilerGenerated]
		[AccessedThroughProperty("StartDurationToolStripMenuItem")]
		private Class128 class128_85;

		// Token: 0x040037EE RID: 14318
		[AccessedThroughProperty("ViewCurrentScoreToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_86;

		// Token: 0x040037EF RID: 14319
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_Record")]
		private ToolStripButton toolStripButton_2;

		// Token: 0x040037F0 RID: 14320
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator13")]
		private ToolStripSeparator toolStripSeparator_7;

		// Token: 0x040037F1 RID: 14321
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator3")]
		private ToolStripSeparator toolStripSeparator_8;

		// Token: 0x040037F2 RID: 14322
		[CompilerGenerated]
		[AccessedThroughProperty("SBRToolStripMenuItem")]
		private Class128 class128_87;

		// Token: 0x040037F3 RID: 14323
		[AccessedThroughProperty("GenerateTemplateToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_88;

		// Token: 0x040037F4 RID: 14324
		[AccessedThroughProperty("FD_SBRGenerateTemplate")]
		[CompilerGenerated]
		private SaveFileDialog saveFileDialog_2;

		// Token: 0x040037F5 RID: 14325
		[CompilerGenerated]
		[AccessedThroughProperty("ApplySBRScriptToolStripMenuItem")]
		private Class128 class128_89;

		// Token: 0x040037F6 RID: 14326
		[CompilerGenerated]
		[AccessedThroughProperty("FD_LoadSBRScript")]
		private OpenFileDialog openFileDialog_2;

		// Token: 0x040037F7 RID: 14327
		[CompilerGenerated]
		[AccessedThroughProperty("MinefieldsToolStripMenuItem")]
		private Class128 class128_90;

		// Token: 0x040037F8 RID: 14328
		[AccessedThroughProperty("CreateMinefieldFromDesignatedAreaToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_91;

		// Token: 0x040037F9 RID: 14329
		[CompilerGenerated]
		[AccessedThroughProperty("RemoveMinesFromDesignatedAreaToolStripMenuItem")]
		private Class128 class128_92;

		// Token: 0x040037FA RID: 14330
		[CompilerGenerated]
		[AccessedThroughProperty("Button1")]
		private Control9 control9_0;

		// Token: 0x040037FB RID: 14331
		[CompilerGenerated]
		[AccessedThroughProperty("RefuelifPossibleToolStripMenuItem")]
		private Class128 class128_93;

		// Token: 0x040037FC RID: 14332
		[CompilerGenerated]
		[AccessedThroughProperty("UnitOrdersToolStripMenuItem")]
		private Class128 class128_94;

		// Token: 0x040037FD RID: 14333
		[CompilerGenerated]
		[AccessedThroughProperty("ThrottleAltitudeToolStripMenuItem")]
		private Class128 class128_95;

		// Token: 0x040037FE RID: 14334
		[AccessedThroughProperty("PlotCourseToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_96;

		// Token: 0x040037FF RID: 14335
		[CompilerGenerated]
		[AccessedThroughProperty("AirOpsToolStripMenuItem")]
		private Class128 class128_97;

		// Token: 0x04003800 RID: 14336
		[CompilerGenerated]
		[AccessedThroughProperty("WeaponsToolStripMenuItem1")]
		private Class128 class128_98;

		// Token: 0x04003801 RID: 14337
		[CompilerGenerated]
		[AccessedThroughProperty("MagazinesToolStripMenuItem1")]
		private Class128 class128_99;

		// Token: 0x04003802 RID: 14338
		[CompilerGenerated]
		[AccessedThroughProperty("SensorsToolStripMenuItem1")]
		private Class128 class128_100;

		// Token: 0x04003803 RID: 14339
		[AccessedThroughProperty("DamageControlToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_101;

		// Token: 0x04003804 RID: 14340
		[AccessedThroughProperty("EditFormationToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_102;

		// Token: 0x04003805 RID: 14341
		[CompilerGenerated]
		[AccessedThroughProperty("EventEditorToolStripMenuItem")]
		private Class128 class128_103;

		// Token: 0x04003806 RID: 14342
		[AccessedThroughProperty("EventsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_104;

		// Token: 0x04003807 RID: 14343
		[AccessedThroughProperty("TriggersToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_105;

		// Token: 0x04003808 RID: 14344
		[CompilerGenerated]
		[AccessedThroughProperty("ActionsToolStripMenuItem")]
		private Class128 class128_106;

		// Token: 0x04003809 RID: 14345
		[CompilerGenerated]
		[AccessedThroughProperty("ConditionsToolStripMenuItem")]
		private Class128 class128_107;

		// Token: 0x0400380A RID: 14346
		[AccessedThroughProperty("ToolStripSeparator15")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_9;

		// Token: 0x0400380B RID: 14347
		[CompilerGenerated]
		[AccessedThroughProperty("WeatherToolStripMenuItem")]
		private Class128 class128_108;

		// Token: 0x0400380C RID: 14348
		[AccessedThroughProperty("EditDockedBoatsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_109;

		// Token: 0x0400380D RID: 14349
		[CompilerGenerated]
		[AccessedThroughProperty("MergeRangesymbolsToolStripMenuItem")]
		private Class128 class128_110;

		// Token: 0x0400380E RID: 14350
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator16")]
		private ToolStripSeparator toolStripSeparator_10;

		// Token: 0x0400380F RID: 14351
		[CompilerGenerated]
		[AccessedThroughProperty("DockingOpsToolStripMenuItem")]
		private Class128 class128_111;

		// Token: 0x04003810 RID: 14352
		[AccessedThroughProperty("ScenarioBriefingToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_112;

		// Token: 0x04003811 RID: 14353
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_AssignToMission")]
		private Class128 class128_113;

		// Token: 0x04003812 RID: 14354
		[CompilerGenerated]
		[AccessedThroughProperty("DefineAreaToolStripMenuItem")]
		private Class128 class128_114;

		// Token: 0x04003813 RID: 14355
		[AccessedThroughProperty("AddSatelliteToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_115;

		// Token: 0x04003814 RID: 14356
		[CompilerGenerated]
		[AccessedThroughProperty("AttackToolStripMenuItem")]
		private Class128 class128_116;

		// Token: 0x04003815 RID: 14357
		[AccessedThroughProperty("DropTargetToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_117;

		// Token: 0x04003816 RID: 14358
		[AccessedThroughProperty("DisengageToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_118;

		// Token: 0x04003817 RID: 14359
		[AccessedThroughProperty("ThrottleAltitudeDepthToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_119;

		// Token: 0x04003818 RID: 14360
		[AccessedThroughProperty("PlotCourseTSMI")]
		[CompilerGenerated]
		private Class128 class128_120;

		// Token: 0x04003819 RID: 14361
		[AccessedThroughProperty("TSMI_FormationEditor")]
		[CompilerGenerated]
		private Class128 class128_121;

		// Token: 0x0400381A RID: 14362
		[AccessedThroughProperty("AirOpsToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_122;

		// Token: 0x0400381B RID: 14363
		[AccessedThroughProperty("BoatDockingOpsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_123;

		// Token: 0x0400381C RID: 14364
		[AccessedThroughProperty("ToolStripMenuItem2")]
		[CompilerGenerated]
		private Class128 class128_124;

		// Token: 0x0400381D RID: 14365
		[AccessedThroughProperty("ToolStripMenuItem6")]
		[CompilerGenerated]
		private Class128 class128_125;

		// Token: 0x0400381E RID: 14366
		[AccessedThroughProperty("ToolStripMenuItem7")]
		[CompilerGenerated]
		private Class128 class128_126;

		// Token: 0x0400381F RID: 14367
		[AccessedThroughProperty("MagazinesToolStripMenuItem2")]
		[CompilerGenerated]
		private Class128 class128_127;

		// Token: 0x04003820 RID: 14368
		[AccessedThroughProperty("MountsWeaponsTSMI")]
		[CompilerGenerated]
		private Class128 class128_128;

		// Token: 0x04003821 RID: 14369
		[AccessedThroughProperty("SensorsTSMI")]
		[CompilerGenerated]
		private Class128 class128_129;

		// Token: 0x04003822 RID: 14370
		[AccessedThroughProperty("DamageSystemsStatusToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_130;

		// Token: 0x04003823 RID: 14371
		[AccessedThroughProperty("IgnorePlottedCourse_SelectedUnitsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_131;

		// Token: 0x04003824 RID: 14372
		[AccessedThroughProperty("RangeBearingToToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_132;

		// Token: 0x04003825 RID: 14373
		[CompilerGenerated]
		[AccessedThroughProperty("DatabaseViewerToolStripMenuItem")]
		private Class128 class128_133;

		// Token: 0x04003826 RID: 14374
		[CompilerGenerated]
		[AccessedThroughProperty("BrowseScenarioPlatformsToolStripMenuItem")]
		private Class128 class128_134;

		// Token: 0x04003827 RID: 14375
		[CompilerGenerated]
		[AccessedThroughProperty("OrderOfBattleToolStripMenuItem")]
		private Class128 class128_135;

		// Token: 0x04003828 RID: 14376
		[AccessedThroughProperty("LockSelectedRefPointsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_136;

		// Token: 0x04003829 RID: 14377
		[AccessedThroughProperty("UnlockSelectedRefPointsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_137;

		// Token: 0x0400382A RID: 14378
		[AccessedThroughProperty("RealismSettingsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_138;

		// Token: 0x0400382B RID: 14379
		[CompilerGenerated]
		[AccessedThroughProperty("ScenarioDescriptionToolStripMenuItem")]
		private Class128 class128_139;

		// Token: 0x0400382C RID: 14380
		[CompilerGenerated]
		[AccessedThroughProperty("ShowNonfriendlyToolStripMenuItem")]
		private Class128 class128_140;

		// Token: 0x0400382D RID: 14381
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator18")]
		private ToolStripSeparator toolStripSeparator_11;

		// Token: 0x0400382E RID: 14382
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripMenuItem8")]
		private Class128 class128_141;

		// Token: 0x0400382F RID: 14383
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator19")]
		private ToolStripSeparator toolStripSeparator_12;

		// Token: 0x04003830 RID: 14384
		[AccessedThroughProperty("ChangeBearingTypeOfSelectedRefPointsToFIXEDToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_142;

		// Token: 0x04003831 RID: 14385
		[CompilerGenerated]
		[AccessedThroughProperty("ChangeBearingTypeOfSelectedRefPointsToROTATINGToolStripMenuItem")]
		private Class128 class128_143;

		// Token: 0x04003832 RID: 14386
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator20")]
		private ToolStripSeparator toolStripSeparator_13;

		// Token: 0x04003833 RID: 14387
		[CompilerGenerated]
		[AccessedThroughProperty("SideDoctrineRoEToolStripMenuItem")]
		private Class128 class128_144;

		// Token: 0x04003834 RID: 14388
		[CompilerGenerated]
		[AccessedThroughProperty("GenerateDeltaToolStripMenuItem")]
		private Class128 class128_145;

		// Token: 0x04003835 RID: 14389
		[CompilerGenerated]
		[AccessedThroughProperty("SaveToolStripMenuItem")]
		private Class128 class128_146;

		// Token: 0x04003836 RID: 14390
		[CompilerGenerated]
		[AccessedThroughProperty("ContactEmissionsToolStripMenuItem")]
		private Class128 class128_147;

		// Token: 0x04003837 RID: 14391
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI13")]
		private Class128 class128_148;

		// Token: 0x04003838 RID: 14392
		[AccessedThroughProperty("TSMI14")]
		[CompilerGenerated]
		private Class128 class128_149;

		// Token: 0x04003839 RID: 14393
		[AccessedThroughProperty("TSMI15")]
		[CompilerGenerated]
		private Class128 class128_150;

		// Token: 0x0400383A RID: 14394
		[CompilerGenerated]
		[AccessedThroughProperty("WeaponsHold_SelectedUnitsToolStripMenuItem_Cont")]
		private Class128 class128_151;

		// Token: 0x0400383B RID: 14395
		[CompilerGenerated]
		[AccessedThroughProperty("DeselectAllReferencePointsToolStripMenuItem")]
		private Class128 class128_152;

		// Token: 0x0400383C RID: 14396
		[CompilerGenerated]
		[AccessedThroughProperty("UnassignToolStripMenuItem")]
		private Class128 class128_153;

		// Token: 0x0400383D RID: 14397
		[CompilerGenerated]
		[AccessedThroughProperty("CMenu_Waypoint")]
		private Class113 class113_3;

		// Token: 0x0400383E RID: 14398
		[CompilerGenerated]
		[AccessedThroughProperty("ThrottleAltitudeDepthToolStripMenuItem1")]
		private Class128 class128_154;

		// Token: 0x0400383F RID: 14399
		[AccessedThroughProperty("SensorsTSMI1")]
		[CompilerGenerated]
		private Class128 class128_155;

		// Token: 0x04003840 RID: 14400
		[CompilerGenerated]
		[AccessedThroughProperty("DoctrineROEToolStripMenuItem1")]
		private Class128 class128_156;

		// Token: 0x04003841 RID: 14401
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_HoldPosition")]
		private Class128 class128_157;

		// Token: 0x04003842 RID: 14402
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator22")]
		private ToolStripSeparator toolStripSeparator_14;

		// Token: 0x04003843 RID: 14403
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_ScriptingConsole")]
		private Class128 class128_158;

		// Token: 0x04003844 RID: 14404
		[AccessedThroughProperty("ShowRangeSymbolsForToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_159;

		// Token: 0x04003845 RID: 14405
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI16")]
		private Class128 class128_160;

		// Token: 0x04003846 RID: 14406
		[AccessedThroughProperty("TSMI17")]
		[CompilerGenerated]
		private Class128 class128_161;

		// Token: 0x04003847 RID: 14407
		[AccessedThroughProperty("TSMI18")]
		[CompilerGenerated]
		private Class128 class128_162;

		// Token: 0x04003848 RID: 14408
		[AccessedThroughProperty("SwitchToGroupViewToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_163;

		// Token: 0x04003849 RID: 14409
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator6")]
		private ToolStripSeparator toolStripSeparator_15;

		// Token: 0x0400384A RID: 14410
		[CompilerGenerated]
		[AccessedThroughProperty("ViewToolStripMenuItem1")]
		private Class128 class128_164;

		// Token: 0x0400384B RID: 14411
		[CompilerGenerated]
		[AccessedThroughProperty("MapLatLonGridToolStripMenuItem")]
		private Class128 class128_165;

		// Token: 0x0400384C RID: 14412
		[CompilerGenerated]
		[AccessedThroughProperty("BMNGLayerToolStripMenuItem")]
		private Class128 class128_166;

		// Token: 0x0400384D RID: 14413
		[CompilerGenerated]
		[AccessedThroughProperty("ReliefLayerToolStripMenuItem")]
		private Class128 class128_167;

		// Token: 0x0400384E RID: 14414
		[AccessedThroughProperty("BordersCoastlinesToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_168;

		// Token: 0x0400384F RID: 14415
		[AccessedThroughProperty("TSMI_CustomLayers")]
		[CompilerGenerated]
		private Class128 class128_169;

		// Token: 0x04003850 RID: 14416
		[AccessedThroughProperty("StartResumeGameToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_170;

		// Token: 0x04003851 RID: 14417
		[AccessedThroughProperty("IncreaseCompressionToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_171;

		// Token: 0x04003852 RID: 14418
		[AccessedThroughProperty("DecreaseCompressionToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_172;

		// Token: 0x04003853 RID: 14419
		[AccessedThroughProperty("ToolStripSeparator8")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_16;

		// Token: 0x04003854 RID: 14420
		[AccessedThroughProperty("ToolStripSeparator23")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_17;

		// Token: 0x04003855 RID: 14421
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator24")]
		private ToolStripSeparator toolStripSeparator_18;

		// Token: 0x04003856 RID: 14422
		[CompilerGenerated]
		[AccessedThroughProperty("TrackUnitToolStripMenuItem")]
		private Class128 class128_173;

		// Token: 0x04003857 RID: 14423
		[CompilerGenerated]
		[AccessedThroughProperty("RangeBearingToolToolStripMenuItem")]
		private Class128 class128_174;

		// Token: 0x04003858 RID: 14424
		[AccessedThroughProperty("ToolStripSeparator25")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_19;

		// Token: 0x04003859 RID: 14425
		[AccessedThroughProperty("ToolStripSeparator26")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_20;

		// Token: 0x0400385A RID: 14426
		[CompilerGenerated]
		[AccessedThroughProperty("UnassignUnitToolStripMenuItem")]
		private Class128 class128_175;

		// Token: 0x0400385B RID: 14427
		[CompilerGenerated]
		[AccessedThroughProperty("ContactsToolStripMenuItem")]
		private Class128 class128_176;

		// Token: 0x0400385C RID: 14428
		[AccessedThroughProperty("DropSelectedContactsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_177;

		// Token: 0x0400385D RID: 14429
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_DropActiveSonobuoy2")]
		private Class128 class128_178;

		// Token: 0x0400385E RID: 14430
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_DropPassiveSonobuoy2")]
		private Class128 class128_179;

		// Token: 0x0400385F RID: 14431
		[AccessedThroughProperty("PassiveShallowToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_180;

		// Token: 0x04003860 RID: 14432
		[AccessedThroughProperty("PassiveDeepToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_181;

		// Token: 0x04003861 RID: 14433
		[CompilerGenerated]
		[AccessedThroughProperty("ActiveShallowToolStripMenuItem")]
		private Class128 class128_182;

		// Token: 0x04003862 RID: 14434
		[CompilerGenerated]
		[AccessedThroughProperty("ActiveDeepToolStripMenuItem")]
		private Class128 class128_183;

		// Token: 0x04003863 RID: 14435
		[AccessedThroughProperty("ZoomInToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_184;

		// Token: 0x04003864 RID: 14436
		[CompilerGenerated]
		[AccessedThroughProperty("ZoomOutToolStripMenuItem1")]
		private Class128 class128_185;

		// Token: 0x04003865 RID: 14437
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator27")]
		private ToolStripSeparator toolStripSeparator_21;

		// Token: 0x04003866 RID: 14438
		[AccessedThroughProperty("PanMapToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_186;

		// Token: 0x04003867 RID: 14439
		[CompilerGenerated]
		[AccessedThroughProperty("PanMapUpToolStripMenuItem")]
		private Class128 class128_187;

		// Token: 0x04003868 RID: 14440
		[AccessedThroughProperty("PanMapRightToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_188;

		// Token: 0x04003869 RID: 14441
		[CompilerGenerated]
		[AccessedThroughProperty("PanMapLeftToolStripMenuItem")]
		private Class128 class128_189;

		// Token: 0x0400386A RID: 14442
		[CompilerGenerated]
		[AccessedThroughProperty("PanMapDownToolStripMenuItem")]
		private Class128 class128_190;

		// Token: 0x0400386B RID: 14443
		[CompilerGenerated]
		[AccessedThroughProperty("GroupSelectedUnitsToolStripMenuItem")]
		private Class128 class128_191;

		// Token: 0x0400386C RID: 14444
		[CompilerGenerated]
		[AccessedThroughProperty("DetachSelectedUnitsToolStripMenuItem")]
		private Class128 class128_192;

		// Token: 0x0400386D RID: 14445
		[AccessedThroughProperty("TSMI_DeployDippingSonar2")]
		[CompilerGenerated]
		private Class128 class128_193;

		// Token: 0x0400386E RID: 14446
		[CompilerGenerated]
		[AccessedThroughProperty("SetToolStripMenuItem")]
		private Class128 class128_194;

		// Token: 0x0400386F RID: 14447
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator29")]
		private ToolStripSeparator toolStripSeparator_22;

		// Token: 0x04003870 RID: 14448
		[AccessedThroughProperty("TSMI_SelectNextUnit")]
		[CompilerGenerated]
		private Class128 class128_195;

		// Token: 0x04003871 RID: 14449
		[AccessedThroughProperty("TSMI_SelectPreviousUnit")]
		[CompilerGenerated]
		private Class128 class128_196;

		// Token: 0x04003872 RID: 14450
		[AccessedThroughProperty("RenameToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_197;

		// Token: 0x04003873 RID: 14451
		[CompilerGenerated]
		[AccessedThroughProperty("FilterOutToolStripMenuItem")]
		private Class128 class128_198;

		// Token: 0x04003874 RID: 14452
		[CompilerGenerated]
		[AccessedThroughProperty("MarkPositionToolStripMenuItem")]
		private Class128 class128_199;

		// Token: 0x04003875 RID: 14453
		[CompilerGenerated]
		[AccessedThroughProperty("CopyUnitToolStripMenuItem")]
		private Class128 class128_200;

		// Token: 0x04003876 RID: 14454
		[CompilerGenerated]
		[AccessedThroughProperty("MoveUnitToolStripMenuItem")]
		private Class128 class128_201;

		// Token: 0x04003877 RID: 14455
		[CompilerGenerated]
		[AccessedThroughProperty("MarkContactHostileToolStripMenuItem")]
		private Class128 class128_202;

		// Token: 0x04003878 RID: 14456
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator30")]
		private ToolStripSeparator toolStripSeparator_23;

		// Token: 0x04003879 RID: 14457
		[CompilerGenerated]
		[AccessedThroughProperty("MarkContactNeutralToolStripMenuItem")]
		private Class128 class128_203;

		// Token: 0x0400387A RID: 14458
		[CompilerGenerated]
		[AccessedThroughProperty("MarkContactFriendlyToolStripMenuItem")]
		private Class128 class128_204;

		// Token: 0x0400387B RID: 14459
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator31")]
		private ToolStripSeparator toolStripSeparator_24;

		// Token: 0x0400387C RID: 14460
		[CompilerGenerated]
		[AccessedThroughProperty("DeleteUnitToolStripMenuItem")]
		private Class128 class128_205;

		// Token: 0x0400387D RID: 14461
		[AccessedThroughProperty("SonobuoyVisibilityToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_206;

		// Token: 0x0400387E RID: 14462
		[CompilerGenerated]
		[AccessedThroughProperty("ReferencePointVisibilityToolStripMenuItem")]
		private Class128 class128_207;

		// Token: 0x0400387F RID: 14463
		[AccessedThroughProperty("ToolStripSeparator32")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_25;

		// Token: 0x04003880 RID: 14464
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI19")]
		private Class128 class128_208;

		// Token: 0x04003881 RID: 14465
		[AccessedThroughProperty("TSMI20")]
		[CompilerGenerated]
		private Class128 class128_209;

		// Token: 0x04003882 RID: 14466
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI21")]
		private Class128 class128_210;

		// Token: 0x04003883 RID: 14467
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI22")]
		private Class128 class128_211;

		// Token: 0x04003884 RID: 14468
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI23")]
		private Class128 class128_212;

		// Token: 0x04003885 RID: 14469
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI24")]
		private Class128 class128_213;

		// Token: 0x04003886 RID: 14470
		[AccessedThroughProperty("ShowGhostedGroupMembersForToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_214;

		// Token: 0x04003887 RID: 14471
		[AccessedThroughProperty("TSMI25")]
		[CompilerGenerated]
		private Class128 class128_215;

		// Token: 0x04003888 RID: 14472
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI26")]
		private Class128 class128_216;

		// Token: 0x04003889 RID: 14473
		[AccessedThroughProperty("TSMI27")]
		[CompilerGenerated]
		private Class128 class128_217;

		// Token: 0x0400388A RID: 14474
		[AccessedThroughProperty("RenameReferencePointToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_218;

		// Token: 0x0400388B RID: 14475
		[AccessedThroughProperty("RenameUnitToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_219;

		// Token: 0x0400388C RID: 14476
		[CompilerGenerated]
		[AccessedThroughProperty("AttackOptionsToolStripMenuItem")]
		private Class128 class128_220;

		// Token: 0x0400388D RID: 14477
		[CompilerGenerated]
		[AccessedThroughProperty("EngageTargetsAutoToolStripMenuItem")]
		private Class128 class128_221;

		// Token: 0x0400388E RID: 14478
		[CompilerGenerated]
		[AccessedThroughProperty("EngageTargetsManualToolStripMenuItem")]
		private Class128 class128_222;

		// Token: 0x0400388F RID: 14479
		[AccessedThroughProperty("BearingonlyAttackToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_223;

		// Token: 0x04003890 RID: 14480
		[CompilerGenerated]
		[AccessedThroughProperty("DropTargetToolStripMenuItem1")]
		private Class128 class128_224;

		// Token: 0x04003891 RID: 14481
		[CompilerGenerated]
		[AccessedThroughProperty("DisengageDropAllTargetsToolStripMenuItem")]
		private Class128 class128_225;

		// Token: 0x04003892 RID: 14482
		[AccessedThroughProperty("WeaponsHold_SelectedUnitsToolStripMenuItem_Main")]
		[CompilerGenerated]
		private Class128 class128_226;

		// Token: 0x04003893 RID: 14483
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator14")]
		private ToolStripSeparator toolStripSeparator_26;

		// Token: 0x04003894 RID: 14484
		[CompilerGenerated]
		[AccessedThroughProperty("NoNavigationZonesToolStripMenuItem")]
		private Class128 class128_227;

		// Token: 0x04003895 RID: 14485
		[AccessedThroughProperty("EditExistingToolStripMenuItem2")]
		[CompilerGenerated]
		private Class128 class128_228;

		// Token: 0x04003896 RID: 14486
		[CompilerGenerated]
		[AccessedThroughProperty("CreateNewFromSelectedRefPointsToolStripMenuItem2")]
		private Class128 class128_229;

		// Token: 0x04003897 RID: 14487
		[CompilerGenerated]
		[AccessedThroughProperty("ExclusionZonesToolStripMenuItem")]
		private Class128 class128_230;

		// Token: 0x04003898 RID: 14488
		[AccessedThroughProperty("EditExistingToolStripMenuItem3")]
		[CompilerGenerated]
		private Class128 class128_231;

		// Token: 0x04003899 RID: 14489
		[AccessedThroughProperty("CreateNewFromSelectedRefPointsToolStripMenuItem3")]
		[CompilerGenerated]
		private Class128 class128_232;

		// Token: 0x0400389A RID: 14490
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_GroupSelectedUnits")]
		private Class128 class128_233;

		// Token: 0x0400389B RID: 14491
		[AccessedThroughProperty("TSMI_DetachUnits")]
		[CompilerGenerated]
		private Class128 class128_234;

		// Token: 0x0400389C RID: 14492
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator33")]
		private ToolStripSeparator toolStripSeparator_27;

		// Token: 0x0400389D RID: 14493
		[AccessedThroughProperty("ReturnToBaseRTBToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_235;

		// Token: 0x0400389E RID: 14494
		[AccessedThroughProperty("SelectNewHomeBaseToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_236;

		// Token: 0x0400389F RID: 14495
		[CompilerGenerated]
		[AccessedThroughProperty("RefuelifPossibleToolStripMenuItem1")]
		private Class128 class128_237;

		// Token: 0x040038A0 RID: 14496
		[AccessedThroughProperty("AssignToMissionToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_238;

		// Token: 0x040038A1 RID: 14497
		[AccessedThroughProperty("DoctrineROEEMCONToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_239;

		// Token: 0x040038A2 RID: 14498
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_DropPassiveSonobuoy")]
		private Class128 class128_240;

		// Token: 0x040038A3 RID: 14499
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator34")]
		private ToolStripSeparator toolStripSeparator_28;

		// Token: 0x040038A4 RID: 14500
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_DippingSonar")]
		private Class128 class128_241;

		// Token: 0x040038A5 RID: 14501
		[CompilerGenerated]
		[AccessedThroughProperty("ShallowOverLayerToolStripMenuItem")]
		private Class128 class128_242;

		// Token: 0x040038A6 RID: 14502
		[AccessedThroughProperty("TSMI_DropActiveSonobuoy")]
		[CompilerGenerated]
		private Class128 class128_243;

		// Token: 0x040038A7 RID: 14503
		[AccessedThroughProperty("DeepUnderLayerToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_244;

		// Token: 0x040038A8 RID: 14504
		[AccessedThroughProperty("ShallowOverLayerToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_245;

		// Token: 0x040038A9 RID: 14505
		[AccessedThroughProperty("DeepUnderLayerToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_246;

		// Token: 0x040038AA RID: 14506
		[CompilerGenerated]
		[AccessedThroughProperty("UnitIsAutodetectableToolStripMenuItem1")]
		private Class128 class128_247;

		// Token: 0x040038AB RID: 14507
		[CompilerGenerated]
		[AccessedThroughProperty("SetOrientationToolStripMenuItem1")]
		private Class128 class128_248;

		// Token: 0x040038AC RID: 14508
		[CompilerGenerated]
		[AccessedThroughProperty("HoldPositionToolStripMenuItem")]
		private Class128 class128_249;

		// Token: 0x040038AD RID: 14509
		[CompilerGenerated]
		[AccessedThroughProperty("HoldPositionToolStripMenuItem1")]
		private Class128 class128_250;

		// Token: 0x040038AE RID: 14510
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator17")]
		private ToolStripSeparator toolStripSeparator_29;

		// Token: 0x040038AF RID: 14511
		[CompilerGenerated]
		[AccessedThroughProperty("HotkeysToolStripMenuItem")]
		private Class128 class128_251;

		// Token: 0x040038B0 RID: 14512
		[AccessedThroughProperty("PlottedCoursesToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_252;

		// Token: 0x040038B1 RID: 14513
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI28")]
		private Class128 class128_253;

		// Token: 0x040038B2 RID: 14514
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI29")]
		private Class128 class128_254;

		// Token: 0x040038B3 RID: 14515
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI30")]
		private Class128 class128_255;

		// Token: 0x040038B4 RID: 14516
		[AccessedThroughProperty("RemoveRelativityFromSelectedRefPointsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_256;

		// Token: 0x040038B5 RID: 14517
		[AccessedThroughProperty("WeaponsHold_AllUnitsToolStripMenuItem_Main")]
		[CompilerGenerated]
		private Class128 class128_257;

		// Token: 0x040038B6 RID: 14518
		[CompilerGenerated]
		[AccessedThroughProperty("WeaponsHold_AllUnitsToolStripMenuItem_Cont")]
		private Class128 class128_258;

		// Token: 0x040038B7 RID: 14519
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_AllUnitsToolStripMenuItem")]
		private Class128 class128_259;

		// Token: 0x040038B8 RID: 14520
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_AllUnitsToolStripMenuItem1")]
		private Class128 class128_260;

		// Token: 0x040038B9 RID: 14521
		[CompilerGenerated]
		[AccessedThroughProperty("DefineAreaToolStripMenuItem1")]
		private Class128 class128_261;

		// Token: 0x040038BA RID: 14522
		[CompilerGenerated]
		[AccessedThroughProperty("QuickJumpTSMI")]
		private Class128 class128_262;

		// Token: 0x040038BB RID: 14523
		[CompilerGenerated]
		[AccessedThroughProperty("MessageLogInSeparateWindowToolStripMenuItem")]
		private Class128 class128_263;

		// Token: 0x040038BC RID: 14524
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator21")]
		private ToolStripSeparator toolStripSeparator_30;

		// Token: 0x040038BD RID: 14525
		[AccessedThroughProperty("HoldPositionAllUnitsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_264;

		// Token: 0x040038BE RID: 14526
		[AccessedThroughProperty("HoldPositionAllUnitsToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_265;

		// Token: 0x040038BF RID: 14527
		[CompilerGenerated]
		[AccessedThroughProperty("SatellitePassPredictionsToolStripMenuItem")]
		private Class128 class128_266;

		// Token: 0x040038C0 RID: 14528
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_SetUnitProficiency")]
		private Class128 class128_267;

		// Token: 0x040038C1 RID: 14529
		[CompilerGenerated]
		[AccessedThroughProperty("NoviceToolStripMenuItem")]
		private Class128 class128_268;

		// Token: 0x040038C2 RID: 14530
		[AccessedThroughProperty("CadetToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_269;

		// Token: 0x040038C3 RID: 14531
		[AccessedThroughProperty("RegularToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_270;

		// Token: 0x040038C4 RID: 14532
		[AccessedThroughProperty("VeteranToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_271;

		// Token: 0x040038C5 RID: 14533
		[CompilerGenerated]
		[AccessedThroughProperty("AceToolStripMenuItem")]
		private Class128 class128_272;

		// Token: 0x040038C6 RID: 14534
		[CompilerGenerated]
		[AccessedThroughProperty("InheritSideToolStripMenuItem")]
		private Class128 class128_273;

		// Token: 0x040038C7 RID: 14535
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_CloneUnit")]
		private Class128 class128_274;

		// Token: 0x040038C8 RID: 14536
		[AccessedThroughProperty("LandWeaponsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_275;

		// Token: 0x040038C9 RID: 14537
		[CompilerGenerated]
		[AccessedThroughProperty("QuickTurnaroundToolStripMenuItem")]
		private Class128 class128_276;

		// Token: 0x040038CA RID: 14538
		[CompilerGenerated]
		[AccessedThroughProperty("QuickTurnaroundToolStripMenuItem1")]
		private Class128 class128_277;

		// Token: 0x040038CB RID: 14539
		[CompilerGenerated]
		[AccessedThroughProperty("SetFuelAndAirborneTimeToolStripMenuItem")]
		private Class128 class128_278;

		// Token: 0x040038CC RID: 14540
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripMenuItem9")]
		private Class128 class128_279;

		// Token: 0x040038CD RID: 14541
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_PackageScen")]
		private Class128 class128_280;

		// Token: 0x040038CE RID: 14542
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_Selected_Yes")]
		private Class128 class128_281;

		// Token: 0x040038CF RID: 14543
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_Selected_No")]
		private Class128 class128_282;

		// Token: 0x040038D0 RID: 14544
		[AccessedThroughProperty("IgnorePlottedCourse_Selected_Inherit")]
		[CompilerGenerated]
		private Class128 class128_283;

		// Token: 0x040038D1 RID: 14545
		[AccessedThroughProperty("IgnorePlottedCourse_All_Yes")]
		[CompilerGenerated]
		private Class128 class128_284;

		// Token: 0x040038D2 RID: 14546
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_All_No")]
		private Class128 class128_285;

		// Token: 0x040038D3 RID: 14547
		[AccessedThroughProperty("IgnorePlottedCourse_All_Inherit")]
		[CompilerGenerated]
		private Class128 class128_286;

		// Token: 0x040038D4 RID: 14548
		[AccessedThroughProperty("WCS_Selected_Hold_Main")]
		[CompilerGenerated]
		private Class128 class128_287;

		// Token: 0x040038D5 RID: 14549
		[AccessedThroughProperty("WCS_Selected_Tight_Main")]
		[CompilerGenerated]
		private Class128 class128_288;

		// Token: 0x040038D6 RID: 14550
		[AccessedThroughProperty("WCS_Selected_Free_Main")]
		[CompilerGenerated]
		private Class128 class128_289;

		// Token: 0x040038D7 RID: 14551
		[CompilerGenerated]
		[AccessedThroughProperty("WCS_Selected_Inherit_Main")]
		private Class128 class128_290;

		// Token: 0x040038D8 RID: 14552
		[AccessedThroughProperty("WCS_All_Hold_Main")]
		[CompilerGenerated]
		private Class128 class128_291;

		// Token: 0x040038D9 RID: 14553
		[AccessedThroughProperty("WCS_All_Tight_Main")]
		[CompilerGenerated]
		private Class128 class128_292;

		// Token: 0x040038DA RID: 14554
		[AccessedThroughProperty("WCS_All_Free_Main")]
		[CompilerGenerated]
		private Class128 class128_293;

		// Token: 0x040038DB RID: 14555
		[AccessedThroughProperty("WCS_All_Inherit_Main")]
		[CompilerGenerated]
		private Class128 class128_294;

		// Token: 0x040038DC RID: 14556
		[AccessedThroughProperty("IgnorePlottedCourse_Selected_Yes1")]
		[CompilerGenerated]
		private Class128 class128_295;

		// Token: 0x040038DD RID: 14557
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_Selected_No1")]
		private Class128 class128_296;

		// Token: 0x040038DE RID: 14558
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_Selected_Inherit1")]
		private Class128 class128_297;

		// Token: 0x040038DF RID: 14559
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_All_Yes1")]
		private Class128 class128_298;

		// Token: 0x040038E0 RID: 14560
		[CompilerGenerated]
		[AccessedThroughProperty("IgnorePlottedCourse_All_No1")]
		private Class128 class128_299;

		// Token: 0x040038E1 RID: 14561
		[AccessedThroughProperty("IgnorePlottedCourse_All_Inherit1")]
		[CompilerGenerated]
		private Class128 class128_300;

		// Token: 0x040038E2 RID: 14562
		[CompilerGenerated]
		[AccessedThroughProperty("WCS_Selected_Hold_Cont")]
		private Class128 class128_301;

		// Token: 0x040038E3 RID: 14563
		[CompilerGenerated]
		[AccessedThroughProperty("WCS_Selected_Tight_Cont")]
		private Class128 class128_302;

		// Token: 0x040038E4 RID: 14564
		[AccessedThroughProperty("WCS_Selected_Free_Cont")]
		[CompilerGenerated]
		private Class128 class128_303;

		// Token: 0x040038E5 RID: 14565
		[AccessedThroughProperty("WCS_Selected_Inherit_Cont")]
		[CompilerGenerated]
		private Class128 class128_304;

		// Token: 0x040038E6 RID: 14566
		[CompilerGenerated]
		[AccessedThroughProperty("WCS_All_Hold_Cont")]
		private Class128 class128_305;

		// Token: 0x040038E7 RID: 14567
		[CompilerGenerated]
		[AccessedThroughProperty("WCS_All_Tight_Cont")]
		private Class128 class128_306;

		// Token: 0x040038E8 RID: 14568
		[AccessedThroughProperty("WCS_All_Free_Cont")]
		[CompilerGenerated]
		private Class128 class128_307;

		// Token: 0x040038E9 RID: 14569
		[CompilerGenerated]
		[AccessedThroughProperty("WCS_All_Inherit_Cont")]
		private Class128 class128_308;

		// Token: 0x040038EA RID: 14570
		[AccessedThroughProperty("IgnorePlottedCourse_SelectedUnitsToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_309;

		// Token: 0x040038EB RID: 14571
		[AccessedThroughProperty("CMenu_Contact")]
		[CompilerGenerated]
		private Class113 class113_4;

		// Token: 0x040038EC RID: 14572
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_FilterOut")]
		private Class128 class128_310;

		// Token: 0x040038ED RID: 14573
		[AccessedThroughProperty("RealTimeSeconds")]
		[CompilerGenerated]
		private Timer timer_5;

		// Token: 0x040038EE RID: 14574
		[AccessedThroughProperty("FilteroutAllContactsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_311;

		// Token: 0x040038EF RID: 14575
		[CompilerGenerated]
		[AccessedThroughProperty("CancelFilteroutForAllContactsToolStripMenuItem")]
		private Class128 class128_312;

		// Token: 0x040038F0 RID: 14576
		[AccessedThroughProperty("ToolStripMenuItem10")]
		[CompilerGenerated]
		private Class128 class128_313;

		// Token: 0x040038F1 RID: 14577
		[AccessedThroughProperty("TSMI_BindScenToCustomDB")]
		[CompilerGenerated]
		private Class128 class128_314;

		// Token: 0x040038F2 RID: 14578
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_UpgradeScenarioToLatestDBVersion")]
		private Class128 class128_315;

		// Token: 0x040038F3 RID: 14579
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_Campaign")]
		private Class128 class128_316;

		// Token: 0x040038F4 RID: 14580
		[AccessedThroughProperty("ToolStripSeparator36")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_31;

		// Token: 0x040038F5 RID: 14581
		[CompilerGenerated]
		[AccessedThroughProperty("CreateNewToolStripMenuItem")]
		private Class128 class128_317;

		// Token: 0x040038F6 RID: 14582
		[AccessedThroughProperty("OpenFileDialog_LoadCampaign")]
		[CompilerGenerated]
		private OpenFileDialog openFileDialog_3;

		// Token: 0x040038F7 RID: 14583
		[CompilerGenerated]
		[AccessedThroughProperty("LoadFromFileToolStripMenuItem")]
		private Class128 class128_318;

		// Token: 0x040038F8 RID: 14584
		[AccessedThroughProperty("TSMI_BalooganVideos")]
		[CompilerGenerated]
		private Class128 class128_319;

		// Token: 0x040038F9 RID: 14585
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_PublishToSteam")]
		private Class128 class128_320;

		// Token: 0x040038FA RID: 14586
		[AccessedThroughProperty("ToolStripSeparator35")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_32;

		// Token: 0x040038FB RID: 14587
		[AccessedThroughProperty("AllEmissionsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_321;

		// Token: 0x040038FC RID: 14588
		[AccessedThroughProperty("FireControlOnlyToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_322;

		// Token: 0x040038FD RID: 14589
		[CompilerGenerated]
		[AccessedThroughProperty("PlacenamesToolStripMenuItem")]
		private Class128 class128_323;

		// Token: 0x040038FE RID: 14590
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator2")]
		private ToolStripSeparator toolStripSeparator_33;

		// Token: 0x040038FF RID: 14591
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator1")]
		private ToolStripSeparator toolStripSeparator_34;

		// Token: 0x04003900 RID: 14592
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator28")]
		private ToolStripSeparator toolStripSeparator_35;

		// Token: 0x04003901 RID: 14593
		[AccessedThroughProperty("ToolStripSeparator37")]
		[CompilerGenerated]
		private ToolStripSeparator toolStripSeparator_36;

		// Token: 0x04003902 RID: 14594
		[AccessedThroughProperty("ButtonGameSpeed")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_3;

		// Token: 0x04003903 RID: 14595
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_UnitIsOutOfComms")]
		private Class128 class128_324;

		// Token: 0x04003904 RID: 14596
		[AccessedThroughProperty("ElementHost_RightColumnWPF")]
		[CompilerGenerated]
		private ElementHost elementHost_0;

		// Token: 0x04003906 RID: 14598
		[AccessedThroughProperty("ToolStrip1")]
		[CompilerGenerated]
		private Class125 class125_0;

		// Token: 0x04003907 RID: 14599
		[AccessedThroughProperty("FlightplansToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_325;

		// Token: 0x04003908 RID: 14600
		[AccessedThroughProperty("TSMI40")]
		[CompilerGenerated]
		private Class128 class128_326;

		// Token: 0x04003909 RID: 14601
		[AccessedThroughProperty("TSMI41")]
		[CompilerGenerated]
		private Class128 class128_327;

		// Token: 0x0400390A RID: 14602
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI42")]
		private Class128 class128_328;

		// Token: 0x0400390B RID: 14603
		[CompilerGenerated]
		[AccessedThroughProperty("Timer_SteamWorkshop")]
		private Timer timer_6;

		// Token: 0x0400390C RID: 14604
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator38")]
		private ToolStripSeparator toolStripSeparator_37;

		// Token: 0x0400390D RID: 14605
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator39")]
		private ToolStripSeparator toolStripSeparator_38;

		// Token: 0x0400390E RID: 14606
		[AccessedThroughProperty("WorldWindow1")]
		[CompilerGenerated]
		private WorldWindow worldWindow_0;

		// Token: 0x0400390F RID: 14607
		[CompilerGenerated]
		[AccessedThroughProperty("Panel_WW")]
		private Panel panel_0;

		// Token: 0x04003910 RID: 14608
		[CompilerGenerated]
		[AccessedThroughProperty("MessageLogControlElementHost1")]
		private ElementHost elementHost_1;

		// Token: 0x04003911 RID: 14609
		[AccessedThroughProperty("WorldWindowRenderTimer")]
		[CompilerGenerated]
		private Timer timer_7;

		// Token: 0x04003913 RID: 14611
		[CompilerGenerated]
		[AccessedThroughProperty("Timer_InternetCheck")]
		private Timer timer_8;

		// Token: 0x04003914 RID: 14612
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStrip_Status")]
		private Class125 class125_1;

		// Token: 0x04003915 RID: 14613
		[AccessedThroughProperty("TSL_Status")]
		[CompilerGenerated]
		private ToolStripLabel toolStripLabel_0;

		// Token: 0x04003916 RID: 14614
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_AttackAuto")]
		private ToolStripButton toolStripButton_4;

		// Token: 0x04003917 RID: 14615
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_AttackManual")]
		private ToolStripButton toolStripButton_5;

		// Token: 0x04003918 RID: 14616
		[AccessedThroughProperty("TSB_PlotCourse")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_6;

		// Token: 0x04003919 RID: 14617
		[AccessedThroughProperty("TSB_ThrottleAlt")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_7;

		// Token: 0x0400391A RID: 14618
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_FormationEditor")]
		private ToolStripButton toolStripButton_8;

		// Token: 0x0400391B RID: 14619
		[AccessedThroughProperty("TSB_Magazines")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_9;

		// Token: 0x0400391C RID: 14620
		[AccessedThroughProperty("TSB_AirOps")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_10;

		// Token: 0x0400391D RID: 14621
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_DockOps")]
		private ToolStripButton toolStripButton_11;

		// Token: 0x0400391E RID: 14622
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_Weapons")]
		private ToolStripButton toolStripButton_12;

		// Token: 0x0400391F RID: 14623
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_Sensors")]
		private ToolStripButton toolStripButton_13;

		// Token: 0x04003920 RID: 14624
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_Damage")]
		private ToolStripButton toolStripButton_14;

		// Token: 0x04003921 RID: 14625
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_Doctrine")]
		private ToolStripButton toolStripButton_15;

		// Token: 0x04003922 RID: 14626
		[AccessedThroughProperty("TSB_MissionEditor")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_16;

		// Token: 0x04003923 RID: 14627
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStrip_ShortcutButtons")]
		private Class125 class125_2;

		// Token: 0x04003924 RID: 14628
		[CompilerGenerated]
		[AccessedThroughProperty("CargoOperationsToolStripMenuItem")]
		private ToolStripMenuItem toolStripMenuItem_0;

		// Token: 0x04003925 RID: 14629
		[CompilerGenerated]
		[AccessedThroughProperty("UnloadCargoToolStripMenuItem1")]
		private ToolStripMenuItem toolStripMenuItem_1;

		// Token: 0x04003926 RID: 14630
		[CompilerGenerated]
		[AccessedThroughProperty("PickupUnitsToolStripMenuItem")]
		private ToolStripMenuItem toolStripMenuItem_2;

		// Token: 0x04003927 RID: 14631
		[AccessedThroughProperty("DayNightLightingToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_329;

		// Token: 0x04003928 RID: 14632
		[AccessedThroughProperty("AllEmissionsForSelectedContactFireControlOnlyForRestToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_330;

		// Token: 0x04003929 RID: 14633
		[AccessedThroughProperty("SpecialActionsToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_331;

		// Token: 0x0400392A RID: 14634
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_SideSpecialActions")]
		private Class128 class128_332;

		// Token: 0x0400392B RID: 14635
		[CompilerGenerated]
		[AccessedThroughProperty("SelectTankerAutomaticallyToolStripMenuItem")]
		private Class128 class128_333;

		// Token: 0x0400392C RID: 14636
		[AccessedThroughProperty("SelectTankerManuallyToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_334;

		// Token: 0x0400392D RID: 14637
		[AccessedThroughProperty("SelectTankerFromMissionToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_335;

		// Token: 0x0400392E RID: 14638
		[AccessedThroughProperty("SelectTankerAutomaticallyToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_336;

		// Token: 0x0400392F RID: 14639
		[CompilerGenerated]
		[AccessedThroughProperty("SelectTankerManuallyToolStripMenuItem1")]
		private Class128 class128_337;

		// Token: 0x04003930 RID: 14640
		[AccessedThroughProperty("SelectTankerFromMissionToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_338;

		// Token: 0x04003931 RID: 14641
		[CompilerGenerated]
		[AccessedThroughProperty("MissionAreacourseToolStripMenuItem")]
		private Class128 class128_339;

		// Token: 0x04003932 RID: 14642
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI31")]
		private Class128 class128_340;

		// Token: 0x04003933 RID: 14643
		[AccessedThroughProperty("TSMI32")]
		[CompilerGenerated]
		private Class128 class128_341;

		// Token: 0x04003934 RID: 14644
		[AccessedThroughProperty("TSMI33")]
		[CompilerGenerated]
		private Class128 class128_342;

		// Token: 0x04003935 RID: 14645
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_ScenarioEditor")]
		private Class128 class128_343;

		// Token: 0x04003936 RID: 14646
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_GroupOps")]
		private Class128 class128_344;

		// Token: 0x04003937 RID: 14647
		[AccessedThroughProperty("TSMI_ASWSpecificActions")]
		[CompilerGenerated]
		private Class128 class128_345;

		// Token: 0x04003938 RID: 14648
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_ASWSpecificActions2")]
		private Class128 class128_346;

		// Token: 0x04003939 RID: 14649
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_GroupOps2")]
		private Class128 class128_347;

		// Token: 0x0400393A RID: 14650
		[AccessedThroughProperty("TSMI_CopyUnitID")]
		[CompilerGenerated]
		private Class128 class128_348;

		// Token: 0x0400393B RID: 14651
		[AccessedThroughProperty("MarkContactUnfriendlyToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_349;

		// Token: 0x0400393C RID: 14652
		[AccessedThroughProperty("TSMI_MarkHostile")]
		[CompilerGenerated]
		private Class128 class128_350;

		// Token: 0x0400393D RID: 14653
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_MarkUnfriendly")]
		private Class128 class128_351;

		// Token: 0x0400393E RID: 14654
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_MarkNeutral")]
		private Class128 class128_352;

		// Token: 0x0400393F RID: 14655
		[AccessedThroughProperty("TSMI_MarkFriendly")]
		[CompilerGenerated]
		private Class128 class128_353;

		// Token: 0x04003940 RID: 14656
		[AccessedThroughProperty("DropContactToolStripMenuItem1")]
		[CompilerGenerated]
		private Class128 class128_354;

		// Token: 0x04003941 RID: 14657
		[CompilerGenerated]
		[AccessedThroughProperty("RenameToolStripMenuItem1")]
		private Class128 class128_355;

		// Token: 0x04003942 RID: 14658
		[AccessedThroughProperty("TSMI_UnitOps")]
		[CompilerGenerated]
		private Class128 class128_356;

		// Token: 0x04003943 RID: 14659
		[AccessedThroughProperty("EditCargoToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_357;

		// Token: 0x04003944 RID: 14660
		[AccessedThroughProperty("UnloadCargoToolStripMenuItem")]
		[CompilerGenerated]
		private Class128 class128_358;

		// Token: 0x04003945 RID: 14661
		[AccessedThroughProperty("TSMI_IsolatedUnitPOV")]
		[CompilerGenerated]
		private Class128 class128_359;

		// Token: 0x04003946 RID: 14662
		[AccessedThroughProperty("TSMI_IsolatedPOV")]
		[CompilerGenerated]
		private Class128 class128_360;

		// Token: 0x04003947 RID: 14663
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_LOSTool")]
		private Class128 class128_361;

		// Token: 0x04003948 RID: 14664
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_MonteCarloAnalysis")]
		private Class128 class128_362;

		// Token: 0x04003949 RID: 14665
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_IgnoreDLZChecks")]
		private Class128 class128_363;

		// Token: 0x0400394A RID: 14666
		[CompilerGenerated]
		[AccessedThroughProperty("VirtualEarthTSMI")]
		private Class128 class128_364;

		// Token: 0x0400394B RID: 14667
		[CompilerGenerated]
		[AccessedThroughProperty("ScenarioMigrationTSMI")]
		private Class128 class128_365;

		// Token: 0x0400394C RID: 14668
		[AccessedThroughProperty("TSMI_StamenTerrain")]
		[CompilerGenerated]
		private Class128 class128_366;

		// Token: 0x0400394D RID: 14669
		[AccessedThroughProperty("TSMI_OrbitAnchor")]
		[CompilerGenerated]
		private Class128 class128_367;

		// Token: 0x0400394E RID: 14670
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_LicenseTweaker")]
		private Class128 class128_368;

		// Token: 0x0400394F RID: 14671
		[AccessedThroughProperty("TSMI_ChaffSingle")]
		[CompilerGenerated]
		private Class128 class128_369;

		// Token: 0x04003950 RID: 14672
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_ChaffStream")]
		private Class128 class128_370;

		// Token: 0x04003951 RID: 14673
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_DefineAreaCircle")]
		private Class128 class128_371;

		// Token: 0x04003952 RID: 14674
		[AccessedThroughProperty("TSMI_SelectUnitsForPickup")]
		[CompilerGenerated]
		private Class128 class128_372;

		// Token: 0x04003953 RID: 14675
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_MarkContactPosition")]
		private Class128 class128_373;

		// Token: 0x04003954 RID: 14676
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_ChanceOfAppearance")]
		private Class128 class128_374;

		// Token: 0x04003955 RID: 14677
		[CompilerGenerated]
		[AccessedThroughProperty("AirTaskingOrderATOToolStripMenuItem")]
		private Class128 class128_375;

		// Token: 0x04003956 RID: 14678
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_StamenRoads")]
		private Class128 class128_376;

		// Token: 0x04003957 RID: 14679
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_3DView")]
		private Class128 class128_377;

		// Token: 0x04003958 RID: 14680
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_SpecialActions")]
		private ToolStripButton toolStripButton_17;

		// Token: 0x04003959 RID: 14681
		[AccessedThroughProperty("Button_SlideRightColumn")]
		[CompilerGenerated]
		private Class111 class111_0;

		// Token: 0x0400395A RID: 14682
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_CurrentDB")]
		private ToolStripMenuItem toolStripMenuItem_3;

		// Token: 0x0400395B RID: 14683
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_UseLatestDB3000")]
		private ToolStripMenuItem toolStripMenuItem_4;

		// Token: 0x0400395C RID: 14684
		[AccessedThroughProperty("TSMI_UseLatestCWDB")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_5;

		// Token: 0x0400395D RID: 14685
		[AccessedThroughProperty("TSMI_LoadOtherDBFile")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_6;

		// Token: 0x0400395E RID: 14686
		[AccessedThroughProperty("FileDialog_LoadDB")]
		[CompilerGenerated]
		private OpenFileDialog openFileDialog_4;

		// Token: 0x0400395F RID: 14687
		[AccessedThroughProperty("TSMI_LandCover")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_7;

		// Token: 0x04003960 RID: 14688
		[AccessedThroughProperty("TSMI_MergeScenarios")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_8;

		// Token: 0x04003961 RID: 14689
		[CompilerGenerated]
		[AccessedThroughProperty("ToolStripSeparator40")]
		private ToolStripSeparator toolStripSeparator_39;

		// Token: 0x04003962 RID: 14690
		[AccessedThroughProperty("TSMI_SummonForComms")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_9;

		// Token: 0x04003963 RID: 14691
		[AccessedThroughProperty("CMenu_StackedUnits")]
		[CompilerGenerated]
		private Class113 class113_5;

		// Token: 0x04003964 RID: 14692
		[AccessedThroughProperty("SelectToolStripMenuItem")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_10;

		// Token: 0x04003965 RID: 14693
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_TimeStep_15sec")]
		private ToolStripButton toolStripButton_18;

		// Token: 0x04003966 RID: 14694
		[AccessedThroughProperty("TSB_TimeStep_1min")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_19;

		// Token: 0x04003967 RID: 14695
		[AccessedThroughProperty("TSB_TimeStep_5min")]
		[CompilerGenerated]
		private ToolStripButton toolStripButton_20;

		// Token: 0x04003968 RID: 14696
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_TimeStep_15min")]
		private ToolStripButton toolStripButton_21;

		// Token: 0x04003969 RID: 14697
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_TimeAccel")]
		private ToolStripDropDownButton toolStripDropDownButton_0;

		// Token: 0x0400396A RID: 14698
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_TimeAccel1x")]
		private ToolStripMenuItem toolStripMenuItem_11;

		// Token: 0x0400396B RID: 14699
		[AccessedThroughProperty("TSMI_TimeAccel2x")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_12;

		// Token: 0x0400396C RID: 14700
		[AccessedThroughProperty("TSMI_TimeAccel5x")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_13;

		// Token: 0x0400396D RID: 14701
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_TimeAccelTurbo")]
		private ToolStripMenuItem toolStripMenuItem_14;

		// Token: 0x0400396E RID: 14702
		[AccessedThroughProperty("TSL_TimeStepStatus")]
		[CompilerGenerated]
		private ToolStripLabel toolStripLabel_1;

		// Token: 0x0400396F RID: 14703
		[AccessedThroughProperty("MinimapsToolStripMenuItem")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_15;

		// Token: 0x04003970 RID: 14704
		[CompilerGenerated]
		[AccessedThroughProperty("GlobalMinimapToolStripMenuItem")]
		private ToolStripMenuItem toolStripMenuItem_16;

		// Token: 0x04003971 RID: 14705
		[AccessedThroughProperty("CameraMinimapToolStripMenuItem")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_17;

		// Token: 0x04003972 RID: 14706
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_LoadRecent")]
		private ToolStripMenuItem toolStripMenuItem_18;

		// Token: 0x04003973 RID: 14707
		[AccessedThroughProperty("TSMI_RemoveAllSideContacts")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_19;

		// Token: 0x04003974 RID: 14708
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_FullScreen")]
		private ToolStripMenuItem toolStripMenuItem_20;

		// Token: 0x04003975 RID: 14709
		[AccessedThroughProperty("HoverInfoElementHost")]
		[CompilerGenerated]
		private ElementHost elementHost_2;

		// Token: 0x04003977 RID: 14711
		[CompilerGenerated]
		[AccessedThroughProperty("TSB_ToggleCommandShortcuts")]
		private ToolStripButton toolStripButton_22;

		// Token: 0x04003978 RID: 14712
		[CompilerGenerated]
		[AccessedThroughProperty("ScenarioMinimapToolStripMenuItem")]
		private ToolStripMenuItem toolStripMenuItem_21;

		// Token: 0x04003979 RID: 14713
		[AccessedThroughProperty("MouseMoveTimer")]
		[CompilerGenerated]
		private Timer timer_9;

		// Token: 0x0400397A RID: 14714
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_UnitOrders")]
		private Class128 class128_378;

		// Token: 0x0400397B RID: 14715
		[CompilerGenerated]
		[AccessedThroughProperty("ElementHost1")]
		private ElementHost elementHost_3;

		// Token: 0x0400397D RID: 14717
		[AccessedThroughProperty("TSMI_AircraftRange")]
		[CompilerGenerated]
		private ToolStripMenuItem toolStripMenuItem_22;

		// Token: 0x0400397E RID: 14718
		[CompilerGenerated]
		[AccessedThroughProperty("CMenu_MapSettings")]
		private Class113 class113_6;

		// Token: 0x0400397F RID: 14719
		[CompilerGenerated]
		[AccessedThroughProperty("CMenu_Game")]
		private Class113 class113_7;

		// Token: 0x04003980 RID: 14720
		[AccessedThroughProperty("CMenu_View")]
		[CompilerGenerated]
		private Class113 class113_8;

		// Token: 0x04003981 RID: 14721
		[CompilerGenerated]
		[AccessedThroughProperty("TSMI_Sentinel2")]
		private ToolStripMenuItem toolStripMenuItem_23;

		// Token: 0x04003982 RID: 14722
		[CompilerGenerated]
		[AccessedThroughProperty("TerrainTypeLegendToolStripMenuItem")]
		private ToolStripMenuItem toolStripMenuItem_24;

		// Token: 0x04003983 RID: 14723
		public System.Drawing.Point point_2;

		// Token: 0x04003984 RID: 14724
		internal Geopoint_Struct geopoint_Struct_0;

		// Token: 0x04003985 RID: 14725
		private Geopoint_Struct geopoint_Struct_1;

		// Token: 0x04003986 RID: 14726
		private System.Drawing.Point point_3;

		// Token: 0x04003987 RID: 14727
		private System.Drawing.Point point_4;

		// Token: 0x04003988 RID: 14728
		private bool bool_7;

		// Token: 0x04003989 RID: 14729
		private bool bool_8;

		// Token: 0x0400398A RID: 14730
		public Rectangle rectangle_1;

		// Token: 0x0400398B RID: 14731
		private string string_6;

		// Token: 0x0400398C RID: 14732
		private string string_7;

		// Token: 0x0400398D RID: 14733
		private string string_8;

		// Token: 0x0400398E RID: 14734
		private string string_9;

		// Token: 0x0400398F RID: 14735
		private List<Unit> list_51;

		// Token: 0x04003990 RID: 14736
		private GeoPoint geoPoint_0;

		// Token: 0x04003991 RID: 14737
		private Dictionary<string, HashSet<string>> dictionary_0;

		// Token: 0x04003992 RID: 14738
		private bool bool_9;

		// Token: 0x04003993 RID: 14739
		private double double_1;

		// Token: 0x04003994 RID: 14740
		private float float_0;

		// Token: 0x04003995 RID: 14741
		private bool bool_10;

		// Token: 0x04003996 RID: 14742
		private ExclusionZonesWindow exclusionZonesWindow_0;

		// Token: 0x04003997 RID: 14743
		private NoNavZonesWindow noNavZonesWindow_0;

		// Token: 0x04003998 RID: 14744
		private Class1848 class1848_0;

		// Token: 0x04003999 RID: 14745
		private List<Class1879> list_52;

		// Token: 0x0400399A RID: 14746
		private Dictionary<string, Bitmap> dictionary_1;

		// Token: 0x0400399B RID: 14747
		private object object_0;

		// Token: 0x0400399C RID: 14748
		private float float_1;

		// Token: 0x0400399D RID: 14749
		private bool bool_11;

		// Token: 0x0400399E RID: 14750
		private ReferencePoint referencePoint_0;

		// Token: 0x0400399F RID: 14751
		private CommandLayer commandLayer_0;

		// Token: 0x040039A0 RID: 14752
		private Color color_0;

		// Token: 0x040039A1 RID: 14753
		private Color color_1;

		// Token: 0x040039A2 RID: 14754
		private Color color_2;

		// Token: 0x040039A3 RID: 14755
		private Color color_3;

		// Token: 0x040039A4 RID: 14756
		private Color color_4;

		// Token: 0x040039A5 RID: 14757
		private Color color_5;

		// Token: 0x040039A6 RID: 14758
		private Color color_6;

		// Token: 0x040039A7 RID: 14759
		private Color color_7;

		// Token: 0x040039A8 RID: 14760
		private List<Unit> list_53;

		// Token: 0x040039A9 RID: 14761
		public Dictionary<Unit, Tuple<int, int>> dictionary_2;

		// Token: 0x040039AA RID: 14762
		public List<Unit> list_54;

		// Token: 0x040039AB RID: 14763
		public Device device_0;

		// Token: 0x040039AC RID: 14764
		private bool bool_12;

		// Token: 0x040039AD RID: 14765
		private bool bool_13;

		// Token: 0x040039AE RID: 14766
		private ReferencePoint referencePoint_1;

		// Token: 0x040039AF RID: 14767
		private Bitmap bitmap_1;

		// Token: 0x040039B0 RID: 14768
		internal Bitmap bitmap_2;

		// Token: 0x040039B1 RID: 14769
		private string string_10;

		// Token: 0x040039B2 RID: 14770
		private List<System.Drawing.Point> list_55;

		// Token: 0x040039B3 RID: 14771
		private GraphicsPath graphicsPath_0;

		// Token: 0x040039B4 RID: 14772
		private Pen pen_1;

		// Token: 0x040039B5 RID: 14773
		private int int_6;

		// Token: 0x040039B6 RID: 14774
		private int int_7;

		// Token: 0x040039B7 RID: 14775
		private List<FixedGeoPolygon> list_56;

		// Token: 0x040039B8 RID: 14776
		private int int_8;

		// Token: 0x040039B9 RID: 14777
		private int int_9;

		// Token: 0x040039BA RID: 14778
		private int int_10;

		// Token: 0x040039BB RID: 14779
		private SolidBrush solidBrush_0;

		// Token: 0x040039BC RID: 14780
		private System.Drawing.Point point_5;

		// Token: 0x040039BD RID: 14781
		private float float_2;

		// Token: 0x040039BE RID: 14782
		private float float_3;

		// Token: 0x040039BF RID: 14783
		private bool bool_14;

		// Token: 0x040039C0 RID: 14784
		private float float_4;

		// Token: 0x040039C1 RID: 14785
		private float float_5;

		// Token: 0x040039C2 RID: 14786
		private System.Drawing.Font font_0;

		// Token: 0x040039C3 RID: 14787
		private System.Drawing.Font font_1;

		// Token: 0x040039C4 RID: 14788
		private System.Drawing.Font font_2;

		// Token: 0x040039C5 RID: 14789
		private System.Drawing.Font font_3;

		// Token: 0x040039C6 RID: 14790
		private System.Drawing.Font font_4;

		// Token: 0x040039C7 RID: 14791
		private System.Drawing.Font font_5;

		// Token: 0x040039C8 RID: 14792
		private System.Drawing.Font font_6;

		// Token: 0x040039C9 RID: 14793
		private System.Drawing.Font font_7;

		// Token: 0x040039CA RID: 14794
		private List<GeoPoint> list_57;

		// Token: 0x040039CB RID: 14795
		private List<Waypoint> list_58;

		// Token: 0x040039CC RID: 14796
		private List<Waypoint> list_59;

		// Token: 0x040039CD RID: 14797
		private List<Waypoint> list_60;

		// Token: 0x040039CE RID: 14798
		private List<Mission.Flight> list_61;

		// Token: 0x040039CF RID: 14799
		private Dictionary<Color, SolidBrush> dictionary_3;

		// Token: 0x040039D0 RID: 14800
		private StringBuilder stringBuilder_3;

		// Token: 0x040039D1 RID: 14801
		private StringBuilder stringBuilder_4;

		// Token: 0x040039D2 RID: 14802
		private TerrainTypeLegendWindow terrainTypeLegendWindow_0;

		// Token: 0x02000DBD RID: 3517
		[CompilerGenerated]
		internal sealed class Class2443
		{
			// Token: 0x06006596 RID: 26006 RVA: 0x00040243 File Offset: 0x0003E443
			public Class2443(MainForm.Class2443 class2443_0)
			{
				if (class2443_0 != null)
				{
					this.double_0 = class2443_0.double_0;
					this.double_1 = class2443_0.double_1;
					this.float_0 = class2443_0.float_0;
					this.dictionary_0 = class2443_0.dictionary_0;
				}
			}

			// Token: 0x06006597 RID: 26007 RVA: 0x0038331C File Offset: 0x0038151C
			internal void method_0(float float_1)
			{
				System.Drawing.Point value = default(System.Drawing.Point);
				double num;
				double num2;
				Class411.smethod_1(this.double_0, this.double_1, ref num, ref num2, (double)this.float_0, (double)float_1);
				value = Class2572.smethod_0(this.mainForm_0.vmethod_796(), num2, num);
				this.dictionary_0[float_1] = value;
			}

			// Token: 0x040039D3 RID: 14803
			public double double_0;

			// Token: 0x040039D4 RID: 14804
			public double double_1;

			// Token: 0x040039D5 RID: 14805
			public float float_0;

			// Token: 0x040039D6 RID: 14806
			public Dictionary<float, System.Drawing.Point> dictionary_0;

			// Token: 0x040039D7 RID: 14807
			public MainForm mainForm_0;
		}

		// Token: 0x02000DBF RID: 3519
		[CompilerGenerated]
		internal sealed class Class2444
		{
			// Token: 0x060065CB RID: 26059 RVA: 0x00040395 File Offset: 0x0003E595
			public Class2444(MainForm.Class2444 class2444_0)
			{
				if (class2444_0 != null)
				{
					this.unit_0 = class2444_0.unit_0;
				}
			}

			// Token: 0x060065CC RID: 26060 RVA: 0x000403AC File Offset: 0x0003E5AC
			internal void method_0(object sender, EventArgs e)
			{
				this.method_1();
			}

			// Token: 0x060065CD RID: 26061 RVA: 0x000403B4 File Offset: 0x0003E5B4
			internal void method_1()
			{
				if (Control.ModifierKeys.HasFlag(Keys.Shift))
				{
					Client.smethod_56(this.unit_0, false);
					return;
				}
				Client.smethod_56(this.unit_0, true);
			}

			// Token: 0x04003A11 RID: 14865
			public Unit unit_0;
		}

		// Token: 0x02000DC0 RID: 3520
		[CompilerGenerated]
		internal sealed class Class2445
		{
			// Token: 0x060065CE RID: 26062 RVA: 0x000403EA File Offset: 0x0003E5EA
			public Class2445(MainForm.Class2445 class2445_0)
			{
				if (class2445_0 != null)
				{
					this.concurrentDictionary_0 = class2445_0.concurrentDictionary_0;
				}
			}

			// Token: 0x060065CF RID: 26063 RVA: 0x00383370 File Offset: 0x00381570
			internal void method_0(List<System.Drawing.Point[]> list_0)
			{
				Class145 @class = new Class145(0);
				try
				{
					foreach (System.Drawing.Point[] array in list_0)
					{
						List<IntPoint> list = new List<IntPoint>(array.Length);
						foreach (System.Drawing.Point point in array)
						{
							list.Add(new IntPoint((long)point.X, (long)point.Y));
						}
						@class.method_7(list, Enum20.const_1, true);
					}
				}
				finally
				{
					List<System.Drawing.Point[]>.Enumerator enumerator;
					((IDisposable)enumerator).Dispose();
				}
				List<List<IntPoint>> list2 = new List<List<IntPoint>>();
				@class.method_20(Enum19.const_1, list2, Enum21.const_1, Enum21.const_1);
				Random random = new Random(list2.Count);
				try
				{
					foreach (List<IntPoint> list3 in list2)
					{
						this.concurrentDictionary_0.TryAdd(random.NextDouble(), list3);
					}
				}
				finally
				{
					List<List<IntPoint>>.Enumerator enumerator2;
					((IDisposable)enumerator2).Dispose();
				}
			}

			// Token: 0x04003A12 RID: 14866
			public ConcurrentDictionary<double, List<IntPoint>> concurrentDictionary_0;
		}

		// Token: 0x02000DC1 RID: 3521
		[CompilerGenerated]
		internal sealed class Class2446
		{
			// Token: 0x060065D1 RID: 26065 RVA: 0x0038347C File Offset: 0x0038167C
			internal void method_0(int int_0)
			{
				double double_ = (double)int_0 * this.double_0;
				Class432.Struct48 @struct;
				Class411.smethod_1(this.double_1, this.double_2, ref @struct.double_0, ref @struct.double_1, (double)this.float_0, double_);
				System.Drawing.Point point = Class2572.smethod_0(this.mainForm_0.vmethod_796(), @struct.double_1, @struct.double_0);
				this.point_0[int_0] = point;
			}

			// Token: 0x04003A13 RID: 14867
			public double double_0;

			// Token: 0x04003A14 RID: 14868
			public double double_1;

			// Token: 0x04003A15 RID: 14869
			public double double_2;

			// Token: 0x04003A16 RID: 14870
			public float float_0;

			// Token: 0x04003A17 RID: 14871
			public System.Drawing.Point[] point_0;

			// Token: 0x04003A18 RID: 14872
			public MainForm mainForm_0;
		}

		// Token: 0x02000DC2 RID: 3522
		[CompilerGenerated]
		internal sealed class Class2447
		{
			// Token: 0x060065D2 RID: 26066 RVA: 0x00040401 File Offset: 0x0003E601
			public Class2447(MainForm.Class2447 class2447_0)
			{
				if (class2447_0 != null)
				{
					this.double_0 = class2447_0.double_0;
					this.double_1 = class2447_0.double_1;
					this.float_0 = class2447_0.float_0;
					this.dictionary_0 = class2447_0.dictionary_0;
				}
			}

			// Token: 0x060065D3 RID: 26067 RVA: 0x003834E4 File Offset: 0x003816E4
			internal void method_0(float float_1)
			{
				System.Drawing.Point value = default(System.Drawing.Point);
				double num;
				double num2;
				Class411.smethod_1(this.double_0, this.double_1, ref num, ref num2, (double)this.float_0, (double)float_1);
				value = Class2572.smethod_0(this.mainForm_0.vmethod_796(), num2, num);
				this.dictionary_0[float_1] = value;
			}

			// Token: 0x04003A19 RID: 14873
			public double double_0;

			// Token: 0x04003A1A RID: 14874
			public double double_1;

			// Token: 0x04003A1B RID: 14875
			public float float_0;

			// Token: 0x04003A1C RID: 14876
			public Dictionary<float, System.Drawing.Point> dictionary_0;

			// Token: 0x04003A1D RID: 14877
			public MainForm mainForm_0;
		}

		// Token: 0x02000DC3 RID: 3523
		[CompilerGenerated]
		internal sealed class Class2448
		{
			// Token: 0x060065D4 RID: 26068 RVA: 0x0004043C File Offset: 0x0003E63C
			public Class2448(MainForm.Class2448 class2448_0)
			{
				if (class2448_0 != null)
				{
					this.toolStripMenuItem_0 = class2448_0.toolStripMenuItem_0;
				}
			}

			// Token: 0x060065D5 RID: 26069 RVA: 0x00040453 File Offset: 0x0003E653
			internal void method_0(object sender, EventArgs e)
			{
				this.method_1();
			}

			// Token: 0x060065D6 RID: 26070 RVA: 0x0004045B File Offset: 0x0003E65B
			internal void method_1()
			{
				Class2413.smethod_2().method_55().string_0 = Conversions.ToString(this.toolStripMenuItem_0.Tag);
				Class2413.smethod_2().method_55().Show();
			}

			// Token: 0x04003A1E RID: 14878
			public ToolStripMenuItem toolStripMenuItem_0;
		}
	}
}
